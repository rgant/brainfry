var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionCodeState.html",[0,0.477,1,2.353]],["body/interfaces/ActionCodeState.html",[0,0.576,1,3.641,2,1.563,3,0.262,4,0.234,5,0.207,6,3.4,7,0.998,8,4.888,9,0.409,10,0.524,11,2.215,12,4.481,13,6.016,14,5.451,15,2.595,16,2.142,17,0.582,18,0.02,19,0.349,20,0.812,21,0.041,22,4.356,23,3.4,24,0.728,25,3.15,26,0.3,27,4.38,28,1.723,29,2.777,30,1.218,31,0.932,32,1.563,33,0.335,34,0.812,35,0.812,36,0.949,37,0.812,38,0.728,39,3.09,40,0.44,41,0.318,42,0.769,43,0.806,44,0.981,45,1.21,46,3.816,47,3.816,48,3.4,49,2.305,50,1.28,51,4.888,52,3.4,53,3.816,54,3.816,55,3.816,56,3.816,57,3.816,58,3.4,59,0.856,60,0.622,61,2.636,62,0.473,63,0.998,64,3.816,65,0.784,66,3.4,67,2.636,68,2.168,69,2.305,70,2.305,71,2.305,72,2.305,73,2.168,74,3.816,75,3.816,76,2.842,77,2.842,78,3.816,79,3.816,80,3.4,81,3.816,82,1.216,83,0.814,84,2.221,85,4.888,86,2.168,87,0.949,88,3.816,89,3.816,90,5.394,91,4.888,92,2.777,93,3.816,94,3.816,95,3.816,96,3.4,97,2.842,98,1.279,99,3.816,100,4.888,101,2.003,102,3.816,103,4.888,104,3.816,105,3.816,106,2.842,107,2.044,108,1.486,109,2.842,110,1.28,111,2.168,112,1.218,113,3.09,114,1.932,115,2.842,116,2.842,117,2.636,118,3.09,119,0.014,120,0.014]],["title/components/ActionsComponent.html",[21,0.027,42,0.637]],["body/components/ActionsComponent.html",[0,0.47,1,2.321,3,0.214,4,0.191,5,0.169,6,2.777,8,3.116,9,0.334,10,0.458,12,4.334,13,5.818,14,5.28,15,2.509,16,1.761,17,0.613,18,0.02,19,0.322,20,0.663,21,0.041,22,3.808,23,2.777,24,0.594,25,2.946,26,0.262,27,4.643,28,1.719,29,2.771,30,0.995,31,1.001,32,1.277,33,0.293,34,0.909,35,0.909,36,1.063,37,1.388,38,1.245,39,3.461,40,0.493,41,0.26,42,1.058,43,0.877,44,1.033,45,1.348,46,4.878,47,4.878,48,3.808,49,2.947,50,1.636,51,4.274,52,2.777,53,3.116,54,3.116,55,3.116,56,3.116,57,3.116,58,2.777,59,0.958,60,0.606,61,2.153,62,0.53,63,0.815,64,3.116,65,0.782,66,2.777,67,2.153,68,1.77,69,1.882,70,1.882,71,1.882,72,1.882,73,1.77,74,3.116,75,3.116,76,2.321,77,2.321,78,3.116,79,3.116,80,2.777,81,3.116,82,1.063,83,0.736,84,1.942,85,4.274,86,1.77,87,0.775,88,3.116,89,3.116,90,4.878,91,4.274,92,2.428,93,3.116,94,3.116,95,3.116,96,2.777,97,2.321,98,1.118,99,3.116,100,4.274,101,1.751,102,3.116,103,4.274,104,3.116,105,3.116,106,2.321,107,1.669,108,1.214,109,2.321,110,1.045,111,1.77,112,0.995,113,2.523,114,1.578,115,2.321,116,2.321,117,2.153,118,2.523,119,0.013,120,0.013,121,0.958,122,0.663,123,0.736,124,0.628,125,3.808,126,1.619,127,4.98,128,4.98,129,4.98,130,4.98,131,4.98,132,3.631,133,3.631,134,0.736,135,0.909,136,1.01,137,0.736,138,1.24,139,0.736,140,0.727,141,0.736,142,0.663,143,0.736,144,0.628,145,0.386,146,0.309,147,0.736,148,0.663,149,0.736,150,1.01,151,0.663,152,0.958,153,1.152,154,0.663,155,1.152,156,0.663,157,0.699,158,0.663,159,0.736,160,0.663,161,0.736,162,0.736,163,0.663,164,0.736,165,0.663,166,0.736,167,0.663,168,0.736,169,0.663,170,0.736,171,0.663,172,0.736,173,0.663,174,0.663,175,0.736,176,0.663,177,0.727,178,0.736,179,0.628,180,0.736,181,0.663,182,0.736,183,0.736,184,0.663,185,0.663,186,0.663,187,0.736,188,0.736,189,0.663,190,0.699,191,0.663,192,0.699,193,0.736,194,0.628,195,0.191,196,0.736,197,0.663,198,0.736,199,0.736]],["title/components/AppComponent.html",[21,0.027,142,0.672]],["body/components/AppComponent.html",[3,0.284,4,0.254,5,0.225,18,0.019,19,0.316,20,0.882,21,0.048,26,0.254,30,1.324,31,0.791,33,0.284,34,1.096,35,1.096,36,1.281,37,1.414,38,1.268,40,0.478,41,0.346,42,0.836,59,0.93,60,0.478,62,0.514,65,0.665,110,1.728,119,0.015,120,0.015,121,1.155,122,0.882,123,0.979,124,0.836,134,0.979,135,1.096,136,1.217,137,0.979,138,1.385,139,0.979,140,0.877,141,0.979,142,1.247,143,0.979,144,0.836,145,0.514,146,0.41,147,0.979,148,0.882,149,0.979,150,1.217,151,0.882,152,1.155,153,1.324,154,0.882,155,1.324,156,0.882,157,0.93,158,0.882,159,0.979,160,0.882,161,0.979,162,0.979,163,0.882,164,0.979,165,0.882,166,0.979,167,0.882,168,0.979,169,0.882,170,0.979,171,0.882,172,0.979,173,0.882,174,0.882,175,0.979,176,0.882,177,0.877,178,0.979,179,0.836,180,0.979,181,0.882,182,0.979,183,0.979,184,0.882,185,0.882,186,0.882,187,0.979,188,0.979,189,0.882,190,0.93,191,0.882,192,0.93,193,0.979,194,0.836,195,0.254,196,0.979,197,0.882,198,0.979,199,0.979,200,4.146,201,4.994,202,1.217,203,6.002]],["title/injectables/AppTitleStrategyService.html",[204,1.06,205,2.558]],["body/injectables/AppTitleStrategyService.html",[3,0.296,4,0.265,5,0.235,9,0.463,10,0.566,11,1.685,16,1.774,17,0.589,18,0.02,19,0.365,24,0.825,26,0.265,30,1.688,33,0.296,41,0.361,43,0.809,44,0.996,45,1.392,50,1.916,83,0.653,110,1.451,119,0.016,120,0.016,126,1.557,140,0.736,204,1.774,205,4.283,206,2.989,207,6.102,208,6.394,209,4.326,210,4.283,211,5.711,212,6.655,213,6.655,214,1.688,215,6.162,216,6.162,217,6.162,218,5.95,219,5.041,220,1.966,221,3.504,222,1.381,223,2.06,224,5.041,225,3.855,226,2.989,227,1.966,228,4.326,229,2.789,230,6.162,231,5.041,232,5.041,233,5.041,234,5.041,235,6.162,236,5.041,237,3.223,238,3.504,239,6.162,240,5.041,241,6.162,242,5.041,243,1.525,244,5.041,245,5.041]],["title/interfaces/ApplyResult.html",[0,0.477,246,2.353]],["body/interfaces/ApplyResult.html",[0,0.7,2,1.443,3,0.318,4,0.216,5,0.191,9,0.377,10,0.497,11,1.807,15,2.539,16,2.043,17,0.546,18,0.02,19,0.352,24,0.672,26,0.216,33,0.356,41,0.294,43,0.499,44,0.565,45,1.164,60,0.723,62,0.683,63,1.358,82,1.372,83,0.832,87,0.876,97,2.623,98,1.443,101,1.901,107,1.887,110,1.181,119,0.014,120,0.014,145,0.575,146,0.459,195,0.216,204,1.557,210,2.852,214,1.124,222,1.124,227,1.6,243,2.075,246,4.271,247,2.433,248,2.433,249,2.27,250,5.544,251,5.246,252,2.793,253,2.623,254,3.138,255,2.852,256,1.241,257,3.138,258,3.138,259,1.688,260,3.138,261,1.557,262,1.83,263,1.181,264,1.096,265,2.433,266,1.719,267,4.916,268,3.457,269,2.852,270,2.852,271,2.433,272,1.688,273,1.6,274,2.623,275,2.433,276,2.486,277,3.138,278,1.783,279,2.852,280,1.657,281,2.852,282,2.001,283,3.345,284,4.203,285,2.224,286,2.238,287,3.138,288,2.127,289,4.203,290,3.138,291,1.719,292,2.001,293,3.138,294,1.443,295,1.651,296,2.27,297,2.486,298,3.138,299,3.138,300,2.623,301,1.887,302,2.358,303,3.138,304,3.138,305,3.138,306,2.852,307,2.623,308,2.852,309,2.852,310,2.991,311,3.138,312,3.138,313,1.636,314,3.138,315,2.991,316,3.138,317,2.793,318,2.27,319,2.433,320,1.443,321,2.127,322,3.138,323,2.27,324,1.241,325,1.214,326,3.138,327,3.138,328,3.138,329,2.623,330,3.138,331,1.443,332,3.138,333,3.206,334,2.623,335,3.138,336,2.636,337,3.138,338,1.519,339,3.138,340,1.372,341,2.27,342,1.688,343,2.623,344,2.852,345,3.138,346,2.623,347,2.433,348,3.138,349,3.138,350,3.138,351,3.138,352,1.887,353,2.852,354,3.138,355,1.241,356,2.852,357,1.305,358,1.636,359,3.138]],["title/components/AuthErrorMessagesComponent.html",[21,0.027,144,0.637]],["body/components/AuthErrorMessagesComponent.html",[3,0.139,4,0.125,5,0.111,9,0.218,10,0.335,17,0.378,18,0.02,19,0.192,20,0.433,21,0.032,25,1.09,26,0.192,27,3.195,31,0.388,33,0.139,34,0.666,35,0.666,37,1.335,38,1.197,40,0.235,41,0.17,42,0.41,43,0.541,44,0.613,48,2.791,59,0.456,60,0.712,62,0.252,63,1.489,65,0.326,86,1.78,101,0.834,107,2.952,108,2.146,112,1,119,0.009,120,0.009,121,0.702,122,0.433,123,0.481,124,0.41,125,3.403,126,0.819,134,0.481,135,0.666,136,0.74,137,0.481,138,1.013,139,0.481,140,0.533,141,0.481,142,0.433,143,0.481,144,0.864,145,0.669,146,0.57,147,0.481,148,0.433,149,0.481,150,0.74,151,0.433,152,0.962,153,0.902,154,0.433,155,0.902,156,0.433,157,0.456,158,0.433,159,0.481,160,0.433,161,0.481,162,0.481,163,0.433,164,0.481,165,0.433,166,0.481,167,0.433,168,0.481,169,0.433,170,0.481,171,0.433,172,0.481,173,0.433,174,0.433,175,0.481,176,0.433,177,0.533,178,0.481,179,0.41,180,0.481,181,0.433,182,0.481,183,0.481,184,0.433,185,0.433,186,0.433,187,0.481,188,0.481,189,0.433,190,0.456,191,0.433,192,0.456,193,0.481,194,0.41,195,0.371,196,0.481,197,0.433,198,0.481,199,0.481,202,0.74,226,3.379,264,1.494,280,1.759,283,3.153,285,3.157,286,2.269,291,1.949,294,2.331,315,2.019,320,1.283,331,1.283,342,1.501,344,2.537,355,1.854,360,3.819,361,1.735,362,2.035,363,2.333,364,3.65,365,2.985,366,3.65,367,2.371,368,1.03,369,2.371,370,2.035,371,1.813,372,2.371,373,2.371,374,2.035,375,3.65,376,3.65,377,6.421,378,5.7,379,2.641,380,2.333,381,2.95,382,4.239,383,3.65,384,4.998,385,4.998,386,3.65,387,5.192,388,6.13,389,4.289,390,3.644,391,3.65,392,4.998,393,2.333,394,6.017,395,3.65,396,2.591,397,3.132,398,3.65,399,3.379,400,3.65,401,5.26,402,4.998,403,2.791,404,3.65,405,5.7,406,1.586,407,2.591,408,4.998,409,3.65,410,3.65,411,6.13,412,6.13,413,4.998,414,3.65,415,3.132,416,5.192,417,2.298,418,2.333,419,6.789,420,3.132,421,2.791,422,4.26,423,3.474,424,3.65,425,3.65,426,3.65,427,2.791,428,4.998,429,3.822,430,3.65,431,4.289,432,3.474,433,3.65,434,3.65,435,3.65,436,5.26,437,2.019,438,3.65,439,4.998,440,1.678,441,3.132,442,2.791,443,3.65,444,2.791,445,2.791,446,4.891,447,4.289,448,3.195,449,3.65,450,2.791,451,2.537,452,3.65,453,3.65,454,3.132,455,3.65,456,1.78,457,5.51,458,3.65,459,4.998,460,2.537,461,3.961,462,1.586,463,3.132,464,3.65,465,3.132,466,2.791,467,3.65,468,3.65,469,4.289,470,3.65,471,3.65,472,4.998,473,4.998,474,5.7,475,3.65,476,3.65,477,4.998,478,4.998,479,3.65,480,4.998,481,3.65,482,3.65,483,4.998,484,4.998,485,3.195,486,3.65,487,3.65,488,1.501,489,6.421,490,3.65,491,1.892,492,3.65,493,3.132,494,4.289,495,3.65,496,3.65,497,2.791,498,2.791,499,3.65,500,3.132,501,2.019,502,3.132,503,3.65,504,3.132,505,3.65,506,5.7,507,3.65,508,3.65,509,3.65,510,3.65,511,3.65,512,3.65,513,3.132,514,2.164,515,2.164,516,1.78,517,3.65,518,1.892,519,3.65,520,3.132,521,3.65,522,1.892,523,2.537]],["title/components/CentralLayoutComponent.html",[21,0.027,148,0.672]],["body/components/CentralLayoutComponent.html",[3,0.267,4,0.239,5,0.211,7,1.018,18,0.02,19,0.351,20,0.827,21,0.046,26,0.239,30,1.242,31,0.742,33,0.267,34,1.053,35,1.053,36,1.231,37,1.409,38,1.263,40,0.449,41,0.324,42,0.784,59,0.872,60,0.449,62,0.482,65,0.624,119,0.015,120,0.015,121,1.11,122,0.827,123,0.919,124,0.784,134,0.919,135,1.053,136,1.169,137,0.919,138,1.353,139,0.919,140,0.842,141,0.919,142,0.827,143,0.919,144,0.784,145,0.482,146,0.385,147,0.919,148,1.218,149,1.286,150,1.169,151,0.827,152,1.11,153,1.286,154,0.827,155,1.286,156,0.827,157,0.872,158,0.827,159,0.919,160,0.827,161,0.919,162,0.919,163,1.218,164,0.919,165,0.827,166,0.919,167,0.827,168,0.919,169,0.827,170,0.919,171,0.827,172,0.919,173,0.827,174,0.827,175,0.919,176,0.827,177,0.842,178,0.919,179,0.784,180,0.919,181,0.827,182,0.919,183,0.919,184,0.827,185,0.827,186,0.827,187,0.919,188,0.919,189,0.827,190,0.872,191,0.827,192,0.872,193,0.919,194,0.784,195,0.239,196,0.919,197,0.827,198,0.919,199,0.919,201,4.851,202,1.169,229,3.19,365,3.19,393,3.687,417,2.651,524,3.89,525,3.419,526,5.729,527,5.767,528,2.506,529,5.767,530,4.949,531,4.949,532,5.767,533,4.41,534,4.41,535,4.41,536,4.055,537,2.473,538,5.767,539,2.372,540,5.767,541,1.515,542,3.89,543,3.419,544,4.41]],["title/components/ChangeEmailComponent.html",[21,0.027,151,0.672]],["body/components/ChangeEmailComponent.html",[3,0.147,4,0.131,5,0.116,9,0.23,10,0.349,11,0.835,17,0.615,18,0.02,19,0.361,20,0.456,21,0.033,24,0.409,26,0.2,28,2.125,31,0.841,32,0.878,33,0.147,34,0.693,35,0.693,36,0.811,37,1.342,38,1.204,40,0.247,41,0.179,42,0.432,43,0.924,44,1.044,50,1.323,59,0.481,60,0.735,62,0.266,63,1.54,65,0.344,73,1.218,82,0.811,83,0.665,87,1.432,98,0.853,108,1.536,112,1.041,114,1.085,119,0.01,120,0.01,121,0.731,122,0.456,123,0.506,124,0.432,126,1.587,134,0.506,135,0.693,136,0.77,137,0.506,138,1.041,139,0.506,140,0.671,141,0.506,142,0.456,143,0.506,144,0.888,145,0.404,146,0.436,147,0.506,148,0.456,149,0.506,150,0.77,151,0.937,152,1.291,153,0.932,154,0.456,155,0.932,156,0.456,157,1.063,158,0.456,159,0.506,160,0.456,161,0.506,162,0.506,163,0.456,164,0.506,165,0.456,166,0.506,167,0.456,168,0.506,169,0.456,170,0.506,171,0.456,172,0.506,173,0.456,174,0.456,175,0.506,176,0.456,177,0.555,178,0.506,179,0.432,180,0.506,181,0.456,182,0.506,183,0.506,184,0.456,185,0.456,186,0.456,187,0.506,188,0.506,189,0.456,190,0.481,191,0.456,192,0.481,193,0.506,194,0.432,195,0.361,196,0.506,197,0.456,198,0.506,199,0.506,202,0.77,214,1.041,220,0.974,222,0.684,256,1.149,263,0.719,264,0.77,266,1.923,280,1.897,283,2.101,294,1.806,313,0.756,318,2.101,320,2.046,324,0.756,325,1.24,331,0.878,340,0.835,355,0.756,357,0.794,358,0.756,361,0.974,368,1.085,379,2.822,380,2.428,381,1.65,406,1.65,437,3.711,440,1.746,456,1.852,461,1.736,488,1.027,491,1.969,514,3.045,528,1.085,541,0.835,545,4.942,546,5.438,547,1.481,548,1.997,549,2.383,550,2.64,551,5.524,552,4.596,553,5.524,554,4.596,555,6.047,556,4.224,557,3.515,558,4.407,559,4.596,560,4.596,561,4.596,562,3.531,563,3.531,564,3.515,565,2.252,566,3.798,567,2.64,568,2.498,569,2.143,570,2.498,571,2.498,572,2.498,573,2.54,574,2.498,575,2.498,576,2.498,577,2.498,578,2.498,579,3.515,580,2.498,581,2.935,582,2.498,583,2.498,584,0.99,585,2.428,586,2.498,587,2.428,588,2.498,589,2.498,590,2.113,591,1.91,592,1.91,593,2.498,594,2.113,595,1.562,596,1.085,597,2.101,598,1.085,599,2.725,600,1.969,601,1.295,602,1.382,603,0.925,604,1.597,605,1.597,606,1.91,607,3.531,608,4.596,609,1.736,610,3.515,611,3.194,612,3.515,613,2.289,614,2.498,615,2.498,616,1.997,617,4.596,618,2.498,619,2.498,620,4.596,621,1.91,622,1.91,623,2.905,624,2.498,625,3.531,626,2.498,627,2.498,628,2.498,629,1.295,630,2.143,631,2.143,632,1.148,633,1.382,634,1.382,635,1.736,636,1.481,637,2.498,638,1.218,639,1.148,640,1.148,641,1.736,642,1.295,643,2.498,644,3.194,645,1.295,646,0.794,647,1.295,648,1.295,649,1.148,650,1.295,651,2.143,652,2.905,653,1.91,654,1.91,655,2.498,656,2.143,657,0.925,658,1.295,659,2.498,660,3.719,661,2.662,662,2.101,663,2.542,664,2.905,665,3.927,666,1.597,667,1.852,668,2.252,669,2.428,670,2.428,671,1.852,672,2.428,673,1.597,674,2.905,675,3.798,676,3.26,677,3.26,678,2.428,679,3.26,680,3.26,681,2.498,682,2.542,683,2.905,684,1.597,685,1.597]],["title/components/ChangePasswordComponent.html",[21,0.027,154,0.672]],["body/components/ChangePasswordComponent.html",[3,0.148,4,0.132,5,0.117,9,0.231,10,0.35,11,0.839,17,0.613,18,0.02,19,0.361,20,0.458,21,0.034,24,0.411,26,0.201,28,2.127,31,0.842,32,0.882,33,0.148,34,0.696,35,0.696,36,0.813,37,1.343,38,1.204,40,0.248,41,0.18,42,0.434,43,0.924,44,1.044,50,1.327,59,0.483,60,0.377,62,0.267,63,1.676,65,0.345,73,1.223,82,0.813,83,0.666,87,1.244,98,0.856,108,1.54,112,1.044,114,1.09,119,0.01,120,0.01,121,0.733,122,0.458,123,0.509,124,0.434,126,1.589,134,0.509,135,0.696,136,0.773,137,0.509,138,1.043,139,0.509,140,0.673,141,0.509,142,0.458,143,0.509,144,0.89,145,0.405,146,0.437,147,0.509,148,0.458,149,0.509,150,0.773,151,0.458,152,1.254,153,0.934,154,0.939,155,0.934,156,0.458,157,0.887,158,0.458,159,0.509,160,0.458,161,0.509,162,0.509,163,0.458,164,0.509,165,0.458,166,0.509,167,0.458,168,0.509,169,0.458,170,0.509,171,0.458,172,0.509,173,0.458,174,0.458,175,0.509,176,0.458,177,0.557,178,0.509,179,0.434,180,0.509,181,0.458,182,0.509,183,0.509,184,0.458,185,0.458,186,0.458,187,0.509,188,0.509,189,0.458,190,0.483,191,0.458,192,0.483,193,0.509,194,0.434,195,0.361,196,0.509,197,0.458,198,0.509,199,0.509,202,0.773,214,1.044,220,0.978,222,0.687,256,1.153,263,0.722,264,0.773,266,1.925,280,0.687,294,1.81,313,0.759,324,0.759,325,1.243,331,0.882,340,0.839,355,0.759,357,0.798,358,0.759,361,0.978,368,1.09,379,2.763,380,2.436,403,2.914,406,1.656,437,3.715,440,2.869,461,1.743,488,1.032,491,3.021,514,3.982,528,1.09,541,0.839,545,4.945,548,2.002,549,2.389,562,4.086,563,4.086,565,2.259,567,2.648,573,2.544,581,2.938,584,0.994,585,2.436,587,2.436,590,2.119,591,1.918,592,1.918,594,2.119,595,1.568,596,1.09,597,2.108,598,1.09,600,2.389,601,2.389,602,1.388,603,0.929,604,1.604,605,1.604,606,1.918,607,2.946,613,2.292,616,2.002,625,1.604,629,1.3,632,1.153,633,1.388,634,1.388,635,1.743,636,1.487,638,1.223,639,1.153,640,1.153,641,1.743,642,1.3,644,1.743,645,1.3,646,0.798,647,1.3,648,1.3,649,1.153,650,1.3,652,2.914,653,1.918,654,1.918,657,0.929,658,1.3,662,2.847,663,2.549,666,2.946,667,2.841,668,3.7,669,3.989,670,3.989,671,3.042,672,3.989,673,2.946,682,2.549,684,2.946,685,2.946,686,5.442,687,1.604,688,2.914,689,5.534,690,4.608,691,4.75,692,4.75,693,3.955,694,4.75,695,3.955,696,2.158,697,4.608,698,4.608,699,3.955,700,3.955,701,3.811,702,2.509,703,2.153,704,2.153,705,2.153,706,2.153,707,2.153,708,2.153,709,2.153,710,2.509,711,2.153,712,3.524,713,2.153,714,2.509,715,2.509,716,2.153,717,2.509,718,2.509,719,2.509,720,4.233,721,3.524,722,2.509,723,2.509,724,3.811,725,2.153,726,2.153,727,3.955,728,2.153,729,2.153,730,2.153,731,3.955,732,2.509,733,5.146,734,1.918,735,2.153,736,2.509,737,1.487,738,1.487,739,2.509,740,2.509,741,1.487,742,2.509,743,1.487,744,2.153,745,3.27,746,3.27,747,3.29,748,2.153,749,3.27,750,2.153,751,2.153]],["title/interfaces/CombinedObs.html",[0,0.477,752,2.558]],["body/interfaces/CombinedObs.html",[0,0.578,2,1.571,3,0.263,4,0.235,5,0.208,7,1.003,9,0.411,10,0.525,17,0.583,18,0.02,19,0.376,25,2.054,26,0.235,28,1.906,33,0.263,69,2.316,70,2.316,83,0.889,108,2.219,119,0.014,120,0.014,146,0.485,195,0.301,243,2.225,252,2.885,261,1.645,262,1.819,274,2.856,295,1.62,363,3.653,399,2.649,584,1.49,595,2.35,596,3.17,603,1.654,613,2.64,616,3.17,660,3.653,667,2.786,752,4.378,753,3.105,754,3.105,755,5.714,756,4.37,757,2.962,758,4.615,759,5.406,760,5.693,761,5.714,762,4.378,763,4.378,764,3.834,765,3.834,766,3.834,767,5.078,768,4.37,769,4.903,770,4.903,771,4.468,772,3.417,773,3.388,774,4.468,775,3.417,776,2.471,777,2.178,778,2.471,779,4.37,780,2.649,781,3.834,782,3.105,783,2.856,784,3.653,785,4.903,786,3.417,787,3.834,788,2.627,789,3.105,790,3.834,791,3.417,792,2.178,793,3.834,794,4.903,795,3.834,796,3.834,797,3.834,798,3.834,799,3.834,800,3.417,801,3.834,802,3.834,803,3.834,804,3.834,805,3.834]],["title/components/ConfirmEmailComponent.html",[21,0.027,156,0.672]],["body/components/ConfirmEmailComponent.html",[3,0.212,4,0.189,5,0.168,9,0.331,10,0.455,11,1.202,17,0.585,18,0.02,19,0.372,20,0.657,21,0.041,24,0.589,26,0.26,28,1.497,31,0.997,32,1.265,33,0.212,34,0.903,35,0.903,36,1.056,37,1.387,38,1.244,40,0.356,41,0.257,42,0.622,43,0.875,44,0.962,50,1.628,59,0.692,60,0.733,62,0.382,65,0.495,82,1.056,83,0.466,98,0.808,114,1.563,119,0.013,120,0.013,121,0.952,122,0.657,123,0.729,124,0.622,126,1.434,134,0.729,135,0.903,136,1.003,137,0.729,138,1.235,139,0.729,140,0.826,141,0.729,142,0.657,143,0.729,144,1.054,145,0.526,146,0.518,147,0.729,148,0.657,149,0.729,150,1.003,151,0.657,152,0.952,153,1.147,154,0.657,155,1.147,156,1.112,157,1.345,158,0.657,159,0.729,160,0.657,161,0.729,162,0.729,163,0.657,164,0.729,165,0.657,166,0.729,167,0.657,168,0.729,169,0.657,170,0.729,171,0.657,172,0.729,173,0.657,174,0.657,175,0.729,176,0.657,177,0.723,178,0.729,179,0.622,180,0.729,181,0.657,182,0.729,183,0.729,184,0.657,185,0.657,186,0.657,187,0.729,188,0.729,189,0.657,190,0.692,191,0.657,192,0.692,193,0.729,194,0.622,195,0.384,196,0.729,197,0.657,198,0.729,199,0.729,202,1.003,214,1.356,220,1.403,222,0.986,256,1.497,263,1.036,264,1.003,266,2.15,280,1.669,283,3.37,313,1.088,318,2.737,320,1.74,325,1.434,338,1.831,355,1.088,357,1.144,358,1.088,361,1.403,379,2.035,381,2.993,406,1.563,420,4.246,488,1.48,528,1.563,541,1.202,547,2.133,548,2.458,550,3.439,558,5.482,569,3.087,573,2.937,590,2.6,597,2.737,598,1.563,609,2.5,610,2.751,611,4.7,612,2.751,613,1.265,629,1.865,630,3.087,631,3.087,632,1.654,633,1.99,634,1.99,635,2.5,636,2.133,644,4.234,648,1.865,649,1.654,650,1.865,651,3.087,656,3.087,657,1.331,658,1.865,660,4.22,661,2.565,676,4.246,677,4.246,678,3.163,679,4.246,680,4.246,806,5.048,807,5.048,808,4.948,809,4.948,810,4.948,811,3.597,812,3.597,813,3.597,814,3.597]],["title/interfaces/ControlProperties.html",[0,0.477,815,2.558]],["body/interfaces/ControlProperties.html",[0,0.579,2,1.572,3,0.263,4,0.235,5,0.208,7,1.004,9,0.411,10,0.645,17,0.597,18,0.02,19,0.37,26,0.235,28,2.076,33,0.263,83,0.909,84,2.23,101,2.01,108,2.534,116,2.859,119,0.014,120,0.014,195,0.235,252,3.217,261,1.646,262,1.567,295,1.657,352,2.056,390,2.859,417,2.629,418,2.859,525,2.651,584,1.644,595,2.352,616,3.05,662,3.884,753,3.108,754,3.108,758,4.616,760,5.458,762,3.108,764,3.838,765,3.838,766,3.838,767,4.372,768,4.372,773,2.651,775,3.42,776,2.474,777,3.073,779,3.42,782,3.108,786,3.42,788,3.054,789,4.38,791,3.42,815,5.023,816,4.372,817,6.125,818,4.906,819,4.906,820,4.906,821,4.906,822,3.42,823,3.838,824,3.838,825,3.838,826,3.838,827,3.108,828,3.838,829,3.838,830,3.838,831,3.838,832,3.838,833,2.859,834,3.108,835,2.651,836,3.838,837,2.651,838,4.906,839,3.838,840,3.838,841,3.838,842,4.906,843,3.838,844,3.838,845,3.838,846,3.838,847,3.838,848,3.838,849,3.838]],["title/interfaces/ControlStruct.html",[0,0.477,850,2.558]],["body/interfaces/ControlStruct.html",[0,0.593,2,1.61,3,0.269,4,0.241,5,0.213,7,1.028,9,0.421,10,0.533,17,0.587,18,0.02,19,0.378,26,0.241,28,2.17,33,0.394,60,0.453,63,1.431,69,3.008,70,3.008,71,2.373,72,3.008,83,0.929,87,1.43,108,2.398,119,0.015,120,0.015,122,1.059,146,0.493,157,0.881,252,1.989,280,1.254,288,2.373,291,1.845,295,1.504,317,1.989,320,1.61,331,1.61,336,3.371,365,3.525,370,4.98,417,2.668,418,2.927,432,3.182,581,2.668,595,2.387,596,1.989,599,2.714,600,2.373,601,3.303,602,3.21,603,2.148,613,2.523,616,3.228,632,2.668,638,2.829,665,3.501,758,3.182,780,2.714,837,2.714,850,4.805,851,3.501,852,3.501,853,3.441,854,4.98,855,3.71,856,5.75,857,4.578,858,4.438,859,4.438,860,3.501,861,3.501,862,4.578,863,3.501,864,3.929,865,3.929,866,3.71,867,3.182,868,4.033,869,3.929,870,4.98,871,3.929,872,3.929,873,3.929,874,5.468,875,4.578,876,4.578,877,2.532,878,1.989,879,4.438,880,3.929,881,3.929,882,3.929,883,3.929]],["title/components/DashboardComponent.html",[21,0.027,158,0.672]],["body/components/DashboardComponent.html",[3,0.258,4,0.231,5,0.205,9,0.404,10,0.519,16,1.264,17,0.531,18,0.02,19,0.374,20,0.802,21,0.045,24,0.719,26,0.231,31,1.08,32,1.544,33,0.258,34,1.031,35,1.031,36,1.206,37,1.406,38,1.261,40,0.435,41,0.314,42,0.759,43,0.759,44,0.86,50,1.799,59,0.845,60,0.435,62,0.467,65,0.604,83,0.569,119,0.014,120,0.014,121,1.087,122,0.802,123,0.89,124,0.759,126,1.269,134,0.89,135,1.031,136,1.146,137,0.89,138,1.337,139,0.89,140,1.079,141,0.89,142,0.802,143,0.89,144,0.759,145,0.467,146,0.373,147,0.89,148,0.802,149,0.89,150,1.146,151,0.802,152,1.087,153,1.267,154,0.802,155,1.267,156,0.802,157,0.845,158,1.204,159,0.89,160,0.802,161,0.89,162,0.89,163,0.802,164,0.89,165,0.802,166,0.89,167,0.802,168,0.89,169,0.802,170,0.89,171,0.802,172,0.89,173,0.802,174,0.802,175,0.89,176,0.802,177,0.825,178,0.89,179,0.759,180,0.89,181,0.802,182,0.89,183,0.89,184,0.802,185,0.802,186,0.802,187,0.89,188,0.89,189,0.802,190,0.845,191,0.802,192,0.845,193,0.89,194,0.759,195,0.329,196,0.89,197,0.802,198,0.89,199,0.89,202,1.146,261,1.627,262,1.712,325,1.269,539,2.325,541,1.468,548,2.715,590,2.598,597,3.126,636,2.604,773,2.604,884,3.769,885,4.322,886,5.651,887,5.651,888,5.651,889,4.391,890,3.769,891,3.769,892,4.391,893,5.651]],["title/components/DeleteAccountComponent.html",[21,0.027,160,0.672]],["body/components/DeleteAccountComponent.html",[3,0.167,4,0.149,5,0.132,9,0.261,10,0.384,11,0.949,17,0.612,18,0.02,19,0.37,20,0.518,21,0.036,24,0.465,26,0.22,28,1.999,29,2.419,30,0.778,31,0.896,32,0.998,33,0.167,34,0.763,35,0.763,36,0.892,37,1.359,38,1.219,40,0.281,41,0.203,42,0.491,43,0.918,44,1.035,45,1.174,49,2.572,50,1.428,59,0.546,60,0.414,62,0.302,63,1.589,65,0.391,67,1.683,68,1.384,73,1.384,82,0.892,83,0.79,87,0.892,98,1.114,108,0.949,112,1.359,114,1.234,118,1.973,119,0.011,120,0.011,121,0.804,122,0.518,123,0.576,124,0.491,126,1.589,134,0.576,135,0.763,136,0.847,137,0.576,138,1.11,139,0.576,140,0.725,141,0.576,142,0.518,143,0.576,144,0.947,145,0.444,146,0.465,147,0.576,148,0.518,149,0.576,150,0.847,151,0.518,152,0.804,153,1.006,154,0.518,155,1.006,156,0.518,157,0.546,158,0.518,159,0.576,160,0.999,161,1.34,162,0.576,163,0.518,164,0.576,165,0.518,166,0.576,167,0.518,168,0.576,169,0.518,170,0.576,171,0.518,172,0.576,173,0.518,174,0.518,175,0.576,176,0.518,177,0.611,178,0.576,179,0.491,180,0.576,181,0.518,182,0.576,183,0.576,184,0.518,185,0.518,186,0.518,187,0.576,188,0.576,189,0.518,190,0.546,191,0.518,192,0.546,193,0.576,194,0.491,195,0.37,196,0.576,197,0.518,198,0.576,199,0.576,202,0.847,214,1.145,220,1.107,222,1.359,223,1.83,256,1.265,263,0.817,264,0.847,266,2.006,280,0.778,282,1.384,286,2.552,294,1.925,313,0.859,324,0.859,325,1.31,331,0.998,340,0.949,355,0.859,357,0.903,358,0.859,361,1.107,368,1.234,379,2.251,406,1.816,421,3.197,437,3.376,440,1.922,456,2.668,461,1.973,488,1.72,491,2.167,514,3.245,528,1.234,541,0.949,548,2.156,549,2.572,556,4.462,557,3.795,562,3.73,563,3.73,564,3.795,573,2.682,581,2.281,584,1.294,585,2.672,587,2.672,590,2.281,591,2.171,592,2.171,594,2.281,595,1.72,596,1.234,597,2.312,598,1.234,600,2.167,601,1.472,602,1.57,603,1.051,613,2.051,616,1.234,621,2.171,622,2.171,623,3.197,625,1.815,629,1.472,632,1.305,633,1.57,634,1.57,635,1.973,636,1.683,638,1.384,639,1.922,640,1.305,641,1.973,642,1.472,644,1.973,645,1.472,646,0.903,647,1.472,648,2.167,649,1.922,650,2.167,652,3.197,653,2.171,654,2.171,657,1.051,658,1.472,663,1.57,666,1.815,667,2.038,668,2.478,669,2.672,670,2.672,671,2.038,672,2.672,673,1.815,682,1.57,684,1.815,685,1.815,696,2.275,737,1.683,738,1.683,741,1.683,743,1.683,855,2.672,894,5.45,895,5.45,896,2.171,897,4.18,898,4.962,899,4.962,900,5.473,901,4.18,902,5.473,903,4.18,904,2.839,905,4.18,906,2.839,907,2.839,908,4.18,909,2.839,910,2.839,911,2.839,912,2.839,913,2.839,914,3.795,915,2.839,916,2.839,917,2.839,918,2.839,919,2.839,920,2.436,921,3.197,922,2.839,923,2.171,924,2.839,925,4.18,926,4.18,927,2.839,928,2.839,929,2.839,930,2.839,931,2.839,932,2.839,933,2.839,934,2.839,935,2.839,936,2.839,937,4.18,938,4.18,939,4.18,940,4.18,941,3.587,942,5.473,943,4.18,944,5.473,945,4.18,946,3.587,947,4.18,948,4.18,949,4.18]],["title/components/FooterComponent.html",[21,0.027,163,0.672]],["body/components/FooterComponent.html",[3,0.255,4,0.229,5,0.202,7,0.975,9,0.399,10,0.516,17,0.369,18,0.02,19,0.327,20,0.793,21,0.045,26,0.229,30,1.19,31,0.711,33,0.255,34,1.024,35,1.024,36,1.197,37,1.405,38,1.26,40,0.43,41,0.311,42,0.751,43,0.755,44,0.855,59,0.836,60,0.43,62,0.462,65,0.598,87,1.197,112,1.19,119,0.014,120,0.014,121,1.264,122,0.793,123,0.88,124,0.751,126,0.975,134,0.88,135,1.024,136,1.137,137,0.88,138,1.332,139,0.88,140,0.819,141,0.88,142,0.793,143,0.88,144,0.751,145,0.462,146,0.369,147,0.88,148,0.793,149,1.26,150,1.137,151,0.793,152,1.08,153,1.26,154,0.793,155,1.26,156,0.793,157,0.836,158,0.793,159,0.88,160,0.793,161,0.88,162,0.88,163,1.199,164,0.88,165,0.793,166,0.88,167,0.793,168,0.88,169,0.793,170,0.88,171,0.793,172,0.88,173,0.793,174,0.793,175,0.88,176,0.793,177,0.819,178,0.88,179,0.751,180,0.88,181,0.793,182,1.26,183,0.88,184,0.793,185,0.793,186,0.793,187,0.88,188,0.88,189,0.793,190,1.196,191,0.793,192,1.196,193,0.88,194,0.751,195,0.229,196,0.88,197,0.793,198,0.88,199,0.88,202,1.137,417,2.579,488,2.308,501,3.103,526,4.814,528,2.438,535,4.29,537,2.424,539,2.308,541,1.451,584,1.132,950,3.726,951,4.29,952,5.638,953,4.29,954,4.29,955,4.29,956,3.899,957,4.814,958,5.024,959,4.29,960,6.215,961,5.61,962,5.61,963,6.802,964,5.978,965,4.342,966,3.321,967,5.61,968,4.29,969,3.726,970,4.29]],["title/components/ForgotPasswordComponent.html",[21,0.027,165,0.672]],["body/components/ForgotPasswordComponent.html",[3,0.205,4,0.183,5,0.162,9,0.32,10,0.444,17,0.597,18,0.02,19,0.37,20,0.635,21,0.04,24,0.569,26,0.255,28,2.027,30,0.953,31,0.983,32,1.223,33,0.205,34,0.882,35,0.882,36,1.032,37,1.383,38,1.241,40,0.344,41,0.249,42,0.602,43,0.908,44,1.028,45,1.069,50,1.6,59,1.069,60,0.719,62,0.591,63,1.467,65,0.479,73,1.696,82,1.032,83,0.626,87,1.032,98,0.781,108,1.163,119,0.012,120,0.012,121,0.93,122,0.635,123,0.705,124,0.602,126,1.558,134,0.705,135,0.882,136,0.98,137,0.705,138,1.217,139,0.705,140,0.706,141,0.705,142,0.635,143,0.705,144,1.039,145,0.671,146,0.51,147,0.705,148,0.635,149,0.705,150,0.98,151,0.635,152,0.93,153,1.126,154,0.635,155,1.126,156,0.635,157,0.669,158,0.635,159,0.705,160,0.635,161,0.705,162,0.705,163,0.635,164,0.705,165,1.096,166,1.279,167,0.635,168,0.705,169,0.635,170,0.705,171,0.635,172,0.705,173,0.635,174,0.635,175,0.705,176,0.635,177,0.706,178,0.705,179,0.602,180,0.705,181,0.635,182,0.705,183,0.705,184,0.635,185,0.635,186,0.635,187,0.705,188,0.705,189,0.635,190,0.669,191,0.635,192,0.669,193,0.705,194,0.602,195,0.183,196,0.705,197,0.635,198,0.705,199,0.705,202,0.98,214,1.325,222,0.953,255,2.417,256,1.052,263,1.001,264,0.98,266,2.13,272,2.286,273,1.356,280,1.645,283,2.674,295,1.141,313,1.052,320,1.7,324,1.052,325,1.248,331,1.223,340,1.163,355,1.052,356,2.417,357,1.106,358,1.052,361,1.356,368,1.511,379,2.47,393,3.091,437,3.322,488,1.431,537,2.167,549,2.881,565,3.56,573,2.901,581,2.555,594,2.555,595,1.989,596,1.511,598,1.511,599,2.866,602,1.924,603,1.287,613,2.112,616,1.511,629,1.803,638,1.696,639,1.599,640,1.599,645,1.803,646,1.106,647,1.803,648,1.803,649,1.599,650,1.803,657,1.287,658,1.803,663,1.924,664,2.66,682,1.924,683,2.66,687,2.224,688,3.697,696,2.461,716,2.985,737,2.062,738,2.062,741,2.062,743,2.062,971,5.373,972,5.373,973,5.416,974,4.769,975,4.769,976,5.557,977,4.149,978,3.478,979,3.478,980,3.478,981,3.478,982,2.985,983,4.25,984,2.985,985,2.985,986,2.985,987,2.985,988,4.149,989,3.478,990,3.478,991,3.478]],["title/components/HeaderComponent.html",[21,0.027,167,0.672]],["body/components/HeaderComponent.html",[3,0.22,4,0.197,5,0.174,7,0.84,9,0.344,10,0.467,11,1.251,17,0.568,18,0.02,19,0.36,20,0.683,21,0.042,26,0.268,28,1.132,30,1.025,31,0.613,33,0.22,34,0.928,35,0.928,36,1.085,37,1.391,38,1.247,40,0.371,41,0.413,42,0.647,43,0.896,44,0.97,59,0.72,60,0.572,62,0.398,63,1.141,65,0.515,83,0.658,112,1.582,119,0.013,120,0.013,121,0.978,122,0.683,123,0.759,124,0.647,126,1.5,134,0.759,135,0.928,136,1.031,137,0.759,138,1.256,139,0.759,140,0.843,141,0.759,142,0.683,143,0.759,144,0.647,145,0.398,146,0.318,147,0.759,148,0.683,149,0.759,150,1.031,151,0.683,152,1.286,153,1.17,154,0.683,155,1.17,156,0.683,157,0.72,158,0.683,159,0.759,160,0.683,161,1.17,162,0.759,163,0.683,164,0.759,165,0.683,166,0.759,167,1.131,168,0.759,169,0.683,170,0.759,171,0.683,172,0.759,173,0.683,174,0.683,175,0.759,176,0.683,177,0.743,178,0.759,179,0.647,180,0.759,181,0.683,182,0.759,183,0.759,184,0.683,185,0.683,186,0.683,187,0.759,188,0.759,189,0.683,190,1.111,191,0.683,192,0.72,193,0.759,194,0.647,195,0.352,196,0.759,197,0.683,198,0.759,199,0.759,202,1.031,214,1.393,220,1.459,222,1.393,223,2.07,286,2.473,406,2.209,528,2.209,536,3.691,537,2.252,539,2.091,541,1.251,543,3.014,544,3.888,573,2.654,584,1.506,661,2.993,667,2.479,674,3.888,788,3.241,789,2.601,833,3.25,954,3.888,992,3.212,993,3.888,994,4.737,995,5.226,996,5.084,997,5.774,998,5.084,999,5.084,1000,5.774,1001,6.68,1002,6.68,1003,5.084,1004,6.194,1005,5.084,1006,3.742,1007,3.742,1008,5.084,1009,5.774,1010,5.774,1011,5.084,1012,3.742,1013,5.084,1014,3.742,1015,3.014,1016,6.194,1017,2.812,1018,3.888,1019,5.084,1020,3.533,1021,3.742,1022,6.477,1023,3.742,1024,3.742,1025,3.742,1026,4.363,1027,4.363,1028,3.212,1029,3.212,1030,3.212,1031,3.212,1032,5.084,1033,3.742,1034,3.742,1035,3.742,1036,3.742,1037,3.742,1038,2.636,1039,2.812,1040,2.636,1041,4.363]],["title/components/LoginComponent.html",[21,0.027,169,0.672]],["body/components/LoginComponent.html",[3,0.176,4,0.158,5,0.14,9,0.276,10,0.4,17,0.614,18,0.02,19,0.358,20,0.548,21,0.037,24,0.491,25,2.355,26,0.229,27,3.275,28,2.086,29,2.497,30,0.822,31,0.92,32,1.055,33,0.176,34,0.795,35,0.795,36,0.929,37,1.366,38,1.225,40,0.297,41,0.215,42,0.519,43,0.924,44,1.05,45,1.197,49,2.656,50,1.475,59,0.577,60,0.69,62,0.319,63,1.614,65,0.413,68,2.122,71,2.913,73,1.463,82,0.929,83,0.564,87,0.929,98,0.977,108,1.455,109,1.918,110,0.864,111,1.463,112,1.635,113,2.086,114,1.304,115,1.918,116,1.918,117,1.779,119,0.011,120,0.011,121,0.838,122,0.548,123,0.608,124,0.519,126,1.614,134,0.608,135,0.795,136,0.882,137,0.608,138,1.139,139,0.608,140,0.636,141,0.608,142,0.548,143,0.608,144,0.972,145,0.634,146,0.477,147,0.608,148,0.548,149,0.608,150,0.882,151,0.548,152,0.838,153,1.038,154,0.548,155,1.038,156,0.548,157,0.577,158,0.548,159,0.608,160,0.548,161,0.608,162,0.608,163,0.548,164,0.608,165,0.548,166,1.038,167,0.548,168,0.608,169,1.026,170,0.608,171,0.548,172,0.608,173,0.548,174,0.548,175,0.608,176,0.548,177,0.636,178,0.608,179,0.519,180,0.608,181,0.548,182,0.608,183,0.608,184,0.548,185,0.548,186,0.548,187,0.608,188,0.608,189,0.548,190,0.577,191,0.548,192,0.577,193,0.608,194,0.519,195,0.158,196,0.608,197,0.548,198,0.608,199,0.608,202,0.882,214,1.193,222,0.822,256,0.908,263,0.864,264,0.882,266,2.041,272,2.107,273,1.17,280,1.54,294,1.976,313,0.908,320,1.531,324,0.908,325,1.15,331,1.055,340,1.003,355,0.908,357,0.954,358,0.908,361,1.17,368,1.304,379,2.705,393,3.978,437,3.637,440,2.001,488,1.234,491,2.257,514,3.332,537,1.998,549,2.656,556,4.563,557,3.918,562,3.814,563,3.814,564,3.918,565,3.332,573,2.743,581,2.861,584,1.465,585,2.783,587,2.783,594,2.355,595,1.791,596,1.304,598,1.304,599,2.581,600,2.257,601,1.556,602,1.66,603,1.111,613,2.257,616,1.891,621,2.295,622,2.295,623,3.329,629,1.556,638,1.463,639,1.38,640,1.38,645,1.556,646,0.954,647,1.556,648,1.556,649,1.38,650,1.556,657,1.111,658,1.556,663,2.408,664,2.295,666,1.918,667,2.122,668,2.581,669,2.783,670,2.783,671,2.122,672,2.783,673,1.918,682,2.408,683,2.295,684,1.918,685,1.918,696,2.327,737,1.779,738,1.779,741,1.779,743,1.779,835,1.779,973,5.12,974,4.396,975,4.396,985,2.575,986,2.575,987,2.575,988,3.736,1042,2.295,1043,4.353,1044,5.123,1045,4.353,1046,3.001,1047,3.001,1048,3.001,1049,3.001,1050,3.001,1051,3.001,1052,3.001,1053,3.001,1054,3.001,1055,3.918,1056,3.001,1057,3.001,1058,3.001,1059,3.001,1060,3.001,1061,3.001,1062,2.295,1063,2.575,1064,2.575,1065,3.001,1066,3.001,1067,3.001,1068,3.001,1069,3.001]],["title/components/LogoutComponent.html",[21,0.027,171,0.672]],["body/components/LogoutComponent.html",[3,0.247,4,0.221,5,0.195,9,0.385,10,0.504,17,0.551,18,0.02,19,0.354,20,0.765,21,0.044,24,0.686,26,0.289,28,1.268,29,2.979,30,1.149,31,1.061,32,1.474,33,0.247,34,1.001,35,1.001,36,1.17,37,1.402,38,1.257,40,0.415,41,0.3,42,0.725,43,0.839,44,0.993,45,1.328,49,3.168,59,0.807,60,0.415,62,0.446,65,0.577,68,2.674,82,1.17,98,1.231,109,2.68,110,1.207,111,2.044,112,1.674,118,2.914,119,0.014,120,0.014,121,1.055,122,0.765,123,0.85,124,0.725,126,1.455,134,0.85,135,1.001,136,1.112,137,0.85,138,1.314,139,0.85,140,0.801,141,0.85,142,0.765,143,0.85,144,0.725,145,0.689,146,0.356,147,0.85,148,0.765,149,0.85,150,1.112,151,0.765,152,1.055,153,1.239,154,0.765,155,1.239,156,0.765,157,0.807,158,0.765,159,0.85,160,0.765,161,0.85,162,0.85,163,0.765,164,0.85,165,0.765,166,0.85,167,0.765,168,0.85,169,0.765,170,0.85,171,1.183,172,0.85,173,0.765,174,0.765,175,0.85,176,0.765,177,0.801,178,0.85,179,0.725,180,0.85,181,0.765,182,0.85,183,0.85,184,0.765,185,0.765,186,0.765,187,0.85,188,0.85,189,0.765,190,0.807,191,0.765,192,0.807,193,0.85,194,0.725,195,0.221,196,0.85,197,0.765,198,0.85,199,0.85,202,1.112,214,1.503,222,1.149,256,1.268,272,2.514,273,2.139,325,1.372,456,2.674,537,2.383,573,2.81,584,1.594,634,2.319,674,4.194,885,3.206,1020,3.811,1041,6.331,1070,3.598,1071,5.484,1072,6.727,1073,4.193,1074,4.193,1075,4.193,1076,4.193,1077,4.193,1078,4.193,1079,4.193,1080,2.914,1081,2.174,1082,4.193,1083,3.506,1084,4.706,1085,4.706,1086,4.193]],["title/components/PageNotFoundComponent.html",[21,0.027,173,0.672]],["body/components/PageNotFoundComponent.html",[3,0.216,4,0.193,5,0.171,7,0.824,9,0.337,10,0.461,17,0.522,18,0.02,19,0.35,20,0.67,21,0.051,24,0.6,26,0.264,30,1.005,31,0.6,33,0.295,34,0.915,35,0.915,36,1.07,37,1.389,38,1.246,40,0.363,41,0.263,42,0.634,43,0.807,44,0.787,45,1.278,59,0.706,60,0.363,62,0.39,65,0.505,69,1.902,70,1.902,72,1.902,83,0.649,112,1.374,114,2.179,119,0.013,120,0.013,121,0.965,122,0.915,123,0.744,124,0.634,126,1.379,134,0.744,135,1.121,136,1.017,137,0.744,138,1.245,139,0.744,140,0.835,141,0.744,142,0.67,143,0.744,144,0.634,145,0.39,146,0.312,147,0.744,148,0.67,149,0.744,150,1.017,151,0.67,152,0.965,153,1.158,154,0.67,155,1.158,156,0.67,157,0.706,158,0.67,159,0.744,160,0.67,161,0.744,162,0.744,163,0.67,164,0.744,165,0.67,166,0.744,167,0.67,168,0.744,169,0.67,170,0.744,171,0.67,172,0.744,173,1.121,174,1.319,175,0.744,176,0.67,177,0.732,178,0.744,179,0.634,180,0.744,181,0.67,182,0.744,183,0.744,184,0.67,185,0.67,186,0.67,187,0.744,188,0.744,189,0.67,190,0.706,191,0.67,192,0.706,193,0.744,194,0.634,195,0.193,196,0.744,197,0.67,198,0.744,199,0.744,202,1.017,214,1.374,222,1.374,223,2.053,225,3.835,226,2.973,228,5.271,229,2.029,336,3.237,342,2.063,491,2.6,536,3.653,537,2.228,539,2.063,541,1.226,584,1.308,607,3.206,639,2.306,777,2.445,866,2.345,877,2.774,885,3.835,1039,2.774,1083,3.206,1084,4.304,1085,4.304,1087,4.919,1088,4.919,1089,2.805,1090,5.015,1091,5.015,1092,5.015,1093,5.015,1094,3.485,1095,5.015,1096,6.432,1097,6.432,1098,5.015,1099,5.015,1100,5.714,1101,5.714,1102,6.143,1103,6.143,1104,3.668,1105,2.774,1106,5.015,1107,5.015,1108,7.019,1109,5.015,1110,5.015,1111,3.668,1112,5.271,1113,4.904,1114,5.015,1115,4.904,1116,5.015,1117,2.6,1118,5.015,1119,5.015,1120,4.304,1121,5.015,1122,5.015,1123,5.015,1124,3.668,1125,3.835,1126,5.015,1127,5.015,1128,5.015,1129,5.015,1130,3.668,1131,3.835,1132,5.015,1133,5.015,1134,4.304,1135,3.148,1136,2.805,1137,3.148,1138,3.148,1139,3.148,1140,5.015,1141,3.668,1142,3.668,1143,5.015,1144,4.304,1145,5.015,1146,5.015,1147,5.015,1148,2.973,1149,3.206]],["title/interfaces/PasswordResetSuccess.html",[0,0.477,1150,2.036]],["body/interfaces/PasswordResetSuccess.html",[0,0.747,2,1.315,3,0.22,4,0.197,5,0.174,9,0.344,10,0.467,15,2.472,16,2.071,17,0.58,18,0.02,19,0.341,24,0.612,26,0.197,33,0.299,40,0.37,41,0.268,43,0.618,44,0.699,45,1.246,60,0.733,61,2.217,62,0.614,63,1.6,65,0.515,82,1.382,83,0.838,84,1.458,87,1.425,92,1.823,98,1.141,101,2.029,107,2.653,110,1.076,119,0.013,120,0.013,145,0.54,146,0.49,195,0.267,204,1.463,223,1.25,227,1.458,243,2.207,256,1.131,259,1.538,261,1.463,262,1.774,263,1.076,264,1.429,266,2.266,272,1.538,273,1.458,276,1.719,278,2.508,280,1.025,285,2.09,286,1.384,288,1.939,292,1.823,295,1.682,296,2.068,297,1.719,313,1.537,317,2.813,320,1.315,321,1.939,323,2.068,324,1.131,325,1.141,338,1.384,340,1.25,341,2.068,342,2.09,352,1.719,355,1.537,357,1.615,358,1.537,381,2.208,382,3.248,407,2.992,448,3.248,462,1.625,485,2.39,516,1.823,646,1.969,657,1.881,696,2.876,757,1.939,778,2.068,788,1.719,792,2.814,878,2.208,1015,2.217,1081,1.939,1117,1.939,1150,3.425,1151,2.068,1152,2.068,1153,2.217,1154,4.5,1155,2.599,1156,4.303,1157,2.599,1158,3.21,1159,2.068,1160,3.192,1161,2.217,1162,3.531,1163,3.248,1164,3.531,1165,3.531,1166,2.39,1167,2.599,1168,3.012,1169,2.068,1170,2.599,1171,2.599,1172,2.39,1173,2.599,1174,2.599,1175,3.531,1176,2.653,1177,2.39,1178,2.599,1179,2.599,1180,2.811,1181,2.599,1182,2.39,1183,2.599,1184,2.599,1185,2.599,1186,4.303,1187,2.599,1188,2.599,1189,2.39,1190,2.599,1191,2.599,1192,2.599,1193,2.599,1194,2.599,1195,2.068,1196,1.939,1197,2.599,1198,2.39,1199,2.599,1200,2.599,1201,2.599,1202,2.217,1203,2.599,1204,2.599,1205,2.599,1206,4.011,1207,2.599,1208,2.599,1209,2.599,1210,2.39,1211,2.39,1212,2.599,1213,2.599,1214,2.599,1215,2.599,1216,2.599,1217,2.599,1218,2.599]],["title/interfaces/Photo.html",[0,0.477,177,0.538]],["body/interfaces/Photo.html",[0,0.635,2,1.247,3,0.209,4,0.187,5,0.32,7,0.796,9,0.326,10,0.45,16,1.83,17,0.515,18,0.02,19,0.335,24,0.581,26,0.187,33,0.356,40,0.351,41,0.254,43,0.682,44,0.834,45,1.081,50,1.021,62,0.377,76,2.268,82,1.046,83,0.957,86,3.204,87,1.198,92,2.389,98,1.1,106,2.268,110,1.021,111,1.73,119,0.012,120,0.012,124,1.137,177,0.928,195,0.187,204,1.411,221,2.465,223,1.638,227,1.383,237,2.268,238,2.465,243,1.483,259,1.459,261,1.411,262,1.801,264,0.719,275,3.329,278,1.541,282,1.73,285,2.016,291,1.128,294,2.129,295,1.157,297,1.631,301,1.631,302,2.563,310,2.711,319,2.103,324,1.483,338,1.313,368,1.541,396,1.839,399,2.103,440,1.631,456,1.73,462,2.631,515,2.103,516,1.73,518,3.613,522,1.839,523,3.406,584,0.925,632,1.631,642,1.839,646,1.128,671,1.73,678,2.268,757,1.839,776,1.962,784,2.268,792,2.953,853,2.906,877,2.711,878,2.129,1017,3.106,1038,3.407,1040,3.559,1080,3.902,1081,1.839,1083,3.133,1105,1.962,1158,2.911,1176,1.631,1195,2.711,1219,1.631,1220,1.962,1221,2.268,1222,4.632,1223,2.713,1224,2.713,1225,2.713,1226,3.902,1227,2.713,1228,2.713,1229,3.748,1230,3.748,1231,3.748,1232,3.748,1233,3.748,1234,2.713,1235,3.748,1236,3.591,1237,4.07,1238,2.465,1239,2.103,1240,3.636,1241,2.103,1242,2.465,1243,3.902,1244,2.268,1245,3.106,1246,3.492,1247,2.268,1248,2.268,1249,3.406,1250,2.268,1251,2.465,1252,2.103,1253,2.465,1254,2.465,1255,2.465,1256,2.268,1257,2.103,1258,1.839,1259,3.406,1260,2.713,1261,2.713,1262,2.713,1263,2.713,1264,2.465,1265,2.103,1266,2.713,1267,2.713,1268,3.748,1269,4.417,1270,2.713,1271,2.713,1272,2.713,1273,2.713,1274,2.713,1275,2.713,1276,2.713,1277,2.465,1278,2.713,1279,2.713,1280,2.713,1281,2.713,1282,2.268,1283,2.713,1284,2.465,1285,2.465,1286,2.713,1287,2.713,1288,2.713,1289,2.713,1290,3.748,1291,2.713,1292,2.713,1293,2.713,1294,3.748,1295,2.713,1296,2.713,1297,2.268,1298,2.713,1299,3.133,1300,2.713,1301,2.713,1302,2.713,1303,2.713,1304,2.713,1305,2.713,1306,2.713,1307,2.713,1308,3.748,1309,2.713,1310,2.268,1311,2.268,1312,2.713,1313,2.713,1314,2.713,1315,2.713,1316,2.713,1317,2.713,1318,2.713,1319,2.713,1320,2.713,1321,2.713,1322,2.713,1323,2.713,1324,2.713,1325,2.713,1326,2.713,1327,2.713,1328,2.713,1329,2.713,1330,2.465,1331,3.748,1332,2.713,1333,2.713,1334,2.906,1335,1.962,1336,2.465,1337,2.465,1338,2.713,1339,2.465,1340,2.713,1341,2.713,1342,2.713,1343,2.713,1344,2.713,1345,2.713,1346,2.713,1347,2.713,1348,2.713,1349,2.713,1350,2.713,1351,2.103,1352,3.748,1353,2.713,1354,2.465,1355,2.713,1356,2.103,1357,2.713,1358,2.713,1359,2.713,1360,2.713,1361,2.713,1362,2.713,1363,2.713]],["title/components/PhotoManagerComponent.html",[21,0.027,176,0.672]],["body/components/PhotoManagerComponent.html",[3,0.281,4,0.252,5,0.223,18,0.019,19,0.252,20,0.873,21,0.047,26,0.252,31,0.783,33,0.281,34,1.089,35,1.089,36,1.02,37,1.413,38,1.267,40,0.473,41,0.342,42,0.827,59,0.92,60,0.473,62,0.508,65,0.658,77,3.813,119,0.015,120,0.015,121,1.148,122,0.873,123,0.969,124,0.827,134,0.969,135,1.089,136,1.209,137,0.969,138,1.38,139,0.969,140,0.871,141,0.969,142,0.873,143,0.969,144,0.827,145,0.508,146,0.406,147,0.969,148,0.873,149,0.969,150,1.209,151,0.873,152,1.148,153,1.318,154,0.873,155,1.318,156,0.873,157,0.92,158,0.873,159,0.969,160,0.873,161,0.969,162,0.969,163,0.873,164,0.969,165,0.873,166,0.969,167,0.873,168,0.969,169,0.873,170,0.969,171,0.873,172,0.969,173,0.873,174,0.873,175,0.969,176,1.242,177,1.086,178,0.969,179,0.827,180,0.969,181,0.873,182,0.969,183,0.969,184,0.873,185,0.873,186,0.873,187,0.969,188,0.969,189,0.873,190,0.92,191,0.873,192,0.92,193,0.969,194,0.827,195,0.252,196,0.969,197,0.873,198,0.969,199,0.969,202,1.209,539,2.453,1219,2.198,1364,2.835,1365,4.103,1366,4.103,1367,6.806,1368,5.964,1369,5.964]],["title/components/PhotoUploadComponent.html",[21,0.027,179,0.637]],["body/components/PhotoUploadComponent.html",[3,0.197,4,0.176,5,0.275,9,0.307,10,0.432,17,0.604,18,0.02,19,0.349,20,0.611,21,0.05,24,0.548,25,2.163,26,0.248,27,4.237,28,1.646,30,0.917,31,0.548,33,0.197,34,0.859,35,0.859,36,1.004,37,1.379,38,1.237,40,0.466,41,0.239,42,0.579,43,0.891,44,1.014,45,1.242,50,1.566,59,0.644,60,0.331,62,0.356,65,0.46,83,0.609,101,1.654,112,1.491,119,0.012,120,0.012,121,0.905,122,0.611,123,0.678,124,0.579,125,3.598,126,1.582,134,0.678,135,0.993,136,0.954,137,0.678,138,1.197,139,0.678,140,0.687,141,0.678,142,0.611,143,0.678,144,0.579,145,0.356,146,0.284,147,0.678,148,0.611,149,0.678,150,0.954,151,0.611,152,0.905,153,1.103,154,0.611,155,1.103,156,0.611,157,0.644,158,0.611,159,0.678,160,0.611,161,0.678,162,0.678,163,0.611,164,0.678,165,0.611,166,0.678,167,0.611,168,0.678,169,0.611,170,0.678,171,0.611,172,0.678,173,0.611,174,0.611,175,0.678,176,0.611,177,1.018,178,0.678,179,1.021,180,0.678,181,0.611,182,0.678,183,0.678,184,0.611,185,0.611,186,0.611,187,0.678,188,0.678,189,0.611,190,0.644,191,0.611,192,0.644,193,0.678,194,0.579,195,0.356,196,0.678,197,0.611,198,0.678,199,0.678,202,0.954,214,1.289,222,1.289,223,1.819,226,2.789,261,0.963,262,1.491,282,1.631,294,2.331,321,1.734,324,1.423,325,1.056,365,2.602,374,4.037,380,3.007,456,2.294,537,2.122,539,1.935,541,1.118,548,2.364,584,1.622,649,2.163,662,3.569,778,2.602,920,2.871,921,3.598,946,4.037,951,3.598,1039,2.602,1040,3.061,1131,2.558,1198,3.007,1219,3.27,1226,3.27,1236,4.078,1237,3.688,1239,2.789,1240,3.01,1241,3.226,1245,3.441,1246,2.821,1258,2.821,1264,3.782,1265,2.789,1269,4.324,1277,2.325,1334,2.789,1364,4.217,1370,4.547,1371,2.558,1372,4.704,1373,4.704,1374,5.441,1375,4.161,1376,6.878,1377,6.221,1378,5.904,1379,5.441,1380,4.704,1381,4.704,1382,5.537,1383,4.704,1384,5.441,1385,3.345,1386,4.037,1387,4.704,1388,5.067,1389,3.345,1390,3.345,1391,4.704,1392,3.345,1393,3.598,1394,3.345,1395,3.345,1396,4.704,1397,4.704,1398,4.704,1399,3.007,1400,3.598,1401,2.871,1402,2.558,1403,3.345,1404,3.345,1405,3.345,1406,3.345,1407,4.704]],["title/components/PrivacyPolicyComponent.html",[21,0.027,181,0.672]],["body/components/PrivacyPolicyComponent.html",[3,0.135,4,0.23,5,0.107,7,0.517,18,0.019,19,0.188,20,0.42,21,0.032,26,0.121,30,0.63,31,0.377,33,0.135,34,0.651,35,0.651,36,0.761,37,1.33,38,1.193,39,2.478,40,0.228,41,0.165,42,0.398,43,0.433,59,0.443,60,0.527,62,0.245,65,0.317,84,1.391,119,0.009,120,0.009,121,0.686,122,0.42,123,0.466,124,0.398,134,0.466,135,0.651,136,0.723,137,0.466,138,0.997,139,0.466,140,0.718,141,0.466,142,0.42,143,0.466,144,0.398,145,0.245,146,0.195,147,0.466,148,0.42,149,0.466,150,0.723,151,0.42,152,0.686,153,0.885,154,0.42,155,0.885,156,0.42,157,0.443,158,0.42,159,0.466,160,0.42,161,1.314,162,0.466,163,0.42,164,0.466,165,0.42,166,0.466,167,0.42,168,0.466,169,0.42,170,0.466,171,0.42,172,0.466,173,0.42,174,0.797,175,0.466,176,0.42,177,0.521,178,0.466,179,0.398,180,0.466,181,0.898,182,1.473,183,0.466,184,0.42,185,0.42,186,0.42,187,0.466,188,0.466,189,0.42,190,0.443,191,0.42,192,0.443,193,0.466,194,0.398,195,0.309,196,0.466,197,0.42,198,0.466,199,0.466,202,0.723,226,2.114,264,0.723,280,0.977,286,2.084,291,2.185,295,0.842,300,3.88,301,2.928,307,2.28,331,1.254,333,2.114,334,2.28,338,1.32,346,2.28,347,2.114,365,2.721,379,1.467,381,1.549,390,2.28,406,2.86,417,2.79,422,3.418,427,5.727,442,3.761,444,4.642,451,4.218,462,2.137,466,4.642,488,1.467,491,1.849,493,3.06,494,4.221,497,3.761,501,3.357,515,2.114,518,1.849,522,3.957,525,3.338,534,2.727,537,1.703,543,4.294,603,1.32,640,1.639,747,2.28,756,2.727,763,2.478,782,2.478,783,4.071,827,2.478,835,2.114,877,1.973,955,2.727,956,3.913,968,5.454,1018,3.761,1038,1.849,1039,3.522,1062,2.727,1105,2.721,1117,3.147,1125,4.306,1144,3.06,1148,3.338,1177,2.28,1196,1.849,1210,2.28,1282,2.28,1310,2.28,1335,1.973,1351,2.916,1382,3.06,1408,1.974,1409,1.974,1410,1.974,1411,2.727,1412,4.221,1413,3.566,1414,6.483,1415,4.918,1416,3.566,1417,3.06,1418,3.566,1419,3.566,1420,3.566,1421,3.566,1422,4.832,1423,3.566,1424,3.566,1425,3.566,1426,4.918,1427,3.06,1428,3.566,1429,3.06,1430,3.566,1431,2.727,1432,3.566,1433,3.566,1434,3.566,1435,3.566,1436,4.918,1437,2.301,1438,3.566,1439,2.301,1440,2.301,1441,2.301,1442,2.301,1443,2.301,1444,3.913,1445,3.06,1446,3.566,1447,4.918,1448,3.566,1449,4.832,1450,5.63,1451,4.832,1452,2.727,1453,3.06,1454,3.566,1455,3.566,1456,5.465,1457,3.566,1458,3.566,1459,3.566,1460,3.06,1461,4.221,1462,3.06,1463,4.918,1464,3.566,1465,4.918,1466,3.06,1467,3.566,1468,3.566,1469,3.566,1470,3.566,1471,3.566,1472,4.221,1473,3.06,1474,4.221,1475,3.06,1476,3.566,1477,3.566,1478,3.566,1479,3.566,1480,3.566,1481,3.566,1482,4.221,1483,3.566,1484,4.918,1485,6.583,1486,3.06,1487,3.06,1488,3.566,1489,4.918,1490,3.566,1491,3.566,1492,3.06,1493,3.566,1494,3.566,1495,3.566,1496,3.566,1497,4.918,1498,3.566,1499,3.566,1500,4.832,1501,3.566,1502,4.221,1503,3.566,1504,3.566,1505,3.06,1506,3.566,1507,4.221,1508,2.727,1509,4.221,1510,3.566,1511,3.566,1512,3.566,1513,6.07,1514,3.566,1515,3.566,1516,6.583,1517,3.06,1518,4.221,1519,3.06,1520,2.478,1521,3.06,1522,3.566,1523,3.566,1524,3.06,1525,3.566,1526,3.566,1527,3.566,1528,3.06,1529,3.566,1530,3.566,1531,3.566,1532,3.566,1533,3.566,1534,3.566,1535,3.06,1536,3.566,1537,4.832,1538,3.06,1539,3.566,1540,3.06,1541,3.566,1542,3.566,1543,3.566,1544,4.918,1545,3.06,1546,3.06,1547,3.566,1548,3.06,1549,4.221,1550,3.566,1551,3.06,1552,3.06,1553,3.566,1554,4.221,1555,3.06,1556,3.566,1557,3.06,1558,3.06,1559,3.06,1560,3.06,1561,3.761,1562,3.566,1563,3.566,1564,3.566,1565,3.06,1566,4.221,1567,3.566,1568,3.566,1569,3.566,1570,3.566,1571,3.566,1572,3.566,1573,4.918,1574,3.06,1575,3.566,1576,3.06,1577,3.566,1578,3.566,1579,3.566,1580,3.06,1581,3.06,1582,3.06,1583,3.06,1584,3.566,1585,3.06,1586,4.306,1587,4.832,1588,5.63,1589,4.306,1590,3.06,1591,3.566,1592,4.918,1593,3.566,1594,3.566,1595,3.566,1596,3.566,1597,3.566,1598,5.209,1599,3.566,1600,2.727,1601,3.06,1602,3.06,1603,3.06,1604,3.566,1605,3.566,1606,3.06,1607,3.566]],["title/interfaces/Progress.html",[0,0.477,1237,2.183]],["body/interfaces/Progress.html",[0,0.634,2,1.246,3,0.208,4,0.187,5,0.314,7,0.796,9,0.326,10,0.45,16,1.616,17,0.514,18,0.02,19,0.335,24,0.58,26,0.187,33,0.356,40,0.351,41,0.254,43,0.682,44,0.833,45,1.08,50,1.02,62,0.377,76,2.266,82,1.045,83,0.957,86,2.736,87,1.198,92,2.388,98,1.1,106,2.266,110,1.02,111,1.728,119,0.012,120,0.012,124,0.971,177,0.884,195,0.187,204,1.41,221,4.208,223,1.637,227,1.382,237,2.266,238,2.464,243,1.482,259,1.458,261,1.41,262,1.8,264,0.719,275,3.328,278,1.54,282,1.728,285,2.015,291,1.127,294,2.311,295,1.156,297,1.63,301,1.63,302,2.563,310,2.71,319,2.102,324,1.482,338,1.312,368,1.54,396,1.838,399,2.102,440,1.63,456,1.728,462,2.631,515,2.102,516,1.728,518,3.612,522,1.838,523,3.404,584,0.924,632,1.63,642,1.838,646,1.127,671,1.728,678,2.266,757,1.838,776,1.961,784,2.266,792,2.952,853,2.904,877,2.71,878,2.128,1017,3.105,1038,3.407,1040,3.558,1080,3.901,1081,1.838,1083,3.131,1105,1.961,1158,2.91,1176,1.63,1195,2.71,1219,1.63,1220,1.961,1221,2.266,1222,3.746,1223,2.711,1224,2.711,1225,2.711,1226,3.901,1227,2.711,1228,2.711,1229,3.746,1230,3.746,1231,3.746,1232,4.63,1233,3.746,1234,2.711,1235,3.746,1236,3.767,1237,4.29,1238,2.464,1239,2.102,1240,3.635,1241,2.102,1242,2.464,1243,3.901,1244,2.266,1245,3.105,1246,3.492,1247,2.266,1248,2.266,1249,3.404,1250,2.266,1251,2.464,1252,2.102,1253,2.464,1254,2.464,1255,2.464,1256,2.266,1257,2.102,1258,1.838,1259,3.404,1260,2.711,1261,2.711,1262,2.711,1263,2.711,1264,2.464,1265,2.102,1266,2.711,1267,2.711,1268,3.746,1269,4.416,1270,2.711,1271,2.711,1272,2.711,1273,2.711,1274,2.711,1275,2.711,1276,2.711,1277,2.464,1278,2.711,1279,2.711,1280,2.711,1281,2.711,1282,2.266,1283,2.711,1284,2.464,1285,2.464,1286,2.711,1287,2.711,1288,2.711,1289,2.711,1290,3.746,1291,2.711,1292,2.711,1293,2.711,1294,3.746,1295,2.711,1296,2.711,1297,2.266,1298,2.711,1299,3.131,1300,2.711,1301,2.711,1302,2.711,1303,2.711,1304,2.711,1305,2.711,1306,2.711,1307,2.711,1308,3.746,1309,2.711,1310,2.266,1311,2.266,1312,2.711,1313,2.711,1314,2.711,1315,2.711,1316,2.711,1317,2.711,1318,2.711,1319,2.711,1320,2.711,1321,2.711,1322,2.711,1323,2.711,1324,2.711,1325,2.711,1326,2.711,1327,2.711,1328,2.711,1329,2.711,1330,2.464,1331,3.746,1332,2.711,1333,2.711,1334,2.904,1335,1.961,1336,2.464,1337,2.464,1338,2.711,1339,2.464,1340,2.711,1341,2.711,1342,2.711,1343,2.711,1344,2.711,1345,2.711,1346,2.711,1347,2.711,1348,2.711,1349,2.711,1350,2.711,1351,2.102,1352,3.746,1353,2.711,1354,2.464,1355,2.711,1356,2.102,1357,2.711,1358,2.711,1359,2.711,1360,2.711,1361,2.711,1362,2.711,1363,2.711]],["title/components/RecoverEmailComponent.html",[21,0.027,184,0.672]],["body/components/RecoverEmailComponent.html",[3,0.228,4,0.204,5,0.181,9,0.356,10,0.479,15,1.435,17,0.557,18,0.02,19,0.374,20,0.708,21,0.043,24,0.635,26,0.204,29,2.866,30,1.062,31,1.029,32,1.363,33,0.228,34,0.95,35,0.95,36,1.111,37,1.394,38,1.251,40,0.384,41,0.278,42,0.671,43,0.715,44,0.977,45,1.299,49,3.048,50,1.692,59,1.327,60,0.683,62,0.697,63,1.411,65,0.534,67,2.299,68,1.89,83,0.502,84,1.512,119,0.013,120,0.013,121,1.002,122,0.708,123,0.786,124,0.671,126,1.411,134,0.786,135,0.95,136,1.056,137,0.786,138,1.274,139,0.786,140,0.76,141,0.786,142,0.708,143,0.786,144,1.087,145,0.554,146,0.499,147,0.786,148,0.708,149,0.786,150,1.056,151,0.708,152,1.002,153,1.192,154,0.708,155,1.192,156,0.708,157,0.746,158,0.708,159,0.786,160,0.708,161,0.786,162,0.786,163,0.708,164,0.786,165,0.708,166,0.786,167,0.708,168,0.786,169,0.708,170,0.786,171,0.708,172,0.786,173,0.708,174,0.708,175,0.786,176,0.708,177,0.76,178,0.786,179,0.671,180,0.786,181,0.708,182,0.786,183,0.786,184,1.147,185,0.708,186,0.708,187,0.786,188,0.786,189,0.708,190,0.746,191,0.708,192,0.746,193,0.786,194,0.671,195,0.204,196,0.786,197,0.708,198,0.786,199,0.786,202,1.056,247,3.887,248,3.887,261,1.116,262,1.611,265,2.299,271,3.485,284,4.367,286,2.326,309,4.367,315,2.88,325,1.169,361,1.512,379,2.585,423,3.619,537,2.293,541,1.296,547,2.299,548,2.554,550,3.619,598,1.685,611,3.619,641,3.619,661,3.258,788,2.889,1148,3.087,1149,3.328,1608,4.496,1609,4.408,1610,5.207,1611,3.327,1612,3.877,1613,2.478,1614,2.965,1615,4.468,1616,2.965,1617,3.877,1618,2.965,1619,2.478,1620,3.877,1621,5.207,1622,6.284,1623,5.207,1624,5.207,1625,3.982]],["title/interfaces/RecoverEmailResults.html",[0,0.477,265,2.183]],["body/interfaces/RecoverEmailResults.html",[0,0.699,2,1.44,3,0.318,4,0.216,5,0.191,9,0.376,10,0.496,11,1.805,15,2.538,16,2.043,17,0.546,18,0.02,19,0.351,24,0.671,26,0.216,33,0.355,41,0.293,43,0.498,44,0.564,45,1.163,60,0.723,62,0.683,63,1.357,82,1.371,83,0.832,87,0.874,97,2.619,98,1.442,101,1.899,107,1.883,110,1.179,119,0.014,120,0.014,145,0.574,146,0.459,195,0.216,204,1.555,210,3.753,214,1.122,222,1.122,227,1.597,243,2.074,246,4.268,247,2.429,248,2.429,249,2.266,250,5.346,251,4.621,252,2.791,253,2.619,254,3.133,255,2.847,256,1.239,257,3.133,258,3.133,259,1.685,260,3.133,261,1.555,262,1.829,263,1.179,264,1.095,265,3.202,266,2.123,267,5.346,268,3.453,269,2.847,270,2.847,271,2.429,272,1.685,273,1.597,274,2.619,275,2.429,276,2.483,277,3.133,278,1.78,279,2.847,280,1.656,281,2.847,282,1.997,283,3.342,284,4.199,285,2.222,286,2.236,287,3.133,288,2.124,289,4.199,290,3.133,291,1.717,292,1.997,293,3.133,294,1.44,295,1.65,296,2.266,297,2.483,298,3.133,299,3.133,300,2.619,301,1.883,302,2.356,303,3.133,304,3.133,305,3.133,306,2.847,307,2.619,308,2.847,309,2.847,310,2.988,311,3.133,312,3.133,313,1.634,314,3.133,315,2.988,316,3.133,317,2.791,318,2.266,319,2.429,320,1.44,321,2.124,322,3.133,323,2.266,324,1.239,325,1.213,326,3.133,327,3.133,328,3.133,329,2.619,330,3.133,331,1.44,332,3.133,333,3.202,334,2.619,335,3.133,336,2.633,337,3.133,338,1.516,339,3.133,340,1.369,341,2.266,342,1.685,343,2.619,344,2.847,345,3.133,346,2.619,347,2.429,348,3.133,349,3.133,350,3.133,351,3.133,352,1.883,353,2.847,354,3.133,355,1.239,356,2.847,357,1.302,358,1.634,359,3.133]],["title/injectables/RecoverEmailService.html",[204,1.06,271,2.183]],["body/injectables/RecoverEmailService.html",[0,0.646,3,0.293,4,0.192,5,0.17,7,0.817,9,0.334,10,0.458,11,1.902,15,2.557,16,2.077,17,0.563,18,0.02,19,0.338,24,0.596,26,0.192,33,0.335,41,0.261,43,0.692,44,0.783,45,1.349,58,3.815,60,0.737,62,0.704,63,1.375,82,1.414,83,0.793,87,0.777,97,2.327,98,1.375,101,1.754,107,2.293,110,1.048,112,1.367,119,0.013,120,0.013,126,1.375,140,0.831,145,0.605,146,0.424,195,0.192,204,1.436,206,2.158,210,2.529,214,1.559,220,2.219,222,1.677,227,1.419,243,2.183,246,3.914,247,3.803,248,3.803,249,2.013,250,5.283,251,4.352,252,2.167,253,2.327,254,2.783,255,2.529,256,1.101,257,2.783,258,2.783,259,1.497,260,2.783,261,1.436,262,1.859,263,1.048,264,1.241,265,2.158,266,1.586,267,4.682,268,3.638,269,2.529,270,2.529,271,2.957,272,2.341,273,1.945,274,3.189,275,2.957,276,2.815,277,3.815,278,2.167,279,3.467,280,1.815,281,3.467,282,2.432,283,3.548,284,4.458,285,2.341,286,2.266,287,3.815,288,1.887,289,4.458,290,3.815,291,1.946,292,2.432,293,3.815,294,2.001,295,1.631,296,2.013,297,2.293,298,2.783,299,2.783,300,2.327,301,1.673,302,2.388,303,2.783,304,2.783,305,2.783,306,2.529,307,2.327,308,2.529,309,2.529,310,2.759,311,2.783,312,2.783,313,1.509,314,2.783,315,2.759,316,2.783,317,2.787,318,2.759,319,2.957,320,1.754,321,2.586,322,3.815,323,2.013,324,1.101,325,1.487,326,3.815,327,2.783,328,2.783,329,2.327,330,2.783,331,1.28,332,2.783,333,3.374,334,2.327,335,2.783,336,2.432,337,2.783,338,1.347,339,2.783,340,1.217,341,2.013,342,1.497,343,3.189,344,3.467,345,3.815,346,3.189,347,2.957,348,3.815,349,3.815,350,3.815,351,3.815,352,2.293,353,3.467,354,3.815,355,1.101,356,2.529,357,1.157,358,1.509,359,2.783,584,1.301,1626,4.988,1627,4.988,1628,3.639,1629,3.639,1630,3.639,1631,3.639]],["title/components/ResetPasswordComponent.html",[21,0.027,185,0.672]],["body/components/ResetPasswordComponent.html",[3,0.163,4,0.146,5,0.129,9,0.254,10,0.377,15,1.024,17,0.61,18,0.02,19,0.368,20,0.505,21,0.036,24,0.453,26,0.216,28,2.05,29,2.382,30,0.758,31,0.885,32,0.973,33,0.163,34,0.748,35,0.748,36,0.875,37,1.356,38,1.216,40,0.274,41,0.198,42,0.478,43,0.916,44,1.041,45,1.163,49,2.533,50,1.407,59,0.532,60,0.274,62,0.698,63,1.668,65,0.381,67,1.64,68,1.349,83,0.531,84,1.079,87,1.29,108,1.371,112,1.124,119,0.01,120,0.01,121,0.789,122,0.505,123,0.561,124,0.478,126,1.582,134,0.561,135,0.748,136,0.831,137,0.561,138,1.096,139,0.561,140,0.599,141,0.561,142,0.505,143,0.561,144,0.935,145,0.436,146,0.415,147,0.561,148,0.505,149,0.561,150,0.831,151,0.505,152,0.789,153,0.991,154,0.505,155,0.991,156,0.505,157,0.94,158,0.505,159,0.561,160,0.505,161,0.561,162,0.561,163,0.505,164,0.561,165,0.505,166,0.561,167,0.505,168,0.561,169,0.505,170,0.561,171,0.505,172,0.561,173,0.505,174,0.505,175,0.561,176,0.505,177,0.599,178,0.561,179,0.478,180,0.561,181,0.505,182,0.561,183,0.561,184,0.505,185,0.986,186,0.505,187,0.561,188,0.561,189,0.505,190,0.532,191,0.505,192,0.532,193,0.561,194,0.478,195,0.146,196,0.561,197,0.505,198,0.561,199,0.561,202,0.831,214,1.124,222,0.758,223,1.371,261,0.796,262,1.339,286,1.518,294,1.9,295,0.968,315,2.268,325,0.921,340,0.925,361,1.079,379,2.747,380,2.622,393,2.622,403,3.136,437,3.555,440,2.779,491,2.802,514,3.81,537,1.906,541,0.925,548,2.123,549,2.533,562,4,563,4,565,3.204,581,2.779,584,1.069,585,2.622,587,2.622,594,2.247,595,1.687,596,1.202,598,1.202,600,2.126,601,2.533,602,1.53,603,1.024,604,1.768,605,1.768,606,2.115,607,3.124,613,2.126,616,1.782,645,1.434,646,0.879,647,1.434,661,2.126,663,2.268,666,2.622,667,2.635,668,3.584,669,3.865,670,3.865,671,2.947,672,3.865,673,2.622,682,2.268,684,2.622,685,2.622,687,1.768,688,3.136,691,4.953,692,4.953,693,4.194,694,4.953,695,4.194,699,4.194,700,4.194,703,2.374,704,2.374,705,2.374,706,2.374,707,2.374,708,2.374,709,2.374,711,2.374,713,3.519,720,3.737,721,3.737,725,2.374,726,2.374,727,4.194,728,2.374,729,2.374,730,2.374,731,4.194,734,2.115,735,2.374,744,2.374,745,3.519,746,3.519,747,3.455,748,2.374,749,3.519,750,2.374,751,2.374,977,2.374,982,2.374,984,2.374,1148,2.431,1149,2.622,1151,3.926,1152,3.926,1159,1.53,1169,2.703,1172,3.455,1608,3.737,1609,4,1613,1.768,1614,2.115,1616,2.115,1618,2.115,1619,1.768,1625,3.136,1632,4.887,1633,2.766,1634,2.766,1635,3.737,1636,4.101,1637,2.766,1638,2.766,1639,2.766,1640,2.766,1641,2.766,1642,2.766,1643,2.766,1644,4.101,1645,4.101,1646,5.405,1647,4.101]],["title/injectables/ResetPasswordService.html",[204,1.06,1169,2.036]],["body/injectables/ResetPasswordService.html",[0,0.689,3,0.189,4,0.169,5,0.15,7,0.72,9,0.295,10,0.42,11,1.937,15,2.521,16,2.144,17,0.6,18,0.02,19,0.322,24,0.525,26,0.169,33,0.269,40,0.318,41,0.23,43,0.774,44,0.876,45,1.37,60,0.731,61,3.153,62,0.651,63,1.637,65,0.629,82,1.429,83,0.793,84,1.251,87,1.474,92,1.564,98,1.025,101,1.87,107,2.816,110,0.924,112,1.252,119,0.012,120,0.012,126,1.429,140,0.846,145,0.566,146,0.52,195,0.305,204,1.315,206,1.902,214,1.252,220,2.26,222,1.588,223,1.527,227,1.251,243,2.216,256,0.971,259,1.32,261,1.315,262,1.794,263,0.924,264,1.443,266,2.082,272,2.188,273,1.781,276,2.1,278,2.766,280,1.252,285,2.188,286,1.691,288,1.663,292,1.564,295,1.631,296,1.775,297,1.475,313,1.382,317,2.661,320,1.606,321,1.663,323,1.775,324,0.971,325,1.429,338,1.691,340,1.073,341,1.775,342,1.879,352,2.1,355,1.382,357,1.452,358,1.382,381,1.985,382,3.705,407,2.757,448,2.92,462,1.985,485,2.92,516,1.564,584,1.191,646,2.128,657,1.691,696,2.753,757,1.663,778,2.527,788,2.1,792,2.825,878,2.311,1015,2.708,1081,1.663,1117,2.368,1150,2.942,1151,3.623,1152,3.623,1153,1.902,1154,4.552,1155,2.23,1156,4.027,1157,2.23,1158,3.395,1159,1.775,1160,2.942,1161,1.902,1162,3.696,1163,2.92,1164,3.174,1165,3.174,1166,2.051,1167,2.23,1168,2.708,1169,2.527,1170,3.696,1171,3.174,1172,2.92,1173,3.174,1174,2.23,1175,4.027,1176,2.816,1177,2.92,1178,3.174,1179,3.174,1180,2.942,1181,3.174,1182,2.92,1183,3.174,1184,2.23,1185,2.23,1186,4.027,1187,2.23,1188,2.23,1189,2.051,1190,3.696,1191,2.23,1192,2.23,1193,2.23,1194,3.696,1195,1.775,1196,1.663,1197,2.23,1198,2.051,1199,2.23,1200,2.23,1201,2.23,1202,1.902,1203,2.23,1204,2.23,1205,2.23,1206,4.424,1207,2.23,1208,2.23,1209,2.23,1210,2.051,1211,2.92,1212,3.696,1213,3.174,1214,2.23,1215,3.174,1216,3.174,1217,3.174,1218,2.23,1648,4.568,1649,3.209,1650,3.209,1651,3.209,1652,3.209,1653,3.209,1654,3.209]],["title/interfaces/ShowForm.html",[0,0.477,696,1.436]],["body/interfaces/ShowForm.html",[0,0.744,2,1.305,3,0.218,4,0.195,5,0.173,9,0.341,10,0.465,11,1.69,15,2.467,16,2.121,17,0.59,18,0.02,19,0.34,24,0.608,26,0.195,33,0.297,40,0.368,41,0.266,43,0.615,44,0.696,45,1.243,60,0.74,61,2.201,62,0.611,63,1.598,65,0.511,82,1.378,83,0.836,84,1.448,87,1.422,92,1.81,98,1.135,101,2.022,107,2.643,110,1.069,119,0.013,120,0.013,145,0.538,146,0.489,195,0.266,204,1.456,223,1.241,227,1.448,243,2.173,256,1.123,259,1.527,261,1.456,262,1.77,263,1.069,264,1.427,266,2.263,272,1.527,273,1.448,276,1.707,278,2.498,280,1.017,285,2.08,286,1.374,288,1.925,292,1.81,295,1.68,296,2.054,297,1.707,313,1.529,317,2.806,320,1.305,321,1.925,323,2.054,324,1.123,325,1.135,338,1.374,340,1.241,341,2.054,342,2.08,352,1.707,355,1.529,357,1.607,358,1.529,381,2.197,382,3.232,407,2.981,448,3.232,462,1.613,485,2.373,516,1.81,646,1.963,657,1.871,696,2.886,757,1.925,778,2.054,788,1.707,792,2.803,878,2.197,1015,2.201,1081,1.925,1117,1.925,1150,3.181,1151,2.054,1152,2.054,1153,2.201,1154,4.489,1155,2.58,1156,4.29,1157,2.58,1158,3.2,1159,2.054,1160,3.181,1161,2.201,1162,3.514,1163,3.232,1164,3.514,1165,3.514,1166,2.373,1167,2.58,1168,2.998,1169,2.054,1170,2.58,1171,2.58,1172,2.373,1173,2.58,1174,2.58,1175,3.514,1176,2.643,1177,2.373,1178,2.58,1179,2.58,1180,2.797,1181,2.58,1182,2.373,1183,2.58,1184,2.58,1185,2.58,1186,4.29,1187,2.58,1188,2.58,1189,2.373,1190,2.58,1191,2.58,1192,2.58,1193,2.58,1194,2.58,1195,2.054,1196,1.925,1197,2.58,1198,2.373,1199,2.58,1200,2.58,1201,2.58,1202,2.201,1203,2.58,1204,2.58,1205,2.58,1206,3.996,1207,2.58,1208,2.58,1209,2.58,1210,2.373,1211,2.373,1212,2.58,1213,2.58,1214,2.58,1215,2.58,1216,2.58,1217,2.58,1218,2.58]],["title/components/SidebarComponent.html",[21,0.027,186,0.672]],["body/components/SidebarComponent.html",[3,0.274,4,0.245,5,0.217,7,1.045,18,0.019,19,0.245,20,0.85,21,0.047,26,0.245,31,0.762,33,0.274,34,1.071,35,1.071,37,1.411,38,1.265,40,0.461,41,0.333,42,0.805,59,0.896,60,0.461,62,0.495,65,0.641,77,3.75,119,0.015,120,0.015,121,1.129,122,0.85,123,0.944,124,0.805,134,0.944,135,1.071,136,1.189,137,0.944,138,1.367,139,0.944,140,0.857,141,0.944,142,0.85,143,0.944,144,0.805,145,0.495,146,0.396,147,0.944,148,0.85,149,0.944,150,1.189,151,0.85,152,1.129,153,1.302,154,0.85,155,1.302,156,0.85,157,0.896,158,0.85,159,0.944,160,0.85,161,0.944,162,0.944,163,0.85,164,0.944,165,0.85,166,0.944,167,0.85,168,0.944,169,0.85,170,0.944,171,0.85,172,0.944,173,0.85,174,0.85,175,0.944,176,0.85,177,0.857,178,0.944,179,0.805,180,0.944,181,0.85,182,0.944,183,0.944,184,0.85,185,0.85,186,1.23,187,0.944,188,0.944,189,0.85,190,0.896,191,0.85,192,0.896,193,0.944,194,0.805,195,0.338,196,0.944,197,0.85,198,0.944,199,0.944,202,1.189,286,2.171,346,3.75,501,3.729,528,2.549,539,2.413,667,2.86,955,4.486,993,4.486,994,4.486,995,5.155,1655,3.996,1656,6.088,1657,5.866,1658,6.741,1659,5.034,1660,5.866,1661,5.866]],["title/components/SpinnerComponent.html",[21,0.027,31,0.603]],["body/components/SpinnerComponent.html",[3,0.277,4,0.34,5,0.22,7,1.058,18,0.019,19,0.248,20,0.86,21,0.047,26,0.248,31,1.108,33,0.277,34,1.079,35,1.079,37,1.412,38,1.266,40,0.467,41,0.337,42,0.815,59,0.907,60,0.467,62,0.501,65,0.649,119,0.015,120,0.015,121,1.137,122,0.86,123,0.955,124,0.815,134,0.955,135,1.079,136,1.198,137,0.955,138,1.373,139,0.955,140,0.863,141,0.955,142,0.86,143,0.955,144,0.815,145,0.501,146,0.4,147,0.955,148,0.86,149,0.955,150,1.198,151,0.86,152,1.137,153,1.309,154,0.86,155,1.309,156,0.86,157,0.907,158,0.86,159,0.955,160,0.86,161,0.955,162,0.955,163,0.86,164,0.955,165,0.86,166,0.955,167,0.86,168,0.955,169,0.86,170,0.955,171,0.86,172,0.955,173,0.86,174,0.86,175,0.955,176,0.86,177,0.863,178,0.955,179,0.815,180,0.955,181,0.86,182,0.955,183,0.955,184,0.86,185,0.86,186,0.86,187,0.955,188,0.955,189,0.86,190,0.907,191,0.86,192,0.907,193,0.955,194,0.815,195,0.248,196,0.955,197,0.86,198,0.955,199,0.955,202,1.198,291,1.879,456,2.882,539,2.431,1180,3.27,1662,4.045,1663,5.911,1664,5.911,1665,5.911,1666,5.911,1667,5.911,1668,5.911,1669,5.911,1670,5.911,1671,5.911,1672,5.911,1673,5.911]],["title/components/StandardLayoutComponent.html",[21,0.027,189,0.672]],["body/components/StandardLayoutComponent.html",[3,0.259,4,0.232,5,0.205,7,0.99,18,0.02,19,0.36,20,0.805,21,0.046,26,0.232,30,1.208,31,0.722,33,0.259,34,1.034,35,1.034,36,1.209,37,1.406,38,1.261,40,0.437,41,0.316,42,0.762,59,0.848,60,0.437,62,0.469,65,0.607,119,0.014,120,0.014,121,1.09,122,0.805,123,0.894,124,0.762,134,0.894,135,1.034,136,1.148,137,0.894,138,1.339,139,0.894,140,0.827,141,0.894,142,0.805,143,0.894,144,0.762,145,0.469,146,0.375,147,0.894,148,0.805,149,0.894,150,1.148,151,0.805,152,1.09,153,1.269,154,0.805,155,1.269,156,0.805,157,0.848,158,0.805,159,0.894,160,0.805,161,0.894,162,0.894,163,1.206,164,0.894,165,0.805,166,0.894,167,1.206,168,0.894,169,0.805,170,0.894,171,0.805,172,0.894,173,0.805,174,0.805,175,0.894,176,0.805,177,0.827,178,0.894,179,0.762,180,0.894,181,0.805,182,0.894,183,0.894,184,0.805,185,0.805,186,1.206,187,0.894,188,0.894,189,1.206,190,1.205,191,0.805,192,0.848,193,0.894,194,0.762,195,0.232,196,0.894,197,0.805,198,0.894,199,0.894,201,4.787,202,1.148,229,3.869,445,4.332,528,2.461,530,4.861,531,4.861,535,5.349,539,2.33,542,3.783,878,2.461,952,5.67,954,4.332,994,5.053,1189,3.621,1475,4.861,1656,5.67,1674,3.783,1675,5.053,1676,6.607,1677,5.665,1678,6.607,1679,4.861,1680,5.665,1681,4.861,1682,5.665,1683,5.665,1684,4.408,1685,4.408]],["title/components/TermsAndConditionsComponent.html",[21,0.027,191,0.672]],["body/components/TermsAndConditionsComponent.html",[3,0.225,4,0.201,5,0.178,7,0.858,18,0.019,19,0.271,20,0.697,21,0.042,26,0.201,30,1.047,31,0.625,33,0.225,34,0.941,35,0.941,36,1.1,37,1.393,38,1.249,40,0.378,41,0.273,42,0.661,59,0.735,60,0.378,62,0.406,65,0.526,119,0.013,120,0.013,121,0.992,122,0.697,123,0.774,124,0.661,134,0.774,135,0.941,136,1.045,137,0.774,138,1.266,139,0.774,140,0.753,141,0.774,142,0.697,143,0.774,144,0.661,145,0.406,146,0.325,147,0.774,148,0.697,149,0.774,150,1.045,151,0.697,152,0.992,153,1.183,154,0.697,155,1.183,156,0.697,157,0.735,158,0.697,159,0.774,160,0.697,161,0.774,162,0.774,163,0.697,164,0.774,165,0.697,166,0.774,167,0.697,168,0.774,169,0.697,170,0.774,171,0.697,172,0.774,173,0.697,174,0.697,175,0.774,176,0.697,177,0.753,178,0.774,179,0.661,180,0.774,181,0.697,182,0.774,183,0.774,184,0.697,185,0.697,186,0.697,187,0.774,188,0.774,189,0.697,190,0.735,191,1.14,192,1.322,193,0.774,194,0.661,195,0.343,196,0.774,197,0.697,198,0.774,199,0.774,202,1.045,229,2.851,237,3.295,264,1.451,291,2.137,295,1.217,301,2.37,343,3.295,347,3.056,406,2.24,422,4.341,454,4.423,460,3.582,501,3.455,525,3.056,537,2.275,543,3.056,747,3.295,783,3.993,853,3.056,953,3.942,956,4.341,958,3.942,959,3.942,966,3.942,969,3.278,970,4.777,1015,3.056,1252,3.056,1351,3.056,1386,4.423,1411,3.942,1412,4.423,1429,4.423,1460,5.36,1508,3.942,1586,3.942,1598,4.423,1675,3.942,1686,3.278,1687,3.278,1688,3.278,1689,5.154,1690,4.423,1691,4.423,1692,5.154,1693,5.154,1694,5.154,1695,4.423,1696,4.423,1697,5.154,1698,5.154,1699,5.154,1700,5.154,1701,5.154,1702,5.154,1703,5.154,1704,4.423,1705,4.423,1706,5.154,1707,5.154,1708,5.154,1709,5.154,1710,4.423,1711,5.154,1712,4.777,1713,4.423,1714,5.154,1715,4.423,1716,4.423,1717,4.423,1718,5.36,1719,5.154,1720,5.154,1721,4.973,1722,5.154,1723,5.36,1724,4.423,1725,6.241,1726,4.423,1727,5.154,1728,4.423,1729,5.154,1730,4.423,1731,4.423,1732,5.154,1733,6.246,1734,4.423,1735,4.423,1736,5.154,1737,4.423,1738,5.154,1739,4.423,1740,4.423,1741,5.154,1742,5.154,1743,5.154,1744,3.942,1745,4.423]],["title/injectables/UserPhotosService.html",[204,1.06,1258,1.908]],["body/injectables/UserPhotosService.html",[0,0.579,3,0.183,4,0.164,5,0.32,7,0.7,9,0.286,10,0.411,11,1.495,16,1.869,17,0.564,18,0.02,19,0.319,24,0.51,26,0.164,33,0.336,40,0.443,41,0.223,43,0.822,44,0.966,45,1.302,50,1.506,62,0.331,76,1.992,82,0.955,83,0.941,86,2.551,87,1.117,92,2.181,98,1.004,106,2.859,110,0.897,111,1.519,112,0.854,119,0.011,120,0.011,124,0.905,126,1.458,140,0.653,177,0.835,195,0.235,204,1.288,206,1.847,214,1.226,220,1.744,221,2.165,222,1.226,223,1.749,227,1.215,237,1.992,238,3.109,243,1.583,259,1.282,261,1.288,262,1.82,264,0.907,275,3.59,278,1.943,282,2.181,285,2.352,291,1.422,294,2.011,295,1.056,297,1.432,301,2.056,302,2.532,310,2.474,319,2.652,324,1.583,338,1.153,368,1.354,396,1.615,399,2.652,440,1.432,456,1.519,462,2.484,515,2.652,516,1.519,518,3.603,522,1.615,523,3.637,584,1.166,632,2.056,642,2.319,646,0.991,671,1.519,678,1.992,757,1.615,776,1.724,784,1.992,792,3.073,853,3.102,877,2.894,878,2.273,1017,3.35,1038,3.559,1040,3.64,1080,4.208,1081,2.319,1083,3.345,1105,1.724,1158,2.964,1176,2.056,1195,2.474,1219,3.054,1220,3.675,1221,1.992,1222,3.421,1223,2.383,1224,2.383,1225,2.383,1226,3.974,1227,2.383,1228,2.383,1229,3.421,1230,3.421,1231,3.421,1232,3.421,1233,4.002,1234,2.383,1235,3.421,1236,3.59,1237,4.12,1238,2.165,1239,1.847,1240,3.797,1241,1.847,1242,2.165,1243,3.974,1244,1.992,1245,3.592,1246,3.603,1247,1.992,1248,1.992,1249,3.109,1250,1.992,1251,2.165,1252,1.847,1253,2.165,1254,2.165,1255,2.165,1256,1.992,1257,2.652,1258,2.319,1259,3.974,1260,4.373,1261,3.421,1262,3.421,1263,3.421,1264,3.109,1265,2.652,1266,3.421,1267,3.421,1268,4.631,1269,4.771,1270,4.002,1271,4.002,1272,3.421,1273,4.002,1274,2.383,1275,2.383,1276,2.383,1277,2.165,1278,2.383,1279,2.383,1280,2.383,1281,2.383,1282,1.992,1283,2.383,1284,2.165,1285,2.165,1286,2.383,1287,2.383,1288,2.383,1289,3.421,1290,4.002,1291,3.421,1292,3.421,1293,2.383,1294,3.421,1295,2.383,1296,2.383,1297,1.992,1298,2.383,1299,2.859,1300,2.383,1301,2.383,1302,2.383,1303,2.383,1304,2.383,1305,2.383,1306,2.383,1307,2.383,1308,3.421,1309,2.383,1310,1.992,1311,1.992,1312,2.383,1313,2.383,1314,2.383,1315,2.383,1316,2.383,1317,2.383,1318,2.383,1319,2.383,1320,2.383,1321,2.383,1322,2.383,1323,2.383,1324,2.383,1325,2.383,1326,2.383,1327,2.383,1328,2.383,1329,2.383,1330,2.165,1331,3.421,1332,2.383,1333,2.383,1334,3.39,1335,2.474,1336,3.109,1337,3.109,1338,3.421,1339,3.109,1340,3.421,1341,3.421,1342,3.421,1343,3.421,1344,4.002,1345,2.383,1346,2.383,1347,2.383,1348,2.383,1349,2.383,1350,2.383,1351,1.847,1352,3.421,1353,2.383,1354,2.165,1355,2.383,1356,1.847,1357,2.383,1358,2.383,1359,2.383,1360,2.383,1361,2.383,1362,2.383,1363,2.383,1746,4.473,1747,3.116,1748,3.116,1749,3.116,1750,3.116,1751,3.116]],["title/components/UserProfileComponent.html",[21,0.027,194,0.637]],["body/components/UserProfileComponent.html",[0,0.569,3,0.137,4,0.122,5,0.291,7,0.521,9,0.404,10,0.33,11,0.776,16,1.034,17,0.601,18,0.02,19,0.37,20,0.424,21,0.032,24,0.38,25,1.651,26,0.189,28,1.966,31,0.809,32,0.816,33,0.137,34,0.655,35,0.655,36,0.766,37,1.332,38,1.194,40,0.356,41,0.166,42,0.401,43,0.907,44,1.022,45,0.845,50,1.264,59,0.447,60,0.23,62,0.247,63,0.521,65,0.32,69,1.861,70,1.861,71,1.861,72,1.861,73,1.132,82,0.766,83,0.692,86,3.112,87,1.055,98,0.521,108,1.786,112,0.984,114,1.009,119,0.009,120,0.009,121,0.691,122,0.424,123,0.471,124,0.401,126,1.532,134,0.471,135,0.902,136,0.728,137,0.471,138,1.002,139,0.471,140,0.781,141,0.471,142,0.424,143,0.471,144,0.855,145,0.382,146,0.542,147,0.471,148,0.424,149,0.471,150,0.728,151,0.424,152,0.691,153,0.89,154,0.424,155,0.89,156,0.424,157,0.447,158,0.424,159,0.471,160,0.424,161,0.471,162,0.471,163,0.424,164,0.471,165,0.424,166,0.471,167,0.424,168,0.471,169,0.424,170,0.471,171,0.424,172,0.471,173,0.424,174,0.424,175,0.471,176,0.424,177,1.014,178,0.471,179,0.855,180,0.471,181,0.424,182,0.471,183,0.471,184,0.424,185,0.424,186,0.424,187,0.471,188,0.471,189,0.424,190,0.447,191,0.424,192,0.447,193,0.471,194,0.855,195,0.392,196,0.471,197,0.424,198,0.471,199,0.471,202,0.728,214,0.984,220,1.4,222,0.984,223,1.468,243,0.702,252,1.56,256,1.086,259,0.955,261,1.034,262,1.354,263,0.668,264,0.728,266,1.873,291,1.873,295,0.848,302,2.636,313,0.702,324,0.702,325,1.2,331,0.816,333,1.376,336,2.755,340,0.776,355,0.702,357,0.738,358,0.702,361,0.905,363,3.159,368,1.009,396,1.203,406,1.009,416,1.775,417,1.067,429,1.775,450,2.746,488,0.955,518,2.771,522,2.562,528,1.009,536,2.807,539,1.477,541,0.776,548,1.908,549,2.276,565,2.129,567,2.496,573,2.709,581,2.598,584,0.936,590,1.651,594,2.272,595,1.477,596,1.009,597,1.986,598,1.009,603,1.329,613,1.987,625,1.484,629,1.203,632,1.067,633,1.284,634,1.284,638,1.751,639,1.067,640,1.067,645,1.203,646,1.873,647,2.276,648,1.203,649,1.651,650,1.203,657,0.859,658,1.203,661,2.93,662,1.986,663,1.284,682,1.284,696,2.084,737,1.376,738,1.376,741,1.376,743,2.129,772,1.775,773,1.376,777,1.132,780,1.376,816,2.746,833,3.159,834,3.435,835,2.129,837,1.376,858,2.746,859,2.746,866,2.295,867,2.496,868,1.613,879,4.655,1017,2.429,1020,1.613,1038,3.504,1039,1.986,1040,2.771,1176,1.067,1180,1.986,1219,3.166,1220,1.986,1236,3.169,1240,3.367,1245,1.284,1246,1.203,1257,2.93,1258,2.276,1259,2.496,1265,2.604,1299,2.807,1311,2.295,1334,2.604,1335,1.284,1356,2.93,1364,1.376,1370,1.484,1375,3.358,1393,1.775,1399,2.295,1400,2.746,1444,2.496,1452,1.775,1561,3.779,1609,3.767,1619,1.484,1752,4.785,1753,1.613,1754,3.081,1755,3.081,1756,4.586,1757,3.768,1758,4.586,1759,3.768,1760,4.586,1761,3.768,1762,3.768,1763,4.586,1764,4.241,1765,3.591,1766,2.321,1767,2.321,1768,4.849,1769,6.068,1770,3.081,1771,2.746,1772,3.081,1773,2.321,1774,3.358,1775,2.321,1776,5.224,1777,2.321,1778,2.321,1779,3.081,1780,3.081,1781,2.321,1782,2.321,1783,2.321,1784,2.321,1785,2.321,1786,3.052,1787,2.321,1788,2.321,1789,3.081,1790,3.081,1791,3.081,1792,1.992,1793,1.992,1794,1.775,1795,2.496,1796,1.992,1797,3.081,1798,1.992,1799,1.992,1800,1.992,1801,1.992,1802,3.081,1803,1.992,1804,1.992,1805,1.992,1806,1.992,1807,1.992,1808,1.992,1809,1.992,1810,1.992,1811,1.992,1812,1.992,1813,1.992,1814,1.992,1815,1.992,1816,1.992,1817,1.992,1818,1.992,1819,1.992,1820,1.992,1821,1.992,1822,1.992,1823,1.992,1824,1.992,1825,1.992,1826,1.992,1827,1.775,1828,3.081,1829,1.992,1830,1.992,1831,1.992,1832,3.591,1833,3.081,1834,2.321,1835,3.591,1836,3.591,1837,3.591,1838,3.591,1839,3.591,1840,3.591,1841,3.591,1842,3.591,1843,3.591,1844,3.591,1845,3.591,1846,3.591,1847,3.591,1848,2.321]],["title/interfaces/VerifiedFailed.html",[0,0.477,1160,2.036]],["body/interfaces/VerifiedFailed.html",[0,0.745,2,1.307,3,0.219,4,0.196,5,0.173,9,0.342,10,0.465,15,2.468,16,2.099,17,0.59,18,0.02,19,0.34,24,0.609,26,0.196,33,0.298,40,0.368,41,0.266,43,0.615,44,0.697,45,1.244,60,0.741,61,2.205,62,0.612,63,1.598,65,0.512,82,1.379,83,0.837,84,1.45,87,1.423,92,1.813,98,1.136,101,2.023,107,2.646,110,1.07,119,0.013,120,0.013,145,0.538,146,0.489,195,0.266,204,1.457,223,1.243,227,1.45,243,2.205,256,1.125,259,1.53,261,1.457,262,1.771,263,1.07,264,1.427,266,2.263,272,1.53,273,1.45,276,1.71,278,2.5,280,1.019,285,2.082,286,1.376,288,1.928,292,1.813,295,1.681,296,2.057,297,1.71,313,1.531,317,2.808,320,1.307,321,1.928,323,2.057,324,1.125,325,1.136,338,1.376,340,1.243,341,2.057,342,2.082,352,1.71,355,1.531,357,1.609,358,1.531,381,2.199,382,3.236,407,2.983,448,3.236,462,1.616,485,2.377,516,1.813,646,1.964,657,1.873,696,2.874,757,1.928,778,2.057,788,1.71,792,2.806,878,2.199,1015,2.205,1081,1.928,1117,1.928,1150,3.183,1151,2.057,1152,2.057,1153,2.205,1154,4.491,1155,2.584,1156,4.293,1157,2.584,1158,3.202,1159,2.057,1160,3.417,1161,2.205,1162,3.518,1163,3.236,1164,3.518,1165,3.518,1166,2.377,1167,2.584,1168,3.001,1169,2.057,1170,2.584,1171,2.584,1172,2.377,1173,2.584,1174,2.584,1175,3.518,1176,2.646,1177,2.377,1178,2.584,1179,2.584,1180,2.8,1181,2.584,1182,2.377,1183,2.584,1184,2.584,1185,2.584,1186,4.293,1187,2.584,1188,2.584,1189,2.377,1190,2.584,1191,2.584,1192,2.584,1193,2.584,1194,2.584,1195,2.057,1196,1.928,1197,2.584,1198,2.377,1199,2.584,1200,2.584,1201,2.584,1202,2.205,1203,2.584,1204,2.584,1205,2.584,1206,3.999,1207,2.584,1208,2.584,1209,2.584,1210,2.377,1211,2.377,1212,2.584,1213,2.584,1214,2.584,1215,2.584,1216,2.584,1217,2.584,1218,2.584]],["title/components/VerifyEmailComponent.html",[21,0.027,197,0.672]],["body/components/VerifyEmailComponent.html",[3,0.237,4,0.212,5,0.188,7,0.905,9,0.371,10,0.491,12,3.417,15,1.492,17,0.542,18,0.02,19,0.372,20,0.736,21,0.044,24,0.66,26,0.212,29,2.923,30,1.105,31,1.045,32,1.418,33,0.237,34,0.976,35,0.976,36,1.141,37,1.398,38,1.254,40,0.399,41,0.289,42,0.697,43,0.729,44,0.985,45,1.314,49,3.108,50,1.726,59,0.776,60,0.69,62,0.429,65,0.959,67,2.391,68,1.966,82,1.141,83,0.522,84,1.572,119,0.014,120,0.014,121,1.029,122,0.736,123,0.817,124,0.697,126,1.433,134,0.817,135,0.976,136,1.084,137,0.817,138,1.294,139,0.817,140,0.781,141,0.817,142,0.736,143,0.817,144,1.104,145,0.568,146,0.509,147,0.817,148,0.736,149,0.817,150,1.084,151,0.736,152,1.029,153,1.215,154,0.736,155,1.215,156,0.736,157,0.776,158,0.736,159,0.817,160,0.736,161,0.817,162,0.817,163,0.736,164,0.817,165,0.736,166,0.817,167,0.736,168,0.817,169,0.736,170,0.817,171,0.736,172,0.817,173,0.736,174,0.736,175,0.817,176,0.736,177,0.781,178,0.817,179,0.697,180,0.817,181,0.736,182,0.817,183,0.817,184,0.736,185,0.736,186,0.736,187,0.817,188,0.817,189,0.736,190,0.776,191,0.736,192,0.776,193,0.817,194,0.697,195,0.212,196,0.817,197,1.165,198,0.817,199,0.817,202,1.084,278,2.322,315,2.957,325,1.2,361,1.572,379,2.199,381,2.322,407,3.309,423,3.715,537,2.338,541,1.348,547,2.391,548,2.605,550,3.715,598,1.752,661,2.771,1148,3.169,1149,3.417,1608,4.585,1609,4.452,1611,3.46,1613,2.578,1614,3.084,1615,4.587,1616,3.084,1618,3.084,1619,2.578,1625,4.087,1849,4.616,1850,4.616,1851,4.587,1852,5.345,1853,4.032,1854,3.833,1855,2.578,1856,4.032,1857,4.032,1858,5.345]],["title/interfaces/VerifyEmailResult.html",[0,0.477,1855,2.353]],["body/interfaces/VerifyEmailResult.html",[0,0.776,2,1.695,3,0.284,4,0.254,5,0.225,7,1.082,9,0.443,10,0.551,11,2.004,12,4.688,15,2.526,16,2.111,17,0.554,18,0.02,19,0.343,24,0.789,26,0.254,33,0.353,40,0.477,41,0.345,43,0.586,44,0.664,45,0.928,60,0.709,65,0.664,82,1.029,83,0.624,98,1.082,101,1.695,110,1.388,117,3.554,119,0.018,120,0.015,145,0.637,146,0.554,195,0.254,204,1.726,227,1.88,243,1.458,249,2.667,252,2.835,253,3.082,256,1.458,263,1.388,264,0.977,266,2.307,272,1.983,273,1.88,276,2.216,280,1.788,291,1.533,292,2.35,295,1.54,302,2.544,313,1.458,317,2.966,325,1.082,329,3.082,342,1.983,355,1.458,357,1.533,358,1.458,381,2.605,407,3.762,613,1.695,657,1.784,1196,2.499,1849,3.35,1850,3.35,1854,3.082,1855,3.832,1859,6.025,1860,4.584,1861,5.144,1862,4.137,1863,4.137,1864,4.137,1865,4.137,1866,4.137,1867,4.137,1868,4.137,1869,4.137]],["title/injectables/VerifyEmailService.html",[204,1.06,1854,2.353]],["body/injectables/VerifyEmailService.html",[0,0.83,3,0.272,4,0.244,5,0.216,7,1.04,9,0.426,10,0.537,11,1.549,12,4.599,15,2.622,16,2.095,17,0.497,18,0.02,19,0.337,24,0.758,26,0.244,33,0.344,40,0.579,41,0.332,43,0.779,44,0.882,45,1.233,60,0.702,65,0.805,66,4.472,82,1.248,83,0.6,98,1.04,101,1.629,110,1.334,112,1.602,117,2.747,119,0.018,120,0.015,126,1.313,140,0.677,145,0.681,146,0.497,195,0.308,204,1.683,206,2.747,214,1.602,220,1.807,222,1.269,227,1.807,243,1.938,249,2.563,252,2.013,253,2.962,256,1.401,263,1.334,264,0.939,266,2.139,272,2.635,273,2.28,276,2.688,280,1.755,291,1.859,292,2.851,295,1.513,302,2.499,313,1.401,317,2.784,325,1.438,329,2.962,342,1.906,355,1.401,357,1.473,358,1.401,381,2.013,407,3.488,584,1.525,613,2.056,657,1.715,1196,3.031,1849,4.453,1850,4.453,1854,3.738,1855,2.962,1859,5.775,1860,3.543,1861,3.976,1862,5.018,1863,5.018,1864,5.018,1865,5.018,1866,5.018,1867,5.018,1868,5.018,1869,5.018,1870,4.633,1871,4.633]],["title/interfaces/ViewModel.html",[0,0.477,1795,2.558]],["body/interfaces/ViewModel.html",[0,0.601,2,1.154,3,0.193,4,0.173,5,0.251,7,0.737,9,0.302,10,0.427,16,1.336,17,0.582,18,0.02,19,0.388,20,0.599,21,0.034,24,0.537,25,1.509,26,0.244,28,1.994,31,0.76,32,1.154,33,0.193,34,0.599,35,0.599,36,0.7,37,0.599,38,0.537,40,0.46,41,0.235,43,0.869,44,0.976,45,0.631,50,0.945,63,0.737,69,2.406,70,2.406,71,2.406,72,2.406,73,1.6,82,0.7,83,0.8,86,2.854,87,1.249,98,0.737,108,1.8,112,0.899,114,1.426,119,0.012,120,0.012,135,0.599,144,0.803,145,0.349,146,0.545,177,0.963,179,0.803,194,0.567,195,0.4,202,0.665,220,1.28,223,1.551,243,0.993,252,2.016,256,1.404,259,1.35,261,1.336,262,1.475,263,0.945,264,0.941,266,1.043,291,1.712,295,1.096,302,2.738,313,0.993,324,0.993,325,0.737,331,1.154,333,1.945,336,3.126,340,1.097,355,0.993,357,1.043,358,0.993,361,1.28,363,2.967,368,1.426,396,2.406,406,1.426,416,2.509,417,1.509,429,2.509,450,2.509,488,1.35,518,3.035,522,2.406,528,1.426,536,2.967,539,1.35,541,1.097,548,2.016,549,2.406,567,2.28,573,2.691,581,2.691,584,1.21,590,2.134,594,2.691,595,1.909,596,1.426,597,2.567,598,1.426,603,1.718,613,1.632,625,2.098,629,1.701,632,1.509,633,1.815,634,1.815,638,2.263,639,1.509,640,1.509,645,1.701,646,1.861,647,2.406,648,1.701,649,2.134,650,1.701,657,1.215,658,1.701,662,1.815,696,1.28,737,1.945,738,1.945,741,1.945,743,2.752,772,2.509,773,1.945,777,1.6,780,1.945,816,2.509,833,2.967,834,3.225,835,1.945,837,1.945,858,3.549,859,3.549,866,2.967,867,3.225,868,2.28,879,4.477,1017,2.979,1020,2.28,1038,3.202,1039,1.815,1040,3.035,1176,1.509,1180,1.815,1219,1.509,1220,2.567,1236,2.752,1240,3.547,1245,1.815,1246,1.701,1257,2.752,1258,2.406,1265,2.752,1299,4.099,1334,2.752,1335,1.815,1356,3.192,1364,1.945,1370,2.098,1375,2.509,1393,2.509,1399,2.098,1400,3.549,1444,2.28,1452,2.509,1561,2.509,1609,2.098,1619,2.098,1752,2.28,1753,2.28,1754,2.816,1755,2.816,1756,2.816,1757,2.816,1758,2.816,1759,2.816,1760,2.816,1761,2.816,1762,2.816,1763,3.983,1764,2.816,1768,4.621,1769,6.214,1770,2.816,1771,2.509,1772,2.816,1774,3.549,1776,5.503,1779,2.816,1780,2.816,1786,3.225,1789,2.816,1790,2.816,1791,3.983,1792,2.816,1793,2.816,1794,3.549,1795,3.742,1796,2.816,1797,3.983,1798,2.816,1799,2.816,1800,2.816,1801,2.816,1802,3.983,1803,2.816,1804,2.816,1805,2.816,1806,2.816,1807,2.816,1808,2.816,1809,2.816,1810,2.816,1811,2.816,1812,2.816,1813,2.816,1814,2.816,1815,2.816,1816,2.816,1817,2.816,1818,2.816,1819,2.816,1820,2.816,1821,2.816,1822,2.816,1823,2.816,1824,2.816,1825,2.816,1826,2.816,1827,2.509,1828,3.983,1829,2.816,1830,2.816,1831,2.816]],["title/coverage.html",[1872,3.844]],["body/coverage.html",[0,0.922,1,2.05,5,0.149,6,3.491,17,0.62,18,0.02,21,0.055,31,0.525,42,0.555,87,0.684,108,1.777,119,0.012,120,0.012,142,0.585,144,0.555,146,0.388,148,0.585,151,0.585,154,0.585,156,0.585,158,0.585,160,0.585,163,0.585,165,0.585,167,0.585,169,0.585,171,0.585,173,0.585,176,0.585,177,0.468,179,0.555,181,0.585,184,0.585,185,0.585,186,0.585,189,0.585,191,0.585,194,0.555,195,0.169,197,0.585,200,2.752,204,1.763,205,2.228,207,2.752,208,2.752,209,2.752,246,2.05,247,3.63,248,3.63,249,3.52,263,0.923,265,1.901,268,2.05,271,1.901,306,5.321,360,2.752,361,1.25,362,2.752,504,2.752,524,2.752,545,4.255,546,4.066,547,3.882,579,2.452,590,2.099,599,1.901,600,1.662,601,1.662,603,1.187,604,2.05,605,2.05,609,3.173,613,1.605,686,3.491,687,4.068,696,1.25,712,2.452,752,2.228,753,4.255,754,4.255,780,1.901,806,3.491,807,3.491,815,2.228,822,2.452,837,1.901,850,2.228,851,4.43,852,4.43,860,2.452,861,2.452,863,2.452,884,2.752,894,4.066,895,4.066,896,4.066,914,2.452,923,2.452,950,2.752,971,3.491,972,3.491,983,2.452,992,2.752,1042,3.491,1055,2.452,1070,2.752,1087,3.491,1088,3.491,1089,3.491,1136,2.452,1150,1.774,1151,3.767,1152,3.767,1153,3.882,1159,1.774,1160,1.774,1161,1.901,1168,1.901,1169,1.774,1219,3.273,1220,3.622,1221,4.186,1237,1.901,1241,1.901,1247,2.05,1250,2.05,1256,2.05,1258,1.662,1282,4.821,1364,3.152,1365,2.752,1366,2.752,1370,2.919,1371,3.491,1402,2.452,1408,2.752,1409,2.752,1410,2.752,1613,2.05,1635,2.452,1655,2.752,1662,2.752,1674,2.752,1686,2.752,1687,2.752,1688,2.752,1752,3.695,1753,3.695,1786,2.228,1795,2.228,1849,3.695,1850,3.695,1854,2.05,1855,2.05,1872,2.452,1873,3.206,1874,3.206,1875,7.466,1876,2.752,1877,7.528,1878,2.752,1879,5.317,1880,2.752,1881,2.752,1882,2.752,1883,2.752,1884,2.752,1885,2.752,1886,2.752,1887,2.752,1888,2.752,1889,2.752,1890,2.752,1891,4.066,1892,7.257,1893,6.122,1894,3.206,1895,3.918,1896,4.565,1897,2.752,1898,2.752,1899,7.528,1900,4.565,1901,3.206,1902,4.565,1903,2.752,1904,2.752,1905,3.206,1906,4.565,1907,4.565,1908,3.206,1909,2.752,1910,3.206,1911,4.565,1912,4.565,1913,4.565,1914,4.565,1915,3.206,1916,4.565,1917,3.206,1918,5.793,1919,5.793,1920,3.206,1921,3.206,1922,4.563,1923,3.918,1924,3.918,1925,2.752,1926,2.752,1927,2.752,1928,2.752,1929,2.752,1930,2.752,1931,2.752,1932,3.206,1933,3.206,1934,3.206,1935,3.206,1936,3.206,1937,3.918,1938,3.206,1939,3.206]],["title/dependencies.html",[1940,2.637,1941,3.387]],["body/dependencies.html",[18,0.02,26,0.29,30,1.509,63,1.237,119,0.016,120,0.016,225,4.97,226,3.853,261,1.586,318,3.047,541,1.841,595,2.266,1026,4.727,1027,4.727,1028,5.933,1029,4.727,1030,5.933,1031,5.933,1941,4.213,1942,5.509,1943,7.556,1944,5.509,1945,5.509,1946,5.509,1947,5.509,1948,5.509,1949,5.509,1950,5.509,1951,5.509,1952,6.914,1953,5.509,1954,4.727,1955,5.509,1956,5.509,1957,5.509,1958,5.509,1959,5.509,1960,5.509,1961,5.509,1962,5.509,1963,5.509]],["title/index.html",[9,0.282,1964,2.637,1965,2.637]],["body/index.html",[18,0.017,38,0.918,119,0.017,120,0.017,174,1.024,264,1.332,302,2.187,417,2.579,418,3.585,501,3.853,533,4.289,543,3.325,544,4.289,777,3.396,855,3.585,951,4.289,993,4.289,1039,3.102,1297,3.585,1505,4.813,1520,3.898,1744,5.023,1941,4.289,1966,4.813,1967,6.966,1968,6.966,1969,6.568,1970,6.568,1971,5.609,1972,4.813,1973,5.978,1974,4.813,1975,5.609,1976,5.609,1977,6.966,1978,5.609,1979,5.609,1980,5.609,1981,5.609,1982,5.609,1983,5.609,1984,5.609,1985,5.609,1986,5.609,1987,5.609,1988,6.568]],["title/license.html",[1721,2.135,1964,2.637,1965,2.637]],["body/license.html",[0,0.578,2,0.992,4,0.369,5,0.099,14,1.632,17,0.181,18,0.012,19,0.065,21,0.028,23,0.943,39,0.857,41,0.088,43,0.791,45,0.237,63,0.277,71,0.639,72,0.639,77,3.489,80,1.632,84,0.481,87,0.953,96,1.632,111,0.601,115,0.788,119,0.007,120,0.005,126,0.277,152,0.731,190,0.543,192,1.304,195,0.306,214,0.338,223,0.412,229,0.682,264,1.385,276,2.626,279,1.483,280,0.338,281,0.857,282,1.64,285,0.878,291,2.055,294,0.751,295,0.291,300,0.788,301,1.546,307,2.43,308,1.961,310,0.682,320,1.183,331,0.751,334,2.15,338,1.407,342,0.507,343,0.788,347,2.647,352,0.567,353,0.857,365,1.86,371,2.158,379,0.507,387,0.943,389,1.058,390,2.15,394,1.832,396,0.639,406,2.148,417,2.509,421,2.158,422,3.886,423,1.483,427,3.611,431,1.058,432,2.641,436,1.058,441,2.886,442,2.158,444,3.611,445,0.943,446,2.886,447,5.502,451,2.641,457,1.058,460,2.641,462,1.461,465,4.052,466,4.816,469,2.886,488,0.507,497,0.943,498,2.906,500,3.262,502,4.409,515,1.673,516,2.176,518,0.639,520,4.554,522,1.463,525,0.731,533,1.632,534,2.906,603,0.456,616,1.808,633,2.735,639,0.981,640,0.981,642,0.639,646,1.687,649,0.567,660,0.788,661,0.639,667,1.041,668,0.731,747,2.66,756,2.158,762,3.886,763,2.892,775,2.906,776,2.102,783,1.804,788,0.567,800,0.943,827,2.892,829,3.262,853,3.046,854,1.058,855,0.788,878,0.927,941,1.832,953,1.632,956,3.688,957,1.832,958,5.132,959,3.611,964,1.058,966,4.979,970,4.368,995,0.943,1017,1.181,1018,0.943,1062,2.906,1105,1.181,1117,1.107,1120,1.058,1125,1.632,1139,2.421,1148,0.731,1149,1.804,1158,0.639,1163,0.788,1166,0.788,1176,1.913,1196,2.961,1202,0.731,1211,1.364,1239,1.673,1244,0.788,1246,1.743,1248,0.788,1252,1.673,1257,1.673,1284,0.857,1297,4.792,1310,3.651,1311,0.788,1330,2.892,1335,2.302,1337,2.892,1339,1.483,1351,2.467,1354,0.857,1356,0.731,1399,1.364,1411,0.943,1414,1.832,1417,1.058,1422,1.832,1427,4.409,1431,3.414,1444,0.857,1445,1.058,1449,2.886,1451,1.058,1453,1.832,1461,2.421,1462,1.058,1466,4.243,1472,1.832,1473,2.421,1474,1.058,1482,2.421,1486,3.571,1487,1.832,1492,1.058,1500,1.832,1507,1.832,1508,0.943,1509,1.058,1517,3.571,1518,1.058,1519,2.886,1520,3.969,1521,4.243,1524,1.832,1528,1.058,1535,1.058,1537,1.058,1538,1.058,1540,1.058,1545,1.832,1546,1.058,1548,2.421,1549,1.058,1551,1.832,1552,1.058,1554,3.262,1555,1.832,1557,2.421,1558,1.058,1559,1.058,1560,1.832,1566,4.994,1574,1.832,1580,5.225,1581,2.421,1582,1.058,1583,1.058,1585,2.421,1586,2.572,1587,6.054,1589,0.943,1590,1.832,1600,4.979,1601,1.058,1603,1.058,1606,1.058,1659,1.058,1675,0.943,1679,1.058,1681,1.058,1690,1.058,1691,2.421,1695,2.421,1696,3.831,1704,5.29,1705,1.832,1710,3.831,1712,1.632,1713,1.058,1715,1.832,1716,1.832,1717,2.886,1718,1.058,1721,5.229,1723,4.683,1724,3.262,1725,5.663,1726,3.262,1728,1.058,1730,1.058,1731,2.421,1734,1.832,1735,2.421,1737,4.994,1739,1.832,1740,2.421,1744,2.158,1745,1.832,1794,4.816,1827,3.611,1833,1.058,1851,1.058,1860,0.943,1872,1.632,1895,1.058,1909,1.058,1973,2.886,1974,5.502,1989,6.164,1990,1.233,1991,1.233,1992,2.822,1993,4.722,1994,6.233,1995,4.161,1996,1.233,1997,1.233,1998,2.134,1999,3.801,2000,2.822,2001,5.711,2002,2.822,2003,1.233,2004,1.233,2005,1.233,2006,2.134,2007,4.161,2008,1.233,2009,1.233,2010,4.722,2011,1.233,2012,1.233,2013,5.711,2014,7.119,2015,2.822,2016,2.134,2017,4.464,2018,4.161,2019,1.233,2020,1.233,2021,3.363,2022,4.722,2023,4.722,2024,2.421,2025,1.233,2026,1.233,2027,3.363,2028,1.233,2029,1.233,2030,2.134,2031,3.363,2032,2.134,2033,3.801,2034,2.134,2035,3.363,2036,1.058,2037,4.464,2038,1.233,2039,2.822,2040,4.464,2041,1.233,2042,4.722,2043,2.134,2044,5.137,2045,3.801,2046,1.233,2047,1.233,2048,1.233,2049,2.134,2050,1.233,2051,2.822,2052,1.233,2053,1.233,2054,1.233,2055,1.233,2056,4.722,2057,1.233,2058,1.233,2059,1.233,2060,1.233,2061,1.233,2062,1.233,2063,2.134,2064,1.233,2065,1.233,2066,1.233,2067,2.134,2068,2.134,2069,1.233,2070,1.233,2071,2.134,2072,2.134,2073,1.233,2074,2.134,2075,2.134,2076,1.233,2077,1.233,2078,2.134,2079,2.822,2080,2.822,2081,2.134,2082,1.233,2083,1.233,2084,4.161,2085,1.233,2086,1.233,2087,1.233,2088,3.363,2089,1.233,2090,1.233,2091,2.134,2092,2.822,2093,1.233,2094,1.233,2095,1.233,2096,3.363,2097,4.161,2098,2.822,2099,1.233,2100,2.822,2101,1.233,2102,1.233,2103,1.233,2104,2.822,2105,1.233,2106,2.134,2107,2.134,2108,1.233,2109,5.137,2110,1.233,2111,3.363,2112,4.722,2113,1.233,2114,2.822,2115,2.134,2116,6.998,2117,2.822,2118,4.944,2119,3.363,2120,2.134,2121,1.233,2122,2.822,2123,2.134,2124,2.134,2125,3.363,2126,3.363,2127,1.233,2128,2.822,2129,1.233,2130,6.556,2131,2.134,2132,1.233,2133,4.722,2134,1.233,2135,3.363,2136,5.819,2137,3.363,2138,4.722,2139,5.307,2140,1.233,2141,1.233,2142,1.233,2143,1.233,2144,1.233,2145,1.233,2146,2.822,2147,1.233,2148,2.822,2149,1.233,2150,1.233,2151,1.233,2152,1.233,2153,1.233,2154,1.233,2155,1.233,2156,2.134,2157,5.137,2158,1.233,2159,2.134,2160,1.233,2161,1.233,2162,3.801,2163,2.822,2164,2.822,2165,2.822,2166,1.233,2167,1.233,2168,3.801,2169,1.233,2170,1.233,2171,1.233,2172,1.233,2173,2.822,2174,1.233,2175,1.233,2176,1.233,2177,1.233,2178,1.233,2179,2.134,2180,1.233,2181,1.233,2182,2.134,2183,1.233,2184,2.134,2185,2.134,2186,1.233,2187,2.134,2188,2.822,2189,3.801,2190,1.233,2191,1.233,2192,1.233,2193,4.161,2194,1.233,2195,1.233,2196,3.363,2197,1.233,2198,3.801,2199,1.233,2200,2.134,2201,1.233,2202,1.233,2203,2.822,2204,2.822,2205,1.233,2206,1.233,2207,1.233,2208,1.233,2209,1.233,2210,2.134,2211,2.134,2212,2.134,2213,5.591,2214,2.134,2215,1.233,2216,1.233,2217,1.233,2218,1.233,2219,1.233,2220,1.233,2221,2.822,2222,1.233,2223,1.233,2224,3.801,2225,3.801,2226,1.233,2227,2.822,2228,1.233,2229,1.233,2230,1.233,2231,2.134,2232,1.233,2233,1.233,2234,1.233,2235,1.233,2236,1.233,2237,2.134,2238,2.134,2239,1.233,2240,2.822,2241,1.233,2242,1.233,2243,2.134,2244,1.233,2245,1.233,2246,1.233,2247,1.233,2248,2.134,2249,2.134,2250,1.832,2251,4.944,2252,2.134,2253,4.161,2254,1.233,2255,1.233,2256,2.134,2257,2.822,2258,2.822,2259,3.363,2260,3.363,2261,2.822,2262,3.363,2263,2.822,2264,1.233,2265,3.801,2266,2.822,2267,2.134,2268,2.134,2269,3.801,2270,2.134,2271,3.363,2272,2.134,2273,2.822,2274,5.711,2275,3.801,2276,1.233,2277,1.233,2278,2.822,2279,2.822,2280,2.134,2281,1.233,2282,1.233,2283,1.233,2284,1.233,2285,2.134,2286,1.233,2287,2.822,2288,1.233,2289,1.233,2290,2.134,2291,1.233,2292,2.134,2293,2.822,2294,1.058,2295,1.233,2296,1.233,2297,2.134,2298,2.134,2299,4.161,2300,6.297,2301,2.822,2302,2.134,2303,2.134,2304,2.134,2305,2.134,2306,2.134,2307,1.233,2308,1.233,2309,1.233,2310,1.233,2311,1.233,2312,2.134,2313,1.233,2314,3.801,2315,1.233,2316,1.233,2317,1.233,2318,2.134,2319,1.233,2320,2.134,2321,4.722,2322,1.233,2323,1.233,2324,1.233,2325,1.233,2326,1.832,2327,1.233,2328,1.233,2329,2.822,2330,2.134,2331,3.363,2332,1.233,2333,1.233,2334,1.233,2335,1.233,2336,2.134,2337,1.233,2338,1.233,2339,2.421,2340,3.363,2341,1.233,2342,2.134,2343,1.233,2344,1.233,2345,1.233,2346,1.233,2347,1.233,2348,1.233,2349,1.233,2350,1.233,2351,1.233,2352,1.058,2353,1.233,2354,1.233,2355,1.233,2356,1.233,2357,1.233,2358,3.363,2359,1.233,2360,1.233,2361,1.233,2362,1.233,2363,1.233,2364,1.233,2365,1.233,2366,1.233,2367,4.464,2368,1.233,2369,1.233,2370,2.822,2371,1.233,2372,2.822,2373,1.233,2374,1.233,2375,1.233,2376,1.233,2377,1.233,2378,1.233,2379,1.233,2380,1.233,2381,1.233,2382,1.233,2383,1.233,2384,1.233,2385,2.134,2386,2.134,2387,1.233,2388,2.822,2389,1.233,2390,1.233,2391,2.134,2392,3.363,2393,1.233,2394,2.134,2395,1.233,2396,1.233,2397,2.134,2398,2.134,2399,1.233,2400,1.233,2401,1.233,2402,1.233,2403,1.233,2404,1.233,2405,2.134,2406,3.363,2407,1.233,2408,1.233,2409,1.233,2410,1.233,2411,1.233,2412,1.233,2413,2.134,2414,2.134,2415,2.134,2416,2.822,2417,1.233,2418,2.134,2419,1.233,2420,2.822,2421,1.233,2422,2.134,2423,1.233,2424,2.134,2425,1.233,2426,2.822,2427,2.134,2428,1.233,2429,1.233,2430,2.134,2431,6.412,2432,2.134,2433,1.233,2434,3.801,2435,5.137,2436,2.822,2437,1.233,2438,1.233,2439,1.233,2440,3.363,2441,1.233,2442,2.822,2443,2.134,2444,1.233,2445,1.233,2446,1.233,2447,1.233,2448,1.233,2449,1.233,2450,1.233,2451,1.233,2452,3.363,2453,2.134,2454,2.134,2455,1.233,2456,1.233,2457,2.822,2458,1.233,2459,2.134,2460,2.822,2461,2.134,2462,1.233,2463,1.233,2464,1.233,2465,2.134,2466,2.822,2467,1.233,2468,1.233,2469,2.134,2470,1.233,2471,1.233,2472,1.233,2473,1.233,2474,1.233,2475,1.233,2476,2.822,2477,2.134,2478,1.233,2479,1.233,2480,3.363,2481,1.233,2482,2.822,2483,1.233,2484,1.233,2485,1.233,2486,2.134,2487,1.233,2488,1.233,2489,1.233,2490,2.822,2491,2.134,2492,2.134,2493,1.233,2494,4.464,2495,2.134,2496,2.822,2497,3.363,2498,1.233,2499,2.134,2500,1.233,2501,2.822,2502,1.233,2503,2.134,2504,1.233,2505,1.233,2506,1.233,2507,1.233,2508,1.233,2509,2.134,2510,1.233,2511,1.233,2512,1.233,2513,2.134,2514,1.233,2515,2.134,2516,1.233,2517,1.233,2518,1.233,2519,1.058,2520,1.233,2521,1.233,2522,1.233,2523,1.233,2524,2.822,2525,1.233,2526,1.233,2527,1.233,2528,1.233,2529,1.233,2530,2.134,2531,1.233,2532,1.233,2533,1.233,2534,1.233,2535,1.233,2536,1.233,2537,1.233,2538,1.233,2539,1.233,2540,1.233,2541,1.233,2542,1.233,2543,1.233,2544,1.233,2545,2.134,2546,1.233,2547,1.233,2548,1.233,2549,1.233,2550,1.233,2551,1.233,2552,1.233,2553,1.233,2554,2.822,2555,1.233,2556,2.134,2557,1.233,2558,1.233,2559,1.233,2560,1.233,2561,2.134,2562,2.134,2563,2.822,2564,1.233,2565,2.134,2566,1.233,2567,1.233,2568,1.233,2569,2.822,2570,2.134,2571,1.233,2572,2.134,2573,2.134,2574,1.233,2575,1.233,2576,1.233,2577,1.233,2578,1.233,2579,1.233,2580,1.233,2581,1.233,2582,2.134,2583,1.233,2584,1.233,2585,1.233,2586,1.233,2587,1.233,2588,1.233,2589,1.233,2590,1.233,2591,1.233,2592,1.233,2593,1.233,2594,2.134,2595,1.233,2596,1.233,2597,2.134,2598,1.233,2599,1.233,2600,1.233,2601,1.233,2602,1.233,2603,1.233,2604,1.233,2605,1.233,2606,1.233,2607,1.233,2608,1.233,2609,1.233,2610,1.233,2611,1.233,2612,1.233,2613,2.822,2614,2.134,2615,1.233,2616,1.233,2617,1.233,2618,1.233,2619,1.233,2620,2.134,2621,1.233,2622,1.233,2623,1.233,2624,1.233,2625,1.233,2626,1.233,2627,2.134,2628,1.233,2629,1.233,2630,1.233,2631,1.233,2632,1.233,2633,1.233,2634,1.233,2635,1.233,2636,1.233,2637,1.233,2638,1.233,2639,1.233,2640,1.233,2641,1.233,2642,1.233,2643,1.233,2644,1.233,2645,1.233,2646,1.233]],["title/modules.html",[2647,4.314]],["body/modules.html",[18,0.017,119,0.017,120,0.017,2647,5.183]],["title/overview.html",[2648,4.314]],["body/overview.html",[2,2.107,18,0.017,119,0.017,120,0.017,121,1.153,206,3.553,1589,4.583,2294,5.143,2648,5.143,2649,5.993]],["title/properties.html",[10,0.407,1940,2.637]],["body/properties.html",[7,1.303,10,0.534,18,0.019,119,0.017,120,0.017,498,4.44,501,3.211,777,2.83,1600,4.44,1602,4.982,1712,4.44,1721,4.035,1966,4.982,2650,5.805,2651,5.805,2652,5.805,2653,5.805,2654,5.805,2655,5.805,2656,5.805,2657,5.805,2658,5.805,2659,5.805,2660,5.805,2661,5.805,2662,5.805,2663,5.805,2664,5.805]],["title/miscellaneous/typealiases.html",[2665,2.135,2666,4.428]],["body/miscellaneous/typealiases.html",[9,0.469,17,0.434,18,0.019,25,2.348,40,0.506,119,0.016,120,0.016,135,0.932,195,0.269,220,1.992,243,1.545,262,1.4,302,1.992,336,2.49,545,4.317,546,3.906,547,4.232,579,4.75,590,3.202,594,3.408,609,4.84,610,4.75,611,4.317,612,4.75,686,3.906,687,4.639,696,2.61,712,4.75,777,2.49,806,3.906,807,3.906,894,3.906,895,3.906,896,5.119,914,4.75,921,4.75,923,4.75,971,3.906,972,3.906,983,4.75,1042,3.906,1055,4.75,1131,3.906,1150,3.436,1151,3.436,1152,3.436,1153,4.129,1159,3.436,1160,3.436,1161,3.683,1168,3.683,1219,2.856,1364,3.028,1370,3.265,1371,4.75,1401,4.383,1402,4.75,1635,4.75,1752,3.55,1753,4.317,1774,3.906,1786,4.317,1891,3.906,2665,3.55,2667,5.108,2668,6.694,2669,6.964,2670,6.212,2671,5.108,2672,5.108,2673,5.108,2674,5.331,2675,4.383,2676,4.383]],["title/miscellaneous/variables.html",[2665,2.135,2677,3.8]],["body/miscellaneous/variables.html",[1,1.295,9,0.186,10,0.296,16,1.672,17,0.57,18,0.02,22,1.549,25,1.848,28,1.515,29,1.96,38,0.331,52,1.549,60,0.201,63,1.344,68,1.96,69,3.011,70,3.011,71,2.084,72,2.901,82,0.432,83,0.949,84,1.953,86,1.573,87,1.381,98,0.455,101,2.158,108,2.28,109,1.295,110,0.583,111,0.987,112,1.979,113,1.407,114,0.88,115,1.295,116,2.062,117,1.201,119,0.008,120,0.008,122,0.589,140,0.471,145,0.488,146,0.475,174,0.37,195,0.323,205,1.407,211,1.738,218,3.45,222,1.372,229,1.12,243,1.856,247,1.201,248,1.201,249,1.784,252,2.431,262,1.592,263,0.929,264,0.411,268,2.062,269,1.407,270,1.407,273,0.79,274,1.295,280,0.555,289,1.407,291,1.026,294,1.876,295,1.741,301,1.483,302,1.568,313,1.216,317,1.747,318,2.951,320,1.134,325,0.455,331,0.712,336,3.487,338,0.75,340,1.533,352,0.931,358,1.387,363,2.57,365,2.536,371,1.549,387,1.549,390,1.295,396,1.05,397,1.738,399,1.913,401,2.768,415,1.738,418,1.295,432,1.407,440,0.931,451,1.407,460,1.407,462,0.88,463,2.768,513,1.738,525,1.201,543,2.384,581,2.302,584,1.941,590,2.108,594,2.452,596,2.176,599,1.913,600,1.672,601,2.765,603,1.853,604,3.201,605,2.062,607,1.295,613,2.333,616,3.005,636,2.384,638,1.96,639,0.931,640,0.931,642,1.05,646,1.458,660,3.201,662,2.951,665,1.549,671,0.987,720,3.075,721,3.506,734,1.549,752,1.407,753,2.242,754,3.48,758,3.889,759,1.738,760,4.578,762,2.242,763,1.407,767,3.506,768,2.467,769,2.768,770,1.738,773,1.201,776,1.784,777,1.573,778,1.12,779,3.075,780,1.913,781,1.738,782,3.187,783,1.295,784,2.57,785,2.768,786,2.467,787,1.738,788,2.752,789,3.889,790,1.738,791,2.467,792,0.987,793,1.738,794,2.768,795,1.738,796,2.768,797,2.768,798,2.768,799,2.768,800,1.549,801,1.738,802,1.738,803,1.738,804,1.738,805,1.738,815,3.707,817,3.45,818,1.738,819,1.738,820,1.738,821,1.738,822,2.467,823,1.738,824,1.738,825,1.738,826,1.738,827,2.242,828,1.738,830,1.738,831,1.738,832,1.738,833,1.295,834,1.407,835,1.913,836,1.738,837,1.913,838,2.768,839,1.738,840,1.738,841,1.738,842,3.935,843,1.738,844,1.738,845,1.738,846,1.738,847,1.738,848,1.738,849,1.738,850,2.794,851,1.549,852,3.506,855,2.062,856,1.738,860,2.467,861,2.467,863,2.467,864,1.738,865,1.738,866,3.577,867,2.794,868,3.889,869,3.935,870,2.768,871,3.45,872,2.768,873,2.768,874,2.768,877,1.784,878,0.88,880,1.738,881,1.738,882,1.738,883,1.738,890,3.45,891,3.45,968,3.506,1038,1.672,1040,1.672,1063,1.738,1064,1.738,1087,1.549,1088,1.549,1089,2.467,1094,1.407,1105,1.12,1112,2.768,1113,1.738,1115,1.738,1117,1.05,1134,1.738,1135,1.738,1136,2.467,1137,1.738,1138,1.738,1182,1.295,1202,1.201,1219,0.931,1220,1.12,1221,3.201,1238,1.407,1239,1.201,1240,1.12,1241,1.913,1242,1.407,1243,2.242,1244,1.295,1245,1.12,1246,1.05,1247,2.062,1248,1.295,1249,1.407,1250,2.062,1251,1.407,1252,1.201,1253,1.407,1254,1.407,1255,1.407,1256,2.062,1285,1.407,1336,1.407,1388,1.738,1399,1.295,1431,1.549,1456,1.738,1502,1.738,1520,1.407,1565,1.738,1576,1.738,1613,2.062,1771,1.549,1876,1.738,1878,2.768,1880,1.738,1881,2.768,1882,3.45,1883,1.738,1884,2.768,1885,1.738,1886,2.768,1887,2.768,1888,1.738,1889,2.768,1890,2.768,1891,1.549,1897,1.738,1898,2.768,1903,1.738,1904,2.768,1922,2.768,1923,1.738,1924,3.45,1925,3.45,1926,1.738,1927,2.768,1928,1.738,1929,1.738,1930,1.738,1931,2.768,1937,1.738,1954,3.935,1972,1.738,2024,1.738,2036,1.738,2250,1.738,2326,2.768,2339,1.738,2352,1.738,2519,2.768,2665,1.407,2674,1.738,2675,3.935,2676,2.768,2677,1.738,2678,2.025,2679,2.025,2680,2.025,2681,4.02,2682,4.02,2683,2.025,2684,3.226,2685,2.025,2686,2.025,2687,2.025,2688,2.025,2689,2.025,2690,2.025,2691,2.025,2692,2.025,2693,2.025,2694,2.025,2695,2.025,2696,2.025,2697,2.025,2698,2.025,2699,2.025,2700,2.025,2701,2.025,2702,2.025,2703,2.025,2704,2.025,2705,2.025,2706,2.025,2707,2.025,2708,2.025,2709,2.025,2710,2.025,2711,2.025,2712,2.025,2713,2.025,2714,2.025,2715,2.025,2716,2.025,2717,2.025,2718,2.025,2719,2.025,2720,2.025,2721,4.02,2722,2.025,2723,2.025,2724,2.025,2725,2.025,2726,2.025,2727,2.025,2728,2.025,2729,2.025,2730,2.025,2731,2.025,2732,2.025,2733,2.025,2734,2.025,2735,2.025,2736,2.025,2737,4.02,2738,3.226,2739,4.02,2740,4.02,2741,2.025,2742,5.809,2743,3.226,2744,2.025,2745,2.025,2746,4.02,2747,2.025,2748,4.02,2749,2.025,2750,3.226,2751,3.226,2752,2.025,2753,2.025,2754,3.226,2755,3.226,2756,3.226,2757,2.025,2758,4.585,2759,2.025,2760,3.226,2761,3.226,2762,2.025,2763,2.025,2764,2.025,2765,2.025,2766,2.025,2767,2.025,2768,2.025,2769,2.025,2770,2.025,2771,2.025,2772,2.025,2773,3.226,2774,2.025,2775,2.025,2776,2.025,2777,2.025,2778,2.025,2779,2.025,2780,2.025,2781,2.025,2782,3.226,2783,2.025,2784,2.025,2785,2.025,2786,2.025,2787,2.025,2788,2.025,2789,2.025,2790,2.025,2791,2.025,2792,2.025,2793,4.02,2794,4.02,2795,3.226,2796,2.025,2797,2.025,2798,2.025,2799,2.025,2800,2.025,2801,2.025,2802,3.226,2803,2.025,2804,2.025,2805,2.025,2806,2.025,2807,2.025,2808,2.025,2809,2.025,2810,2.025,2811,3.226,2812,2.025,2813,2.025,2814,2.025,2815,2.025,2816,2.025,2817,2.025,2818,2.025,2819,2.025,2820,2.025,2821,2.025,2822,2.025,2823,3.226,2824,2.025,2825,2.025,2826,2.025,2827,2.025,2828,2.025,2829,2.025,2830,2.025,2831,2.025,2832,2.025,2833,2.025,2834,2.025,2835,2.025,2836,2.025,2837,2.025,2838,2.025,2839,2.025,2840,2.025,2841,2.025,2842,2.025,2843,2.025,2844,2.025,2845,2.025,2846,2.025,2847,2.025]],["title/routes.html",[1094,3.494]],["body/routes.html",[18,0.017,119,0.017,120,0.017,1094,4.198]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["0",{"_index":306,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2650,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":1963,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1875,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1905,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1894,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1902,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1908,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1900,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1893,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1913,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1879,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1901,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":775,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"license.html":{}}}],["1.0.0",{"_index":1950,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1899,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1935,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1919,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1907,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1896,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2221,"title":{},"body":{"license.html":{}}}],["100",{"_index":1282,"title":{},"body":{"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"coverage.html":{}}}],["1000",{"_index":2772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":2231,"title":{},"body":{"license.html":{}}}],["11/16",{"_index":1921,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":513,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"miscellaneous/variables.html":{}}}],["13",{"_index":1589,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{},"overview.html":{}}}],["15",{"_index":2397,"title":{},"body":{"license.html":{}}}],["16",{"_index":2398,"title":{},"body":{"license.html":{}}}],["19.0.0",{"_index":1946,"title":{},"body":{"dependencies.html":{}}}],["19.1.5",{"_index":1943,"title":{},"body":{"dependencies.html":{}}}],["1996",{"_index":2236,"title":{},"body":{"license.html":{}}}],["1:207926801743:web:e1402f665312fb7ab0813a",{"_index":2837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":776,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":1961,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1932,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1895,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["2007",{"_index":1992,"title":{},"body":{"license.html":{}}}],["207926801743",{"_index":2841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":1906,"title":{},"body":{"coverage.html":{}}}],["26",{"_index":2649,"title":{},"body":{"overview.html":{}}}],["28",{"_index":2540,"title":{},"body":{"license.html":{}}}],["29",{"_index":1990,"title":{},"body":{"license.html":{}}}],["3",{"_index":829,"title":{},"body":{"interfaces/ControlProperties.html":{},"license.html":{}}}],["3.0",{"_index":2660,"title":{},"body":{"properties.html":{}}}],["3.0.0",{"_index":1955,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":1958,"title":{},"body":{"dependencies.html":{}}}],["3.svg",{"_index":1670,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["3/4",{"_index":1934,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1910,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2448,"title":{},"body":{"license.html":{}}}],["33",{"_index":1918,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":1251,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["3rd",{"_index":519,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["4",{"_index":2266,"title":{},"body":{"license.html":{}}}],["4/7",{"_index":1912,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":1917,"title":{},"body":{"coverage.html":{}}}],["404",{"_index":1115,"title":{},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["4096",{"_index":2775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4e05",{"_index":1441,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["5",{"_index":2294,"title":{},"body":{"license.html":{},"overview.html":{}}}],["5/5",{"_index":1936,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1916,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":269,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"miscellaneous/variables.html":{}}}],["57",{"_index":1911,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1242,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["6.7.1",{"_index":1952,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1909,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["66",{"_index":1914,"title":{},"body":{"coverage.html":{}}}],["68",{"_index":1920,"title":{},"body":{"coverage.html":{}}}],["6b",{"_index":2319,"title":{},"body":{"license.html":{}}}],["6d",{"_index":2334,"title":{},"body":{"license.html":{}}}],["7",{"_index":2263,"title":{},"body":{"license.html":{}}}],["7.8.0",{"_index":1959,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":1933,"title":{},"body":{"coverage.html":{}}}],["8/12",{"_index":1915,"title":{},"body":{"coverage.html":{}}}],["8fa53c7fa497",{"_index":1443,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["_",{"_index":2815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_$actionstate",{"_index":46,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["_$confirmdialog",{"_index":898,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["_$fileinput",{"_index":1374,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["_auth",{"_index":272,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["_basetitle",{"_index":212,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["_childroute",{"_index":2738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_confirmpasswordreset",{"_index":1194,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["_confirmpasswordreset(code",{"_index":1213,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["_doactioncode",{"_index":1626,"title":{},"body":{"injectables/RecoverEmailService.html":{}}}],["_doactioncode(oobcode",{"_index":326,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["_metaservice",{"_index":1100,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["_modepaths",{"_index":47,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["_newpasswordsubject",{"_index":1170,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["_refreshfilessubject",{"_index":1270,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["_robotstag",{"_index":1101,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["_router",{"_index":49,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["_sendpasswordresetemail",{"_index":1627,"title":{},"body":{"injectables/RecoverEmailService.html":{}}}],["_sendpasswordresetemail(restoredemail",{"_index":354,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["_service",{"_index":1608,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["_state",{"_index":2806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_storage",{"_index":1271,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["_tasksubject",{"_index":1273,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["_title",{"_index":213,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["_userphotoservice",{"_index":1375,"title":{},"body":{"components/PhotoUploadComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["_verifycode",{"_index":1190,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["_verifycode(code",{"_index":1217,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["ability",{"_index":1559,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["above",{"_index":2426,"title":{},"body":{"license.html":{}}}],["absence",{"_index":2264,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1583,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["absolutely",{"_index":2626,"title":{},"body":{"license.html":{}}}],["absorb",{"_index":1978,"title":{},"body":{"index.html":{}}}],["abstractcontrol",{"_index":758,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["abuse",{"_index":2066,"title":{},"body":{"license.html":{}}}],["accept",{"_index":2453,"title":{},"body":{"license.html":{}}}],["acceptable",{"_index":1579,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["acceptance",{"_index":2452,"title":{},"body":{"license.html":{}}}],["access",{"_index":1351,"title":{},"body":{"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["accessible",{"_index":1411,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["accomodate",{"_index":1192,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["accompanied",{"_index":2301,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":2606,"title":{},"body":{"license.html":{}}}],["accord",{"_index":2262,"title":{},"body":{"license.html":{}}}],["accordance",{"_index":1447,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["according",{"_index":2598,"title":{},"body":{"license.html":{}}}],["account",{"_index":286,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/DeleteAccountComponent.html":{},"components/HeaderComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"interfaces/VerifiedFailed.html":{}}}],["account's",{"_index":1866,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["account'},{'name",{"_index":162,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["account.component.html",{"_index":897,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts",{"_index":896,"title":{},"body":{"components/DeleteAccountComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["account.component.ts:106",{"_index":907,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:42",{"_index":910,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:43",{"_index":911,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:44",{"_index":912,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:45",{"_index":913,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:46",{"_index":915,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:47",{"_index":916,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:48",{"_index":917,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:49",{"_index":918,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:50",{"_index":919,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:52",{"_index":909,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:53",{"_index":903,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:75",{"_index":904,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:80",{"_index":906,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account/delete",{"_index":895,"title":{},"body":{"components/DeleteAccountComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["accounts",{"_index":346,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/SidebarComponent.html":{}}}],["acd7",{"_index":1442,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["achieve",{"_index":2612,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":2206,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":2499,"title":{},"body":{"license.html":{}}}],["acting",{"_index":1701,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["action",{"_index":107,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["actioncodesettings#mode",{"_index":104,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["actioncodesettings#oobcode",{"_index":105,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["actioncodestate",{"_index":1,"title":{"interfaces/ActionCodeState.html":{}},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":39,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["actions'},{'name",{"_index":141,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["actions/get",{"_index":1614,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["actionscomponent",{"_index":42,"title":{"components/ActionsComponent.html":{}},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["activatedroutesnapshot",{"_index":2739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activities",{"_index":2128,"title":{},"body":{"license.html":{}}}],["activity",{"_index":497,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["actual",{"_index":2519,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["actual_component",{"_index":199,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["actually",{"_index":2353,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":2108,"title":{},"body":{"license.html":{}}}],["add",{"_index":2392,"title":{},"body":{"license.html":{}}}],["added",{"_index":2261,"title":{},"body":{"license.html":{}}}],["additional",{"_index":2274,"title":{},"body":{"license.html":{}}}],["additionally",{"_index":641,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/RecoverEmailComponent.html":{}}}],["address",{"_index":280,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["addressed",{"_index":1833,"title":{},"body":{"components/UserProfileComponent.html":{},"license.html":{}}}],["addresses",{"_index":348,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["adds",{"_index":875,"title":{},"body":{"interfaces/ControlStruct.html":{}}}],["adequate",{"_index":1556,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["administrator",{"_index":507,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["adopted",{"_index":2234,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":2377,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1603,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["affects",{"_index":2378,"title":{},"body":{"license.html":{}}}],["affero",{"_index":2554,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":2481,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":2201,"title":{},"body":{"license.html":{}}}],["again",{"_index":382,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["against",{"_index":2250,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["age",{"_index":1588,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aggregate",{"_index":2287,"title":{},"body":{"license.html":{}}}],["agpl",{"_index":2659,"title":{},"body":{"properties.html":{}}}],["agree",{"_index":1445,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["agreed",{"_index":2583,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1548,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["agreements",{"_index":1525,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aim",{"_index":2062,"title":{},"body":{"license.html":{}}}],["aizasyb75fqz0szrfvclvpil9_t9upqllyplnci",{"_index":2835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alias",{"_index":1892,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2667,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliasing",{"_index":369,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["alleging",{"_index":2489,"title":{},"body":{"license.html":{}}}],["allow",{"_index":111,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["allowed",{"_index":1239,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["allowing",{"_index":1433,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["allows",{"_index":1567,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["along",{"_index":2265,"title":{},"body":{"license.html":{}}}],["already",{"_index":387,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["alternative",{"_index":2315,"title":{},"body":{"license.html":{}}}],["although",{"_index":2058,"title":{},"body":{"license.html":{}}}],["always",{"_index":344,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["amend",{"_index":1562,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["amp",{"_index":969,"title":{},"body":{"components/FooterComponent.html":{},"components/TermsAndConditionsComponent.html":{}}}],["analysis",{"_index":1489,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["analytics",{"_index":2700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["analyze",{"_index":1503,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anchorscrolling",{"_index":2734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ancillary",{"_index":2455,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":2045,"title":{},"body":{"license.html":{}}}],["angular",{"_index":777,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"components/PageNotFoundComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":1942,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":541,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1944,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":26,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":765,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{}}}],["angular/fire",{"_index":1945,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/auth",{"_index":256,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{}}}],["angular/fire/storage",{"_index":1229,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["angular/forms",{"_index":595,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":225,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"components/PageNotFoundComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":30,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"components/CentralLayoutComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/VerifyEmailComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":1948,"title":{},"body":{"dependencies.html":{}}}],["another",{"_index":408,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["anti",{"_index":2223,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":1586,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["anything",{"_index":2119,"title":{},"body":{"license.html":{}}}],["anyway",{"_index":1147,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["apikey",{"_index":2834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":38,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.appspot.com",{"_index":2844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.component.html",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["app.firebaseapp.com",{"_index":2839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.provider.ts",{"_index":1881,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.web.app",{"_index":2656,"title":{},"body":{"properties.html":{}}}],["app/core/user.token",{"_index":597,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["app/shared/constants",{"_index":857,"title":{},"body":{"interfaces/ControlStruct.html":{}}}],["app/shared/control",{"_index":858,"title":{},"body":{"interfaces/ControlStruct.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["app/shared/spinner/spinner.component",{"_index":32,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["appcheck",{"_index":2705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":142,"title":{"components/AppComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1878,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appears",{"_index":1822,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["appid",{"_index":2836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicable",{"_index":1521,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["application",{"_index":501,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/FooterComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/TermsAndConditionsComponent.html":{},"index.html":{},"properties.html":{}}}],["applicationconfig",{"_index":2694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":2642,"title":{},"body":{"license.html":{}}}],["application’s",{"_index":1476,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["applied",{"_index":2090,"title":{},"body":{"license.html":{}}}],["applies",{"_index":1211,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{}}}],["apply",{"_index":276,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"license.html":{}}}],["applyactioncode",{"_index":253,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["applyactioncode(this._auth",{"_index":329,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["applying",{"_index":1208,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["applyresult",{"_index":246,"title":{"interfaces/ApplyResult.html":{}},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"coverage.html":{}}}],["appropriate",{"_index":2138,"title":{},"body":{"license.html":{}}}],["appropriately",{"_index":2255,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":2602,"title":{},"body":{"license.html":{}}}],["apptitlestrategyservice",{"_index":205,"title":{"injectables/AppTitleStrategyService.html":{}},"body":{"injectables/AppTitleStrategyService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["area",{"_index":445,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/StandardLayoutComponent.html":{},"license.html":{}}}],["areas",{"_index":1505,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"index.html":{}}}],["aren't",{"_index":1309,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["arguments",{"_index":1006,"title":{},"body":{"components/HeaderComponent.html":{}}}],["aria",{"_index":833,"title":{},"body":{"interfaces/ControlProperties.html":{},"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["arise",{"_index":2073,"title":{},"body":{"license.html":{}}}],["arising",{"_index":2586,"title":{},"body":{"license.html":{}}}],["arrange",{"_index":2515,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":2524,"title":{},"body":{"license.html":{}}}],["array",{"_index":1302,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["arrays",{"_index":1986,"title":{},"body":{"index.html":{}}}],["article",{"_index":2230,"title":{},"body":{"license.html":{}}}],["ask",{"_index":1448,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["asking",{"_index":2029,"title":{},"body":{"license.html":{}}}],["assert",{"_index":2041,"title":{},"body":{"license.html":{}}}],["assets",{"_index":2471,"title":{},"body":{"license.html":{}}}],["assistance",{"_index":1625,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["associated",{"_index":389,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["assume",{"_index":2578,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":2605,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":2415,"title":{},"body":{"license.html":{}}}],["assures",{"_index":2093,"title":{},"body":{"license.html":{}}}],["async",{"_index":325,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoUploadComponent.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["asynchronous",{"_index":1664,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["asyncpipe",{"_index":548,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/PhotoUploadComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["asyncvalidatorfn",{"_index":2810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asyncvalidatorfns",{"_index":2825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attach",{"_index":2614,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":2429,"title":{},"body":{"license.html":{}}}],["attend",{"_index":1488,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["attribute",{"_index":834,"title":{},"body":{"interfaces/ControlProperties.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["attributed",{"_index":2052,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":2400,"title":{},"body":{"license.html":{}}}],["auth",{"_index":145,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["auth.guard.ts",{"_index":1889,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth/account",{"_index":458,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/cancelled",{"_index":410,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/code",{"_index":376,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/cors",{"_index":383,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/credential",{"_index":386,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/email",{"_index":402,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/expired",{"_index":409,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/invalid",{"_index":416,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["auth/missing",{"_index":449,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/multi",{"_index":452,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/network",{"_index":464,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/password",{"_index":430,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/popup",{"_index":473,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/quota",{"_index":479,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/redirect",{"_index":483,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/requires",{"_index":391,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/timeout",{"_index":486,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/too",{"_index":492,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/unverified",{"_index":499,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/user",{"_index":489,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/weak",{"_index":512,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/web",{"_index":517,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/wrong",{"_index":435,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["authdomain",{"_index":2838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication",{"_index":397,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"miscellaneous/variables.html":{}}}],["autherrormessagescomponent",{"_index":144,"title":{"components/AuthErrorMessagesComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{}}}],["authguard",{"_index":1884,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":1712,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{},"properties.html":{}}}],["authorization",{"_index":2360,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":2393,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":2495,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":2528,"title":{},"body":{"license.html":{}}}],["authors",{"_index":2017,"title":{},"body":{"license.html":{}}}],["automatic",{"_index":2463,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":282,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/DeleteAccountComponent.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["available",{"_index":1466,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["avif",{"_index":1840,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["avoid",{"_index":1354,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["await",{"_index":98,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["awaited",{"_index":94,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["aware",{"_index":1592,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["away",{"_index":2009,"title":{},"body":{"license.html":{}}}],["aws",{"_index":1346,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["b",{"_index":1330,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["b5ec",{"_index":1440,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["back",{"_index":1085,"title":{},"body":{"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["badly",{"_index":425,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["bar",{"_index":1398,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["base",{"_index":1733,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["based",{"_index":827,"title":{},"body":{"interfaces/ControlProperties.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["basic",{"_index":2195,"title":{},"body":{"license.html":{}}}],["basis",{"_index":1570,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["become",{"_index":1595,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["before",{"_index":399,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["begin",{"_index":943,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["behalf",{"_index":2215,"title":{},"body":{"license.html":{}}}],["behaviorsubject",{"_index":1233,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["behaviorsubject(undefined",{"_index":1275,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["being",{"_index":331,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["believe",{"_index":2522,"title":{},"body":{"license.html":{}}}],["below",{"_index":1244,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["benefit",{"_index":2518,"title":{},"body":{"license.html":{}}}],["best",{"_index":2611,"title":{},"body":{"license.html":{}}}],["better",{"_index":1199,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["between",{"_index":2192,"title":{},"body":{"license.html":{}}}],["beyond",{"_index":2289,"title":{},"body":{"license.html":{}}}],["blank",{"_index":2794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["block",{"_index":1135,"title":{},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["blocked",{"_index":474,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["blocking",{"_index":1107,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["blockwindow",{"_index":1072,"title":{},"body":{"components/LogoutComponent.html":{}}}],["body",{"_index":2155,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":252,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["boolean(val",{"_index":825,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["both",{"_index":953,"title":{},"body":{"components/FooterComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["box",{"_index":2633,"title":{},"body":{"license.html":{}}}],["brainfry",{"_index":543,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/HeaderComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["branch",{"_index":1263,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["brands",{"_index":1951,"title":{},"body":{"dependencies.html":{}}}],["break",{"_index":1819,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["brew",{"_index":1975,"title":{},"body":{"index.html":{}}}],["browser",{"_index":226,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"components/AuthErrorMessagesComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"dependencies.html":{}}}],["browser/meta",{"_index":1128,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["bugs",{"_index":2657,"title":{},"body":{"properties.html":{}}}],["build",{"_index":237,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{}}}],["building",{"_index":1419,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["business",{"_index":1730,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["button",{"_index":946,"title":{},"body":{"components/DeleteAccountComponent.html":{},"components/PhotoUploadComponent.html":{}}}],["c",{"_index":1993,"title":{},"body":{"license.html":{}}}],["caches",{"_index":2821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["called",{"_index":371,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":1470,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["campaigns",{"_index":1495,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["canactivatechildfn",{"_index":2737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancel",{"_index":949,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["cancelled",{"_index":412,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["care",{"_index":781,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["carry",{"_index":2267,"title":{},"body":{"license.html":{}}}],["case",{"_index":285,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{}}}],["cases",{"_index":96,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"license.html":{}}}],["catch",{"_index":357,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{}}}],["catchall",{"_index":1091,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["catcherror",{"_index":257,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["catcherror((problem",{"_index":312,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["catches",{"_index":1867,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["caught",{"_index":2787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cause",{"_index":2292,"title":{},"body":{"license.html":{}}}],["cease",{"_index":2433,"title":{},"body":{"license.html":{}}}],["centers",{"_index":529,"title":{},"body":{"components/CentralLayoutComponent.html":{}}}],["central",{"_index":149,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["central.component.html",{"_index":538,"title":{},"body":{"components/CentralLayoutComponent.html":{}}}],["central.component.scss",{"_index":540,"title":{},"body":{"components/CentralLayoutComponent.html":{}}}],["centrallayoutcomponent",{"_index":148,"title":{"components/CentralLayoutComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["certain",{"_index":1449,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["cessation",{"_index":2444,"title":{},"body":{"license.html":{}}}],["change",{"_index":152,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["changed",{"_index":2050,"title":{},"body":{"license.html":{}}}],["changedetection",{"_index":34,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["changedetectionstrategy",{"_index":20,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["changedetectionstrategy.onpush",{"_index":35,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["changeemailcomponent",{"_index":151,"title":{"components/ChangeEmailComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["changeemailform",{"_index":559,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["changeemailformgroup",{"_index":579,"title":{},"body":{"components/ChangeEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["changepasswordcomponent",{"_index":154,"title":{"components/ChangePasswordComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["changepasswordform",{"_index":697,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["changepasswordformgroup",{"_index":712,"title":{},"body":{"components/ChangePasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["changes",{"_index":1598,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{}}}],["changing",{"_index":2003,"title":{},"body":{"license.html":{}}}],["characterized",{"_index":2369,"title":{},"body":{"license.html":{}}}],["characters",{"_index":514,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["charge",{"_index":2022,"title":{},"body":{"license.html":{}}}],["check",{"_index":318,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["checkactioncode",{"_index":254,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["checkactioncode(this._auth",{"_index":327,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["checker",{"_index":1164,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["checking",{"_index":2790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checks",{"_index":828,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["child",{"_index":1593,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["children’s",{"_index":1584,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["childroute",{"_index":2805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["childroute.queryparammap.get('next",{"_index":2808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["choose",{"_index":2565,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":2568,"title":{},"body":{"license.html":{}}}],["circumstances",{"_index":2219,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":2224,"title":{},"body":{"license.html":{}}}],["civil",{"_index":2604,"title":{},"body":{"license.html":{}}}],["claim",{"_index":2486,"title":{},"body":{"license.html":{}}}],["claims",{"_index":2497,"title":{},"body":{"license.html":{}}}],["clarifies",{"_index":1697,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["class",{"_index":41,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["clean",{"_index":2824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clear",{"_index":649,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PhotoUploadComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["clearly",{"_index":2046,"title":{},"body":{"license.html":{}}}],["cli",{"_index":1982,"title":{},"body":{"index.html":{}}}],["click",{"_index":674,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/HeaderComponent.html":{},"components/LogoutComponent.html":{}}}],["click(event",{"_index":1007,"title":{},"body":{"components/HeaderComponent.html":{}}}],["clicking",{"_index":945,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["clicks",{"_index":1010,"title":{},"body":{"components/HeaderComponent.html":{}}}],["close",{"_index":1009,"title":{},"body":{"components/HeaderComponent.html":{}}}],["closed",{"_index":477,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["closedialog",{"_index":900,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["closely",{"_index":2601,"title":{},"body":{"license.html":{}}}],["closes",{"_index":929,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["code",{"_index":264,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["code.ts",{"_index":1904,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["code][subscriber",{"_index":443,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["codes",{"_index":450,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["collect",{"_index":1444,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["collected",{"_index":1415,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["collection",{"_index":1446,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["collisions",{"_index":1355,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["combination",{"_index":668,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"license.html":{}}}],["combine",{"_index":800,"title":{},"body":{"interfaces/CombinedObs.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["combined",{"_index":2285,"title":{},"body":{"license.html":{}}}],["combinedlatest",{"_index":755,"title":{},"body":{"interfaces/CombinedObs.html":{}}}],["combinedobs",{"_index":752,"title":{"interfaces/CombinedObs.html":{}},"body":{"interfaces/CombinedObs.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["combinelatest",{"_index":770,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["comes",{"_index":2272,"title":{},"body":{"license.html":{}}}],["commands",{"_index":2146,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1728,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["commercially",{"_index":1578,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["commitment",{"_index":2509,"title":{},"body":{"license.html":{}}}],["common",{"_index":2352,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["communicate",{"_index":1512,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["communication",{"_index":1472,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["communications",{"_index":1480,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["compilation",{"_index":2280,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":2288,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":2537,"title":{},"body":{"license.html":{}}}],["compiler",{"_index":2178,"title":{},"body":{"license.html":{}}}],["complete",{"_index":456,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/SpinnerComponent.html":{},"injectables/UserPhotosService.html":{}}}],["complexity",{"_index":872,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["compliance",{"_index":2468,"title":{},"body":{"license.html":{}}}],["complicated",{"_index":1197,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["comply",{"_index":1518,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["complying",{"_index":1421,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["component",{"_index":21,"title":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"license.html":{}}}],["component_template",{"_index":139,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["components",{"_index":121,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"overview.html":{}}}],["compromise",{"_index":287,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["compromised",{"_index":309,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["computed",{"_index":22,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"miscellaneous/variables.html":{}}}],["computer",{"_index":2123,"title":{},"body":{"license.html":{}}}],["computers",{"_index":1540,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["concerning",{"_index":2555,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":2559,"title":{},"body":{"license.html":{}}}],["conditioned",{"_index":2533,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":970,"title":{},"body":{"components/FooterComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["conditions'},{'name",{"_index":193,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["conditions.component.html",{"_index":1707,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["conditions.component.ts",{"_index":1688,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"coverage.html":{}}}],["conditions/terms",{"_index":1687,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"coverage.html":{}}}],["configured",{"_index":1093,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["confirm",{"_index":157,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["confirmed",{"_index":1179,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["confirmemailcomponent",{"_index":156,"title":{"components/ConfirmEmailComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["confirmmatch",{"_index":604,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmmatch('email1",{"_index":626,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["confirmmatch('password1",{"_index":734,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["confirmmatchformerrors",{"_index":605,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmmatchformerrors(this.changeemailform",{"_index":628,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["confirmmatchformerrors(this.changepasswordform",{"_index":736,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["confirmmatchformerrors(this.resetpasswordform",{"_index":1639,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["confirmpasswordreset",{"_index":1154,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["confirmpasswordreset(this._auth",{"_index":1214,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["confirmresult",{"_index":1161,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["conflicting",{"_index":414,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["connection",{"_index":469,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["consent",{"_index":1513,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["consequence",{"_index":2457,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":2585,"title":{},"body":{"license.html":{}}}],["consider",{"_index":2640,"title":{},"body":{"license.html":{}}}],["considered",{"_index":2417,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":2503,"title":{},"body":{"license.html":{}}}],["console.error('missing",{"_index":103,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["console.error('recoveremailcomponent",{"_index":314,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["console.error('recoveremailcomponent#_sendpasswordresetemail",{"_index":359,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["console.error('unknown",{"_index":2785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.error(`unknown",{"_index":102,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["console.error(settledmetadata.reason",{"_index":1324,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["console.error(settledurl.reason",{"_index":1322,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["conspicuously",{"_index":2254,"title":{},"body":{"license.html":{}}}],["const",{"_index":83,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["constantly",{"_index":2083,"title":{},"body":{"license.html":{}}}],["constants",{"_index":774,"title":{},"body":{"interfaces/CombinedObs.html":{}}}],["constitutes",{"_index":2205,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":50,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["construed",{"_index":2542,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":2340,"title":{},"body":{"license.html":{}}}],["contact",{"_index":1148,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["contain",{"_index":2538,"title":{},"body":{"license.html":{}}}],["containing",{"_index":1681,"title":{},"body":{"components/StandardLayoutComponent.html":{},"license.html":{}}}],["contains",{"_index":667,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/DeleteAccountComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["content",{"_index":229,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"components/CentralLayoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["contents",{"_index":2507,"title":{},"body":{"license.html":{}}}],["context",{"_index":2172,"title":{},"body":{"license.html":{}}}],["continue",{"_index":423,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/RecoverEmailComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["continued",{"_index":2364,"title":{},"body":{"license.html":{}}}],["continueurl",{"_index":12,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["contract",{"_index":1702,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["contracted",{"_index":1483,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["contractual",{"_index":2414,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":2547,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":2011,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":2494,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":2496,"title":{},"body":{"license.html":{}}}],["control",{"_index":616,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["control.addasyncvalidators(passwordfirebasevalidator",{"_index":883,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["control.addvalidators(passwordstrengthvalidator",{"_index":882,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["control.dirty",{"_index":839,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["control.errors",{"_index":793,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["control.events.pipe",{"_index":786,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["control.invalid",{"_index":840,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["control.statuschanges.pipe",{"_index":795,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["control.touched",{"_index":841,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["control1",{"_index":2746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control1.valid",{"_index":2760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control1.value",{"_index":2752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control2",{"_index":2748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control2.valid",{"_index":2761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control2.value",{"_index":2753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controldirty",{"_index":785,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["controlerrors",{"_index":802,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["controlerrorssignal",{"_index":780,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlStruct.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlerrorssignal(control",{"_index":865,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["controlerrorssignal(this.namecntrl",{"_index":1799,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["controlerrorssignal(this.photourlcntrl",{"_index":1805,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["controlevent",{"_index":768,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["controlevents",{"_index":844,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["controlinvalidsignal",{"_index":837,"title":{},"body":{"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlinvalidsignal(control",{"_index":864,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["controlinvalidsignal(this.namecntrl",{"_index":1801,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["controlinvalidsignal(this.photourlcntrl",{"_index":1807,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["controlled",{"_index":1601,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["controlproperties",{"_index":815,"title":{"interfaces/ControlProperties.html":{}},"body":{"interfaces/ControlProperties.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controls",{"_index":782,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["controlstatus",{"_index":794,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["controlstruct",{"_index":850,"title":{"interfaces/ControlStruct.html":{}},"body":{"interfaces/ControlStruct.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["convenient",{"_index":2140,"title":{},"body":{"license.html":{}}}],["convey",{"_index":2130,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":2526,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":2370,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":2136,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":2413,"title":{},"body":{"license.html":{}}}],["cookies",{"_index":521,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["copies",{"_index":2001,"title":{},"body":{"license.html":{}}}],["copy",{"_index":966,"title":{},"body":{"components/FooterComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["copying",{"_index":2096,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":2005,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":958,"title":{},"body":{"components/FooterComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["copyrightable",{"_index":2103,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":2217,"title":{},"body":{"license.html":{}}}],["correction",{"_index":2581,"title":{},"body":{"license.html":{}}}],["correspond",{"_index":509,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["corresponding",{"_index":447,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["cost",{"_index":2312,"title":{},"body":{"license.html":{}}}],["counterclaim",{"_index":2487,"title":{},"body":{"license.html":{}}}],["countries",{"_index":2127,"title":{},"body":{"license.html":{}}}],["country",{"_index":442,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["course",{"_index":2631,"title":{},"body":{"license.html":{}}}],["court",{"_index":2546,"title":{},"body":{"license.html":{}}}],["courts",{"_index":2600,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":2511,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":1872,"title":{"coverage.html":{}},"body":{"coverage.html":{},"license.html":{}}}],["covered",{"_index":2116,"title":{},"body":{"license.html":{}}}],["crawlers",{"_index":1122,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["create",{"_index":418,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":1132,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["createemailcontrol",{"_index":599,"title":{},"body":{"components/ChangeEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createpasswordcontrol",{"_index":600,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createpasswordcontrol(true",{"_index":728,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["creates",{"_index":274,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":2651,"title":{},"body":{"properties.html":{}}}],["credential",{"_index":388,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["credentials",{"_index":461,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["criterion",{"_index":2150,"title":{},"body":{"license.html":{}}}],["cross",{"_index":2485,"title":{},"body":{"license.html":{}}}],["css/blocks",{"_index":1668,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["cure",{"_index":2447,"title":{},"body":{"license.html":{}}}],["current",{"_index":662,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlProperties.html":{},"components/PhotoUploadComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["currentpw",{"_index":733,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["currentpwcntrl",{"_index":698,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["currentpwcntrlerrors",{"_index":689,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["currentpwcntrlinvalid",{"_index":690,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["custom",{"_index":1779,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["customarily",{"_index":2304,"title":{},"body":{"license.html":{}}}],["customer",{"_index":2309,"title":{},"body":{"license.html":{}}}],["d",{"_index":2279,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1740,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["danger",{"_index":2089,"title":{},"body":{"license.html":{}}}],["dare",{"_index":1729,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["dashboard",{"_index":885,"title":{},"body":{"components/DashboardComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["dashboard'},{'name",{"_index":159,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["dashboard.component.html",{"_index":886,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":887,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard@if",{"_index":1086,"title":{},"body":{"components/LogoutComponent.html":{}}}],["dashboardcomponent",{"_index":158,"title":{"components/DashboardComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["data",{"_index":522,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["date",{"_index":964,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["date(a.metadata.updated",{"_index":1333,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["date(b.metadata.updated",{"_index":1332,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["datepipe",{"_index":960,"title":{},"body":{"components/FooterComponent.html":{}}}],["days",{"_index":2443,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":771,"title":{},"body":{"interfaces/CombinedObs.html":{}}}],["debouncetime(forms.inputdebounce",{"_index":798,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["december",{"_index":2235,"title":{},"body":{"license.html":{}}}],["decide",{"_index":115,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/LoginComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["decimal",{"_index":1253,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["decisions",{"_index":1435,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["declining",{"_index":2407,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":1012,"title":{},"body":{"components/HeaderComponent.html":{}}}],["deemed",{"_index":2226,"title":{},"body":{"license.html":{}}}],["default",{"_index":112,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["defaultproperties",{"_index":838,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["defective",{"_index":2577,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":2544,"title":{},"body":{"license.html":{}}}],["defined",{"_index":126,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"components/RecoverEmailComponent.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"injectables/VerifyEmailService.html":{},"license.html":{}}}],["definition",{"_index":2185,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":2099,"title":{},"body":{"license.html":{}}}],["delay",{"_index":289,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"miscellaneous/variables.html":{}}}],["delaywhen",{"_index":258,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["delaywhen((result",{"_index":304,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["delete",{"_index":161,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["deleteaccountcomponent",{"_index":160,"title":{"components/DeleteAccountComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["deleteaccountform",{"_index":899,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["deleteaccountformgroup",{"_index":914,"title":{},"body":{"components/DeleteAccountComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["deleteacount",{"_index":901,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["deleteacount(user",{"_index":905,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["deleted",{"_index":505,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["deleteuser",{"_index":922,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["deleteuser(credentials.user",{"_index":935,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["deleting",{"_index":937,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["deletion",{"_index":944,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["demonstration",{"_index":1709,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["denied",{"_index":2374,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":2510,"title":{},"body":{"license.html":{}}}],["deny",{"_index":2055,"title":{},"body":{"license.html":{}}}],["denying",{"_index":2028,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":1941,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["deprive",{"_index":2516,"title":{},"body":{"license.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/CentralLayoutComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"properties.html":{}}}],["descriptions",{"_index":1511,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["design",{"_index":1189,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/StandardLayoutComponent.html":{},"interfaces/VerifiedFailed.html":{}}}],["designated",{"_index":1713,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["designed",{"_index":1337,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["destination",{"_index":117,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/LoginComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["destructuring",{"_index":1167,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["detail",{"_index":2558,"title":{},"body":{"license.html":{}}}],["details",{"_index":1745,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["details.the",{"_index":2629,"title":{},"body":{"license.html":{}}}],["determine",{"_index":816,"title":{},"body":{"interfaces/ControlProperties.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["determining",{"_index":1492,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["develop",{"_index":2608,"title":{},"body":{"license.html":{}}}],["developer",{"_index":1967,"title":{},"body":{"index.html":{}}}],["developers",{"_index":2039,"title":{},"body":{"license.html":{}}}],["development",{"_index":2087,"title":{},"body":{"license.html":{}}}],["device",{"_index":495,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["devices",{"_index":2054,"title":{},"body":{"license.html":{}}}],["dhould",{"_index":532,"title":{},"body":{"components/CentralLayoutComponent.html":{}}}],["dialog",{"_index":928,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["dialogel",{"_index":925,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["dialogel.nativeelement.close",{"_index":927,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["dialogel.nativeelement.showmodal",{"_index":936,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["dialogref",{"_index":923,"title":{},"body":{"components/DeleteAccountComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["differ",{"_index":1546,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["different",{"_index":390,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/ControlProperties.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["differently",{"_index":2396,"title":{},"body":{"license.html":{}}}],["direction",{"_index":2216,"title":{},"body":{"license.html":{}}}],["directions",{"_index":2324,"title":{},"body":{"license.html":{}}}],["directive",{"_index":137,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["directives",{"_index":198,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["directly",{"_index":2120,"title":{},"body":{"license.html":{}}}],["directory",{"_index":1243,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["dirty",{"_index":760,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["disable",{"_index":70,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlStruct.html":{},"components/PageNotFoundComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":506,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["disclaim",{"_index":2246,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":2569,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":2395,"title":{},"body":{"license.html":{}}}],["disclose",{"_index":1514,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["disclosing",{"_index":1424,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["discriminatory",{"_index":2530,"title":{},"body":{"license.html":{}}}],["display",{"_index":1399,"title":{},"body":{"components/PhotoUploadComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["displayed",{"_index":2401,"title":{},"body":{"license.html":{}}}],["displaying",{"_index":784,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["displayname",{"_index":1776,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["displays",{"_index":957,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["disputes",{"_index":1523,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["distinctuntilchanged",{"_index":820,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["distinguishing",{"_index":2560,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":1724,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["distributed",{"_index":1508,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["distributing",{"_index":2534,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1726,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["doc",{"_index":1988,"title":{},"body":{"index.html":{}}}],["document",{"_index":2002,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":1873,"title":{},"body":{"coverage.html":{}}}],["documented",{"_index":2381,"title":{},"body":{"license.html":{}}}],["doesn't",{"_index":368,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["dom",{"_index":122,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["domains",{"_index":2075,"title":{},"body":{"license.html":{}}}],["doubtful",{"_index":2348,"title":{},"body":{"license.html":{}}}],["download",{"_index":1305,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["downstream",{"_index":2465,"title":{},"body":{"license.html":{}}}],["dprint",{"_index":1976,"title":{},"body":{"index.html":{}}}],["due",{"_index":413,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["durable",{"_index":2303,"title":{},"body":{"license.html":{}}}],["during",{"_index":831,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["dwelling",{"_index":2347,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":1947,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":2186,"title":{},"body":{"license.html":{}}}],["e",{"_index":2330,"title":{},"body":{"license.html":{}}}],["e.164",{"_index":439,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["each",{"_index":853,"title":{},"body":{"interfaces/ControlStruct.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["earlier",{"_index":2115,"title":{},"body":{"license.html":{}}}],["easier",{"_index":1865,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["effect",{"_index":23,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"license.html":{}}}],["effect(async",{"_index":81,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["effected",{"_index":2244,"title":{},"body":{"license.html":{}}}],["effective",{"_index":1606,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["effectively",{"_index":2091,"title":{},"body":{"license.html":{}}}],["effectiveness",{"_index":1493,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["efforts",{"_index":2479,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1474,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["element",{"_index":136,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["elementref",{"_index":921,"title":{},"body":{"components/DeleteAccountComponent.html":{},"components/PhotoUploadComponent.html":{},"miscellaneous/typealiases.html":{}}}],["email",{"_index":60,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["email'},{'name",{"_index":153,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["email.component.html",{"_index":550,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/RecoverEmailComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["email.component.ts",{"_index":547,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/RecoverEmailComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["email.component.ts:25",{"_index":1612,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["email.component.ts:27",{"_index":1611,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["email.component.ts:28",{"_index":1610,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["email.component.ts:29",{"_index":1853,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:30",{"_index":1852,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:31",{"_index":811,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:32",{"_index":812,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:33",{"_index":809,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:43",{"_index":569,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:44",{"_index":570,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:45",{"_index":571,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:46",{"_index":572,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:47",{"_index":574,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:48",{"_index":575,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:49",{"_index":576,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:50",{"_index":577,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:51",{"_index":578,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:52",{"_index":580,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:53",{"_index":582,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:54",{"_index":583,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:55",{"_index":586,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:56",{"_index":588,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:57",{"_index":589,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:58",{"_index":566,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:83",{"_index":568,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.service",{"_index":1615,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["email.service.ts",{"_index":249,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["email.service.ts:22",{"_index":1871,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["email.service.ts:28",{"_index":1870,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["email.service.ts:33",{"_index":1631,"title":{},"body":{"injectables/RecoverEmailService.html":{}}}],["email.service.ts:42",{"_index":1630,"title":{},"body":{"injectables/RecoverEmailService.html":{}}}],["email.service.ts:70",{"_index":1628,"title":{},"body":{"injectables/RecoverEmailService.html":{}}}],["email.service.ts:91",{"_index":1629,"title":{},"body":{"injectables/RecoverEmailService.html":{}}}],["email/change",{"_index":546,"title":{},"body":{"components/ChangeEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["email/confirm",{"_index":807,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["email/recover",{"_index":248,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["email/verify",{"_index":1850,"title":{},"body":{"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"coverage.html":{}}}],["email1",{"_index":625,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["email1cntrl",{"_index":560,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email1cntrl.value",{"_index":675,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email1cntrlerrors",{"_index":551,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email1cntrlinvalid",{"_index":552,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email2",{"_index":608,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email2cntrl",{"_index":561,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email2cntrlerrors",{"_index":553,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email2cntrlinvalid",{"_index":554,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email?next=${url",{"_index":2769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emailauthprovider",{"_index":591,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["emailauthprovider.credential(user.email",{"_index":653,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["emailcntrl",{"_index":975,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["emailcntrlerrors",{"_index":973,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["emailcntrlinvalid",{"_index":974,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["emailcreds",{"_index":652,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["emails",{"_index":665,"title":{},"body":{"components/ChangeEmailComponent.html":{},"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["emailverifiedguard",{"_index":1887,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["embodied",{"_index":2298,"title":{},"body":{"license.html":{}}}],["emit",{"_index":792,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/variables.html":{}}}],["emits",{"_index":778,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoUploadComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/variables.html":{}}}],["emitted",{"_index":801,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["emitting",{"_index":1262,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["employer",{"_index":2634,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1823,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["enable",{"_index":2170,"title":{},"body":{"license.html":{}}}],["enabled",{"_index":2721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enables",{"_index":2132,"title":{},"body":{"license.html":{}}}],["end",{"_index":2607,"title":{},"body":{"license.html":{}}}],["endwith",{"_index":1234,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["endwith(undefined",{"_index":1283,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["enforce",{"_index":1524,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["enforces",{"_index":2826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enforcing",{"_index":2249,"title":{},"body":{"license.html":{}}}],["engage",{"_index":1699,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["ensure",{"_index":1551,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["ensures",{"_index":832,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["entails",{"_index":1722,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["enter",{"_index":437,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["entered",{"_index":2539,"title":{},"body":{"license.html":{}}}],["entire",{"_index":2271,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":2553,"title":{},"body":{"license.html":{}}}],["entity",{"_index":2469,"title":{},"body":{"license.html":{}}}],["entry",{"_index":1780,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["environmentproviders",{"_index":2830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["equivalent",{"_index":1473,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["err",{"_index":358,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["err.code",{"_index":2783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err.message",{"_index":2784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erroneously",{"_index":2053,"title":{},"body":{"license.html":{}}}],["error",{"_index":146,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["error('invalid",{"_index":645,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["error('oobcode",{"_index":341,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["error(`cannot",{"_index":2750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.signal.ts",{"_index":1927,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error_name",{"_index":1925,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorcode",{"_index":266,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{}}}],["errors",{"_index":613,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errors['email",{"_index":664,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["errors['firebasevalidator",{"_index":748,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors['maxlength",{"_index":673,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors['minlength",{"_index":666,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors['passwordstrength",{"_index":744,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors['pattern",{"_index":1834,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["errors['required",{"_index":663,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["errors[\\'email",{"_index":683,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["errors[\\'firebasevalidator",{"_index":751,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors[\\'maxlength",{"_index":685,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors[\\'minlength",{"_index":684,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors[\\'passwordstrength",{"_index":750,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors[\\'pattern",{"_index":1848,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["errors[\\'required",{"_index":682,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["errors[error_name",{"_index":2765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eslint",{"_index":69,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlStruct.html":{},"components/PageNotFoundComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["eslint/no",{"_index":74,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["essential",{"_index":2173,"title":{},"body":{"license.html":{}}}],["essentially",{"_index":1429,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{}}}],["establish",{"_index":476,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["establishes",{"_index":1689,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["evaluate",{"_index":1496,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["even",{"_index":2594,"title":{},"body":{"license.html":{}}}],["event",{"_index":788,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"components/HeaderComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/RecoverEmailComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["event.preventdefault",{"_index":931,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["event.pristine",{"_index":791,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["event.status",{"_index":846,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["event.stoppropagation",{"_index":932,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["event.touched",{"_index":845,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["eventcoalescing",{"_index":2696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["everyone",{"_index":1998,"title":{},"body":{"license.html":{}}}],["exact",{"_index":2113,"title":{},"body":{"license.html":{}}}],["example",{"_index":1520,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["exceeded",{"_index":480,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["except",{"_index":334,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{}}}],["exceptions",{"_index":2386,"title":{},"body":{"license.html":{}}}],["excluded",{"_index":2338,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":2543,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":2617,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":2504,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":2211,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":2548,"title":{},"body":{"license.html":{}}}],["executable",{"_index":2164,"title":{},"body":{"license.html":{}}}],["execute",{"_index":2362,"title":{},"body":{"license.html":{}}}],["executing",{"_index":1120,"title":{},"body":{"components/PageNotFoundComponent.html":{},"license.html":{}}}],["exercise",{"_index":2480,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":2245,"title":{},"body":{"license.html":{}}}],["existing",{"_index":650,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["exists",{"_index":459,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["expanded",{"_index":1016,"title":{},"body":{"components/HeaderComponent.html":{}}}],["expectations",{"_index":1698,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["expected",{"_index":642,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["expecting",{"_index":2799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expects",{"_index":2354,"title":{},"body":{"license.html":{}}}],["experience",{"_index":1499,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["expired",{"_index":377,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["explains",{"_index":2047,"title":{},"body":{"license.html":{}}}],["explicitly",{"_index":2200,"title":{},"body":{"license.html":{}}}],["export",{"_index":33,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{}}}],["express",{"_index":1716,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["expressed",{"_index":2571,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":2428,"title":{},"body":{"license.html":{}}}],["extend",{"_index":2078,"title":{},"body":{"license.html":{}}}],["extended",{"_index":2529,"title":{},"body":{"license.html":{}}}],["extends",{"_index":210,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["extension",{"_index":1836,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["extensions",{"_index":2284,"title":{},"body":{"license.html":{}}}],["extent",{"_index":1517,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["extra",{"_index":876,"title":{},"body":{"interfaces/ControlStruct.html":{}}}],["extract",{"_index":2798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extracting",{"_index":2791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extras",{"_index":2804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f",{"_index":2411,"title":{},"body":{"license.html":{}}}],["fabars",{"_index":1001,"title":{},"body":{"components/HeaderComponent.html":{}}}],["facilities",{"_index":2212,"title":{},"body":{"license.html":{}}}],["factor",{"_index":405,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["factory",{"_index":2846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["faiconcomponent",{"_index":997,"title":{},"body":{"components/HeaderComponent.html":{}}}],["fail",{"_index":97,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["failed",{"_index":448,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["fails",{"_index":352,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/ControlProperties.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["failure",{"_index":1166,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{}}}],["fair",{"_index":2207,"title":{},"body":{"license.html":{}}}],["false",{"_index":317,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/ControlStruct.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["falsy",{"_index":324,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{}}}],["family",{"_index":2343,"title":{},"body":{"license.html":{}}}],["fashion",{"_index":2110,"title":{},"body":{"license.html":{}}}],["favor",{"_index":2350,"title":{},"body":{"license.html":{}}}],["fax",{"_index":1002,"title":{},"body":{"components/HeaderComponent.html":{}}}],["feature",{"_index":2143,"title":{},"body":{"license.html":{}}}],["features",{"_index":1658,"title":{},"body":{"components/SidebarComponent.html":{}}}],["fee",{"_index":2035,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":1285,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["few",{"_index":679,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["fewer",{"_index":1387,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["field",{"_index":879,"title":{},"body":{"interfaces/ControlStruct.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["fields",{"_index":873,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"license.html":{}}}],["file#result",{"_index":2780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file(s",{"_index":1390,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["file.name",{"_index":1359,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["filecount",{"_index":1376,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["fileinpt",{"_index":1405,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["fileinputref",{"_index":1402,"title":{},"body":{"components/PhotoUploadComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["filelist",{"_index":1344,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["filename",{"_index":1353,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["files",{"_index":1246,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":772,"title":{},"body":{"interfaces/CombinedObs.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["filter((event",{"_index":787,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["filter((user",{"_index":1811,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["final",{"_index":1081,"title":{},"body":{"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{}}}],["finalize",{"_index":1235,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["finalizing",{"_index":478,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["finally",{"_index":2081,"title":{},"body":{"license.html":{}}}],["find",{"_index":2326,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["firebase",{"_index":302,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["firebaseapp",{"_index":2832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebaseerror",{"_index":2782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebaseperformance",{"_index":2716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebasestorage",{"_index":2726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebasevalidator",{"_index":2818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firestore",{"_index":2710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":878,"title":{},"body":{"interfaces/ControlStruct.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/StandardLayoutComponent.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["fitness",{"_index":2573,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":2302,"title":{},"body":{"license.html":{}}}],["flag",{"_index":322,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["flags",{"_index":826,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":2191,"title":{},"body":{"license.html":{}}}],["focused",{"_index":830,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["folder",{"_index":678,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["folders",{"_index":1308,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["follow",{"_index":2098,"title":{},"body":{"license.html":{}}}],["followed",{"_index":1177,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["following",{"_index":1461,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["fontawesome",{"_index":1027,"title":{},"body":{"components/HeaderComponent.html":{},"dependencies.html":{}}}],["footer",{"_index":952,"title":{},"body":{"components/FooterComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["footer'},{'name",{"_index":164,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["footer.component.html",{"_index":961,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":962,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":542,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["footercomponent",{"_index":163,"title":{"components/FooterComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["forbid",{"_index":2243,"title":{},"body":{"license.html":{}}}],["force",{"_index":2208,"title":{},"body":{"license.html":{}}}],["forgot",{"_index":166,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["forgotform",{"_index":976,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotformgroup",{"_index":983,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["forgotpasswordcomponent",{"_index":165,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["form",{"_index":646,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["form.errors?.[error_name",{"_index":2762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["form.invalid",{"_index":2759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["form.statuschanges.pipe",{"_index":2764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format",{"_index":436,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["formatted",{"_index":426,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["formcontrol",{"_index":581,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["formcontrol(null",{"_index":867,"title":{},"body":{"interfaces/ControlStruct.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["formcontrolstatus",{"_index":769,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["formemailsinvalid",{"_index":555,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["formgroup",{"_index":594,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["formgrp",{"_index":2743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formgrp.get(password1",{"_index":2747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formgrp.get(password2",{"_index":2749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formpasswordsinvalid",{"_index":691,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["forms",{"_index":603,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["forms.ts",{"_index":852,"title":{},"body":{"interfaces/ControlStruct.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formstatus",{"_index":2763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fortawesome/angular",{"_index":1026,"title":{},"body":{"components/HeaderComponent.html":{},"dependencies.html":{}}}],["fortawesome/free",{"_index":1028,"title":{},"body":{"components/HeaderComponent.html":{},"dependencies.html":{}}}],["found",{"_index":342,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"license.html":{}}}],["found'},{'name",{"_index":175,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["found.component.html",{"_index":1098,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":1099,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1089,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["found.component.ts:28",{"_index":1124,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:30",{"_index":1130,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:36",{"_index":1104,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:46",{"_index":1111,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":1088,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["foundation",{"_index":1995,"title":{},"body":{"license.html":{}}}],["free",{"_index":1994,"title":{},"body":{"license.html":{}}}],["freedom",{"_index":2010,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":2038,"title":{},"body":{"license.html":{}}}],["from(promise",{"_index":1207,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["fulfilling",{"_index":2229,"title":{},"body":{"license.html":{}}}],["full",{"_index":1675,"title":{},"body":{"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["fullmetadata",{"_index":1222,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["function",{"_index":2788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["functionalities",{"_index":1465,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["functionality",{"_index":1533,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["functioning",{"_index":2365,"title":{},"body":{"license.html":{}}}],["functions",{"_index":2713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fundamentally",{"_index":2060,"title":{},"body":{"license.html":{}}}],["further",{"_index":2321,"title":{},"body":{"license.html":{}}}],["future",{"_index":80,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"license.html":{}}}],["game",{"_index":1143,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["gant",{"_index":2664,"title":{},"body":{"properties.html":{}}}],["gathered",{"_index":1432,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gcp",{"_index":1971,"title":{},"body":{"index.html":{}}}],["general",{"_index":1974,"title":{},"body":{"index.html":{},"license.html":{}}}],["generally",{"_index":1528,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["generate",{"_index":854,"title":{},"body":{"interfaces/ControlStruct.html":{},"license.html":{}}}],["getanalytics",{"_index":2701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getauth",{"_index":2698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcontrolstructure",{"_index":863,"title":{},"body":{"interfaces/ControlStruct.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getcontrolstructure(control",{"_index":870,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["getdownloadurl",{"_index":1223,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["getdownloadurl(item",{"_index":1314,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["geterrorcode",{"_index":263,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["geterrorcode(err",{"_index":657,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{}}}],["geterrorcode(problem",{"_index":316,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["getfirestore",{"_index":2711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getfunctions",{"_index":2714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getmetadata",{"_index":1224,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["getmetadata(item",{"_index":1315,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["getpasswordcontrolvalue",{"_index":1931,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getpasswordcontrolvalue(control",{"_index":2811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getperformance",{"_index":2717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getprofilephotos",{"_index":1268,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["getprofilephotos(uid",{"_index":1292,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["gets",{"_index":238,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["getstate",{"_index":1613,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getstate(this._router.getcurrentnavigation",{"_index":1618,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["getstorage",{"_index":2727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":1964,"title":{"index.html":{},"license.html":{}},"body":{}}],["getvertexai",{"_index":2730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gif",{"_index":1842,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["git",{"_index":1977,"title":{},"body":{"index.html":{}}}],["git+https://github.com/rgant/brainfry.git",{"_index":2661,"title":{},"body":{"properties.html":{}}}],["give",{"_index":307,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{}}}],["given",{"_index":2204,"title":{},"body":{"license.html":{}}}],["gives",{"_index":1558,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["giving",{"_index":2043,"title":{},"body":{"license.html":{}}}],["global",{"_index":951,"title":{},"body":{"components/FooterComponent.html":{},"components/PhotoUploadComponent.html":{},"index.html":{}}}],["glyphs",{"_index":2773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gnu",{"_index":1989,"title":{},"body":{"license.html":{}}}],["go",{"_index":1084,"title":{},"body":{"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["going",{"_index":1340,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["governed",{"_index":2388,"title":{},"body":{"license.html":{}}}],["governmental",{"_index":1543,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gpl",{"_index":2040,"title":{},"body":{"license.html":{}}}],["gplv3",{"_index":1736,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["grant",{"_index":500,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["granted",{"_index":1710,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["grants",{"_index":2460,"title":{},"body":{"license.html":{}}}],["gratis",{"_index":2034,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":2609,"title":{},"body":{"license.html":{}}}],["guarantee",{"_index":1582,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["guardian",{"_index":1591,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["guards",{"_index":634,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LogoutComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["gui",{"_index":2632,"title":{},"body":{"license.html":{}}}],["handle",{"_index":1080,"title":{},"body":{"components/LogoutComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["handles",{"_index":2789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handling",{"_index":632,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["happen",{"_index":433,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["happier",{"_index":1165,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["having",{"_index":2210,"title":{},"body":{"license.html":{}}}],["head",{"_index":1109,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["header",{"_index":994,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidebarComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["header'},{'name",{"_index":168,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["header.component.html",{"_index":998,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":999,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":1684,"title":{},"body":{"components/StandardLayoutComponent.html":{}}}],["headercomponent",{"_index":167,"title":{"components/HeaderComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["held",{"_index":1738,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["hello",{"_index":893,"title":{},"body":{"components/DashboardComponent.html":{}}}],["here",{"_index":1083,"title":{},"body":{"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["hereafter",{"_index":2500,"title":{},"body":{"license.html":{}}}],["here’s",{"_index":1720,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["holder",{"_index":2435,"title":{},"body":{"license.html":{}}}],["holders",{"_index":2394,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":2654,"title":{},"body":{"properties.html":{}}}],["hope",{"_index":2619,"title":{},"body":{"license.html":{}}}],["host",{"_index":471,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["hostlistener",{"_index":1025,"title":{},"body":{"components/HeaderComponent.html":{}}}],["hostlistener('click",{"_index":1013,"title":{},"body":{"components/HeaderComponent.html":{}}}],["hostlisteners",{"_index":1005,"title":{},"body":{"components/HeaderComponent.html":{}}}],["hosts",{"_index":2327,"title":{},"body":{"license.html":{}}}],["household",{"_index":2344,"title":{},"body":{"license.html":{}}}],["html",{"_index":135,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{}}}],["htmlanchorelement",{"_index":1033,"title":{},"body":{"components/HeaderComponent.html":{}}}],["htmlmetaelement",{"_index":1129,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["https://angular.dev/api/platform",{"_index":1127,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["https://brainfry",{"_index":2655,"title":{},"body":{"properties.html":{}}}],["https://firebase.google.com/docs/reference/js/auth.actioncodeurl",{"_index":8,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["https://fsf.org",{"_index":1997,"title":{},"body":{"license.html":{}}}],["https://github.com/angular/angularfire/issues/3614",{"_index":2813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/deanilvincent/check",{"_index":2777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/firebaseextended/rxfire/blob/b91f358e2c13c6bf33fb4a540e3963c3902a62b1/storage/index.ts#l115",{"_index":1280,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["https://github.com/n3r4zzurr0/svg",{"_index":1666,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["https://github.com/rgant/brainfry/issues/new",{"_index":2658,"title":{},"body":{"properties.html":{}}}],["https://stackoverflow.com/questions/71047275/setting",{"_index":1824,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["https://www.gnu.org/licenses",{"_index":2637,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses/why",{"_index":2645,"title":{},"body":{"license.html":{}}}],["hypothetical",{"_index":2630,"title":{},"body":{"license.html":{}}}],["icon",{"_index":1019,"title":{},"body":{"components/HeaderComponent.html":{}}}],["icondefinition",{"_index":1022,"title":{},"body":{"components/HeaderComponent.html":{}}}],["icons",{"_index":1031,"title":{},"body":{"components/HeaderComponent.html":{},"dependencies.html":{}}}],["id",{"_index":1384,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["idea",{"_index":1261,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["identifiable",{"_index":1451,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["identifier",{"_index":504,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"coverage.html":{}}}],["identifies",{"_index":1215,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["identify",{"_index":1452,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["identifying",{"_index":1490,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["identity",{"_index":602,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["image",{"_index":1835,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["immediately",{"_index":947,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["implement",{"_index":2171,"title":{},"body":{"license.html":{}}}],["implementation",{"_index":1487,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["implements",{"_index":1095,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["implied",{"_index":1717,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["important",{"_index":1571,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["importing",{"_index":2493,"title":{},"body":{"license.html":{}}}],["imports",{"_index":36,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["impose",{"_index":2416,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":2545,"title":{},"body":{"license.html":{}}}],["improve",{"_index":1497,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inability",{"_index":2587,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":2590,"title":{},"body":{"license.html":{}}}],["inbox",{"_index":676,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["inc",{"_index":1996,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":2584,"title":{},"body":{"license.html":{}}}],["include",{"_index":747,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["included",{"_index":2165,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2126,"title":{},"body":{"license.html":{}}}],["including",{"_index":444,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["inclusion",{"_index":2291,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":2061,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":2638,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":2346,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":429,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["indemnification",{"_index":2412,"title":{},"body":{"license.html":{}}}],["independent",{"_index":2282,"title":{},"body":{"license.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":230,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["indexing",{"_index":1113,"title":{},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":343,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["indicated",{"_index":1594,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["indicates",{"_index":761,"title":{},"body":{"interfaces/CombinedObs.html":{}}}],["indicating",{"_index":2425,"title":{},"body":{"license.html":{}}}],["individual",{"_index":2290,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":2068,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":2356,"title":{},"body":{"license.html":{}}}],["indx",{"_index":1847,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["inflicted",{"_index":1741,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{}}}],["info.data",{"_index":328,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["inform",{"_index":1284,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["information",{"_index":427,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["informative",{"_index":1479,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["informed",{"_index":1434,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["informs",{"_index":1413,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["infrastructure",{"_index":1970,"title":{},"body":{"index.html":{}}}],["infringe",{"_index":2461,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":2490,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":2122,"title":{},"body":{"license.html":{}}}],["initalize",{"_index":1789,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["initial",{"_index":116,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ControlProperties.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["initializeapp",{"_index":2833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initializeappcheck(undefined",{"_index":2707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initialvalue",{"_index":842,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["initiate",{"_index":2483,"title":{},"body":{"license.html":{}}}],["inject",{"_index":24,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{}}}],["inject(auth",{"_index":273,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["inject(meta",{"_index":1123,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["inject(recoveremailservice",{"_index":1617,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["inject(resetpasswordservice",{"_index":1637,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["inject(router",{"_index":68,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(storage",{"_index":1272,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["inject(title",{"_index":233,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["inject(user",{"_index":636,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(user$).pipe",{"_index":1810,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["inject(userphotosservice",{"_index":1393,"title":{},"body":{"components/PhotoUploadComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["inject(verifyemailservice",{"_index":1856,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["injectable",{"_index":204,"title":{"injectables/AppTitleStrategyService.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"injectables/VerifyEmailService.html":{}},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"coverage.html":{}}}],["injectables",{"_index":206,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"injectables/VerifyEmailService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":2845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inner",{"_index":757,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{}}}],["input",{"_index":25,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"interfaces/CombinedObs.html":{},"components/LoginComponent.html":{},"components/PhotoUploadComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["input.required",{"_index":374,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PhotoUploadComponent.html":{}}}],["inputdebounce",{"_index":2771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inputevent/control.valuechange",{"_index":2819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inputs",{"_index":125,"title":{},"body":{"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/PhotoUploadComponent.html":{}}}],["inputsignal",{"_index":27,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/LoginComponent.html":{},"components/PhotoUploadComponent.html":{}}}],["inside",{"_index":2057,"title":{},"body":{"license.html":{}}}],["install",{"_index":1973,"title":{},"body":{"index.html":{},"license.html":{}}}],["installation",{"_index":2358,"title":{},"body":{"license.html":{}}}],["installed",{"_index":2372,"title":{},"body":{"license.html":{}}}],["instance",{"_index":2745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instanceof",{"_index":789,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["instead",{"_index":1356,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["intact",{"_index":2258,"title":{},"body":{"license.html":{}}}],["intended",{"_index":2012,"title":{},"body":{"license.html":{}}}],["intention",{"_index":2247,"title":{},"body":{"license.html":{}}}],["interace",{"_index":1790,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["interact",{"_index":1504,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["interacted",{"_index":836,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["interaction",{"_index":1691,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["interactive",{"_index":2137,"title":{},"body":{"license.html":{}}}],["interchange",{"_index":2305,"title":{},"body":{"license.html":{}}}],["interest",{"_index":2477,"title":{},"body":{"license.html":{}}}],["interests",{"_index":1694,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionCodeState.html":{},"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"interfaces/ViewModel.html":{}},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"license.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionCodeState.html":{},"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"interfaces/ViewModel.html":{},"license.html":{},"overview.html":{}}}],["interfered",{"_index":2366,"title":{},"body":{"license.html":{}}}],["internal",{"_index":1527,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["internet",{"_index":1575,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["interop",{"_index":766,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{}}}],["interpretation",{"_index":2596,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":2180,"title":{},"body":{"license.html":{}}}],["interrupted",{"_index":468,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["intimate",{"_index":2190,"title":{},"body":{"license.html":{}}}],["invalid",{"_index":108,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["invalidate",{"_index":2277,"title":{},"body":{"license.html":{}}}],["irrecoverably",{"_index":948,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["irrevocable",{"_index":2197,"title":{},"body":{"license.html":{}}}],["isdevmode",{"_index":2722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isinvalid",{"_index":822,"title":{},"body":{"interfaces/ControlProperties.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isinvalid(defaultproperties",{"_index":843,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["isinvalid(properties",{"_index":848,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["isn't",{"_index":349,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["isnewpassword",{"_index":874,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":2812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["istokenautorefreshenabled",{"_index":2708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["it's",{"_index":1430,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["item",{"_index":1311,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"license.html":{}}}],["item.url",{"_index":1846,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["itself",{"_index":2375,"title":{},"body":{"license.html":{}}}],["j",{"_index":2662,"title":{},"body":{"properties.html":{}}}],["javascript",{"_index":1119,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["jpeg",{"_index":1837,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["jpg",{"_index":1838,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["json",{"_index":1825,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["june",{"_index":1991,"title":{},"body":{"license.html":{}}}],["jurisdiction",{"_index":1544,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["jurisdictions",{"_index":1428,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["keep",{"_index":2257,"title":{},"body":{"license.html":{}}}],["kernel",{"_index":2174,"title":{},"body":{"license.html":{}}}],["key",{"_index":2382,"title":{},"body":{"license.html":{}}}],["keys",{"_index":2361,"title":{},"body":{"license.html":{}}}],["keystroke",{"_index":2770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":2131,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":2006,"title":{},"body":{"license.html":{}}}],["kn9ts",{"_index":1743,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["know",{"_index":640,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["knowingly",{"_index":1590,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["knowledge",{"_index":2520,"title":{},"body":{"license.html":{}}}],["knows",{"_index":1348,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["lang",{"_index":13,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["language",{"_index":2159,"title":{},"body":{"license.html":{}}}],["larger",{"_index":1679,"title":{},"body":{"components/StandardLayoutComponent.html":{},"license.html":{}}}],["later",{"_index":498,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{},"properties.html":{}}}],["law",{"_index":1427,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["lawful",{"_index":1569,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["laws",{"_index":1422,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["lawsuit",{"_index":2488,"title":{},"body":{"license.html":{}}}],["layout",{"_index":535,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/FooterComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["layout'},{'name",{"_index":150,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["legal",{"_index":956,"title":{},"body":{"components/FooterComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["legally",{"_index":1534,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["legend",{"_index":134,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["length",{"_index":871,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["lesser",{"_index":2643,"title":{},"body":{"license.html":{}}}],["letters",{"_index":671,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["lgpl.html",{"_index":2646,"title":{},"body":{"license.html":{}}}],["liability",{"_index":1696,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["liable",{"_index":1739,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["libraries",{"_index":2163,"title":{},"body":{"license.html":{}}}],["library",{"_index":2339,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":1721,"title":{"license.html":{}},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":2104,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":2105,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":2106,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":2007,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":2464,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":2406,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":2458,"title":{},"body":{"license.html":{}}}],["limit",{"_index":2248,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":2582,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1453,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["limiting",{"_index":1695,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["line",{"_index":72,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ControlStruct.html":{},"components/PageNotFoundComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":661,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/HeaderComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["linked",{"_index":1659,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["linking",{"_index":2641,"title":{},"body":{"license.html":{}}}],["links",{"_index":955,"title":{},"body":{"components/FooterComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["linter",{"_index":367,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["list",{"_index":1017,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["listall",{"_index":1225,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["listall(profilephotosref",{"_index":1301,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["listresult",{"_index":1230,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["litigation",{"_index":2484,"title":{},"body":{"license.html":{}}}],["loading",{"_index":1673,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["local",{"_index":2597,"title":{},"body":{"license.html":{}}}],["located",{"_index":1541,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["log",{"_index":398,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["logged",{"_index":528,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/SidebarComponent.html":{},"components/StandardLayoutComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["login",{"_index":393,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["login'},{'name",{"_index":170,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["login.component.html",{"_index":1043,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":169,"title":{"components/LoginComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":1044,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginformgroup",{"_index":1055,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["logo",{"_index":996,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logout",{"_index":1041,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogoutComponent.html":{}}}],["logout'},{'name",{"_index":172,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["logout.component.html",{"_index":1071,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logoutcomponent",{"_index":171,"title":{"components/LogoutComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["long",{"_index":515,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["longer",{"_index":491,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["loss",{"_index":2588,"title":{},"body":{"license.html":{}}}],["losses",{"_index":2591,"title":{},"body":{"license.html":{}}}],["lost",{"_index":1146,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["lowercase",{"_index":670,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["machete",{"_index":1979,"title":{},"body":{"index.html":{}}}],["machine",{"_index":2295,"title":{},"body":{"license.html":{}}}],["made",{"_index":1734,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["mail",{"_index":2622,"title":{},"body":{"license.html":{}}}],["main",{"_index":1676,"title":{},"body":{"components/StandardLayoutComponent.html":{}}}],["maintain",{"_index":1462,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["maintained",{"_index":1539,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["major",{"_index":2168,"title":{},"body":{"license.html":{}}}],["make",{"_index":1196,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"license.html":{}}}],["makes",{"_index":1163,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{}}}],["making",{"_index":2112,"title":{},"body":{"license.html":{}}}],["malformed",{"_index":434,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["manage",{"_index":1039,"title":{},"body":{"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"index.html":{}}}],["manager",{"_index":1367,"title":{},"body":{"components/PhotoManagerComponent.html":{}}}],["manager'},{'name",{"_index":178,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["manager.component.html",{"_index":1368,"title":{},"body":{"components/PhotoManagerComponent.html":{}}}],["manager.component.scss",{"_index":1369,"title":{},"body":{"components/PhotoManagerComponent.html":{}}}],["manager.component.ts",{"_index":1366,"title":{},"body":{"components/PhotoManagerComponent.html":{},"coverage.html":{}}}],["manager/photo",{"_index":1365,"title":{},"body":{"components/PhotoManagerComponent.html":{},"coverage.html":{}}}],["manner",{"_index":2501,"title":{},"body":{"license.html":{}}}],["manually",{"_index":1770,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["manufacturer",{"_index":2059,"title":{},"body":{"license.html":{}}}],["many",{"_index":493,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["map",{"_index":773,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"components/DashboardComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["map((event",{"_index":790,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["map((maybeuser",{"_index":891,"title":{},"body":{"components/DashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["map((profilephotos",{"_index":1816,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["map((properties",{"_index":847,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["map((status",{"_index":799,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["march",{"_index":2541,"title":{},"body":{"license.html":{}}}],["markdownlint",{"_index":1981,"title":{},"body":{"index.html":{}}}],["marked",{"_index":2049,"title":{},"body":{"license.html":{}}}],["marketing",{"_index":1498,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["marks",{"_index":1851,"title":{},"body":{"components/VerifyEmailComponent.html":{},"license.html":{}}}],["masks",{"_index":2102,"title":{},"body":{"license.html":{}}}],["match",{"_index":607,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["match.validator.ts",{"_index":1924,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["match/confirm",{"_index":1923,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["match/match",{"_index":1926,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":120,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["material",{"_index":2213,"title":{},"body":{"license.html":{}}}],["materially",{"_index":2376,"title":{},"body":{"license.html":{}}}],["math.random",{"_index":1255,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["math.random().tostring(radix).slice(skip_whole_num",{"_index":1357,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["maximum",{"_index":1388,"title":{},"body":{"components/PhotoUploadComponent.html":{},"miscellaneous/variables.html":{}}}],["maximum_photos",{"_index":1241,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maximumfiles",{"_index":1377,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["maxlength",{"_index":2774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxpasswordlength",{"_index":562,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["maybenavigation",{"_index":2801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybenavigation?.extras.state",{"_index":2803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybeuser",{"_index":590,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maybeuser.emailverified",{"_index":2767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybeuser?.displayname",{"_index":892,"title":{},"body":{"components/DashboardComponent.html":{}}}],["meaning",{"_index":2419,"title":{},"body":{"license.html":{}}}],["means",{"_index":1580,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["measure",{"_index":2228,"title":{},"body":{"license.html":{}}}],["measures",{"_index":2240,"title":{},"body":{"license.html":{}}}],["media",{"_index":1455,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["medium",{"_index":2253,"title":{},"body":{"license.html":{}}}],["meet",{"_index":431,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["meets",{"_index":2149,"title":{},"body":{"license.html":{}}}],["menu",{"_index":995,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["menushown",{"_index":1035,"title":{},"body":{"components/HeaderComponent.html":{}}}],["merchantability",{"_index":2572,"title":{},"body":{"license.html":{}}}],["mere",{"_index":2134,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1156,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["merging",{"_index":2473,"title":{},"body":{"license.html":{}}}],["message",{"_index":1182,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":363,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/CombinedObs.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["messages'},{'name",{"_index":147,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["messages.component",{"_index":598,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["messages.component.html",{"_index":364,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["messages.component.ts",{"_index":362,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"coverage.html":{}}}],["messages.component.ts:19",{"_index":366,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["messages/auth",{"_index":361,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{}}}],["messagingsenderid",{"_index":2840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["met",{"_index":2199,"title":{},"body":{"license.html":{}}}],["meta",{"_index":1108,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["metadata",{"_index":124,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["metadefinition",{"_index":1134,"title":{},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["meter",{"_index":1267,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["method",{"_index":1573,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["methods",{"_index":214,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"injectables/VerifyEmailService.html":{},"license.html":{}}}],["middle",{"_index":530,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["milliseconds",{"_index":270,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"miscellaneous/variables.html":{}}}],["minlength",{"_index":2776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minpasswordlength",{"_index":563,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["minstrength",{"_index":2781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minutes",{"_index":680,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["miscellaneous",{"_index":2665,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":508,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["misrepresentation",{"_index":2402,"title":{},"body":{"license.html":{}}}],["misused",{"_index":75,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["mobile",{"_index":1475,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["mode",{"_index":14,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"license.html":{}}}],["model",{"_index":2310,"title":{},"body":{"license.html":{}}}],["modern",{"_index":1956,"title":{},"body":{"dependencies.html":{}}}],["modification",{"_index":2097,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":1735,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["modified",{"_index":762,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["modifies",{"_index":2270,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1723,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["modifying",{"_index":2124,"title":{},"body":{"license.html":{}}}],["modules",{"_index":2647,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monitor",{"_index":1463,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["more",{"_index":516,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{}}}],["moreover",{"_index":2445,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":1863,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["move",{"_index":1200,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["multi",{"_index":404,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["multiline",{"_index":1985,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":1338,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["name",{"_index":140,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["namecntrl",{"_index":1761,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["namecntrlerrors",{"_index":1756,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["namecntrlinvalid",{"_index":1757,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["named",{"_index":2751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["names",{"_index":2405,"title":{},"body":{"license.html":{}}}],["nature",{"_index":2283,"title":{},"body":{"license.html":{}}}],["navigate",{"_index":109,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"miscellaneous/variables.html":{}}}],["navigation",{"_index":2802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["necessary",{"_index":1117,"title":{},"body":{"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":338,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["needed",{"_index":2080,"title":{},"body":{"license.html":{}}}],["needs",{"_index":403,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["nested",{"_index":1307,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["network",{"_index":465,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["new",{"_index":87,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":1206,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["next",{"_index":71,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ControlStruct.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["nexturl",{"_index":2807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":235,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["ngondestroy",{"_index":1102,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["ngoninit",{"_index":1103,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["ngoptimizedimage",{"_index":536,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["ngsw",{"_index":2719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nice",{"_index":2827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noauthguard",{"_index":1890,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nofollow",{"_index":1138,"title":{},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["noindex",{"_index":1137,"title":{},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["nominally",{"_index":1336,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["non",{"_index":633,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["noncommercially",{"_index":2317,"title":{},"body":{"license.html":{}}}],["normal",{"_index":2166,"title":{},"body":{"license.html":{}}}],["normalize",{"_index":1957,"title":{},"body":{"dependencies.html":{}}}],["normally",{"_index":2342,"title":{},"body":{"license.html":{}}}],["note",{"_index":877,"title":{},"body":{"interfaces/ControlStruct.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["nothing",{"_index":2459,"title":{},"body":{"license.html":{}}}],["notice",{"_index":959,"title":{},"body":{"components/FooterComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["notices",{"_index":2139,"title":{},"body":{"license.html":{}}}],["notifications",{"_index":1478,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["notifies",{"_index":2446,"title":{},"body":{"license.html":{}}}],["notify",{"_index":2441,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":2391,"title":{},"body":{"license.html":{}}}],["now",{"_index":78,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["npm",{"_index":1980,"title":{},"body":{"index.html":{}}}],["null",{"_index":336,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/ControlStruct.html":{},"components/PageNotFoundComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["nullish",{"_index":2800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":294,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["number(new",{"_index":1331,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["numbered",{"_index":2562,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":440,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1794,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["object.values(properties",{"_index":824,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["obligate",{"_index":2551,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":1535,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["obligation",{"_index":1568,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["obligations",{"_index":1519,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["observable",{"_index":262,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"components/DashboardComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["observables",{"_index":759,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["occasionally",{"_index":2316,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":472,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["occurring",{"_index":2456,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":2067,"title":{},"body":{"license.html":{}}}],["of(code).pipe",{"_index":296,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["of(verifyresults",{"_index":1187,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["offer",{"_index":2042,"title":{},"body":{"license.html":{}}}],["offered",{"_index":2333,"title":{},"body":{"license.html":{}}}],["offering",{"_index":2320,"title":{},"body":{"license.html":{}}}],["official",{"_index":2152,"title":{},"body":{"license.html":{}}}],["once",{"_index":1397,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["onclick",{"_index":1003,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onclick(event",{"_index":1011,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ondestroy",{"_index":1096,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["one",{"_index":1335,"title":{},"body":{"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["oninit",{"_index":1097,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["online",{"_index":1436,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["onsubmit",{"_index":565,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["onsubmit(user",{"_index":567,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["oobcode",{"_index":15,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["oops",{"_index":1145,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["open",{"_index":1386,"title":{},"body":{"components/PhotoUploadComponent.html":{},"components/TermsAndConditionsComponent.html":{}}}],["opendialog",{"_index":902,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["opened",{"_index":415,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"miscellaneous/variables.html":{}}}],["openfilepicker",{"_index":1378,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["operate",{"_index":2593,"title":{},"body":{"license.html":{}}}],["operated",{"_index":2322,"title":{},"body":{"license.html":{}}}],["operating",{"_index":2176,"title":{},"body":{"license.html":{}}}],["operation",{"_index":394,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["option",{"_index":308,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{}}}],["optional",{"_index":11,"title":{},"body":{"interfaces/ActionCodeState.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/HeaderComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["options",{"_index":2147,"title":{},"body":{"license.html":{}}}],["order",{"_index":2454,"title":{},"body":{"license.html":{}}}],["organization",{"_index":1555,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["organizations",{"_index":2107,"title":{},"body":{"license.html":{}}}],["organize",{"_index":1328,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["origin",{"_index":2403,"title":{},"body":{"license.html":{}}}],["original",{"_index":279,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{}}}],["others",{"_index":2027,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":763,"title":{},"body":{"interfaces/CombinedObs.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":488,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["outlining",{"_index":1703,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["output",{"_index":756,"title":{},"body":{"interfaces/CombinedObs.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["outside",{"_index":1509,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["ov",{"_index":2779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["over",{"_index":1144,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["overview",{"_index":2648,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":2498,"title":{},"body":{"license.html":{}}}],["owner",{"_index":1706,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["owner's",{"_index":1693,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["ownership",{"_index":454,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/TermsAndConditionsComponent.html":{}}}],["package",{"_index":1940,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packaged",{"_index":2276,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":2167,"title":{},"body":{"license.html":{}}}],["page",{"_index":174,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pagenotfoundcomponent",{"_index":173,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["pages",{"_index":526,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/FooterComponent.html":{}}}],["pagetitle",{"_index":241,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["paper",{"_index":2621,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":2432,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":2508,"title":{},"body":{"license.html":{}}}],["param",{"_index":288,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/ControlStruct.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["parameter",{"_index":1064,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":220,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/HeaderComponent.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{}}}],["parent",{"_index":1382,"title":{},"body":{"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["parental",{"_index":1596,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["parsed",{"_index":438,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["part",{"_index":2109,"title":{},"body":{"license.html":{}}}],["partial",{"_index":52,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":2157,"title":{},"body":{"license.html":{}}}],["parties",{"_index":2133,"title":{},"body":{"license.html":{}}}],["parts",{"_index":2193,"title":{},"body":{"license.html":{}}}],["party",{"_index":520,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["party's",{"_index":2475,"title":{},"body":{"license.html":{}}}],["pass",{"_index":2036,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["passing",{"_index":1193,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["password",{"_index":63,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"dependencies.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["password'},{'name",{"_index":155,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["password.component.html",{"_index":688,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":687,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["password.component.ts:33",{"_index":978,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:34",{"_index":979,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:35",{"_index":980,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:36",{"_index":981,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:37",{"_index":982,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:38",{"_index":984,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:39",{"_index":1634,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:40",{"_index":977,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:41",{"_index":703,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:42",{"_index":704,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:43",{"_index":705,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:44",{"_index":706,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:45",{"_index":707,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:46",{"_index":708,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:47",{"_index":709,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:48",{"_index":710,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:49",{"_index":711,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:50",{"_index":713,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:51",{"_index":714,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:52",{"_index":715,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:53",{"_index":716,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:54",{"_index":717,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:55",{"_index":718,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:56",{"_index":701,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:81",{"_index":1633,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:93",{"_index":702,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.service",{"_index":1636,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.service.ts",{"_index":1153,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["password.service.ts:102",{"_index":1649,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:117",{"_index":1650,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:43",{"_index":1653,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:44",{"_index":1654,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:49",{"_index":1651,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:60",{"_index":1652,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password/change",{"_index":686,"title":{},"body":{"components/ChangePasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["password/forgot",{"_index":972,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["password/reset",{"_index":1152,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["password1",{"_index":720,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["password1cntrl",{"_index":699,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password1cntrlerrors",{"_index":692,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password1cntrlinvalid",{"_index":693,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password2",{"_index":721,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["password2cntrl",{"_index":700,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password2cntrlerrors",{"_index":694,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password2cntrlinvalid",{"_index":695,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwordcntrl",{"_index":564,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{}}}],["passwordcntrlerrors",{"_index":556,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{}}}],["passwordcntrlinvalid",{"_index":557,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{}}}],["passwordfirebasevalidator",{"_index":860,"title":{},"body":{"interfaces/ControlStruct.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordpolicy",{"_index":2814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passwordresetsent",{"_index":267,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["passwordresetsuccess",{"_index":1150,"title":{"interfaces/PasswordResetSuccess.html":{}},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["passwords",{"_index":601,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwords.maxlength",{"_index":585,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwords.minlength",{"_index":587,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwordstrength(value",{"_index":2828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passwordstrengthvalidator",{"_index":861,"title":{},"body":{"interfaces/ControlStruct.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["patent",{"_index":2431,"title":{},"body":{"license.html":{}}}],["patents",{"_index":2084,"title":{},"body":{"license.html":{}}}],["path",{"_index":92,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{}}}],["paths",{"_index":1092,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["pattern",{"_index":2065,"title":{},"body":{"license.html":{}}}],["payload",{"_index":1826,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["payment",{"_index":2535,"title":{},"body":{"license.html":{}}}],["pedantic",{"_index":332,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["peer",{"_index":2331,"title":{},"body":{"license.html":{}}}],["peers",{"_index":2332,"title":{},"body":{"license.html":{}}}],["pending",{"_index":485,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["percentage",{"_index":1226,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["percentage(task).pipe",{"_index":1281,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["percentage.progress",{"_index":1407,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["performance",{"_index":2575,"title":{},"body":{"license.html":{}}}],["performing",{"_index":2184,"title":{},"body":{"license.html":{}}}],["perhaps",{"_index":79,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["period",{"_index":1531,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["periodically",{"_index":1605,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["periods",{"_index":1536,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["permanently",{"_index":2440,"title":{},"body":{"license.html":{}}}],["permission",{"_index":2044,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":502,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["permissive",{"_index":2260,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1585,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["permits",{"_index":2421,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1999,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":2368,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1414,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["personally",{"_index":1450,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["pertinent",{"_index":2550,"title":{},"body":{"license.html":{}}}],["phone",{"_index":419,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["photo",{"_index":177,"title":{"interfaces/Photo.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{}}}],["photo.url",{"_index":1817,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["photo_dir",{"_index":1247,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["photomanagercomponent",{"_index":176,"title":{"components/PhotoManagerComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["photos",{"_index":1040,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["photos.service",{"_index":1400,"title":{},"body":{"components/PhotoUploadComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["photos.service.ts",{"_index":1221,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["photos.service.ts:140",{"_index":1748,"title":{},"body":{"injectables/UserPhotosService.html":{}}}],["photos.service.ts:64",{"_index":1751,"title":{},"body":{"injectables/UserPhotosService.html":{}}}],["photos.service.ts:66",{"_index":1749,"title":{},"body":{"injectables/UserPhotosService.html":{}}}],["photos.service.ts:67",{"_index":1750,"title":{},"body":{"injectables/UserPhotosService.html":{}}}],["photos.service.ts:68",{"_index":1746,"title":{},"body":{"injectables/UserPhotosService.html":{}}}],["photos.service.ts:91",{"_index":1747,"title":{},"body":{"injectables/UserPhotosService.html":{}}}],["photos/photo",{"_index":1364,"title":{},"body":{"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["photos/user",{"_index":1220,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["photouploadcomponent",{"_index":179,"title":{"components/PhotoUploadComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{}}}],["photourl",{"_index":1769,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["photourlcntrl",{"_index":1762,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["photourlcntrl.valid",{"_index":1844,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["photourlcntrl.value",{"_index":1843,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["photourlcntrlerrors",{"_index":1758,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["photourlcntrlinvalid",{"_index":1759,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["physical",{"_index":2299,"title":{},"body":{"license.html":{}}}],["physically",{"_index":2313,"title":{},"body":{"license.html":{}}}],["picker",{"_index":1264,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["picking",{"_index":1772,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["pieces",{"_index":2025,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":804,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["pipe(startwith(undefined",{"_index":1209,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["place",{"_index":1554,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["plain",{"_index":2792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":379,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["plugin",{"_index":1984,"title":{},"body":{"index.html":{}}}],["plus",{"_index":2478,"title":{},"body":{"license.html":{}}}],["png",{"_index":1839,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["point",{"_index":1254,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["pointer",{"_index":2618,"title":{},"body":{"license.html":{}}}],["policies",{"_index":1526,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy",{"_index":968,"title":{},"body":{"components/FooterComponent.html":{},"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["policy'},{'name",{"_index":183,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["policy.component.html",{"_index":1438,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.component.ts",{"_index":1410,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["policy/privacy",{"_index":1409,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["popup",{"_index":411,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["portion",{"_index":2336,"title":{},"body":{"license.html":{}}}],["possesses",{"_index":2311,"title":{},"body":{"license.html":{}}}],["possession",{"_index":2273,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":2595,"title":{},"body":{"license.html":{}}}],["possible",{"_index":2610,"title":{},"body":{"license.html":{}}}],["posted",{"_index":1607,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["power",{"_index":2242,"title":{},"body":{"license.html":{}}}],["practical",{"_index":2008,"title":{},"body":{"license.html":{}}}],["practice",{"_index":2072,"title":{},"body":{"license.html":{}}}],["practices",{"_index":1425,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["preamble",{"_index":2004,"title":{},"body":{"license.html":{}}}],["precise",{"_index":2095,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":2069,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":2476,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":2151,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":1352,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["prefixed",{"_index":373,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["present",{"_index":281,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{}}}],["presented",{"_index":1708,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["presenting",{"_index":2652,"title":{},"body":{"properties.html":{}}}],["presents",{"_index":2145,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":2399,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":1983,"title":{},"body":{"index.html":{}}}],["prettierto",{"_index":1987,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":639,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["prevented",{"_index":1860,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"license.html":{}}}],["previous",{"_index":1339,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["previously",{"_index":510,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["price",{"_index":2021,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":2536,"title":{},"body":{"license.html":{}}}],["primary",{"_index":993,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["prior",{"_index":2442,"title":{},"body":{"license.html":{}}}],["pristinechangeevent",{"_index":767,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["privacy",{"_index":182,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["privacypolicycomponent",{"_index":181,"title":{"components/PrivacyPolicyComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["private",{"_index":45,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["privately",{"_index":1727,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["probably",{"_index":1116,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["problem",{"_index":315,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["problems",{"_index":2051,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":2359,"title":{},"body":{"license.html":{}}}],["proceed",{"_index":942,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["process",{"_index":940,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["procuring",{"_index":2525,"title":{},"body":{"license.html":{}}}],["produce",{"_index":2179,"title":{},"body":{"license.html":{}}}],["product",{"_index":2300,"title":{},"body":{"license.html":{}}}],["production",{"_index":290,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["products",{"_index":1482,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["profile",{"_index":1038,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["profile'},{'name",{"_index":196,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["profile.component.html",{"_index":1754,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["profile.component.scss",{"_index":1755,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["profile.component.ts",{"_index":1753,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["profile.component.ts:102",{"_index":1788,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:104",{"_index":1765,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:160",{"_index":1766,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:189",{"_index":1767,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:81",{"_index":1773,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:83",{"_index":1775,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:85",{"_index":1777,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:87",{"_index":1778,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:89",{"_index":1781,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:91",{"_index":1782,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:93",{"_index":1783,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:94",{"_index":1784,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:95",{"_index":1785,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:96",{"_index":1787,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":1752,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["profileform",{"_index":1763,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["profileformgroup",{"_index":1786,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["profilephotos",{"_index":1299,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["profilephotos.push",{"_index":1325,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["profilephotos.sort((a",{"_index":1329,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["profilephotoslist",{"_index":1300,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["profilephotoslist.items",{"_index":1312,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["profilephotosref",{"_index":1293,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["program",{"_index":2014,"title":{},"body":{"license.html":{}}}],["program's",{"_index":2252,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":2635,"title":{},"body":{"license.html":{}}}],["programming",{"_index":2158,"title":{},"body":{"license.html":{}}}],["programs",{"_index":2018,"title":{},"body":{"license.html":{}}}],["progress",{"_index":1237,"title":{"interfaces/Progress.html":{}},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"coverage.html":{}}}],["prohibit",{"_index":2071,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":2238,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":2532,"title":{},"body":{"license.html":{}}}],["project",{"_index":1972,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["projectid",{"_index":2842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project’s",{"_index":481,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["prominent",{"_index":2148,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":2141,"title":{},"body":{"license.html":{}}}],["promise",{"_index":82,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["promise.all(promises",{"_index":1318,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["promise.allsettled",{"_index":1313,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["promises",{"_index":76,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["promises.push(promise",{"_index":1316,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["promisesettledresult",{"_index":1303,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["promotional",{"_index":1494,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["proof",{"_index":453,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["propagate",{"_index":2118,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":2462,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":2125,"title":{},"body":{"license.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":1202,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["proprietary",{"_index":2092,"title":{},"body":{"license.html":{}}}],["protect",{"_index":1581,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["protecting",{"_index":2063,"title":{},"body":{"license.html":{}}}],["protection",{"_index":1545,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["protects",{"_index":1692,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["protocols",{"_index":2380,"title":{},"body":{"license.html":{}}}],["prove",{"_index":2576,"title":{},"body":{"license.html":{}}}],["provide",{"_index":451,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provideanalytics",{"_index":2699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideappcheck",{"_index":2704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideauth",{"_index":2697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":422,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["providedin",{"_index":227,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["providefirebaseapp",{"_index":2831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providefirestore",{"_index":2709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providefunctions",{"_index":2712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideourfirebaseapp",{"_index":1882,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["provideperformance",{"_index":2715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":463,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"miscellaneous/variables.html":{}}}],["providerouter",{"_index":2731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1502,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["provideserviceworker",{"_index":2718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providestorage",{"_index":2725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providevertexai",{"_index":2728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["province",{"_index":1542,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["provision",{"_index":2079,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":2437,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":2566,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":2567,"title":{},"body":{"license.html":{}}}],["pub",{"_index":1966,"title":{},"body":{"index.html":{},"properties.html":{}}}],["public",{"_index":43,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["publicity",{"_index":2404,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":1507,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["publish",{"_index":2256,"title":{},"body":{"license.html":{}}}],["published",{"_index":2563,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":534,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["purposes",{"_index":783,"title":{},"body":{"interfaces/CombinedObs.html":{},"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["pursuant",{"_index":2523,"title":{},"body":{"license.html":{}}}],["push",{"_index":1477,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["qualify",{"_index":2451,"title":{},"body":{"license.html":{}}}],["quality",{"_index":2574,"title":{},"body":{"license.html":{}}}],["query",{"_index":1063,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["quiz",{"_index":544,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["quizzes",{"_index":2653,"title":{},"body":{"properties.html":{}}}],["quota",{"_index":482,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["radix",{"_index":1250,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["random",{"_index":1249,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["re",{"_index":380,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/PhotoUploadComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["reactiveformsmodule",{"_index":549,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["read",{"_index":2644,"title":{},"body":{"license.html":{}}}],["readable",{"_index":2296,"title":{},"body":{"license.html":{}}}],["readily",{"_index":2514,"title":{},"body":{"license.html":{}}}],["reading",{"_index":2384,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":44,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{}}}],["ready",{"_index":2077,"title":{},"body":{"license.html":{}}}],["reason",{"_index":353,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{}}}],["reasonable",{"_index":1486,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["reasonably",{"_index":1550,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["reauthenticatewithcredential",{"_index":592,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["reauthenticatewithcredential(user",{"_index":654,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["recaptchaenterpriseprovider('6lfg3reqaaaaak18s9uymuk8wd3jswjvnmdzmlrt",{"_index":2706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["receipt",{"_index":2449,"title":{},"body":{"license.html":{}}}],["receive",{"_index":2023,"title":{},"body":{"license.html":{}}}],["received",{"_index":1827,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["receives",{"_index":2466,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":2527,"title":{},"body":{"license.html":{}}}],["recent",{"_index":392,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["recently",{"_index":1290,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["recipient",{"_index":446,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["recipient's",{"_index":2521,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":2037,"title":{},"body":{"license.html":{}}}],["recognize",{"_index":303,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["recognized",{"_index":2153,"title":{},"body":{"license.html":{}}}],["record",{"_index":48,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{}}}],["recorded",{"_index":1599,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["recover",{"_index":59,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["recoveremail",{"_index":58,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/RecoverEmailService.html":{}}}],["recoveremail$(code",{"_index":293,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["recoveremailcomponent",{"_index":184,"title":{"components/RecoverEmailComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["recoveremailresults",{"_index":265,"title":{"interfaces/RecoverEmailResults.html":{}},"body":{"interfaces/ApplyResult.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"coverage.html":{}}}],["recoveremailservice",{"_index":271,"title":{"injectables/RecoverEmailService.html":{}},"body":{"interfaces/ApplyResult.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"coverage.html":{}}}],["redirect",{"_index":484,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["redirecting",{"_index":1082,"title":{},"body":{"components/LogoutComponent.html":{}}}],["redirectto",{"_index":113,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["redisplay",{"_index":1212,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["redistribute",{"_index":2613,"title":{},"body":{"license.html":{}}}],["ref",{"_index":1227,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["ref(this._storage",{"_index":1294,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["reference",{"_index":1131,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"miscellaneous/typealiases.html":{}}}],["referring",{"_index":2020,"title":{},"body":{"license.html":{}}}],["refers",{"_index":2100,"title":{},"body":{"license.html":{}}}],["refrain",{"_index":2552,"title":{},"body":{"license.html":{}}}],["refresh",{"_index":523,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["refreshed",{"_index":1291,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["regard",{"_index":2389,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":1426,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["regardless",{"_index":2275,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":2194,"title":{},"body":{"license.html":{}}}],["registered",{"_index":1467,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["registerwhenstable:30000",{"_index":2724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registration",{"_index":1464,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["registrationstrategy",{"_index":2723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regular",{"_index":1953,"title":{},"body":{"dependencies.html":{}}}],["reinstated",{"_index":2436,"title":{},"body":{"license.html":{}}}],["rejected",{"_index":1195,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{}}}],["related",{"_index":1481,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["relationship",{"_index":2218,"title":{},"body":{"license.html":{}}}],["released",{"_index":2016,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":2268,"title":{},"body":{"license.html":{}}}],["relicensing",{"_index":2422,"title":{},"body":{"license.html":{}}}],["rely",{"_index":2793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relying",{"_index":2513,"title":{},"body":{"license.html":{}}}],["remain",{"_index":2328,"title":{},"body":{"license.html":{}}}],["remains",{"_index":2015,"title":{},"body":{"license.html":{}}}],["remember",{"_index":1572,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["remote",{"_index":1771,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["removal",{"_index":2390,"title":{},"body":{"license.html":{}}}],["remove",{"_index":1105,"title":{},"body":{"components/PageNotFoundComponent.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["removed",{"_index":1133,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["render",{"_index":2094,"title":{},"body":{"license.html":{}}}],["rendered",{"_index":2589,"title":{},"body":{"license.html":{}}}],["repair",{"_index":2580,"title":{},"body":{"license.html":{}}}],["replace",{"_index":1172,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["replaced",{"_index":1647,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["replacepassword",{"_index":1648,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["replacepassword(newpassword",{"_index":1173,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["replaceurl",{"_index":100,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["repository",{"_index":1602,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"properties.html":{}}}],["represent",{"_index":1248,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["representatives",{"_index":1714,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["represents",{"_index":1547,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["request",{"_index":401,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":503,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["requests",{"_index":494,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["require",{"_index":2189,"title":{},"body":{"license.html":{}}}],["required",{"_index":365,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"interfaces/ControlStruct.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["requirement",{"_index":2269,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":432,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/ControlStruct.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["requires",{"_index":396,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["requiring",{"_index":2111,"title":{},"body":{"license.html":{}}}],["resend",{"_index":420,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["reset",{"_index":62,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{}}}],["resetpassword",{"_index":61,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["resetpassword$(code",{"_index":1183,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["resetpasswordcomponent",{"_index":185,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["resetpasswordform",{"_index":1632,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordformgroup",{"_index":1635,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["resetpasswordresults",{"_index":1159,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["resetpasswordservice",{"_index":1169,"title":{"injectables/ResetPasswordService.html":{}},"body":{"interfaces/PasswordResetSuccess.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{}}}],["resetting",{"_index":1162,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["resolve",{"_index":1522,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["resolved",{"_index":2349,"title":{},"body":{"license.html":{}}}],["respect",{"_index":2032,"title":{},"body":{"license.html":{}}}],["responsibilities",{"_index":1705,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["responsible",{"_index":2467,"title":{},"body":{"license.html":{}}}],["restoration",{"_index":1624,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["restore",{"_index":277,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["restored",{"_index":284,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["restoredemail",{"_index":250,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["restrict",{"_index":2086,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":2239,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":2420,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":2418,"title":{},"body":{"license.html":{}}}],["result",{"_index":310,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["resulting",{"_index":2114,"title":{},"body":{"license.html":{}}}],["results",{"_index":119,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["retain",{"_index":1516,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["retained",{"_index":1529,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["retains",{"_index":2371,"title":{},"body":{"license.html":{}}}],["retention",{"_index":1515,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["retrying",{"_index":400,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["return",{"_index":295,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":345,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["returns",{"_index":222,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["reverted",{"_index":330,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["review",{"_index":1604,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["reviewing",{"_index":2599,"title":{},"body":{"license.html":{}}}],["revised",{"_index":2556,"title":{},"body":{"license.html":{}}}],["revoked",{"_index":1711,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["rid",{"_index":339,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["right",{"_index":1557,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["rights",{"_index":1704,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["risk",{"_index":1718,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["rob",{"_index":2663,"title":{},"body":{"properties.html":{}}}],["robot",{"_index":1106,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["robots",{"_index":1112,"title":{},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["robots_meta",{"_index":1136,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rom",{"_index":2373,"title":{},"body":{"license.html":{}}}],["root",{"_index":110,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":143,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["route",{"_index":114,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["routed",{"_index":1110,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["router",{"_index":29,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["router.parseurl(`/confirm",{"_index":2768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.parseurl(`/login?next=${url",{"_index":2741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.parseurl(nexturl",{"_index":2809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":537,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["routeroutlet",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/CentralLayoutComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["routerstatesnapshot",{"_index":218,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":1094,"title":{"routes.html":{}},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["royalty",{"_index":2482,"title":{},"body":{"license.html":{}}}],["rules",{"_index":1690,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["run",{"_index":2056,"title":{},"body":{"license.html":{}}}],["running",{"_index":2203,"title":{},"body":{"license.html":{}}}],["runs",{"_index":2177,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":261,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"components/DashboardComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"dependencies.html":{}}}],["rxjs/finnish",{"_index":803,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["s3",{"_index":1347,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["safe",{"_index":2822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["safely",{"_index":2797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["safephotourl",{"_index":1828,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["safest",{"_index":2615,"title":{},"body":{"license.html":{}}}],["sake",{"_index":2048,"title":{},"body":{"license.html":{}}}],["sale",{"_index":2492,"title":{},"body":{"license.html":{}}}],["same",{"_index":460,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["satisfy",{"_index":2329,"title":{},"body":{"license.html":{}}}],["saying",{"_index":2325,"title":{},"body":{"license.html":{}}}],["scan",{"_index":821,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["school",{"_index":2636,"title":{},"body":{"license.html":{}}}],["scope",{"_index":2531,"title":{},"body":{"license.html":{}}}],["screen",{"_index":531,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["screens",{"_index":1678,"title":{},"body":{"components/StandardLayoutComponent.html":{}}}],["screentrackingservice",{"_index":2702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scripts",{"_index":2181,"title":{},"body":{"license.html":{}}}],["scrollpositionrestoration",{"_index":2735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["second",{"_index":455,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["secondarily",{"_index":2121,"title":{},"body":{"license.html":{}}}],["section",{"_index":1566,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["sections",{"_index":2293,"title":{},"body":{"license.html":{}}}],["secure",{"_index":1576,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["securely",{"_index":1553,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["security",{"_index":1485,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["see",{"_index":1744,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"index.html":{},"license.html":{}}}],["selector",{"_index":37,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["sell",{"_index":2506,"title":{},"body":{"license.html":{}}}],["selling",{"_index":2491,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":2101,"title":{},"body":{"license.html":{}}}],["send",{"_index":283,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["send_email_delay",{"_index":268,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sendconfirmemail",{"_index":808,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["sendconfirmemail(user",{"_index":810,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["sendemailverification",{"_index":813,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["sendemailverification(user",{"_index":814,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["sending",{"_index":610,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"miscellaneous/typealiases.html":{}}}],["sendpasswordresetemail",{"_index":255,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["sendpasswordresetemail(this._auth",{"_index":356,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["sends",{"_index":1457,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sensitive",{"_index":395,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["sent",{"_index":611,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/RecoverEmailComponent.html":{},"miscellaneous/typealiases.html":{}}}],["separable",{"_index":2335,"title":{},"body":{"license.html":{}}}],["separate",{"_index":2281,"title":{},"body":{"license.html":{}}}],["separately",{"_index":2278,"title":{},"body":{"license.html":{}}}],["serve",{"_index":236,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["server",{"_index":2314,"title":{},"body":{"license.html":{}}}],["servers",{"_index":1597,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["serves",{"_index":2169,"title":{},"body":{"license.html":{}}}],["service",{"_index":1125,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["services",{"_index":1484,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["servicing",{"_index":2579,"title":{},"body":{"license.html":{}}}],["set",{"_index":835,"title":{},"body":{"interfaces/ControlProperties.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["sets",{"_index":1015,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/TermsAndConditionsComponent.html":{},"interfaces/VerifiedFailed.html":{}}}],["setting",{"_index":1178,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["settings",{"_index":1565,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["settledmetadata",{"_index":1320,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["settledmetadata.status",{"_index":1323,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["settledmetadata.value",{"_index":1326,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["settledurl",{"_index":1319,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["settledurl.status",{"_index":1321,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["settledurl.value",{"_index":1327,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["settles",{"_index":1191,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["setup",{"_index":1968,"title":{},"body":{"index.html":{}}}],["shall",{"_index":2225,"title":{},"body":{"license.html":{}}}],["share",{"_index":1500,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["shared",{"_index":1417,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["short",{"_index":2624,"title":{},"body":{"license.html":{}}}],["shorter",{"_index":1530,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["show",{"_index":1176,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["showform",{"_index":696,"title":{"interfaces/ShowForm.html":{}},"body":{"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["showmenu",{"_index":1000,"title":{},"body":{"components/HeaderComponent.html":{}}}],["shows",{"_index":1181,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["showurl",{"_index":1831,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["showurlinput",{"_index":1760,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["shuffle",{"_index":1669,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["sidebar",{"_index":1656,"title":{},"body":{"components/SidebarComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["sidebar'},{'name",{"_index":187,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["sidebar.component.html",{"_index":1660,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1661,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.component",{"_index":1685,"title":{},"body":{"components/StandardLayoutComponent.html":{}}}],["sidebarcomponent",{"_index":186,"title":{"components/SidebarComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["sign",{"_index":457,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["signal",{"_index":28,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PhotoUploadComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["signal('unsent",{"_index":631,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["signal(false",{"_index":1020,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogoutComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["signal(true",{"_index":738,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["signal.util",{"_index":859,"title":{},"body":{"interfaces/ControlStruct.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["signal.util.ts",{"_index":754,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["signals",{"_index":370,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/ControlStruct.html":{}}}],["signed",{"_index":511,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["significant",{"_index":2357,"title":{},"body":{"license.html":{}}}],["signing",{"_index":1563,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["signinwithemailandpassword",{"_index":1061,"title":{},"body":{"components/LoginComponent.html":{}}}],["signinwithemailandpassword(this._auth",{"_index":1068,"title":{},"body":{"components/LoginComponent.html":{}}}],["signout",{"_index":1077,"title":{},"body":{"components/LogoutComponent.html":{}}}],["signout(this._auth",{"_index":1079,"title":{},"body":{"components/LogoutComponent.html":{}}}],["similar",{"_index":2237,"title":{},"body":{"license.html":{}}}],["similarly",{"_index":1510,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["simultaneously",{"_index":2549,"title":{},"body":{"license.html":{}}}],["single",{"_index":533,"title":{},"body":{"components/CentralLayoutComponent.html":{},"index.html":{},"license.html":{}}}],["site",{"_index":1700,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["situations",{"_index":1501,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["skip",{"_index":351,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["skip_whole_num",{"_index":1256,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["smaller",{"_index":1677,"title":{},"body":{"components/StandardLayoutComponent.html":{}}}],["sms",{"_index":378,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["snapshot",{"_index":221,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["social",{"_index":1454,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["soft",{"_index":1114,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["software",{"_index":1725,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["sold",{"_index":2345,"title":{},"body":{"license.html":{}}}],["sole",{"_index":2209,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1731,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["solid",{"_index":1029,"title":{},"body":{"components/HeaderComponent.html":{},"dependencies.html":{}}}],["someone",{"_index":1298,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["something",{"_index":106,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["sometimes",{"_index":337,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["sorted",{"_index":1289,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["sorting",{"_index":1304,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["sourcing",{"_index":1732,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["spam",{"_index":677,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["spare",{"_index":2308,"title":{},"body":{"license.html":{}}}],["speak",{"_index":2019,"title":{},"body":{"license.html":{}}}],["special",{"_index":2088,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1257,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["specifically",{"_index":2188,"title":{},"body":{"license.html":{}}}],["specified",{"_index":2156,"title":{},"body":{"license.html":{}}}],["specifies",{"_index":2561,"title":{},"body":{"license.html":{}}}],["specify",{"_index":2564,"title":{},"body":{"license.html":{}}}],["spinner",{"_index":1180,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SpinnerComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{}}}],["spinner'},{'name",{"_index":188,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["spinner.component.scss",{"_index":1672,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner.component.svg",{"_index":1671,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinnercomponent",{"_index":31,"title":{"components/SpinnerComponent.html":{}},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{}}}],["spinners/blob/main/svg",{"_index":1667,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spirit",{"_index":2557,"title":{},"body":{"license.html":{}}}],["src/.../app.config.ts",{"_index":2678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":2679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../change",{"_index":2668,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../confirm",{"_index":2676,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":2684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../control",{"_index":2681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../delete",{"_index":2670,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../email",{"_index":2683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error",{"_index":2685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../firebase",{"_index":2691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../firebase.validator.ts",{"_index":2689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../forgot",{"_index":2672,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../get",{"_index":2687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../identity",{"_index":2682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../login.component.ts",{"_index":2673,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../match",{"_index":2680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../no",{"_index":2688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../page",{"_index":2692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../photo",{"_index":2671,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../recover",{"_index":2693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../reset",{"_index":2669,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../strength.validator.ts",{"_index":2690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":2675,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.token.ts",{"_index":2674,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../util.ts",{"_index":2686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.config.ts",{"_index":1876,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/app",{"_index":207,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"coverage.html":{}}}],["src/app/core/firebase",{"_index":1880,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":1883,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/email",{"_index":1885,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/no",{"_index":1888,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/user.token.ts",{"_index":1891,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":884,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts:18",{"_index":888,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/identity/actions/actions.component.ts",{"_index":6,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"coverage.html":{}}}],["src/app/identity/actions/actions.component.ts:35",{"_index":128,"title":{},"body":{"components/ActionsComponent.html":{}}}],["src/app/identity/actions/actions.component.ts:36",{"_index":129,"title":{},"body":{"components/ActionsComponent.html":{}}}],["src/app/identity/actions/actions.component.ts:37",{"_index":130,"title":{},"body":{"components/ActionsComponent.html":{}}}],["src/app/identity/actions/actions.component.ts:38",{"_index":131,"title":{},"body":{"components/ActionsComponent.html":{}}}],["src/app/identity/actions/actions.component.ts:40",{"_index":132,"title":{},"body":{"components/ActionsComponent.html":{}}}],["src/app/identity/actions/actions.component.ts:41",{"_index":133,"title":{},"body":{"components/ActionsComponent.html":{}}}],["src/app/identity/actions/actions.component.ts:42",{"_index":127,"title":{},"body":{"components/ActionsComponent.html":{}}}],["src/app/identity/actions/get",{"_index":1897,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/auth",{"_index":360,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"coverage.html":{}}}],["src/app/identity/change",{"_index":545,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/identity/confirm",{"_index":806,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/identity/delete",{"_index":894,"title":{},"body":{"components/DeleteAccountComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/identity/error",{"_index":1903,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/forgot",{"_index":971,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/identity/identity",{"_index":851,"title":{},"body":{"interfaces/ControlStruct.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/login/login.component.ts",{"_index":1042,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/identity/login/login.component.ts:37",{"_index":1048,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:38",{"_index":1049,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:39",{"_index":1050,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:40",{"_index":1051,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:41",{"_index":1052,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:42",{"_index":1053,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:43",{"_index":1054,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:44",{"_index":1056,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:45",{"_index":1057,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:46",{"_index":1058,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:48",{"_index":1059,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:49",{"_index":1060,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:51",{"_index":1047,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:52",{"_index":1045,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:69",{"_index":1046,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/logout/logout.component.ts",{"_index":1070,"title":{},"body":{"components/LogoutComponent.html":{},"coverage.html":{}}}],["src/app/identity/logout/logout.component.ts:20",{"_index":1076,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/identity/logout/logout.component.ts:22",{"_index":1074,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/identity/logout/logout.component.ts:23",{"_index":1075,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/identity/logout/logout.component.ts:25",{"_index":1073,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/identity/recover",{"_index":247,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/reset",{"_index":1151,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/identity/user",{"_index":1219,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/validators/confirm",{"_index":1922,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/validators/passwords/firebase.validator.ts",{"_index":1928,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/validators/passwords/strength.validator.ts",{"_index":1929,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/validators/passwords/util.ts",{"_index":1930,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/verify",{"_index":1849,"title":{},"body":{"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"coverage.html":{}}}],["src/app/layouts/central/central.component.ts",{"_index":524,"title":{},"body":{"components/CentralLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layouts/footer/footer.component.ts",{"_index":950,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/layouts/footer/footer.component.ts:17",{"_index":965,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/layouts/header/header.component.ts",{"_index":992,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/layouts/header/header.component.ts:25",{"_index":1021,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layouts/header/header.component.ts:26",{"_index":1023,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layouts/header/header.component.ts:27",{"_index":1024,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layouts/header/header.component.ts:33",{"_index":1008,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layouts/header/header.component.ts:44",{"_index":1014,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layouts/sidebar/sidebar.component.ts",{"_index":1655,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/layouts/standard/standard.component.ts",{"_index":1674,"title":{},"body":{"components/StandardLayoutComponent.html":{},"coverage.html":{}}}],["src/app/legal/privacy",{"_index":1408,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["src/app/legal/terms",{"_index":1686,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"coverage.html":{}}}],["src/app/page",{"_index":1087,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/constants.ts",{"_index":1937,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/control",{"_index":753,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/spinner/spinner.component.ts",{"_index":1662,"title":{},"body":{"components/SpinnerComponent.html":{},"coverage.html":{}}}],["ssr",{"_index":1118,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["stand",{"_index":2076,"title":{},"body":{"license.html":{}}}],["standard",{"_index":190,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["standard.component.html",{"_index":1682,"title":{},"body":{"components/StandardLayoutComponent.html":{}}}],["standard.component.scss",{"_index":1683,"title":{},"body":{"components/StandardLayoutComponent.html":{}}}],["standardlayoutcomponent",{"_index":189,"title":{"components/StandardLayoutComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["standards",{"_index":2154,"title":{},"body":{"license.html":{}}}],["start",{"_index":2616,"title":{},"body":{"license.html":{}}}],["started",{"_index":1965,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":2625,"title":{},"body":{"license.html":{}}}],["startwith",{"_index":1157,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["state",{"_index":84,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["state.continueurl",{"_index":85,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["state.mode",{"_index":90,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["state.oobcode",{"_index":91,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["state.ts",{"_index":1898,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stated",{"_index":2198,"title":{},"body":{"license.html":{}}}],["statement",{"_index":2424,"title":{},"body":{"license.html":{}}}],["statements",{"_index":1874,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":2085,"title":{},"body":{"license.html":{}}}],["stating",{"_index":2259,"title":{},"body":{"license.html":{}}}],["status",{"_index":660,"title":{},"body":{"components/ChangeEmailComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["status.isvalid",{"_index":2817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statuschangeevent",{"_index":818,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["step",{"_index":939,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["steps",{"_index":1549,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["still",{"_index":319,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/UserPhotosService.html":{}}}],["stop",{"_index":797,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["storage",{"_index":518,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["storagebucket",{"_index":2843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storageref",{"_index":1360,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["storagereferences",{"_index":1287,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["store",{"_index":1201,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["stored",{"_index":1416,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["straightforward",{"_index":1350,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["strategy.service.ts",{"_index":209,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"coverage.html":{}}}],["strategy.service.ts:18",{"_index":219,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["strategy.service.ts:8",{"_index":224,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["strategy.service.ts:9",{"_index":216,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["stream",{"_index":1286,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["strength",{"_index":1954,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["strength.id",{"_index":2829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strength?tab=readme",{"_index":2778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strengthen",{"_index":1532,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["string",{"_index":16,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/DashboardComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["strive",{"_index":1577,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["strong",{"_index":746,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["structure",{"_index":1317,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["styleurl",{"_index":539,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["subdividing",{"_index":2472,"title":{},"body":{"license.html":{}}}],["subject",{"_index":1158,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{}}}],["sublicenses",{"_index":2502,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":2220,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1210,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["submit",{"_index":930,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["submitted",{"_index":647,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["subprograms",{"_index":2187,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":2639,"title":{},"body":{"license.html":{}}}],["subscribed",{"_index":275,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/UserPhotosService.html":{}}}],["subsection",{"_index":2318,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":2355,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":2074,"title":{},"body":{"license.html":{}}}],["succeeded",{"_index":1188,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["success",{"_index":321,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoUploadComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["successful",{"_index":251,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["such",{"_index":466,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["sue",{"_index":2512,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":2363,"title":{},"body":{"license.html":{}}}],["summary",{"_index":1742,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["super",{"_index":231,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["supplement",{"_index":2385,"title":{},"body":{"license.html":{}}}],["supplied",{"_index":428,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["support",{"_index":1149,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["supported",{"_index":385,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["supports",{"_index":2323,"title":{},"body":{"license.html":{}}}],["sure",{"_index":421,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/DeleteAccountComponent.html":{},"license.html":{}}}],["surrender",{"_index":2030,"title":{},"body":{"license.html":{}}}],["survive",{"_index":2423,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":2592,"title":{},"body":{"license.html":{}}}],["svg",{"_index":1030,"title":{},"body":{"components/HeaderComponent.html":{},"dependencies.html":{}}}],["switch",{"_index":375,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["switchmap",{"_index":259,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{}}}],["switchmap((newpassword",{"_index":1204,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["switchmap((task",{"_index":1279,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["switchmap((user",{"_index":1813,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["switchmap((verifyresults",{"_index":1185,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["switchmap(async",{"_index":297,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{}}}],["symbols",{"_index":672,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["sync",{"_index":2820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":2162,"title":{},"body":{"license.html":{}}}],["systematic",{"_index":2064,"title":{},"body":{"license.html":{}}}],["t",{"_index":856,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":1939,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1938,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":228,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"components/PageNotFoundComponent.html":{}}}],["tags",{"_index":1126,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["take",{"_index":300,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{}}}],["tangible",{"_index":2341,"title":{},"body":{"license.html":{}}}],["tap",{"_index":1791,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["target",{"_index":1032,"title":{},"body":{"components/HeaderComponent.html":{}}}],["task",{"_index":1361,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["tasks",{"_index":1665,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["technological",{"_index":2227,"title":{},"body":{"license.html":{}}}],["tell",{"_index":1832,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["tells",{"_index":2144,"title":{},"body":{"license.html":{}}}],["template",{"_index":40,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{}}}],["templates",{"_index":372,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["templateurl",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["term",{"_index":2196,"title":{},"body":{"license.html":{}}}],["terminal",{"_index":2623,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":2430,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":2450,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":2439,"title":{},"body":{"license.html":{}}}],["termination",{"_index":2427,"title":{},"body":{"license.html":{}}}],["terms",{"_index":192,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["termsandconditionscomponent",{"_index":191,"title":{"components/TermsAndConditionsComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["terraform",{"_index":1969,"title":{},"body":{"index.html":{}}}],["test",{"_index":95,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["tested",{"_index":234,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["testing",{"_index":292,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["text",{"_index":1471,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["thereby",{"_index":1418,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["therefore",{"_index":2031,"title":{},"body":{"license.html":{}}}],["things",{"_index":2026,"title":{},"body":{"license.html":{}}}],["think",{"_index":1198,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/PhotoUploadComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["third",{"_index":2251,"title":{},"body":{"license.html":{}}}],["this.$blockwindow.set(true",{"_index":1078,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.$currentpwcntrlerrors",{"_index":722,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.$currentpwcntrlinvalid",{"_index":723,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.$email1cntrlerrors",{"_index":614,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.$email1cntrlinvalid",{"_index":615,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.$email2cntrlerrors",{"_index":618,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.$email2cntrlinvalid",{"_index":619,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.$emailcntrlerrors",{"_index":986,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.$emailcntrlinvalid",{"_index":987,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.$errorcode",{"_index":629,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$errorcode.set",{"_index":648,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$errorcode.set(code",{"_index":658,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$filecount",{"_index":1404,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["this.$formemailsinvalid",{"_index":627,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.$formpasswordsinvalid",{"_index":735,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.$namecntrlerrors",{"_index":1798,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$namecntrlinvalid",{"_index":1800,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$password1cntrlerrors",{"_index":725,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.$password1cntrlinvalid",{"_index":726,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.$password2cntrlerrors",{"_index":729,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.$password2cntrlinvalid",{"_index":730,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.$passwordcntrlerrors",{"_index":621,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{}}}],["this.$passwordcntrlinvalid",{"_index":622,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{}}}],["this.$photourlcntrlerrors",{"_index":1804,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$photourlcntrlinvalid",{"_index":1806,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$showform",{"_index":737,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$showform.set(false",{"_index":741,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$showform.set(true",{"_index":743,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$showmenu",{"_index":1036,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.$showmenu.set(!menushown",{"_index":1037,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.$showmenu.set(false",{"_index":1034,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.$showurlinput",{"_index":1809,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$showurlinput.set(false",{"_index":1818,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$showurlinput.update((showurl",{"_index":1830,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$verificationstatus",{"_index":630,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["this.$verificationstatus.set('sending",{"_index":651,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["this.$verificationstatus.set('sent",{"_index":656,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["this.$verificationstatus.set('unsent",{"_index":659,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this._$actionstate",{"_index":51,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this._$confirmdialog",{"_index":926,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["this._$fileinput",{"_index":1406,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["this._auth",{"_index":985,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this._basetitle",{"_index":239,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["this._confirmpasswordreset(code",{"_index":1205,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["this._doactioncode(oobcode",{"_index":298,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["this._metaservice.addtag(robots_meta",{"_index":1142,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["this._metaservice.removetagelement(this._robotstag",{"_index":1141,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["this._modepaths",{"_index":57,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this._modepaths[state.mode",{"_index":93,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this._newpasswordsubject$.next(newpassword",{"_index":1174,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["this._newpasswordsubject$.pipe",{"_index":1203,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["this._refreshfilessubject",{"_index":1274,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["this._refreshfilessubject$.next",{"_index":1288,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["this._refreshfilessubject$.pipe",{"_index":1296,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["this._robotstag",{"_index":1140,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["this._router",{"_index":67,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/DeleteAccountComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["this._router.navigatebyurl",{"_index":118,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LogoutComponent.html":{}}}],["this._router.navigatebyurl(path",{"_index":99,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this._router.navigatebyurl(this.next",{"_index":1069,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._sendpasswordresetemail(result.restoredemail",{"_index":311,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["this._service",{"_index":1616,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["this._service.recoveremail$(oobcode",{"_index":1620,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["this._service.replacepassword(password1",{"_index":1643,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this._service.resetpassword$(oobcode",{"_index":1640,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this._service.verifyemail(oobcode",{"_index":1857,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this._tasksubject",{"_index":1276,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["this._tasksubject$.next(task",{"_index":1363,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["this._tasksubject$.pipe",{"_index":1278,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["this._title",{"_index":232,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["this._title.gettitle",{"_index":240,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["this._title.settitle(`${pagetitle",{"_index":245,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["this._title.settitle(this._basetitle",{"_index":244,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["this._userphotoservice",{"_index":1796,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this._userphotoservice.getprofilephotos(uid).pipe",{"_index":1815,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this._userphotoservice.uploadpercentage",{"_index":1403,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["this._verifycode(oobcode",{"_index":1184,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["this.buildtitle(snapshot",{"_index":242,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["this.changeemailform",{"_index":624,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.changeemailform.invalid",{"_index":643,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.changeemailform.value",{"_index":637,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.changepasswordform",{"_index":732,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.changepasswordform.invalid",{"_index":740,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.changepasswordform.value",{"_index":739,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.continueurl",{"_index":53,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this.currentpwcntrl",{"_index":724,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.deleteaccountform",{"_index":924,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["this.deleteaccountform.invalid",{"_index":934,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["this.deleteaccountform.value",{"_index":933,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["this.email1cntrl",{"_index":617,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.email2cntrl",{"_index":620,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.emailcntrl",{"_index":988,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.forgotform",{"_index":989,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.forgotform.invalid",{"_index":991,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.forgotform.value",{"_index":990,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.lang",{"_index":54,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this.loginform",{"_index":1065,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":1067,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":1066,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.mode",{"_index":55,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this.name",{"_index":889,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.namecntrl",{"_index":1797,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.oobcode",{"_index":56,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this.password1cntrl",{"_index":727,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.password2cntrl",{"_index":731,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.passwordcntrl",{"_index":623,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{}}}],["this.photourlcntrl",{"_index":1802,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.profileform",{"_index":1808,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.profileform.invalid",{"_index":1821,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.profileform.patchvalue(user",{"_index":1812,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.profileform.value",{"_index":1820,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.resetpasswordform",{"_index":1638,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.resetpasswordform.invalid",{"_index":1642,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.resetpasswordform.value",{"_index":1641,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.uploadpercentage",{"_index":1277,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["this.user",{"_index":635,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["this.vm",{"_index":1619,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["those",{"_index":1310,"title":{},"body":{"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["though",{"_index":2387,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":2082,"title":{},"body":{"license.html":{}}}],["three",{"_index":2306,"title":{},"body":{"license.html":{}}}],["throttle",{"_index":2823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["through",{"_index":2135,"title":{},"body":{"license.html":{}}}],["throw",{"_index":340,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["throws",{"_index":323,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["thus",{"_index":2214,"title":{},"body":{"license.html":{}}}],["time",{"_index":301,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["timed",{"_index":487,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["timeout",{"_index":467,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["timer",{"_index":260,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["timer(result.restoredemail",{"_index":305,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["title",{"_index":208,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"coverage.html":{}}}],["titlestrategy",{"_index":211,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"miscellaneous/variables.html":{}}}],["tl;dr",{"_index":1719,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["today",{"_index":963,"title":{},"body":{"components/FooterComponent.html":{}}}],["todo",{"_index":749,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["toggle",{"_index":1768,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["togglemenu",{"_index":1004,"title":{},"body":{"components/HeaderComponent.html":{}}}],["togglephotourl",{"_index":1764,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["token",{"_index":490,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["tool's",{"_index":1437,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["tool's](https://app.termsfeed.com/download/9bce549e",{"_index":1439,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["tools",{"_index":2183,"title":{},"body":{"license.html":{}}}],["tosignal",{"_index":764,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{}}}],["tosignal(controlerrors",{"_index":805,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["tosignal(controlevents",{"_index":849,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["tosignal(formstatus",{"_index":2766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["total",{"_index":1238,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["touched",{"_index":817,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["touchedchangeevent",{"_index":819,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["track",{"_index":1259,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{}}}],["tracks",{"_index":1396,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["trade",{"_index":2409,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":2408,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":2410,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":2367,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1537,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["transferred",{"_index":1538,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["transferring",{"_index":2470,"title":{},"body":{"license.html":{}}}],["transmission",{"_index":1574,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["transparently",{"_index":1423,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["traverse",{"_index":1349,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["treated",{"_index":1552,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["treaty",{"_index":2233,"title":{},"body":{"license.html":{}}}],["tree",{"_index":123,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["trends",{"_index":1491,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["triggers",{"_index":1171,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["true",{"_index":101,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoUploadComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["trust",{"_index":1420,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["truthy",{"_index":350,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["try",{"_index":355,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{}}}],["tslib",{"_index":1960,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":855,"title":{},"body":{"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":17,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type=file",{"_index":1401,"title":{},"body":{"components/PhotoUploadComponent.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":2666,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeerror('control",{"_index":2744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeerror(`invalid",{"_index":2796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeof",{"_index":2795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":333,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["typescript",{"_index":73,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["typescript/linters",{"_index":2786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typical",{"_index":2351,"title":{},"body":{"license.html":{}}}],["ui",{"_index":1265,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["uid",{"_index":1245,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["uid}/${photo_dir",{"_index":1295,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uid}/${photo_dir}/${prefix",{"_index":1358,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["unable",{"_index":475,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["unacceptable",{"_index":2070,"title":{},"body":{"license.html":{}}}],["unclear",{"_index":1342,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["undefined",{"_index":243,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1587,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["undone",{"_index":938,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["unfortunately",{"_index":299,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["unicorn/no",{"_index":866,"title":{},"body":{"interfaces/ControlStruct.html":{},"components/PageNotFoundComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":1864,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["unknown",{"_index":313,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["unless",{"_index":1062,"title":{},"body":{"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["unlike",{"_index":1345,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["unlimited",{"_index":2202,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":2117,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":2222,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":2383,"title":{},"body":{"license.html":{}}}],["unreachable",{"_index":470,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["unsent",{"_index":612,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"miscellaneous/typealiases.html":{}}}],["unsupported",{"_index":384,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["until",{"_index":2438,"title":{},"body":{"license.html":{}}}],["unusual",{"_index":496,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["up",{"_index":1175,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["update",{"_index":1561,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["updatepassword",{"_index":719,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["updatepassword(credentials.user",{"_index":742,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["updateprofile",{"_index":1774,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{}}}],["updateprofile(user",{"_index":1829,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["updateprofile](https://firebase.google.com/docs/reference/node/firebase.user#updateprofile",{"_index":1793,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["updates",{"_index":1018,"title":{},"body":{"components/HeaderComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["updatetitle",{"_index":215,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["updatetitle(snapshot",{"_index":217,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["upload",{"_index":1236,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["upload'},{'name",{"_index":180,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["upload.component",{"_index":1792,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["upload.component.html",{"_index":1372,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.scss",{"_index":1373,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts",{"_index":1371,"title":{},"body":{"components/PhotoUploadComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["upload.component.ts:28",{"_index":1381,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts:30",{"_index":1394,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts:32",{"_index":1383,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts:37",{"_index":1395,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts:39",{"_index":1392,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts:40",{"_index":1380,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts:49",{"_index":1385,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts:61",{"_index":1389,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload/photo",{"_index":1370,"title":{},"body":{"components/PhotoUploadComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["uploadbytesresumable",{"_index":1228,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uploadbytesresumable(storageref",{"_index":1362,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uploaded",{"_index":1240,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["uploadfile",{"_index":1379,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["uploading",{"_index":1266,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uploadpercentage",{"_index":1269,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uploadphoto",{"_index":1260,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uploadphoto(files",{"_index":1343,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uploads",{"_index":1334,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["uploadtask",{"_index":1231,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uploadtasksnapshot",{"_index":1232,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["upper",{"_index":669,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["uri",{"_index":424,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["url",{"_index":86,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["url(state.continueurl",{"_index":88,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["url.pathname}${url.search}${url.hash",{"_index":89,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["urltree",{"_index":2740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usage",{"_index":1456,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":291,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"interfaces/ControlStruct.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/SpinnerComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":2736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":417,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/FooterComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"index.html":{},"license.html":{}}}],["useful",{"_index":2620,"title":{},"body":{"license.html":{}}}],["user",{"_index":195,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user#photourl",{"_index":1814,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["user$.pipe",{"_index":890,"title":{},"body":{"components/DashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":278,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{}}}],["user(inject(auth",{"_index":2847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.email",{"_index":644,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["userphotosservice",{"_index":1258,"title":{"injectables/UserPhotosService.html":{}},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{}}}],["userprofilecomponent",{"_index":194,"title":{"components/UserProfileComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{}}}],["users",{"_index":406,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/HeaderComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["usertrackingservice",{"_index":2703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uses",{"_index":1139,"title":{},"body":{"components/PageNotFoundComponent.html":{},"license.html":{}}}],["using",{"_index":462,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["val",{"_index":823,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["valid",{"_index":320,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["validate",{"_index":2754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatepassword(auth",{"_index":2816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validation",{"_index":779,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["validationerror",{"_index":2757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationerrors",{"_index":596,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":2758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatorfn",{"_index":2742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators",{"_index":638,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["validators.email",{"_index":869,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["validators.maxlength(num",{"_index":2756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators.maxlength(passwords.maxlength",{"_index":881,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["validators.minlength(num",{"_index":2755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators.minlength(passwords.minlength",{"_index":880,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["validators.pattern(/\\.(?:avif|gif|jpe?g|png|webp)(?:\\?.*)?$/u",{"_index":1803,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["validators.required",{"_index":868,"title":{},"body":{"interfaces/ControlStruct.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["validators/confirm",{"_index":606,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators/passwords",{"_index":862,"title":{},"body":{"interfaces/ControlStruct.html":{}}}],["value",{"_index":584,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1306,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["var",{"_index":138,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["variable",{"_index":1877,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2677,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbatim",{"_index":2000,"title":{},"body":{"license.html":{}}}],["verfied",{"_index":1861,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["verification",{"_index":381,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["verificationstatus",{"_index":558,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["verificationstatus();@if",{"_index":681,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["verified",{"_index":407,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["verified.guard.ts",{"_index":1886,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["verifiedfailed",{"_index":1160,"title":{"interfaces/VerifiedFailed.html":{}},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["verifiedresult",{"_index":1168,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["verify",{"_index":65,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["verifyandchangeemail",{"_index":64,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["verifybeforeupdateemail",{"_index":593,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["verifybeforeupdateemail(credentials.user",{"_index":655,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["verifyemail",{"_index":66,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/VerifyEmailService.html":{}}}],["verifyemail(oobcode",{"_index":1869,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["verifyemailcomponent",{"_index":197,"title":{"components/VerifyEmailComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["verifyemailresult",{"_index":1855,"title":{"interfaces/VerifyEmailResult.html":{}},"body":{"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"coverage.html":{}}}],["verifyemailservice",{"_index":1854,"title":{"injectables/VerifyEmailService.html":{}},"body":{"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"coverage.html":{}}}],["verifying",{"_index":1859,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["verifypasswordresetcode",{"_index":1155,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["verifypasswordresetcode(this._auth",{"_index":1218,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["verifyresults",{"_index":1186,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["verifystatuses",{"_index":609,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["version",{"_index":1600,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{},"properties.html":{}}}],["versions",{"_index":2013,"title":{},"body":{"license.html":{}}}],["vertexai",{"_index":2729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["very",{"_index":745,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["video",{"_index":1469,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vies",{"_index":1657,"title":{},"body":{"components/SidebarComponent.html":{}}}],["view",{"_index":525,"title":{},"body":{"components/CentralLayoutComponent.html":{},"interfaces/ControlProperties.html":{},"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["viewchild",{"_index":920,"title":{},"body":{"components/DeleteAccountComponent.html":{},"components/PhotoUploadComponent.html":{}}}],["viewchild.required('confirmdialog",{"_index":908,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["viewchild.required('photoupload",{"_index":1391,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["viewed",{"_index":1506,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["viewmodel",{"_index":1795,"title":{"interfaces/ViewModel.html":{}},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{}}}],["views",{"_index":954,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["violates",{"_index":2379,"title":{},"body":{"license.html":{}}}],["violation",{"_index":2434,"title":{},"body":{"license.html":{}}}],["visible",{"_index":2142,"title":{},"body":{"license.html":{}}}],["visit",{"_index":1459,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["visiting",{"_index":1564,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["visitor",{"_index":527,"title":{},"body":{"components/CentralLayoutComponent.html":{}}}],["visitors",{"_index":1412,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{}}}],["vm",{"_index":1609,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["vm.email",{"_index":1645,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["vm.errorcode",{"_index":1646,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["vm.passwordresetsent",{"_index":1623,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["vm.profilephotos",{"_index":1845,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["vm.restoredemail",{"_index":1622,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["vm.showform",{"_index":1644,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["vm.successful",{"_index":1621,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["vm.verified",{"_index":1858,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["voice",{"_index":1468,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["void",{"_index":223,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"components/DeleteAccountComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["volume",{"_index":2286,"title":{},"body":{"license.html":{}}}],["vs",{"_index":335,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["w",{"_index":2627,"title":{},"body":{"license.html":{}}}],["wait",{"_index":796,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["waiting",{"_index":1663,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["waive",{"_index":2241,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":2603,"title":{},"body":{"license.html":{}}}],["want",{"_index":2024,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["warranties",{"_index":1715,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["warranty",{"_index":1737,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["way",{"_index":1431,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["ways",{"_index":2297,"title":{},"body":{"license.html":{}}}],["web",{"_index":1121,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["webp",{"_index":1841,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["website",{"_index":1460,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{}}}],["welcome",{"_index":2628,"title":{},"body":{"license.html":{}}}],["well",{"_index":2129,"title":{},"body":{"license.html":{}}}],["whatever",{"_index":2474,"title":{},"body":{"license.html":{}}}],["whenever",{"_index":1458,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["whether",{"_index":2033,"title":{},"body":{"license.html":{}}}],["who's",{"_index":1216,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["whole",{"_index":1252,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["whose",{"_index":2337,"title":{},"body":{"license.html":{}}}],["widely",{"_index":2160,"title":{},"body":{"license.html":{}}}],["width",{"_index":1680,"title":{},"body":{"components/StandardLayoutComponent.html":{}}}],["wildcard",{"_index":1090,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["window",{"_index":2175,"title":{},"body":{"license.html":{}}}],["wipo",{"_index":2232,"title":{},"body":{"license.html":{}}}],["wish",{"_index":941,"title":{},"body":{"components/DeleteAccountComponent.html":{},"license.html":{}}}],["withcomponentinputbinding",{"_index":2732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":1560,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["withinmemoryscrolling",{"_index":2733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":347,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["work",{"_index":1297,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"index.html":{},"license.html":{}}}],["work's",{"_index":2182,"title":{},"body":{"license.html":{}}}],["worker",{"_index":1949,"title":{},"body":{"dependencies.html":{}}}],["worker.js",{"_index":2720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["working",{"_index":2161,"title":{},"body":{"license.html":{}}}],["works",{"_index":77,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/PhotoManagerComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["worldwide",{"_index":2505,"title":{},"body":{"license.html":{}}}],["wrapper",{"_index":1862,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["wraps",{"_index":1868,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["writablesignal",{"_index":573,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["writing",{"_index":2570,"title":{},"body":{"license.html":{}}}],["written",{"_index":441,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["wrong",{"_index":1341,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["years",{"_index":2307,"title":{},"body":{"license.html":{}}}],["yourself",{"_index":2517,"title":{},"body":{"license.html":{}}}],["yyyy",{"_index":967,"title":{},"body":{"components/FooterComponent.html":{}}}],["zone.js",{"_index":1962,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionCodeState.html":{"url":"interfaces/ActionCodeState.html","title":"interface - ActionCodeState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionCodeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/actions/actions.component.ts\n        \n\n\n            \n                Description\n            \n            \n                https://firebase.google.com/docs/reference/js/auth.actioncodeurl\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            continueUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lang\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            oobCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        continueUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        continueUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lang:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oobCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        oobCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  effect,\n  inject,\n  input,\n} from '@angular/core';\nimport type { InputSignal, Signal } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\n/**\n * https://firebase.google.com/docs/reference/js/auth.actioncodeurl\n */\nexport interface ActionCodeState {\n  continueUrl?: string;\n  lang?: string;\n  mode: string;\n  oobCode: string;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ SpinnerComponent ],\n  selector: 'app-actions',\n  template: '',\n})\nexport class ActionsComponent {\n  public readonly continueUrl: InputSignal = input();\n  public readonly lang: InputSignal = input();\n  public readonly mode: InputSignal = input();\n  public readonly oobCode: InputSignal = input();\n\n  private readonly _$actionState: Signal>;\n  private readonly _modePaths: Record;\n  private readonly _router: Router;\n\n  constructor() {\n    this._$actionState = computed((): Partial => ({\n      continueUrl: this.continueUrl(),\n      lang: this.lang(),\n      mode: this.mode(),\n      oobCode: this.oobCode(),\n    }));\n    this._modePaths = {\n      recoverEmail: '/recover-email',\n      resetPassword: '/reset-password',\n      verifyAndChangeEmail: '/verify-email',\n      verifyEmail: '/verify-email',\n    };\n    this._router = inject(Router);\n\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises -- This works, for now, but perhaps not in the future!\n    effect(async (): Promise => {\n      const state = this._$actionState();\n\n      if (state.continueUrl) {\n        const url = new URL(state.continueUrl);\n        state.continueUrl = `${url.pathname}${url.search}${url.hash}`;\n      }\n\n      if (state.mode && state.oobCode) {\n        const path = this._modePaths[state.mode];\n\n        if (path) {\n          // If this promise is not awaited then test cases fail :-(\n          await this._router.navigateByUrl(path, { replaceUrl: true, state });\n        } else {\n          console.error(`Unknown mode '${state.mode}'`);\n        }\n      } else {\n        if (!state.mode) {\n          console.error('Missing ActionCodeSettings#mode');\n        }\n        if (!state.oobCode) {\n          console.error('Missing ActionCodeSettings#oobCode');\n        }\n      }\n\n      // Something about this action is invalid.\n      // Navigate to root to allow default redirectTo Route to decide initial destination.\n      await this._router.navigateByUrl('/', { replaceUrl: true });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionsComponent.html":{"url":"components/ActionsComponent.html","title":"component - ActionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/actions/actions.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-actions\n            \n\n\n            \n                imports\n                \n                                SpinnerComponent\n                \n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _$actionState\n                            \n                            \n                                    Private\n                                    Readonly\n                                _modePaths\n                            \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Public\n                                    Readonly\n                                continueUrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                lang\n                            \n                            \n                                    Public\n                                    Readonly\n                                mode\n                            \n                            \n                                    Public\n                                    Readonly\n                                oobCode\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                continueUrl\n                            \n                            \n                                lang\n                            \n                            \n                                mode\n                            \n                            \n                                oobCode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/actions/actions.component.ts:42\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        continueUrl\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/identity/actions/actions.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lang\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/identity/actions/actions.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/identity/actions/actions.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        oobCode\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/identity/actions/actions.component.ts:38\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _$actionState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Signal>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/actions/actions.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _modePaths\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/actions/actions.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/actions/actions.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        continueUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/actions/actions.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/actions/actions.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/actions/actions.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        oobCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/actions/actions.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  effect,\n  inject,\n  input,\n} from '@angular/core';\nimport type { InputSignal, Signal } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\n/**\n * https://firebase.google.com/docs/reference/js/auth.actioncodeurl\n */\nexport interface ActionCodeState {\n  continueUrl?: string;\n  lang?: string;\n  mode: string;\n  oobCode: string;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ SpinnerComponent ],\n  selector: 'app-actions',\n  template: '',\n})\nexport class ActionsComponent {\n  public readonly continueUrl: InputSignal = input();\n  public readonly lang: InputSignal = input();\n  public readonly mode: InputSignal = input();\n  public readonly oobCode: InputSignal = input();\n\n  private readonly _$actionState: Signal>;\n  private readonly _modePaths: Record;\n  private readonly _router: Router;\n\n  constructor() {\n    this._$actionState = computed((): Partial => ({\n      continueUrl: this.continueUrl(),\n      lang: this.lang(),\n      mode: this.mode(),\n      oobCode: this.oobCode(),\n    }));\n    this._modePaths = {\n      recoverEmail: '/recover-email',\n      resetPassword: '/reset-password',\n      verifyAndChangeEmail: '/verify-email',\n      verifyEmail: '/verify-email',\n    };\n    this._router = inject(Router);\n\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises -- This works, for now, but perhaps not in the future!\n    effect(async (): Promise => {\n      const state = this._$actionState();\n\n      if (state.continueUrl) {\n        const url = new URL(state.continueUrl);\n        state.continueUrl = `${url.pathname}${url.search}${url.hash}`;\n      }\n\n      if (state.mode && state.oobCode) {\n        const path = this._modePaths[state.mode];\n\n        if (path) {\n          // If this promise is not awaited then test cases fail :-(\n          await this._router.navigateByUrl(path, { replaceUrl: true, state });\n        } else {\n          console.error(`Unknown mode '${state.mode}'`);\n        }\n      } else {\n        if (!state.mode) {\n          console.error('Missing ActionCodeSettings#mode');\n        }\n        if (!state.oobCode) {\n          console.error('Missing ActionCodeSettings#oobCode');\n        }\n      }\n\n      // Something about this action is invalid.\n      // Navigate to root to allow default redirectTo Route to decide initial destination.\n      await this._router.navigateByUrl('/', { replaceUrl: true });\n    });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ RouterOutlet ],\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppTitleStrategyService.html":{"url":"injectables/AppTitleStrategyService.html","title":"injectable - AppTitleStrategyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppTitleStrategyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/app-title-strategy.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TitleStrategy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _baseTitle\n                            \n                            \n                                    Private\n                                    Readonly\n                                _title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                updateTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/app-title-strategy.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateTitle\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTitle(snapshot: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/app-title-strategy.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                snapshot\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _baseTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/app-title-strategy.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Title\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/app-title-strategy.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { TitleStrategy } from '@angular/router';\nimport type { RouterStateSnapshot } from '@angular/router';\n\n@Injectable({ providedIn: 'root' })\nexport class AppTitleStrategyService extends TitleStrategy {\n  private readonly _baseTitle: string; // Title tag content from index.html\n  private readonly _title: Title;\n\n  constructor() {\n    super();\n    this._title = inject(Title);\n    // Tested in `ng serve` and `ng build` that this gets the  from index.html\n    this._baseTitle = this._title.getTitle();\n  }\n\n  public updateTitle(snapshot: RouterStateSnapshot): void {\n    const pageTitle = this.buildTitle(snapshot);\n    if (pageTitle == undefined) {\n      this._title.setTitle(this._baseTitle);\n    } else {\n      this._title.setTitle(`${pageTitle} | ${this._baseTitle}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplyResult.html":{"url":"interfaces/ApplyResult.html","title":"interface - ApplyResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApplyResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/recover-email/recover-email.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            restoredEmail\n                                        \n                                \n                                \n                                        \n                                            successful\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        restoredEmail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        restoredEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        successful\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        successful:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport {\n  applyActionCode,\n  Auth,\n  checkActionCode,\n  sendPasswordResetEmail,\n} from '@angular/fire/auth';\nimport {\n  catchError,\n  delayWhen,\n  of,\n  switchMap,\n  timer,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { getErrorCode } from '../error-code';\n\nexport interface RecoverEmailResults extends ApplyResult {\n  errorCode?: string;\n  passwordResetSent: boolean;\n}\n\ninterface ApplyResult {\n  restoredEmail?: string;\n  successful: boolean;\n}\n\nexport const SEND_EMAIL_DELAY = 500; // milliseconds\n\n@Injectable({ providedIn: 'root' })\nexport class RecoverEmailService {\n  private readonly _auth: Auth = inject(Auth);\n\n  /**\n   * Creates and Observable that when subscribed to will apply the action code to restore the user's\n   * original email address. And if present will automatically send a password reset email to the\n   * restored address in case of account compromise.\n   *\n   * @param delay - Not for production use! Only for use with testing.\n   */\n  public recoverEmail$(code: string | undefined, delay: number = SEND_EMAIL_DELAY): Observable {\n    return of(code).pipe(\n      switchMap(async (oobCode: string | undefined): Promise => this._doActionCode(oobCode)),\n      // Unfortunately it can take time for Firebase to recognize that the email has been restored\n      // so we can send the password reset email.\n      delayWhen((result: ApplyResult): Observable => timer(result.restoredEmail ? delay : 0)),\n      // Give the user the option to reset their password in case the account was compromised:\n      switchMap(async (result: ApplyResult): Promise => {\n        const passwordResetSent = await this._sendPasswordResetEmail(result.restoredEmail);\n        return { ...result, passwordResetSent };\n      }),\n      catchError((problem: unknown): Observable => {\n        console.error('RecoverEmailComponent', problem);\n\n        return of({\n          errorCode: getErrorCode(problem),\n          passwordResetSent: false,\n          successful: false,\n        });\n      }),\n    );\n  }\n\n  /**\n   * Check that the oobCode is still valid, and then apply it.\n   * @returns the restored email address and a success flag.\n   * @throws Error if the oobCode is falsy or the firebase methods fail.\n   */\n  private async _doActionCode(oobCode: string | undefined): Promise {\n    if (oobCode) {\n      const info = await checkActionCode(this._auth, oobCode);\n      const { email: restoredEmail } = info.data;\n\n      await applyActionCode(this._auth, oobCode);\n      // Account email reverted to restoredEmail\n\n      // Problem with being pedantic with all types except undefined vs null is that sometimes you\n      // need to get rid of null from the type.\n      return { restoredEmail: restoredEmail ?? undefined, successful: true };\n    }\n\n    throw new Error('oobCode not found');\n  }\n\n  /**\n   * Firebase types indicate that the email may not always be returned (Accounts without email addresses?)\n   * If the email isn't truthy then just skip the reset.\n   * If the send email fails for some reason, just return false.\n   */\n  private async _sendPasswordResetEmail(restoredEmail: string | undefined): Promise {\n    if (restoredEmail) {\n      try {\n        await sendPasswordResetEmail(this._auth, restoredEmail);\n        return true;\n      } catch (err: unknown) {\n        console.error('RecoverEmailComponent#_sendPasswordResetEmail', err);\n      }\n    }\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthErrorMessagesComponent.html":{"url":"components/AuthErrorMessagesComponent.html","title":"component - AuthErrorMessagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthErrorMessagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/auth-error-messages/auth-error-messages.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-error-messages\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./auth-error-messages.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                $code\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                $code\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        $code\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/identity/auth-error-messages/auth-error-messages.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $code\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/auth-error-messages/auth-error-messages.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, input } from '@angular/core';\nimport type { InputSignal } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-auth-error-messages',\n  templateUrl: './auth-error-messages.component.html',\n})\nexport class AuthErrorMessagesComponent {\n  // Linter doesn't like aliasing inputs, but also wants Signals called in templates to be prefixed with $\n  public readonly $code: InputSignal = input.required();\n}\n\n    \n\n    \n        @switch ($code()) {\n  @case ('auth/code-expired') {\n    \n      The SMS code has expired. Please re-send the verification code to try again.\n    \n  }\n\n  @case ('auth/cors-unsupported') {\n    \n      This browser is not supported.\n    \n  }\n\n  @case ('auth/credential-already-in-use') {\n    \n      This credential is already associated with a different user account.\n    \n  }\n\n  @case ('auth/requires-recent-login') {\n    \n      This operation is sensitive and requires recent authentication. Log in again before retrying this request.\n    \n  }\n\n  @case ('auth/email-change-needs-verification') {\n    \n      Multi-factor users must always have a verified email.\n    \n  }\n\n  @case ('auth/email-already-in-use') {\n    \n      The email address is already in use by another account.\n    \n  }\n\n  @case ('auth/expired-action-code') {\n    \n      The action code has expired.\n    \n  }\n\n  @case ('auth/cancelled-popup-request') {\n    \n      This operation has been cancelled due to another conflicting popup being opened.\n    \n  }\n\n  @case ('auth/invalid-verification-code') {\n    \n      The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure to\n      use the verification code provided by the user.\n    \n  }\n\n  @case ('auth/invalid-continue-uri') {\n    \n      The continue URL provided in the request is invalid.\n    \n  }\n\n  @case ('auth/invalid-email') {\n    \n      The email address is badly formatted.\n    \n  }\n\n  @case ('auth/invalid-credential') {\n    \n      The information supplied is incorrect. Please try again.\n    \n  }\n\n  @case ('auth/password-does-not-meet-requirements') {\n    \n      The password does not meet the requirements.\n    \n  }\n\n  @case ('auth/invalid-action-code') {\n    \n      The action code is invalid. This can happen if the code is malformed, expired, or has already been used.\n    \n  }\n\n  @case ('auth/wrong-password') {\n    \n      The password is invalid or the user does not have a password.\n    \n  }\n\n  @case ('auth/invalid-phone-number') {\n    \n      The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format.\n      E.164 phone numbers are written in the format [+][country code][subscriber number including area code].\n    \n  }\n\n  @case ('auth/invalid-recipient-email') {\n    \n      The email corresponding to this action failed to send as the provided recipient email address is invalid.\n    \n  }\n\n  @case ('auth/missing-phone-number') {\n    \n      To send verification codes, provide a phone number for the recipient.\n    \n  }\n  @case ('auth/multi-factor-auth-required') {\n    \n      Proof of ownership of a second factor is required to complete sign-in.\n    \n  }\n\n  @case ('auth/account-exists-with-different-credential') {\n    \n      An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this\n      email address.\n    \n  }\n\n  @case ('auth/network-request-failed') {\n    \n      A network error (such as timeout, interrupted connection or unreachable host) has occurred.\n    \n  }\n\n  @case ('auth/popup-blocked') {\n    \n      Unable to establish a connection with the popup. It may have been blocked by the browser.\n    \n  }\n\n  @case ('auth/popup-closed-by-user') {\n    \n      The popup has been closed by your before finalizing the operation.\n    \n  }\n\n  @case ('auth/quota-exceeded') {\n    \n      The project’s quota for this operation has been exceeded.\n    \n  }\n\n  @case ('auth/redirect-cancelled-by-user') {\n    \n      The redirect operation has been cancelled by you before finalizing.\n    \n  }\n\n  @case ('auth/redirect-operation-pending') {\n    \n      A redirect sign-in operation is already pending.\n    \n  }\n\n  @case ('auth/timeout') {\n    \n      The operation has timed out.\n    \n  }\n\n  @case ('auth/user-token-expired') {\n    \n      Your credentials is no longer valid. You must sign in again.\n    \n  }\n\n  @case ('auth/too-many-requests') {\n    \n      We have blocked all requests from this device due to unusual activity. Try again later.\n    \n  }\n\n  @case ('auth/unverified-email') {\n    \n      The operation requires a verified email.\n    \n  }\n\n  @case ('auth/user-cancelled') {\n    \n      You did not grant your application the permissions it requested.\n    \n  }\n\n  @case ('auth/user-not-found') {\n    \n      There is no user record corresponding to this identifier. The user may have been deleted.\n    \n  }\n\n  @case ('auth/user-disabled') {\n    \n      The user account has been disabled by an administrator.\n    \n  }\n\n  @case ('auth/user-mismatch') {\n    \n      The supplied credentials do not correspond to the previously signed in user.\n    \n  }\n\n  @case ('auth/weak-password') {\n    \n      The password must be 12 characters long or more.\n    \n  }\n\n  @case ('auth/web-storage-unsupported') {\n    \n      This browser is not supported or 3rd party cookies and data may be disabled.\n    \n  }\n\n  @default {\n    \n      A problem occurred. Please refresh and try again.\n    \n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@switch ($code()) {  @case (\\'auth/code-expired\\') {          The SMS code has expired. Please re-send the verification code to try again.      }  @case (\\'auth/cors-unsupported\\') {          This browser is not supported.      }  @case (\\'auth/credential-already-in-use\\') {          This credential is already associated with a different user account.      }  @case (\\'auth/requires-recent-login\\') {          This operation is sensitive and requires recent authentication. Log in again before retrying this request.      }  @case (\\'auth/email-change-needs-verification\\') {          Multi-factor users must always have a verified email.      }  @case (\\'auth/email-already-in-use\\') {          The email address is already in use by another account.      }  @case (\\'auth/expired-action-code\\') {          The action code has expired.      }  @case (\\'auth/cancelled-popup-request\\') {          This operation has been cancelled due to another conflicting popup being opened.      }  @case (\\'auth/invalid-verification-code\\') {          The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure to      use the verification code provided by the user.      }  @case (\\'auth/invalid-continue-uri\\') {          The continue URL provided in the request is invalid.      }  @case (\\'auth/invalid-email\\') {          The email address is badly formatted.      }  @case (\\'auth/invalid-credential\\') {          The information supplied is incorrect. Please try again.      }  @case (\\'auth/password-does-not-meet-requirements\\') {          The password does not meet the requirements.      }  @case (\\'auth/invalid-action-code\\') {          The action code is invalid. This can happen if the code is malformed, expired, or has already been used.      }  @case (\\'auth/wrong-password\\') {          The password is invalid or the user does not have a password.      }  @case (\\'auth/invalid-phone-number\\') {          The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format.      E.164 phone numbers are written in the format [+][country code][subscriber number including area code].      }  @case (\\'auth/invalid-recipient-email\\') {          The email corresponding to this action failed to send as the provided recipient email address is invalid.      }  @case (\\'auth/missing-phone-number\\') {          To send verification codes, provide a phone number for the recipient.      }  @case (\\'auth/multi-factor-auth-required\\') {          Proof of ownership of a second factor is required to complete sign-in.      }  @case (\\'auth/account-exists-with-different-credential\\') {          An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this      email address.      }  @case (\\'auth/network-request-failed\\') {          A network error (such as timeout, interrupted connection or unreachable host) has occurred.      }  @case (\\'auth/popup-blocked\\') {          Unable to establish a connection with the popup. It may have been blocked by the browser.      }  @case (\\'auth/popup-closed-by-user\\') {          The popup has been closed by your before finalizing the operation.      }  @case (\\'auth/quota-exceeded\\') {          The project’s quota for this operation has been exceeded.      }  @case (\\'auth/redirect-cancelled-by-user\\') {          The redirect operation has been cancelled by you before finalizing.      }  @case (\\'auth/redirect-operation-pending\\') {          A redirect sign-in operation is already pending.      }  @case (\\'auth/timeout\\') {          The operation has timed out.      }  @case (\\'auth/user-token-expired\\') {          Your credentials is no longer valid. You must sign in again.      }  @case (\\'auth/too-many-requests\\') {          We have blocked all requests from this device due to unusual activity. Try again later.      }  @case (\\'auth/unverified-email\\') {          The operation requires a verified email.      }  @case (\\'auth/user-cancelled\\') {          You did not grant your application the permissions it requested.      }  @case (\\'auth/user-not-found\\') {          There is no user record corresponding to this identifier. The user may have been deleted.      }  @case (\\'auth/user-disabled\\') {          The user account has been disabled by an administrator.      }  @case (\\'auth/user-mismatch\\') {          The supplied credentials do not correspond to the previously signed in user.      }  @case (\\'auth/weak-password\\') {          The password must be 12 characters long or more.      }  @case (\\'auth/web-storage-unsupported\\') {          This browser is not supported or 3rd party cookies and data may be disabled.      }  @default {          A problem occurred. Please refresh and try again.      }}'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthErrorMessagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CentralLayoutComponent.html":{"url":"components/CentralLayoutComponent.html","title":"component - CentralLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CentralLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/central/central.component.ts\n\n\n\n    \n        Description\n    \n    \n        View for pages where the visitor is not logged in, or where login is not required.\nCenters all content into the middle of the screen. Dhould be used for single purpose pages.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-central-layout\n            \n\n\n            \n                imports\n                \n                                FooterComponent\n                            NgOptimizedImage\n                            RouterLink\n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./central.component.html\n            \n\n\n\n            \n                styleUrl\n                ./central.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { NgOptimizedImage } from '@angular/common';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterLink, RouterOutlet } from '@angular/router';\n\nimport { FooterComponent } from '../footer/footer.component';\n\n/**\n * View for pages where the visitor is not logged in, or where login is not required.\n * Centers all content into the middle of the screen. Dhould be used for single purpose pages.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    FooterComponent,\n    NgOptimizedImage,\n    RouterLink,\n    RouterOutlet,\n  ],\n  selector: 'app-central-layout',\n  styleUrl: './central.component.scss',\n  templateUrl: './central.component.html',\n})\nexport class CentralLayoutComponent {}\n\n    \n\n    \n        \n  \n    \n      \n      Brainfry Quiz\n    \n  \n  \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Brainfry Quiz              '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CentralLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeEmailComponent.html":{"url":"components/ChangeEmailComponent.html","title":"component - ChangeEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangeEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/change-email/change-email.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-email\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                            ReactiveFormsModule\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./change-email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                $email1CntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $email1CntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $email2CntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $email2CntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $errorCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                $formEmailsInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $passwordCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $passwordCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $verificationStatus\n                            \n                            \n                                    Public\n                                    Readonly\n                                changeEmailForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                email1Cntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                email2Cntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                maxPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                minPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                passwordCntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/change-email/change-email.component.ts:58\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/change-email/change-email.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $email1CntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $email1CntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $email2CntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $email2CntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $formEmailsInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $passwordCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $passwordCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $verificationStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        changeEmailForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChangeEmailFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email1Cntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email2Cntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        maxPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.maxLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        minPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.minLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        passwordCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MaybeUser$\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { Signal, WritableSignal } from '@angular/core';\nimport { EmailAuthProvider, reauthenticateWithCredential, verifyBeforeUpdateEmail } from '@angular/fire/auth';\nimport type { User } from '@angular/fire/auth';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport type { FormControl, ValidationErrors } from '@angular/forms';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser$ } from '@app/core/user.token';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\nimport { createEmailControl, createPasswordControl, PASSWORDS } from '../identity-forms';\nimport { confirmMatch, confirmMatchFormErrors } from '../validators/confirm-match';\n\ntype ChangeEmailFormGroup = FormGroup;\n  email2: FormControl;\n  password: FormControl;\n}>;\n\ntype VerifyStatuses = 'sending' | 'sent' | 'unsent';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    ReactiveFormsModule,\n    SpinnerComponent,\n  ],\n  selector: 'app-change-email',\n  templateUrl: './change-email.component.html',\n})\nexport class ChangeEmailComponent {\n  public readonly $email1CntrlErrors: Signal;\n  public readonly $email1CntrlInvalid: Signal;\n  public readonly $email2CntrlErrors: Signal;\n  public readonly $email2CntrlInvalid: Signal;\n  public readonly $errorCode: WritableSignal;\n  public readonly $formEmailsInvalid: Signal;\n  public readonly $passwordCntrlErrors: Signal;\n  public readonly $passwordCntrlInvalid: Signal;\n  public readonly $verificationStatus: WritableSignal;\n  public readonly changeEmailForm: ChangeEmailFormGroup;\n  public readonly email1Cntrl: FormControl;\n  public readonly email2Cntrl: FormControl;\n  public readonly maxPasswordLength: number = PASSWORDS.maxLength;\n  public readonly minPasswordLength: number = PASSWORDS.minLength;\n  public readonly passwordCntrl: FormControl;\n  public readonly user$: MaybeUser$;\n\n  constructor() {\n    ({ $errors: this.$email1CntrlErrors, $invalid: this.$email1CntrlInvalid, control: this.email1Cntrl } = createEmailControl());\n    ({ $errors: this.$email2CntrlErrors, $invalid: this.$email2CntrlInvalid, control: this.email2Cntrl } = createEmailControl());\n    ({ $errors: this.$passwordCntrlErrors, $invalid: this.$passwordCntrlInvalid, control: this.passwordCntrl } = createPasswordControl());\n\n    this.changeEmailForm = new FormGroup(\n      {\n        email1: this.email1Cntrl,\n        email2: this.email2Cntrl,\n        password: this.passwordCntrl,\n      },\n      confirmMatch('email1', 'email2'),\n    );\n\n    this.$formEmailsInvalid = confirmMatchFormErrors(this.changeEmailForm, this.email1Cntrl, this.email2Cntrl);\n\n    this.$errorCode = signal('');\n    this.$verificationStatus = signal('unsent');\n\n    // Not handling non-logged in users because the Route guards should.\n    this.user$ = inject(USER$);\n  }\n\n  public async onSubmit(user: User): Promise {\n    const { email1, password } = this.changeEmailForm.value;\n\n    // Validators prevent email1 or password being falsy, but TypeScript doesn't know that.\n    // Additionally, all users are expected to have an email address.\n    if (this.changeEmailForm.invalid || !email1 || !password || !user.email) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this.$errorCode.set(''); // Clear out any existing errors\n    this.$verificationStatus.set('sending');\n\n    try {\n      const emailCreds = EmailAuthProvider.credential(user.email, password);\n      const credentials = await reauthenticateWithCredential(user, emailCreds);\n      await verifyBeforeUpdateEmail(credentials.user, email1);\n      this.$verificationStatus.set('sent');\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n      this.$verificationStatus.set('unsent');\n    }\n  }\n}\n\n    \n\n    \n        @let status = $verificationStatus();\n@if (status !== 'sending') {\n  \n    Change your email\n    @if (status === 'unsent') {\n      @if (user$ | async; as user) {\n        \n          To confirm that your new email address is valid we will send an email to your new address with a verification link.\n        \n        \n          @if (user.email) {\n            \n              Current email:\n              \n            \n          }\n\n          \n            New email:\n            \n            \n              @if ($email1CntrlErrors(); as errors) {\n                \n                  @if (errors['required']) {\n                    \n                      Please enter your new email address.\n                    \n                  }\n                  @if (errors['email']) {\n                    \n                      Please enter a valid email address.\n                    \n                  }\n                \n              }\n            \n          \n\n          \n            Confirm email:\n            \n            \n              @if ($email2CntrlErrors(); as errors) {\n                \n                  @if (errors['required']) {\n                    \n                      Please re-enter your new email address.\n                    \n                  }\n                  @if (errors['email']) {\n                    \n                      Please enter a valid email address.\n                    \n                  }\n                \n              }\n            \n          \n\n          \n            @if ($formEmailsInvalid()) {\n              \n                Emails must match.\n              \n            }\n          \n\n          \n            Password:\n            \n            \n              @if ($passwordCntrlErrors(); as errors) {\n                \n                  @if (errors['required']) {\n                    \n                      Please enter your password.\n                    \n                  }\n                  @if (errors['minlength']) {\n                    \n                      Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase\n                      letters, numbers, and symbols.\n                    \n                  }\n                  @if (errors['maxlength']) {\n                    \n                      Your password may not be longer than {{ maxPasswordLength }} characters.\n                    \n                  }\n                \n              }\n            \n          \n\n          \n            @if ($formEmailsInvalid()) {\n              \n                Emails must match.\n              \n            }\n          \n\n          @if ($errorCode(); as errorCode) {\n            \n              \n            \n          }\n\n          \n            \n              Change email\n            \n          \n        \n      } @else {\n        \n      }\n    } @else {\n      \n        To complete your email address change click the link in the email sent to\n        {{ email1Cntrl.value }}.\n        Please check your email inbox and spam folder in a few minutes.\n      \n    }\n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let status = $verificationStatus();@if (status !== \\'sending\\') {      Change your email    @if (status === \\'unsent\\') {      @if (user$ | async; as user) {                  To confirm that your new email address is valid we will send an email to your new address with a verification link.                          @if (user.email) {                          Current email:                                    }                      New email:                                      @if ($email1CntrlErrors(); as errors) {                                  @if (errors[\\'required\\']) {                                          Please enter your new email address.                                      }                  @if (errors[\\'email\\']) {                                          Please enter a valid email address.                                      }                              }                                            Confirm email:                                      @if ($email2CntrlErrors(); as errors) {                                  @if (errors[\\'required\\']) {                                          Please re-enter your new email address.                                      }                  @if (errors[\\'email\\']) {                                          Please enter a valid email address.                                      }                              }                                            @if ($formEmailsInvalid()) {                              Emails must match.                          }                                Password:                                      @if ($passwordCntrlErrors(); as errors) {                                  @if (errors[\\'required\\']) {                                          Please enter your password.                                      }                  @if (errors[\\'minlength\\']) {                                          Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase                      letters, numbers, and symbols.                                      }                  @if (errors[\\'maxlength\\']) {                                          Your password may not be longer than {{ maxPasswordLength }} characters.                                      }                              }                                            @if ($formEmailsInvalid()) {                              Emails must match.                          }                    @if ($errorCode(); as errorCode) {                                                }                                    Change email                                    } @else {              }    } @else {              To complete your email address change click the link in the email sent to        {{ email1Cntrl.value }}.        Please check your email inbox and spam folder in a few minutes.          }  } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangeEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePasswordComponent.html":{"url":"components/ChangePasswordComponent.html","title":"component - ChangePasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangePasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/change-password/change-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-password\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                            ReactiveFormsModule\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./change-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                $currentPwCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $currentPwCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $errorCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                $formPasswordsInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password1CntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password1CntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password2CntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password2CntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $showForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                changePasswordForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                currentPwCntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                maxPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                minPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                password1Cntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                password2Cntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/change-password/change-password.component.ts:56\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/change-password/change-password.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $currentPwCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $currentPwCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $formPasswordsInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password1CntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password1CntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password2CntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password2CntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $showForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        changePasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChangePasswordFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        currentPwCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        maxPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.maxLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        minPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.minLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password1Cntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password2Cntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MaybeUser$\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { Signal, WritableSignal } from '@angular/core';\nimport { EmailAuthProvider, reauthenticateWithCredential, updatePassword } from '@angular/fire/auth';\nimport type { User } from '@angular/fire/auth';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport type { FormControl, ValidationErrors } from '@angular/forms';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser$ } from '@app/core/user.token';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\nimport { createPasswordControl, PASSWORDS } from '../identity-forms';\nimport { confirmMatch, confirmMatchFormErrors } from '../validators/confirm-match';\n\ntype ChangePasswordFormGroup = FormGroup;\n  password1: FormControl;\n  password2: FormControl;\n}>;\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    ReactiveFormsModule,\n    SpinnerComponent,\n  ],\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n})\nexport class ChangePasswordComponent {\n  public readonly $currentPwCntrlErrors: Signal;\n  public readonly $currentPwCntrlInvalid: Signal;\n  public readonly $errorCode: WritableSignal;\n  public readonly $formPasswordsInvalid: Signal;\n  public readonly $password1CntrlErrors: Signal;\n  public readonly $password1CntrlInvalid: Signal;\n  public readonly $password2CntrlErrors: Signal;\n  public readonly $password2CntrlInvalid: Signal;\n  public readonly $showForm: WritableSignal;\n  public readonly changePasswordForm: ChangePasswordFormGroup;\n  public readonly currentPwCntrl: FormControl;\n  public readonly maxPasswordLength: number = PASSWORDS.maxLength;\n  public readonly minPasswordLength: number = PASSWORDS.minLength;\n  public readonly password1Cntrl: FormControl;\n  public readonly password2Cntrl: FormControl;\n  public readonly user$: MaybeUser$;\n\n  constructor() {\n    ({\n      $errors: this.$currentPwCntrlErrors,\n      $invalid: this.$currentPwCntrlInvalid,\n      control: this.currentPwCntrl,\n    } = createPasswordControl());\n    ({\n      $errors: this.$password1CntrlErrors,\n      $invalid: this.$password1CntrlInvalid,\n      control: this.password1Cntrl,\n    } = createPasswordControl(true));\n    ({\n      $errors: this.$password2CntrlErrors,\n      $invalid: this.$password2CntrlInvalid,\n      control: this.password2Cntrl,\n    } = createPasswordControl());\n\n    this.changePasswordForm = new FormGroup(\n      {\n        currentPw: this.currentPwCntrl,\n        password1: this.password1Cntrl,\n        password2: this.password2Cntrl,\n      },\n      confirmMatch('password1', 'password2'),\n    );\n\n    this.$formPasswordsInvalid = confirmMatchFormErrors(this.changePasswordForm, this.password1Cntrl, this.password2Cntrl);\n\n    this.$errorCode = signal('');\n    this.$showForm = signal(true);\n\n    // Not handling non-logged in users because the Route guards should.\n    this.user$ = inject(USER$);\n  }\n\n  public async onSubmit(user: User): Promise {\n    const { currentPw, password1 } = this.changePasswordForm.value;\n\n    // Validators prevent email1 or password being falsy, but TypeScript doesn't know that.\n    // Additionally, all users are expected to have an email address.\n    if (this.changePasswordForm.invalid || !currentPw || !password1 || !user.email) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this.$showForm.set(false);\n    this.$errorCode.set(''); // Clear out any existing errors\n\n    try {\n      const emailCreds = EmailAuthProvider.credential(user.email, currentPw);\n      const credentials = await reauthenticateWithCredential(user, emailCreds);\n      await updatePassword(credentials.user, password1);\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n    }\n\n    this.$showForm.set(true);\n  }\n}\n\n    \n\n    \n        @if ($showForm()) {\n  \n    Change your password\n    @if (user$ | async; as user) {\n      \n        \n          \n            Current password:\n          \n          \n          \n            @if ($currentPwCntrlErrors(); as errors) {\n              \n                @if (errors['required']) {\n                  \n                    Please enter your current password.\n                  \n                }\n                @if (errors['minlength']) {\n                  \n                    Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase\n                    letters, numbers, and symbols.\n                  \n                }\n                @if (errors['maxlength']) {\n                  \n                    Your password may not be longer than {{ maxPasswordLength }} characters.\n                  \n                }\n              \n            }\n          \n        \n\n        \n          New password:\n          \n          \n            @if ($password1CntrlErrors(); as errors) {\n              \n                @if (errors['required']) {\n                  \n                    Please enter a new password.\n                  \n                }\n                @if (errors['minlength']) {\n                  \n                    Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase\n                    letters, numbers, and symbols.\n                  \n                }\n                @if (errors['maxlength']) {\n                  \n                    Your password may not be longer than {{ maxPasswordLength }} characters.\n                  \n                }\n                @if (errors['passwordstrength']) {\n                  \n                    Your password is not very strong. Include a combination of upper and lowercase letters, numbers, and symbols.\n                  \n                }\n                @if (errors['firebasevalidator']) {\n                  \n                    Your password needs to include: TODO\n                  \n                }\n              \n            }\n          \n        \n\n        \n          \n            Confirm password:\n          \n          \n          \n            @if ($password2CntrlErrors(); as errors) {\n              \n                @if (errors['required']) {\n                  \n                    Please re-enter your password.\n                  \n                }\n                @if (errors['minlength']) {\n                  \n                    Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase\n                    letters, numbers, and symbols.\n                  \n                }\n                @if (errors['maxlength']) {\n                  \n                    Your password may not be longer than {{ maxPasswordLength }} characters.\n                  \n                }\n              \n            }\n          \n        \n\n        \n          @if ($formPasswordsInvalid()) {\n            \n              Passwords must match.\n            \n          }\n        \n\n        @if ($errorCode(); as errorCode) {\n          \n            \n          \n        }\n\n        \n          \n            Change password\n          \n        \n      \n    }\n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if ($showForm()) {      Change your password    @if (user$ | async; as user) {                                    Current password:                                          @if ($currentPwCntrlErrors(); as errors) {                              @if (errors[\\'required\\']) {                                      Please enter your current password.                                  }                @if (errors[\\'minlength\\']) {                                      Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase                    letters, numbers, and symbols.                                  }                @if (errors[\\'maxlength\\']) {                                      Your password may not be longer than {{ maxPasswordLength }} characters.                                  }                          }                                    New password:                                @if ($password1CntrlErrors(); as errors) {                              @if (errors[\\'required\\']) {                                      Please enter a new password.                                  }                @if (errors[\\'minlength\\']) {                                      Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase                    letters, numbers, and symbols.                                  }                @if (errors[\\'maxlength\\']) {                                      Your password may not be longer than {{ maxPasswordLength }} characters.                                  }                @if (errors[\\'passwordstrength\\']) {                                      Your password is not very strong. Include a combination of upper and lowercase letters, numbers, and symbols.                                  }                @if (errors[\\'firebasevalidator\\']) {                                      Your password needs to include: TODO                                  }                          }                                                Confirm password:                                          @if ($password2CntrlErrors(); as errors) {                              @if (errors[\\'required\\']) {                                      Please re-enter your password.                                  }                @if (errors[\\'minlength\\']) {                                      Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase                    letters, numbers, and symbols.                                  }                @if (errors[\\'maxlength\\']) {                                      Your password may not be longer than {{ maxPasswordLength }} characters.                                  }                          }                                    @if ($formPasswordsInvalid()) {                          Passwords must match.                      }                @if ($errorCode(); as errorCode) {                                        }                              Change password                            }  } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangePasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CombinedObs.html":{"url":"interfaces/CombinedObs.html","title":"interface - CombinedObs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CombinedObs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/control-errors-signal.util.ts\n        \n\n\n            \n                Description\n            \n            \n                combinedLatest output from inner AbstractControl Observables.\n\ndirty - Indicates that the Control value has been modified by the user.\nerrors - If the Control is invalid then contains the ValidationErrors, otherwise undefined.\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dirty\n                                        \n                                \n                                \n                                        \n                                            errors\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dirty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dirty:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     ValidationErrors | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ValidationErrors | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Signal } from '@angular/core';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { PristineChangeEvent } from '@angular/forms';\nimport type {\n  AbstractControl,\n  ControlEvent,\n  FormControlStatus,\n  ValidationErrors,\n} from '@angular/forms';\nimport {\n  combineLatest,\n  debounceTime,\n  filter,\n  map,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { FORMS } from './constants';\n\n/**\n * `combinedLatest` output from inner AbstractControl Observables.\n *\n * 1. `dirty` - Indicates that the Control value has been modified by the user.\n * 2. `errors` - If the Control is invalid then contains the ValidationErrors, otherwise `undefined`.\n */\ninterface CombinedObs {\n  dirty: boolean;\n  errors: ValidationErrors | undefined;\n}\n\n/**\n * Creates an Angular Signal that emits the validation errors for a Control only when the Control is\n * also modified (dirty).\n */\nexport const controlErrorsSignal = (control: AbstractControl): Signal => {\n  // Only care about dirty controls for purposes of displaying validation error messages.\n  const controlDirty$: Observable = control.events.pipe(\n    filter((event: ControlEvent): event is PristineChangeEvent => event instanceof PristineChangeEvent),\n    map((event: PristineChangeEvent): boolean => !event.pristine),\n  );\n\n  // When status is INVALID emit control.errors, otherwise undefined\n  const controlStatus$: Observable = control.statusChanges.pipe(\n    // Wait for input to stop before displaying error messages\n    debounceTime(FORMS.inputDebounce),\n    map((status: FormControlStatus): ValidationErrors | undefined => {\n      const { errors } = control;\n      if (status === 'INVALID' && errors) {\n        return errors;\n      }\n      return undefined;\n    }),\n  );\n\n  // Combine the Observables so that ValidationErrors are emitted only when the control is dirty.\n  const controlErrors$: Observable = combineLatest({\n    /* eslint-disable rxjs/finnish */\n    dirty: controlDirty$,\n    errors: controlStatus$,\n  }).pipe(\n    map(({ dirty, errors }: CombinedObs): ValidationErrors | undefined => {\n      if (dirty) {\n        return errors;\n      }\n\n      return undefined;\n    }),\n  );\n\n  return toSignal(controlErrors$);\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmEmailComponent.html":{"url":"components/ConfirmEmailComponent.html","title":"component - ConfirmEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/confirm-email/confirm-email.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-email\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./confirm-email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                $errorCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                $verificationStatus\n                            \n                            \n                                    Public\n                                    Readonly\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                sendConfirmEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/confirm-email/confirm-email.component.ts:33\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendConfirmEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendConfirmEmail(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/confirm-email/confirm-email.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/confirm-email/confirm-email.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $verificationStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/confirm-email/confirm-email.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MaybeUser$\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/confirm-email/confirm-email.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { WritableSignal } from '@angular/core';\nimport { sendEmailVerification } from '@angular/fire/auth';\nimport type { User } from '@angular/fire/auth';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser$ } from '@app/core/user.token';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\n\ntype VerifyStatuses = 'sending' | 'sent' | 'unsent';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ AsyncPipe, AuthErrorMessagesComponent, SpinnerComponent ],\n  selector: 'app-confirm-email',\n  templateUrl: './confirm-email.component.html',\n})\nexport class ConfirmEmailComponent {\n  public readonly $errorCode: WritableSignal;\n  public readonly $verificationStatus: WritableSignal;\n  public readonly user$: MaybeUser$;\n\n  constructor() {\n    this.$errorCode = signal('');\n    this.$verificationStatus = signal('unsent');\n\n    // Not handling non-logged in users because the Route guards should.\n    this.user$ = inject(USER$);\n  }\n\n  public async sendConfirmEmail(user: User): Promise {\n    this.$errorCode.set(''); // Clear out any existing errors\n    this.$verificationStatus.set('sending');\n\n    try {\n      await sendEmailVerification(user);\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n    }\n\n    this.$verificationStatus.set('sent');\n  }\n}\n\n    \n\n    \n        @if (user$ | async; as user) {\n  \n    Confirm email address\n    \n      To confirm that your email address is valid we need to send an email to\n      {{ user.email }}\n      with a verification link.\n    \n    @let status = $verificationStatus();\n    @if (status === 'sent') {\n      @if ($errorCode(); as errorCode) {\n        \n          \n        \n      } @else {\n        \n          A verification email has been sent to\n          {{ user.email }}.\n          Please check your email inbox and spam folder in a few minutes.\n        \n      }\n    }\n    \n      \n        @if (status === 'sent') {\n          \n            Resend verification email\n          \n        } @else {\n          \n            Send verification email\n          \n        }\n      \n    \n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (user$ | async; as user) {      Confirm email address          To confirm that your email address is valid we need to send an email to      {{ user.email }}      with a verification link.        @let status = $verificationStatus();    @if (status === \\'sent\\') {      @if ($errorCode(); as errorCode) {                                } @else {                  A verification email has been sent to          {{ user.email }}.          Please check your email inbox and spam folder in a few minutes.              }    }                  @if (status === \\'sent\\') {                      Resend verification email                  } @else {                      Send verification email                  }            } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ControlProperties.html":{"url":"interfaces/ControlProperties.html","title":"interface - ControlProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ControlProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/control-invalid-signal.util.ts\n        \n\n\n            \n                Description\n            \n            \n                Angular AbstractControl properties that are used to determine if the control should signal an\ninvalid state.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dirty\n                                        \n                                \n                                \n                                        \n                                            invalid\n                                        \n                                \n                                \n                                        \n                                            touched\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dirty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dirty:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invalid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invalid:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touched\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        touched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Signal } from '@angular/core';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { PristineChangeEvent, StatusChangeEvent, TouchedChangeEvent } from '@angular/forms';\nimport type { AbstractControl, ControlEvent } from '@angular/forms';\nimport { distinctUntilChanged, map, scan } from 'rxjs';\nimport type { Observable } from 'rxjs';\n\n/**\n * Angular AbstractControl properties that are used to determine if the control should signal an\n * invalid state.\n */\ninterface ControlProperties {\n  dirty: boolean;\n  invalid: boolean;\n  touched: boolean;\n}\n\n/**\n * When all the ControlProperties are true then the Control is invalid.\n */\nconst isInvalid = (properties: ControlProperties): boolean => {\n  let invalid = true;\n\n  for (const val of Object.values(properties)) {\n    invalid &&= Boolean(val);\n  }\n\n  return invalid;\n};\n\n/**\n * Create an Angular Signal that flags as modified and invalid based on the Control properties.\n *\n * 1. Invalid - the value fails validation checks.\n * 2. Dirty - the value is different from the initial value.\n * 3. Touched - the Control has been focused during the current view.\n *\n * This ensures that the aria-invalid attribute is only set on Controls that the user has interacted\n * with.\n */\nexport const controlInvalidSignal = (control: AbstractControl): Signal => {\n  const defaultProperties: ControlProperties = {\n    dirty: control.dirty,\n    invalid: control.invalid,\n    touched: control.touched,\n  };\n  const initialValue = isInvalid(defaultProperties);\n\n  const controlEvents$: Observable = control.events.pipe(\n    scan(\n      (current: ControlProperties, event: ControlEvent): ControlProperties => {\n        if (event instanceof PristineChangeEvent) {\n          return { ...current, dirty: !event.pristine };\n        }\n\n        if (event instanceof TouchedChangeEvent) {\n          return { ...current, touched: event.touched };\n        }\n\n        if (event instanceof StatusChangeEvent) {\n          return { ...current, invalid: event.status === 'INVALID' };\n        }\n\n        return current;\n      },\n      defaultProperties,\n    ),\n    map((properties: ControlProperties): boolean => isInvalid(properties)),\n    distinctUntilChanged(),\n  );\n\n  return toSignal(controlEvents$, { initialValue });\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ControlStruct.html":{"url":"interfaces/ControlStruct.html","title":"interface - ControlStruct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ControlStruct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/identity-forms.ts\n        \n\n\n            \n                Description\n            \n            \n                For each Identity Control generate two Signals for error handling.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            $errors\n                                        \n                                \n                                \n                                        \n                                            $invalid\n                                        \n                                \n                                \n                                        \n                                            control\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $errors:     Signal\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Signal\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $invalid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $invalid:     Signal\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Signal\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        control\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        control:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Signal } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport type { AbstractControl, ValidationErrors } from '@angular/forms';\n\nimport { PASSWORDS } from '@app/shared/constants';\nimport { controlErrorsSignal } from '@app/shared/control-errors-signal.util';\nimport { controlInvalidSignal } from '@app/shared/control-invalid-signal.util';\n\nimport { passwordFirebaseValidator, passwordStrengthValidator } from './validators/passwords';\n\nconst getControlStructure = (control: T): ControlStruct => {\n  const $invalid = controlInvalidSignal(control);\n  const $errors = controlErrorsSignal(control);\n\n  return { $errors, $invalid, control };\n};\n\nexport { PASSWORDS };\n\n/**\n * For each Identity Control generate two Signals for error handling.\n */\nexport interface ControlStruct {\n  $errors: Signal;\n  $invalid: Signal;\n  control: T;\n}\n\n/**\n * Emails are required and must be a valid email address.\n */\nexport const createEmailControl = (): ControlStruct => {\n  // eslint-disable-next-line unicorn/no-null -- DOM forms use null\n  const control = new FormControl(null, [ Validators.required, Validators.email ]);\n  return getControlStructure(control);\n};\n\n/**\n * Passwords are required and have length requirements. Complexity is required for new password fields.\n * @param isNewPassword - Adds extra validators to control when being used to create a new password.\n *                      Note: this should only be used on the first password field, not the confirm\n *                      field.\n */\nexport const createPasswordControl = (isNewPassword: boolean = false): ControlStruct => {\n  const control = new FormControl(\n    null, // eslint-disable-line unicorn/no-null -- DOM forms use null\n    [\n      Validators.required,\n      Validators.minLength(PASSWORDS.minLength),\n      Validators.maxLength(PASSWORDS.maxLength),\n    ],\n  );\n\n  if (isNewPassword) {\n    control.addValidators(passwordStrengthValidator);\n    control.addAsyncValidators(passwordFirebaseValidator());\n  }\n\n  return getControlStructure(control);\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dashboard.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                name$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard.component.ts:18\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { map } from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser } from '@app/core/user.token';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ AsyncPipe, SpinnerComponent ],\n  selector: 'app-dashboard',\n  styleUrl: './dashboard.component.scss',\n  templateUrl: './dashboard.component.html',\n})\nexport class DashboardComponent {\n  public readonly name$: Observable;\n\n  constructor() {\n    const user$ = inject(USER$);\n\n    this.name$ = user$.pipe(\n      map((maybeUser: MaybeUser): string => maybeUser?.displayName ?? 'You'),\n    );\n  }\n}\n\n    \n\n    \n        @if (name$ | async; as name) {\n  Hello {{ name }}!\n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (name$ | async; as name) {  Hello {{ name }}!} @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeleteAccountComponent.html":{"url":"components/DeleteAccountComponent.html","title":"component - DeleteAccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeleteAccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/delete-account/delete-account.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-delete-account\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                            ReactiveFormsModule\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./delete-account.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _$confirmDialog\n                            \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Public\n                                    Readonly\n                                $errorCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                $passwordCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $passwordCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $showForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                deleteAccountForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                maxPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                minPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                passwordCntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeDialog\n                            \n                            \n                                    Public\n                                    Async\n                                deleteAcount\n                            \n                            \n                                    Public\n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:53\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        closeDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/delete-account/delete-account.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteAcount\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAcount(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/delete-account/delete-account.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    openDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/delete-account/delete-account.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _$confirmDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Signal\n\n                    \n                \n                \n                    \n                        Default value : viewChild.required('confirmDialog')\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $passwordCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $passwordCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $showForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        deleteAccountForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeleteAccountFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        maxPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.maxLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        minPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.minLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        passwordCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MaybeUser$\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n  viewChild,\n} from '@angular/core';\nimport type { ElementRef, Signal, WritableSignal } from '@angular/core';\nimport { deleteUser, EmailAuthProvider, reauthenticateWithCredential } from '@angular/fire/auth';\nimport type { User } from '@angular/fire/auth';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport type { FormControl, ValidationErrors } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser$ } from '@app/core/user.token';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\nimport { createPasswordControl, PASSWORDS } from '../identity-forms';\n\ntype DeleteAccountFormGroup = FormGroup;\n}>;\n\ntype DialogRef = ElementRef;\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    ReactiveFormsModule,\n    SpinnerComponent,\n  ],\n  selector: 'app-delete-account',\n  templateUrl: './delete-account.component.html',\n})\nexport class DeleteAccountComponent {\n  public readonly $errorCode: WritableSignal;\n  public readonly $passwordCntrlErrors: Signal;\n  public readonly $passwordCntrlInvalid: Signal;\n  public readonly $showForm: WritableSignal;\n  public readonly deleteAccountForm: DeleteAccountFormGroup;\n  public readonly maxPasswordLength: number = PASSWORDS.maxLength;\n  public readonly minPasswordLength: number = PASSWORDS.minLength;\n  public readonly passwordCntrl: FormControl;\n  public readonly user$: MaybeUser$;\n\n  private readonly _$confirmDialog: Signal = viewChild.required('confirmDialog');\n  private readonly _router: Router;\n\n  constructor() {\n    this._router = inject(Router);\n\n    ({\n      $errors: this.$passwordCntrlErrors,\n      $invalid: this.$passwordCntrlInvalid,\n      control: this.passwordCntrl,\n    } = createPasswordControl());\n\n    this.deleteAccountForm = new FormGroup({\n      password: this.passwordCntrl,\n    });\n\n    this.$errorCode = signal('');\n    this.$showForm = signal(true);\n\n    // Not handling non-logged in users because the Route guards should.\n    this.user$ = inject(USER$);\n  }\n\n  public closeDialog(): void {\n    const dialogEl = this._$confirmDialog();\n    dialogEl.nativeElement.close();\n  }\n\n  public async deleteAcount(user: User): Promise {\n    // The dialog automatically closes on submit. event.preventDefault() and event.stopPropagation() do not prevent that.\n    const { password } = this.deleteAccountForm.value;\n\n    // Validators prevent email1 or password being falsy, but TypeScript doesn't know that.\n    // Additionally, all users are expected to have an email address.\n    if (this.deleteAccountForm.invalid || !password || !user.email) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this.$showForm.set(false);\n    this.$errorCode.set(''); // Clear out any existing errors\n\n    try {\n      const emailCreds = EmailAuthProvider.credential(user.email, password);\n      const credentials = await reauthenticateWithCredential(user, emailCreds);\n      await deleteUser(credentials.user);\n      await this._router.navigateByUrl('/');\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n    }\n\n    this.$showForm.set(true);\n  }\n\n  public openDialog(): void {\n    const dialogEl = this._$confirmDialog();\n    this.$errorCode.set(''); // Clear out any existing errors\n    dialogEl.nativeElement.showModal();\n  }\n}\n\n    \n\n    \n        @if ($showForm()) {\n  \n    Delete your account\n    \n      Deleting your account cannot be undone. This is a two step process. Are you sure you wish to proceed?\n    \n    @if ($errorCode(); as errorCode) {\n      \n        \n      \n    }\n    \n      \n        Begin account deletion\n      \n    \n  \n  \n    \n      Enter your password to proceed. Clicking the complete button will immediately and irrecoverably delete your account.\n    \n    @if (user$ | async; as user) {\n      \n        \n          Password:\n          \n          \n            @if ($passwordCntrlErrors(); as errors) {\n              \n                @if (errors['required']) {\n                  \n                    Please enter your password.\n                  \n                }\n                @if (errors['minlength']) {\n                  \n                    Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and\n                    lowercase letters, numbers, and symbols.\n                  \n                }\n                @if (errors['maxlength']) {\n                  \n                    Your password may not be longer than {{ maxPasswordLength }} characters.\n                  \n                }\n              \n            }\n          \n        \n\n        \n          \n            Complete account deletion\n          \n          \n            Cancel\n          \n        \n      \n    }\n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if ($showForm()) {      Delete your account          Deleting your account cannot be undone. This is a two step process. Are you sure you wish to proceed?        @if ($errorCode(); as errorCode) {                        }                  Begin account deletion                        Enter your password to proceed. Clicking the complete button will immediately and irrecoverably delete your account.        @if (user$ | async; as user) {                        Password:                                @if ($passwordCntrlErrors(); as errors) {                              @if (errors[\\'required\\']) {                                      Please enter your password.                                  }                @if (errors[\\'minlength\\']) {                                      Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and                    lowercase letters, numbers, and symbols.                                  }                @if (errors[\\'maxlength\\']) {                                      Your password may not be longer than {{ maxPasswordLength }} characters.                                  }                          }                                                Complete account deletion                                Cancel                            }  } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeleteAccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/footer/footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Global footer for both logged in and out views used by Standard & Central layout components.\nLinks to the legal pages for the application and displays the copyright notice.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n            \n                imports\n                \n                            DatePipe\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                today\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/footer/footer.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { DatePipe } from '@angular/common';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n/**\n * Global footer for both logged in and out views used by Standard & Central layout components.\n * Links to the legal pages for the application and displays the copyright notice.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ DatePipe, RouterLink ],\n  selector: 'app-footer',\n  styleUrl: './footer.component.scss',\n  templateUrl: './footer.component.html',\n})\nexport class FooterComponent {\n  public readonly today: Date = new Date();\n}\n\n    \n\n    \n        \n  \n    &copy; Copyright\n    {{ today | date: 'yyyy' }}\n    Privacy Policy\n    Terms &amp; Conditions\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      © Copyright    {{ today | date: \\'yyyy\\' }}    Privacy Policy    Terms & Conditions  '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/forgot-password/forgot-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n\n            \n                imports\n                \n                                AuthErrorMessagesComponent\n                            ReactiveFormsModule\n                            RouterLink\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _auth\n                            \n                            \n                                    Public\n                                    Readonly\n                                $emailCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $emailCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $errorCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                $showForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                emailCntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                forgotForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:40\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/forgot-password/forgot-password.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Auth\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $emailCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $emailCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $showForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        emailCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        forgotForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ForgotFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { Signal, WritableSignal } from '@angular/core';\nimport { Auth, sendPasswordResetEmail } from '@angular/fire/auth';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport type { FormControl, ValidationErrors } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\nimport { createEmailControl } from '../identity-forms';\n\ntype ForgotFormGroup = FormGroup }>;\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AuthErrorMessagesComponent,\n    ReactiveFormsModule,\n    RouterLink,\n    SpinnerComponent,\n  ],\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n})\nexport class ForgotPasswordComponent {\n  public readonly $emailCntrlErrors: Signal;\n  public readonly $emailCntrlInvalid: Signal;\n  public readonly $errorCode: WritableSignal;\n  public readonly $showForm: WritableSignal;\n  public readonly emailCntrl: FormControl;\n  public readonly forgotForm: ForgotFormGroup;\n\n  private readonly _auth: Auth;\n\n  constructor() {\n    this._auth = inject(Auth);\n\n    ({ $errors: this.$emailCntrlErrors, $invalid: this.$emailCntrlInvalid, control: this.emailCntrl } = createEmailControl());\n\n    this.forgotForm = new FormGroup({ email: this.emailCntrl });\n\n    this.$errorCode = signal('');\n    this.$showForm = signal(true);\n  }\n\n  public async onSubmit(): Promise {\n    const { email } = this.forgotForm.value;\n\n    // Validators prevent email being falsy, but TypeScript doesn't know that.\n    if (this.forgotForm.invalid || !email) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this.$showForm.set(false);\n    this.$errorCode.set(''); // Clear out any existing errors\n\n    try {\n      await sendPasswordResetEmail(this._auth, email);\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n    }\n\n    this.$showForm.set(true);\n  }\n}\n\n    \n\n    \n        @if ($showForm()) {\n  \n    Recover your password\n    \n      \n        Email:\n        \n        \n          @if ($emailCntrlErrors(); as errors) {\n            \n              @if (errors['required']) {\n                \n                  Please enter your email address.\n                \n              }\n              @if (errors['email']) {\n                \n                  Please enter a valid email address.\n                \n              }\n            \n          }\n        \n      \n\n      @if ($errorCode(); as errorCode) {\n        \n          \n        \n      }\n\n      \n        \n          Send password reset email\n        \n      \n    \n    \n      Return to login\n    \n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if ($showForm()) {      Recover your password                  Email:                          @if ($emailCntrlErrors(); as errors) {                          @if (errors[\\'required\\']) {                                  Please enter your email address.                              }              @if (errors[\\'email\\']) {                                  Please enter a valid email address.                              }                      }                    @if ($errorCode(); as errorCode) {                                }                        Send password reset email                            Return to login      } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Primary header for standard views of logged in users. Contains the user account menu and logo.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n            \n                imports\n                \n                            FaIconComponent\n                            NgOptimizedImage\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                $showMenu\n                            \n                            \n                                    Public\n                                    Readonly\n                                faBars\n                            \n                            \n                                    Public\n                                    Readonly\n                                faX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nclick(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/header/header.component.ts:33\n                        \n                    \n\n\n            \n                \n                        Close the menu if the user clicks on a link.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onClick(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/layouts/header/header.component.ts:33\n                        \n                    \n\n\n            \n                \n                        Close the menu if the user clicks on a link.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/header/header.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Sets the expanded class on the .menu list, and updates aria-expanded and the icon.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $showMenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/header/header.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        faBars\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IconDefinition\n\n                    \n                \n                \n                    \n                        Default value : faBars\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/header/header.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        faX\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IconDefinition\n\n                    \n                \n                \n                    \n                        Default value : faX\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/header/header.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { NgOptimizedImage } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  HostListener,\n  signal,\n} from '@angular/core';\nimport type { WritableSignal } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\nimport type { IconDefinition } from '@fortawesome/angular-fontawesome';\nimport { faBars, faX } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * Primary header for standard views of logged in users. Contains the user account menu and logo.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ FaIconComponent, NgOptimizedImage, RouterLink ],\n  selector: 'app-header',\n  styleUrl: './header.component.scss',\n  templateUrl: './header.component.html',\n})\nexport class HeaderComponent {\n  public readonly $showMenu: WritableSignal = signal(false);\n  public readonly faBars: IconDefinition = faBars;\n  public readonly faX: IconDefinition = faX;\n\n  /**\n   * Close the menu if the user clicks on a link.\n   */\n  @HostListener('click', [ '$event' ])\n  public onClick(event: Event): void {\n    const { target } = event;\n\n    if (target instanceof HTMLAnchorElement) {\n      this.$showMenu.set(false);\n    }\n  }\n\n  /**\n   * Sets the expanded class on the .menu list, and updates aria-expanded and the icon.\n   */\n  public toggleMenu(): void {\n    const menuShown = this.$showMenu();\n    this.$showMenu.set(!menuShown);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    Brainfry Quiz\n  \n\n\n\n  \n    \n    Your account\n  \n\n  \n    Your profile\n    Manage your photos\n    Change email\n    Change password\n    Delete account\n    Logout\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Brainfry Quiz            Your account        Your profile    Manage your photos    Change email    Change password    Delete account    Logout  '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n            \n                imports\n                \n                                AuthErrorMessagesComponent\n                            ReactiveFormsModule\n                            RouterLink\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _auth\n                            \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Public\n                                    Readonly\n                                $emailCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $emailCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $errorCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                $passwordCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $passwordCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $showForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                emailCntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                loginForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                maxPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                minPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                next\n                            \n                            \n                                    Public\n                                    Readonly\n                                passwordCntrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/login/login.component.ts:52\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/login/login.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Auth\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $emailCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $emailCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $passwordCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $passwordCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $showForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        emailCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoginFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        maxPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.maxLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        minPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.minLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        next\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Default value : input('/')\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        passwordCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  input,\n  signal,\n} from '@angular/core';\nimport type { InputSignal, Signal, WritableSignal } from '@angular/core';\nimport { Auth, signInWithEmailAndPassword } from '@angular/fire/auth';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport type { FormControl, ValidationErrors } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\nimport { createEmailControl, createPasswordControl, PASSWORDS } from '../identity-forms';\n\ntype LoginFormGroup = FormGroup;\n  password: FormControl;\n}>;\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AuthErrorMessagesComponent,\n    ReactiveFormsModule,\n    RouterLink,\n    SpinnerComponent,\n  ],\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent {\n  public readonly $emailCntrlErrors: Signal;\n  public readonly $emailCntrlInvalid: Signal;\n  public readonly $errorCode: WritableSignal;\n  public readonly $passwordCntrlErrors: Signal;\n  public readonly $passwordCntrlInvalid: Signal;\n  public readonly $showForm: WritableSignal;\n  public readonly emailCntrl: FormControl;\n  public readonly loginForm: LoginFormGroup;\n  public readonly maxPasswordLength: number = PASSWORDS.maxLength;\n  public readonly minPasswordLength: number = PASSWORDS.minLength;\n  // Navigate to root to allow default redirectTo Route to decide initial destination unless the `next` query parameter is set.\n  public readonly next: InputSignal = input('/');\n  public readonly passwordCntrl: FormControl;\n\n  private readonly _auth: Auth;\n  private readonly _router: Router = inject(Router);\n\n  constructor() {\n    this._auth = inject(Auth);\n\n    ({ $errors: this.$emailCntrlErrors, $invalid: this.$emailCntrlInvalid, control: this.emailCntrl } = createEmailControl());\n    ({ $errors: this.$passwordCntrlErrors, $invalid: this.$passwordCntrlInvalid, control: this.passwordCntrl } = createPasswordControl());\n    this.$showForm = signal(true);\n\n    this.loginForm = new FormGroup({\n      email: this.emailCntrl,\n      password: this.passwordCntrl,\n    });\n\n    this.$errorCode = signal('');\n  }\n\n  public async onSubmit(): Promise {\n    const { email, password } = this.loginForm.value;\n\n    // Validators prevent email or password being falsy, but TypeScript doesn't know that.\n    if (this.loginForm.invalid || !email || !password) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this.$errorCode.set(''); // Clear out any existing errors\n    this.$showForm.set(false);\n\n    try {\n      await signInWithEmailAndPassword(this._auth, email, password);\n      await this._router.navigateByUrl(this.next());\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n      this.$showForm.set(true);\n    }\n  }\n}\n\n    \n\n    \n        @if ($showForm()) {\n  \n    Login\n    \n      \n        Email:\n        \n        \n          @if ($emailCntrlErrors(); as errors) {\n            \n              @if (errors['required']) {\n                \n                  Please enter your email address.\n                \n              }\n              @if (errors['email']) {\n                \n                  Please enter a valid email address.\n                \n              }\n            \n          }\n        \n      \n\n      \n        Password:\n        \n        \n          @if ($passwordCntrlErrors(); as errors) {\n            \n              @if (errors['required']) {\n                \n                  Please enter your password.\n                \n              }\n              @if (errors['minlength']) {\n                \n                  Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase\n                  letters, numbers, and symbols.\n                \n              }\n              @if (errors['maxlength']) {\n                \n                  Your password may not be longer than {{ maxPasswordLength }} characters.\n                \n              }\n            \n          }\n        \n      \n\n      @if ($errorCode(); as errorCode) {\n        \n          \n        \n      }\n\n      \n        \n          Login\n        \n      \n    \n    \n      \n        Forgot your password?\n      \n    \n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if ($showForm()) {      Login                  Email:                          @if ($emailCntrlErrors(); as errors) {                          @if (errors[\\'required\\']) {                                  Please enter your email address.                              }              @if (errors[\\'email\\']) {                                  Please enter a valid email address.                              }                      }                            Password:                          @if ($passwordCntrlErrors(); as errors) {                          @if (errors[\\'required\\']) {                                  Please enter your password.                              }              @if (errors[\\'minlength\\']) {                                  Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase                  letters, numbers, and symbols.                              }              @if (errors[\\'maxlength\\']) {                                  Your password may not be longer than {{ maxPasswordLength }} characters.                              }                      }                    @if ($errorCode(); as errorCode) {                                }                        Login                                    Forgot your password?            } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutComponent.html":{"url":"components/LogoutComponent.html","title":"component - LogoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/logout/logout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./logout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _auth\n                            \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Public\n                                    Readonly\n                                $blockWindow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/logout/logout.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Auth\n\n                    \n                \n                \n                    \n                        Default value : inject(Auth)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/logout/logout.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/logout/logout.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $blockWindow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/logout/logout.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { WritableSignal } from '@angular/core';\nimport { Auth, signOut } from '@angular/fire/auth';\nimport { Router, RouterLink } from '@angular/router';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ RouterLink, SpinnerComponent ],\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n})\nexport class LogoutComponent {\n  public readonly $blockWindow: WritableSignal = signal(false);\n\n  private readonly _auth: Auth = inject(Auth);\n  private readonly _router: Router = inject(Router);\n\n  public async logout(): Promise {\n    this.$blockWindow.set(true);\n    await signOut(this._auth);\n    await this._router.navigateByUrl('/'); // Navigate to root to allow Guards to handle final redirecting.\n  }\n}\n\n    \n\n    \n        \n  Logout\n  Click here to logout:\n  \n    \n      Complete logout\n    \n  \n  Go back to dashboard\n\n@if ($blockWindow()) {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Logout  Click here to logout:            Complete logout        Go back to dashboard@if ($blockWindow()) {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/page-not-found/page-not-found.component.ts\n\n\n\n    \n        Description\n    \n    \n        Wildcard catchall route component for paths that do not match configured routes.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n            \n                imports\n                \n                            NgOptimizedImage\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./page-not-found.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _metaService\n                            \n                            \n                                    Private\n                                _robotsTag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/page-not-found/page-not-found.component.ts:36\n                        \n                    \n\n\n            \n                \n                        Remove the robot blocking meta tag from the HTML Head when this Component is no longer the\nrouted Component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/page-not-found/page-not-found.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Prevent robots from indexing this soft 404 page. Note that this probably is only necessary\nwith SSR or JavaScript executing web crawlers.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _metaService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Meta\n\n                    \n                \n                \n                    \n                        Default value : inject(Meta)\n                    \n                \n                    \n                        \n                                Defined in src/app/page-not-found/page-not-found.component.ts:28\n                        \n                    \n\n            \n                \n                    Angular service to manage Meta tags. https://angular.dev/api/platform-browser/Meta\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _robotsTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLMetaElement | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/page-not-found/page-not-found.component.ts:30\n                        \n                    \n\n            \n                \n                    Reference to the meta tag created OnInit to be removed OnDestroy.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { NgOptimizedImage } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport type { OnDestroy, OnInit } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport type { MetaDefinition } from '@angular/platform-browser';\nimport { RouterLink } from '@angular/router';\n\n/**\n * Block robots from indexing the 404 page.\n */\nexport const ROBOTS_META: MetaDefinition = {\n  content: 'noindex, nofollow',\n  name: 'robots',\n} as const;\n\n/**\n * Wildcard catchall route component for paths that do not match configured routes.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ NgOptimizedImage, RouterLink ],\n  selector: 'app-page-not-found',\n  styleUrl: './page-not-found.component.scss',\n  templateUrl: './page-not-found.component.html',\n})\nexport class PageNotFoundComponent implements OnDestroy, OnInit {\n  /** Angular service to manage Meta tags. https://angular.dev/api/platform-browser/Meta */\n  private readonly _metaService: Meta = inject(Meta);\n  /** Reference to the meta tag created OnInit to be removed OnDestroy. */\n  private _robotsTag: HTMLMetaElement | null = null; // eslint-disable-line unicorn/no-null -- DOM uses null\n\n  /**\n   * Remove the robot blocking meta tag from the HTML Head when this Component is no longer the\n   * routed Component.\n   */\n  public ngOnDestroy(): void {\n    if (this._robotsTag) {\n      this._metaService.removeTagElement(this._robotsTag);\n    }\n  }\n\n  /**\n   * Prevent robots from indexing this soft 404 page. Note that this probably is only necessary\n   * with SSR or JavaScript executing web crawlers.\n   */\n  public ngOnInit(): void {\n    this._robotsTag = this._metaService.addTag(ROBOTS_META);\n  }\n}\n\n    \n\n    \n        Game Over\n\n  Oops, we lost (this page)!\n  \n    How did you get here anyway?\n    Contact Support\n  \n  Go back to dashboard\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Game Over  Oops, we lost (this page)!      How did you get here anyway?    Contact Support    Go back to dashboard  '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PasswordResetSuccess.html":{"url":"interfaces/PasswordResetSuccess.html","title":"interface - PasswordResetSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PasswordResetSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/reset-password/reset-password.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                        \n                                            showForm\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:     undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showForm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showForm:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Auth, confirmPasswordReset, verifyPasswordResetCode } from '@angular/fire/auth';\nimport {\n  from,\n  merge,\n  of,\n  startWith,\n  Subject,\n  switchMap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { getErrorCode } from '../error-code';\n\nexport type ResetPasswordResults = PasswordResetSuccess | ShowForm | VerifiedFailed | undefined;\n\ntype ConfirmResult = PasswordResetSuccess | ShowForm;\n\n// Final state after resetting password\ninterface PasswordResetSuccess {\n  errorCode: undefined; // This makes the template type checker happier\n  showForm: false;\n}\n\n// Verified Success & Password Reset Failure\ninterface ShowForm {\n  email: string;\n  errorCode?: string;\n  showForm: true;\n}\n\n// Code Verification Failed\ninterface VerifiedFailed {\n  email: undefined; // This makes the type checker happier in the destructuring\n  errorCode: string;\n  showForm: false;\n}\n\ntype VerifiedResult = ShowForm | VerifiedFailed;\n\n@Injectable({ providedIn: 'root' })\nexport class ResetPasswordService {\n  private readonly _auth: Auth = inject(Auth);\n  private readonly _newPasswordSubject$: Subject = new Subject();\n\n  /**\n   * Triggers the confirmPasswordReset promise to apply the action code and replace the user's password.\n   */\n  public replacePassword(newPassword: string): void {\n    this._newPasswordSubject$.next(newPassword);\n  }\n\n  /**\n   * Sets up an Observable that will first verify the oobCode is valid for password resetting, and\n   * then show the password reset form and the user's email address.\n   * This is followed by setting up a subject to emit a new password that will then be confirmed as\n   * the new password for the user. While that action is pending it emits `undefined` to show the\n   * spinner again. In the event of an error it shows the form again with an error message.\n   */\n  public resetPassword$(code: string | undefined): Observable {\n    return of(code).pipe(\n      switchMap(async (oobCode: string | undefined): Promise => this._verifyCode(oobCode)),\n      switchMap((verifyResults: VerifiedResult): Observable => {\n        const verifyResults$ = of(verifyResults);\n        const { email } = verifyResults;\n\n        // Verified succeeded\n        if (email) {\n          // This design with an inner `merge` after `_verifyCode` settles is to accomodate passing\n          // the email to _confirmPasswordReset in case the new password is rejected.\n          // However, it does make testing this path more complicated I think. Would it be better to\n          // move the merge to the return of resetPassword$ and store the email as a private property?\n          const confirmPasswordReset$ = this._newPasswordSubject$.pipe(\n            switchMap((newPassword: string): Observable => {\n              const promise = this._confirmPasswordReset(code, email, newPassword);\n              return from(promise)\n                // Show the spinner while applying the action code.\n                .pipe(startWith(undefined));\n            }),\n          );\n\n          return merge(\n            // This will emit first after code verification.\n            verifyResults$,\n            // This will emit after form submission.\n            confirmPasswordReset$,\n          );\n        }\n\n        // Verified failed\n        return verifyResults$;\n      }),\n    );\n  }\n\n  /**\n   * Applies the new password to the user's account using the oobCode.\n   * @param email - Is necessary only in the case that `confirmPasswordReset` fails, and we need to\n   *              redisplay the form.\n   * @throws If the oobCode is falsy\n   */\n  private async _confirmPasswordReset(code: string | undefined, email: string, newPassword: string): Promise {\n    if (code) {\n      try {\n        await confirmPasswordReset(this._auth, code, newPassword);\n        return { errorCode: undefined, showForm: false };\n      } catch (err: unknown) {\n        return { email, errorCode: getErrorCode(err), showForm: true };\n      }\n    }\n    throw new Error('oobCode not found');\n  }\n\n  /**\n   * This identifies the email for the User who's password would be reset by the oobCode.\n   */\n  private async _verifyCode(code: string | undefined): Promise {\n    if (code) {\n      try {\n        const email = await verifyPasswordResetCode(this._auth, code);\n        return { email, showForm: true };\n      } catch (err: unknown) {\n        return { email: undefined, errorCode: getErrorCode(err), showForm: false };\n      }\n    }\n\n    return { email: undefined, errorCode: 'oobCode not found', showForm: false };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Photo.html":{"url":"interfaces/Photo.html","title":"interface - Photo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Photo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/user-photos/user-photos.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Firebase storage file\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:     FullMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FullMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport {\n  getDownloadURL,\n  getMetadata,\n  listAll,\n  percentage,\n  ref,\n  Storage,\n  uploadBytesResumable,\n} from '@angular/fire/storage';\nimport type {\n  FullMetadata,\n  ListResult,\n  UploadTask,\n  UploadTaskSnapshot,\n} from '@angular/fire/storage';\nimport {\n  BehaviorSubject,\n  endWith,\n  finalize,\n  Subject,\n  switchMap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\n/**\n * Firebase storage file\n */\nexport interface Photo {\n  metadata: FullMetadata;\n  url: string;\n}\n\n/**\n * Upload progress to Firebase Storage\n */\nexport interface Progress {\n  progress: number;\n  snapshot: UploadTaskSnapshot;\n}\n\n/** Total allowed uploaded profile photos. */\nexport const MAXIMUM_PHOTOS = 6;\n/** Directory below UID directory for files. */\nconst PHOTO_DIR = 'profile-photos';\n/** Represent random number using letters and numbers. */\nconst RADIX = 36;\n/** Remove the whole number and decimal point from Math.random */\nconst SKIP_WHOLE_NUM = 2;\n\n/**\n * Specific handling for Firebase storage of user profile photos.\n */\n@Injectable({ providedIn: 'root' })\nexport class UserPhotosService {\n  /**\n   * Track the percentage uploaded of `uploadPhoto`.\n   * Idea here is that while falsy (before first emit, when emitting undefined) then the template\n   * will show an `@else` branch for file picker UI. But while uploading it will emit progress for\n   * use in a progress meter.\n   * To automatically refresh the uploaded profile photos from `getProfilePhotos` this must be\n   * subscribed to.\n   */\n  public readonly uploadPercentage$: Observable;\n\n  private readonly _refreshFilesSubject$: BehaviorSubject;\n  private readonly _storage: Storage = inject(Storage);\n  private readonly _taskSubject$: Subject;\n\n  constructor() {\n    this._refreshFilesSubject$ = new BehaviorSubject(undefined);\n    this._taskSubject$ = new Subject();\n\n    this.uploadPercentage$ = this._taskSubject$.pipe(\n      switchMap((task: UploadTask): Observable =>\n        // First emit the upload progress as a percentage.\n        // https://github.com/FirebaseExtended/rxfire/blob/b91f358e2c13c6bf33fb4a540e3963c3902a62b1/storage/index.ts#L115\n        percentage(task).pipe(\n          // Then when complete (100% progress), emit undefined to reset the Observable to falsy.\n          endWith(undefined),\n          // Inform `getProfilePhotos` that there are new files to fetch since storage doesn't stream StorageReferences.\n          finalize((): void => { this._refreshFilesSubject$.next(); }),\n        )),\n    );\n  }\n\n  /**\n   * Gets a list of profile photos from Firebase Storage for the UID. Sorted by most recently uploaded.\n   * So long as something is subscribed to `uploadPercentage$` then this will be refreshed on each upload.\n   */\n  public getProfilePhotos(uid: string): Observable {\n    const profilePhotosRef = ref(this._storage, `${uid}/${PHOTO_DIR}`);\n\n    return this._refreshFilesSubject$.pipe(\n      // Using an inner Observable here to allow us to refresh the files list after each upload.\n      // But this will only work if someone is subscribed to `uploadPercentage$`!\n      switchMap(async (): Promise => {\n        const profilePhotos: Photo[] = [];\n        const profilePhotosList: ListResult = await listAll(profilePhotosRef);\n        const promises: Array, PromiseSettledResult]>> = [];\n\n        // Need the metadata for sorting and the download URL for displaying & form values.\n        // Note this does not handle nested folders, but we aren't using those.\n        for (const item of profilePhotosList.items) {\n          const promise = Promise.allSettled([ getDownloadURL(item), getMetadata(item) ]);\n          promises.push(promise);\n        }\n\n        // Build the data structure for the Photos.\n        for (const result of await Promise.all(promises)) {\n          const [ settledUrl, settledMetadata ] = result;\n          if (settledUrl.status === 'rejected') {\n            console.error(settledUrl.reason);\n          } else if (settledMetadata.status === 'rejected') {\n            console.error(settledMetadata.reason);\n          } else {\n            profilePhotos.push({\n              metadata: settledMetadata.value,\n              url: settledUrl.value,\n            });\n          }\n        }\n\n        // Organize the photos by most recently uploaded.\n        profilePhotos.sort((a: Photo, b: Photo): number => Number(new Date(b.metadata.updated)) - Number(new Date(a.metadata.updated)));\n\n        return profilePhotos;\n      }),\n    );\n  }\n\n  /**\n   * Uploads files to the user's profile photos directory. `uploadPercentage$` will track progress.\n   *\n   * Note that `files` is expected to be a list of one File. However the code is nominally designed\n   * to handle multiple uploads. In that case the `uploadPercentage$` will only be for the final file\n   * uploaded, which if the previous files are still going might be wrong. Unclear how to handle that\n   * case at this time.\n   */\n  public uploadPhoto(files: FileList, uid: string): void {\n    for (const file of files) {\n      // Unlike AWS S3, Firebase storage knows what folders are, and requires you to traverse into them.\n      // So for more straightforward access prefix the filename with a random value to avoid collisions\n      // instead of using a folder.\n      const prefix = Math.random().toString(RADIX).slice(SKIP_WHOLE_NUM);\n      const path = `${uid}/${PHOTO_DIR}/${prefix}-${file.name}`;\n      const storageRef = ref(this._storage, path);\n      const task = uploadBytesResumable(storageRef, file);\n      this._taskSubject$.next(task);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhotoManagerComponent.html":{"url":"components/PhotoManagerComponent.html","title":"component - PhotoManagerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhotoManagerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/user-photos/photo-manager/photo-manager.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-photo-manager\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./photo-manager.component.html\n            \n\n\n\n            \n                styleUrl\n                ./photo-manager.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [],\n  selector: 'app-photo-manager',\n  styleUrl: './photo-manager.component.scss',\n  templateUrl: './photo-manager.component.html',\n})\nexport class PhotoManagerComponent {\n\n}\n\n    \n\n    \n        photo-manager works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'photo-manager works!'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhotoManagerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhotoUploadComponent.html":{"url":"components/PhotoUploadComponent.html","title":"component - PhotoUploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhotoUploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/user-photos/photo-upload/photo-upload.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-photo-upload\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./photo-upload.component.html\n            \n\n\n\n            \n                styleUrl\n                ./photo-upload.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _$fileInput\n                            \n                            \n                                    Private\n                                    Readonly\n                                _userPhotoService\n                            \n                            \n                                    Public\n                                    Readonly\n                                $fileCount\n                            \n                            \n                                    Public\n                                    Readonly\n                                maximumFiles\n                            \n                            \n                                    Public\n                                    Readonly\n                                uid\n                            \n                            \n                                    Public\n                                    Readonly\n                                uploadPercentage$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                openFilePicker\n                            \n                            \n                                    Public\n                                uploadFile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                $fileCount\n                            \n                            \n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:40\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        $fileCount\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:28\n                            \n                        \n                \n                    \n                        Current number of files uploaded, from parent Component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        uid\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:32\n                            \n                        \n                \n                    \n                        Current user ID, from parent Component.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openFilePicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFilePicker()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Open the browser file picker UI if we think there are fewer than maximum uploads.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Upload the file(s) from the file picker automatically on success\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _$fileInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Signal\n\n                    \n                \n                \n                    \n                        Default value : viewChild.required('photoUpload')\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _userPhotoService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserPhotosService\n\n                    \n                \n                \n                    \n                        Default value : inject(UserPhotosService)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $fileCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:28\n                        \n                    \n\n            \n                \n                    Current number of files uploaded, from parent Component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        maximumFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : MAXIMUM_PHOTOS\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:30\n                        \n                    \n\n            \n                \n                    Global maximum number of photos allowed for User.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:32\n                        \n                    \n\n            \n                \n                    Current user ID, from parent Component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        uploadPercentage$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:37\n                        \n                    \n\n            \n                \n                    Tracks the upload progress. Once complete emits a falsy value to clear progress bar and\nre-display upload button.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  input,\n  viewChild,\n} from '@angular/core';\nimport type { ElementRef, InputSignal, Signal } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport type { Observable } from 'rxjs';\n\nimport { MAXIMUM_PHOTOS, UserPhotosService } from '../user-photos.service';\nimport type { Progress } from '../user-photos.service';\n\n/** Template reference to HTML input type=file */\ntype FileInputRef = ElementRef;\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ AsyncPipe, RouterLink ],\n  selector: 'app-photo-upload',\n  styleUrl: './photo-upload.component.scss',\n  templateUrl: './photo-upload.component.html',\n})\nexport class PhotoUploadComponent {\n  /** Current number of files uploaded, from parent Component. */\n  public readonly $fileCount: InputSignal = input.required();\n  /** Global maximum number of photos allowed for User. */\n  public readonly maximumFiles: number = MAXIMUM_PHOTOS;\n  /** Current user ID, from parent Component. */\n  public readonly uid: InputSignal = input.required();\n  /**\n   * Tracks the upload progress. Once complete emits a falsy value to clear progress bar and\n   * re-display upload button.\n   */\n  public readonly uploadPercentage$: Observable;\n\n  private readonly _$fileInput: Signal = viewChild.required('photoUpload');\n  private readonly _userPhotoService: UserPhotosService = inject(UserPhotosService);\n\n  constructor() {\n    this.uploadPercentage$ = this._userPhotoService.uploadPercentage$;\n  }\n\n  /**\n   * Open the browser file picker UI if we think there are fewer than maximum uploads.\n   */\n  public openFilePicker(): void {\n    const fileCount = this.$fileCount();\n    const fileInpt = this._$fileInput();\n\n    if (fileCount \n    \n\n    \n        \n@if (uploadPercentage$ | async; as percentage) {\n  {{ percentage.progress }}%\n} @else if ($fileCount() >= maximumFiles) {\n  Manage your photos\n} @else {\n  \n    Upload a photo\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (uploadPercentage$ | async; as percentage) {  {{ percentage.progress }}%} @else if ($fileCount() >= maximumFiles) {  Manage your photos} @else {      Upload a photo  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhotoUploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrivacyPolicyComponent.html":{"url":"components/PrivacyPolicyComponent.html","title":"component - PrivacyPolicyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PrivacyPolicyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/legal/privacy-policy/privacy-policy.component.ts\n\n\n\n    \n        Description\n    \n    \n        View accessible to all visitors that informs users how their personal data is collected, stored,\nused, and shared, thereby building trust with visitors and complying with data privacy laws by\ntransparently disclosing their practices regarding user information, which is often required by\nlaw in many jurisdictions; essentially, it's a way to let users know what information is being\ngathered and how it will be used, allowing them to make informed decisions about their online\nactivity.\nBased off this online tool's output.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-privacy-policy\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./privacy-policy.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n/**\n * View accessible to all visitors that informs users how their personal data is collected, stored,\n * used, and shared, thereby building trust with visitors and complying with data privacy laws by\n * transparently disclosing their practices regarding user information, which is often required by\n * law in many jurisdictions; essentially, it's a way to let users know what information is being\n * gathered and how it will be used, allowing them to make informed decisions about their online\n * activity.\n *\n * Based off this [online tool's](https://app.termsfeed.com/download/9bce549e-b5ec-4e05-acd7-8fa53c7fa497) output.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ RouterLink ],\n  selector: 'app-privacy-policy',\n  templateUrl: './privacy-policy.component.html',\n})\nexport class PrivacyPolicyComponent {}\n\n    \n\n    \n        \n  Privacy Policy\n\n  \n    Types of data we collect\n    \n      \n        We use your personal data to provide the Brainfry service. By using Brainfry, you agree to the collection and use of information in\n        accordance with this Privacy Policy.\n      \n      \n        While using Brainfry, we may ask you to provide us with certain personally identifiable information that can be used to contact or\n        identify you. Personally identifiable information may include, but is not limited to:\n      \n      \n        Email address\n        Your name\n        Links to your social media accounts\n        Usage Data\n      \n      We may also collect information that your browser sends whenever you visit this website.\n    \n  \n\n  \n    Use of your personal data\n    \n      Brainfry may use personal data for the following purposes:\n      \n        To provide and maintain our application, including to monitor the usage of our application.\n        \n          To manage your Account: to manage your registration as a user of Brainfry. The personal data you provide can give\n          you access to different functionalities that are available to you as a registered user.\n        \n        \n          To contact you: To contact you by email, voice or video calls, text communication, or other equivalent forms of\n          electronic communication, such as a mobile application’s push notifications regarding updates or informative communications\n          related to the functionalities, products or contracted services, including the security updates, when necessary or reasonable for\n          their implementation.\n        \n        To manage your requests: To attend and manage your requests.\n        \n          For other purposes: We may use your information for other purposes, such as data analysis, identifying usage\n          trends, determining the effectiveness of our promotional campaigns and to evaluate and improve Brainfry, products, services,\n          marketing and your experience.\n        \n      \n      We may share your personal information in the following situations:\n      \n        \n          With service providers: We may share your personal information with service providers to monitor and analyze the\n          use of Brainfry.\n        \n        \n          With other users: when you share personal information or otherwise interact in the public areas with other users,\n          such information may be viewed by all users and may be publicly distributed outside. Similarly, other users will be able to view\n          descriptions of your activity, communicate with you and view your profile.\n        \n        With your consent: We may disclose your personal information for any other purpose with your consent.\n      \n    \n  \n\n  \n    \n      Retention of your personal data\n    \n    \n      \n        Brainfry will retain your personal data only for as long as is necessary for the purposes set out in this Privacy Policy. We will\n        retain and use your personal data to the extent necessary to comply with our legal obligations (for example, if we are required to\n        retain your data to comply with applicable laws), resolve disputes, and enforce our legal agreements and policies.\n      \n      \n        Brainfry will also retain usage data for internal analysis purposes. Usage data is generally retained for a shorter period of time,\n        except when this data is used to strengthen the security or to improve the functionality, or we are legally obligated to retain this\n        data for longer time periods.\n      \n    \n  \n\n  \n    Transfer of your personal data\n    \n      \n        Your information, including personal data, may be transferred to — and maintained on — computers located outside of your state,\n        province, country or other governmental jurisdiction where the data protection laws may differ than those from your jurisdiction.\n      \n      Your consent to this Privacy Policy followed by your submission of such information represents your agreement to that transfer.\n      \n        Brainfry will take all steps reasonably necessary to ensure that your data is treated securely and in accordance with this Privacy\n        Policy and no transfer of your personal data will take place to an organization or a country unless there are adequate controls in\n        place including the security of your data and other personal information.\n      \n    \n  \n\n  \n    Delete your personal data\n    \n      You have the right to delete the personal data that you have provided.\n      \n        Brainfry gives you the ability to delete certain information about you from within the\n        application.\n      \n      \n        You may update, amend, or delete your information at any time by signing in to your account, if you have one, and visiting the\n        account settings section that allows you to manage your personal information.\n      \n      Please note, however, that we may need to retain certain information when we have a legal obligation or lawful basis to do so.\n    \n  \n\n  \n    Security of your personal data\n    \n      \n        The security of your personal data is important to us, but remember that no method of transmission over the Internet, or method of\n        electronic storage is 100% secure. While we strive to use commercially acceptable means to protect your personal data, we cannot\n        guarantee its absolute security.\n      \n    \n  \n\n  \n    Children’s privacy\n    \n      \n        Brainfry does not permit access for anyone under the age of 13. We do not knowingly collect personally identifiable information from\n        anyone under the age of 13. If you are a parent or guardian and you are aware that your child has provided us with personal data,\n        take the actions indicated in the Delete your personal data section to remove that data. If we become\n        aware that we have collected personal data from anyone under the age of 13 without verification of parental consent, we may take\n        steps to remove that information from our servers.\n      \n    \n  \n\n  \n    Changes to this privacy policy\n    \n      \n        We may update our privacy policy from time to time. All changes to this policy are publicly recorded in the version controlled\n        source code repository for this application.\n      \n      \n        You are advised to review this Privacy Policy periodically for any changes. Changes to this Privacy Policy are effective when they\n        are posted on this page.\n      \n    \n  \n\n  Return to Brainfry\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Privacy Policy      Types of data we collect                  We use your personal data to provide the Brainfry service. By using Brainfry, you agree to the collection and use of information in        accordance with this Privacy Policy.                    While using Brainfry, we may ask you to provide us with certain personally identifiable information that can be used to contact or        identify you. Personally identifiable information may include, but is not limited to:                    Email address        Your name        Links to your social media accounts        Usage Data            We may also collect information that your browser sends whenever you visit this website.            Use of your personal data          Brainfry may use personal data for the following purposes:              To provide and maintain our application, including to monitor the usage of our application.                  To manage your Account: to manage your registration as a user of Brainfry. The personal data you provide can give          you access to different functionalities that are available to you as a registered user.                          To contact you: To contact you by email, voice or video calls, text communication, or other equivalent forms of          electronic communication, such as a mobile application’s push notifications regarding updates or informative communications          related to the functionalities, products or contracted services, including the security updates, when necessary or reasonable for          their implementation.                To manage your requests: To attend and manage your requests.                  For other purposes: We may use your information for other purposes, such as data analysis, identifying usage          trends, determining the effectiveness of our promotional campaigns and to evaluate and improve Brainfry, products, services,          marketing and your experience.                    We may share your personal information in the following situations:                        With service providers: We may share your personal information with service providers to monitor and analyze the          use of Brainfry.                          With other users: when you share personal information or otherwise interact in the public areas with other users,          such information may be viewed by all users and may be publicly distributed outside. Similarly, other users will be able to view          descriptions of your activity, communicate with you and view your profile.                With your consent: We may disclose your personal information for any other purpose with your consent.                        Retention of your personal data                      Brainfry will retain your personal data only for as long as is necessary for the purposes set out in this Privacy Policy. We will        retain and use your personal data to the extent necessary to comply with our legal obligations (for example, if we are required to        retain your data to comply with applicable laws), resolve disputes, and enforce our legal agreements and policies.                    Brainfry will also retain usage data for internal analysis purposes. Usage data is generally retained for a shorter period of time,        except when this data is used to strengthen the security or to improve the functionality, or we are legally obligated to retain this        data for longer time periods.                  Transfer of your personal data                  Your information, including personal data, may be transferred to — and maintained on — computers located outside of your state,        province, country or other governmental jurisdiction where the data protection laws may differ than those from your jurisdiction.            Your consent to this Privacy Policy followed by your submission of such information represents your agreement to that transfer.              Brainfry will take all steps reasonably necessary to ensure that your data is treated securely and in accordance with this Privacy        Policy and no transfer of your personal data will take place to an organization or a country unless there are adequate controls in        place including the security of your data and other personal information.                  Delete your personal data          You have the right to delete the personal data that you have provided.              Brainfry gives you the ability to delete certain information about you from within the        application.                    You may update, amend, or delete your information at any time by signing in to your account, if you have one, and visiting the        account settings section that allows you to manage your personal information.            Please note, however, that we may need to retain certain information when we have a legal obligation or lawful basis to do so.            Security of your personal data                  The security of your personal data is important to us, but remember that no method of transmission over the Internet, or method of        electronic storage is 100% secure. While we strive to use commercially acceptable means to protect your personal data, we cannot        guarantee its absolute security.                  Children’s privacy                  Brainfry does not permit access for anyone under the age of 13. We do not knowingly collect personally identifiable information from        anyone under the age of 13. If you are a parent or guardian and you are aware that your child has provided us with personal data,        take the actions indicated in the Delete your personal data section to remove that data. If we become        aware that we have collected personal data from anyone under the age of 13 without verification of parental consent, we may take        steps to remove that information from our servers.                  Changes to this privacy policy                  We may update our privacy policy from time to time. All changes to this policy are publicly recorded in the version controlled        source code repository for this application.                    You are advised to review this Privacy Policy periodically for any changes. Changes to this Privacy Policy are effective when they        are posted on this page.              Return to Brainfry'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrivacyPolicyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Progress.html":{"url":"interfaces/Progress.html","title":"interface - Progress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Progress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/user-photos/user-photos.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Upload progress to Firebase Storage\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            progress\n                                        \n                                \n                                \n                                        \n                                            snapshot\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        progress:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        snapshot\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        snapshot:     UploadTaskSnapshot\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UploadTaskSnapshot\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport {\n  getDownloadURL,\n  getMetadata,\n  listAll,\n  percentage,\n  ref,\n  Storage,\n  uploadBytesResumable,\n} from '@angular/fire/storage';\nimport type {\n  FullMetadata,\n  ListResult,\n  UploadTask,\n  UploadTaskSnapshot,\n} from '@angular/fire/storage';\nimport {\n  BehaviorSubject,\n  endWith,\n  finalize,\n  Subject,\n  switchMap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\n/**\n * Firebase storage file\n */\nexport interface Photo {\n  metadata: FullMetadata;\n  url: string;\n}\n\n/**\n * Upload progress to Firebase Storage\n */\nexport interface Progress {\n  progress: number;\n  snapshot: UploadTaskSnapshot;\n}\n\n/** Total allowed uploaded profile photos. */\nexport const MAXIMUM_PHOTOS = 6;\n/** Directory below UID directory for files. */\nconst PHOTO_DIR = 'profile-photos';\n/** Represent random number using letters and numbers. */\nconst RADIX = 36;\n/** Remove the whole number and decimal point from Math.random */\nconst SKIP_WHOLE_NUM = 2;\n\n/**\n * Specific handling for Firebase storage of user profile photos.\n */\n@Injectable({ providedIn: 'root' })\nexport class UserPhotosService {\n  /**\n   * Track the percentage uploaded of `uploadPhoto`.\n   * Idea here is that while falsy (before first emit, when emitting undefined) then the template\n   * will show an `@else` branch for file picker UI. But while uploading it will emit progress for\n   * use in a progress meter.\n   * To automatically refresh the uploaded profile photos from `getProfilePhotos` this must be\n   * subscribed to.\n   */\n  public readonly uploadPercentage$: Observable;\n\n  private readonly _refreshFilesSubject$: BehaviorSubject;\n  private readonly _storage: Storage = inject(Storage);\n  private readonly _taskSubject$: Subject;\n\n  constructor() {\n    this._refreshFilesSubject$ = new BehaviorSubject(undefined);\n    this._taskSubject$ = new Subject();\n\n    this.uploadPercentage$ = this._taskSubject$.pipe(\n      switchMap((task: UploadTask): Observable =>\n        // First emit the upload progress as a percentage.\n        // https://github.com/FirebaseExtended/rxfire/blob/b91f358e2c13c6bf33fb4a540e3963c3902a62b1/storage/index.ts#L115\n        percentage(task).pipe(\n          // Then when complete (100% progress), emit undefined to reset the Observable to falsy.\n          endWith(undefined),\n          // Inform `getProfilePhotos` that there are new files to fetch since storage doesn't stream StorageReferences.\n          finalize((): void => { this._refreshFilesSubject$.next(); }),\n        )),\n    );\n  }\n\n  /**\n   * Gets a list of profile photos from Firebase Storage for the UID. Sorted by most recently uploaded.\n   * So long as something is subscribed to `uploadPercentage$` then this will be refreshed on each upload.\n   */\n  public getProfilePhotos(uid: string): Observable {\n    const profilePhotosRef = ref(this._storage, `${uid}/${PHOTO_DIR}`);\n\n    return this._refreshFilesSubject$.pipe(\n      // Using an inner Observable here to allow us to refresh the files list after each upload.\n      // But this will only work if someone is subscribed to `uploadPercentage$`!\n      switchMap(async (): Promise => {\n        const profilePhotos: Photo[] = [];\n        const profilePhotosList: ListResult = await listAll(profilePhotosRef);\n        const promises: Array, PromiseSettledResult]>> = [];\n\n        // Need the metadata for sorting and the download URL for displaying & form values.\n        // Note this does not handle nested folders, but we aren't using those.\n        for (const item of profilePhotosList.items) {\n          const promise = Promise.allSettled([ getDownloadURL(item), getMetadata(item) ]);\n          promises.push(promise);\n        }\n\n        // Build the data structure for the Photos.\n        for (const result of await Promise.all(promises)) {\n          const [ settledUrl, settledMetadata ] = result;\n          if (settledUrl.status === 'rejected') {\n            console.error(settledUrl.reason);\n          } else if (settledMetadata.status === 'rejected') {\n            console.error(settledMetadata.reason);\n          } else {\n            profilePhotos.push({\n              metadata: settledMetadata.value,\n              url: settledUrl.value,\n            });\n          }\n        }\n\n        // Organize the photos by most recently uploaded.\n        profilePhotos.sort((a: Photo, b: Photo): number => Number(new Date(b.metadata.updated)) - Number(new Date(a.metadata.updated)));\n\n        return profilePhotos;\n      }),\n    );\n  }\n\n  /**\n   * Uploads files to the user's profile photos directory. `uploadPercentage$` will track progress.\n   *\n   * Note that `files` is expected to be a list of one File. However the code is nominally designed\n   * to handle multiple uploads. In that case the `uploadPercentage$` will only be for the final file\n   * uploaded, which if the previous files are still going might be wrong. Unclear how to handle that\n   * case at this time.\n   */\n  public uploadPhoto(files: FileList, uid: string): void {\n    for (const file of files) {\n      // Unlike AWS S3, Firebase storage knows what folders are, and requires you to traverse into them.\n      // So for more straightforward access prefix the filename with a random value to avoid collisions\n      // instead of using a folder.\n      const prefix = Math.random().toString(RADIX).slice(SKIP_WHOLE_NUM);\n      const path = `${uid}/${PHOTO_DIR}/${prefix}-${file.name}`;\n      const storageRef = ref(this._storage, path);\n      const task = uploadBytesResumable(storageRef, file);\n      this._taskSubject$.next(task);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecoverEmailComponent.html":{"url":"components/RecoverEmailComponent.html","title":"component - RecoverEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RecoverEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/recover-email/recover-email.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recover-email\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                            RouterLink\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./recover-email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Private\n                                    Readonly\n                                _service\n                            \n                            \n                                    Public\n                                    Readonly\n                                vm$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/recover-email/recover-email.component.ts:28\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/recover-email/recover-email.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RecoverEmailService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/recover-email/recover-email.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        vm$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/recover-email/recover-email.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { Router, RouterLink } from '@angular/router';\nimport type { Observable } from 'rxjs';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { getState } from '../actions/get-state';\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { RecoverEmailService } from './recover-email.service';\nimport type { RecoverEmailResults } from './recover-email.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    RouterLink,\n    SpinnerComponent,\n  ],\n  selector: 'app-recover-email',\n  templateUrl: './recover-email.component.html',\n})\nexport class RecoverEmailComponent {\n  public readonly vm$: Observable;\n\n  private readonly _router: Router;\n  private readonly _service: RecoverEmailService;\n\n  constructor() {\n    this._router = inject(Router);\n    this._service = inject(RecoverEmailService);\n\n    const { oobCode } = getState(this._router.getCurrentNavigation());\n    this.vm$ = this._service.recoverEmail$(oobCode);\n  }\n}\n\n    \n\n    \n        @if (vm$ | async; as vm) {\n  \n    @if (vm.successful) {\n      \n        Your email has been restored!\n      \n      @if (vm.restoredEmail) {\n        \n          Your email has been restored to {{ vm.restoredEmail }}.\n        \n      }\n      @if (vm.passwordResetSent) {\n        \n          Additionally we have sent you a link to reset your password in the event your account was compromised.\n        \n      } @else {\n        \n          In the event your account was compromised, please\n          reset your password.\n        \n      }\n      \n        Continue\n      \n    } @else {\n      \n        There was a problem with your restoration link\n      \n      \n        \n      \n      \n        Please\n        contact support\n        for assistance.\n      \n    }\n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (vm$ | async; as vm) {      @if (vm.successful) {              Your email has been restored!            @if (vm.restoredEmail) {                  Your email has been restored to {{ vm.restoredEmail }}.              }      @if (vm.passwordResetSent) {                  Additionally we have sent you a link to reset your password in the event your account was compromised.              } @else {                  In the event your account was compromised, please          reset your password.              }              Continue          } @else {              There was a problem with your restoration link                                        Please        contact support        for assistance.          }  } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecoverEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RecoverEmailResults.html":{"url":"interfaces/RecoverEmailResults.html","title":"interface - RecoverEmailResults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RecoverEmailResults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/recover-email/recover-email.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ApplyResult\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                        \n                                            passwordResetSent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passwordResetSent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passwordResetSent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport {\n  applyActionCode,\n  Auth,\n  checkActionCode,\n  sendPasswordResetEmail,\n} from '@angular/fire/auth';\nimport {\n  catchError,\n  delayWhen,\n  of,\n  switchMap,\n  timer,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { getErrorCode } from '../error-code';\n\nexport interface RecoverEmailResults extends ApplyResult {\n  errorCode?: string;\n  passwordResetSent: boolean;\n}\n\ninterface ApplyResult {\n  restoredEmail?: string;\n  successful: boolean;\n}\n\nexport const SEND_EMAIL_DELAY = 500; // milliseconds\n\n@Injectable({ providedIn: 'root' })\nexport class RecoverEmailService {\n  private readonly _auth: Auth = inject(Auth);\n\n  /**\n   * Creates and Observable that when subscribed to will apply the action code to restore the user's\n   * original email address. And if present will automatically send a password reset email to the\n   * restored address in case of account compromise.\n   *\n   * @param delay - Not for production use! Only for use with testing.\n   */\n  public recoverEmail$(code: string | undefined, delay: number = SEND_EMAIL_DELAY): Observable {\n    return of(code).pipe(\n      switchMap(async (oobCode: string | undefined): Promise => this._doActionCode(oobCode)),\n      // Unfortunately it can take time for Firebase to recognize that the email has been restored\n      // so we can send the password reset email.\n      delayWhen((result: ApplyResult): Observable => timer(result.restoredEmail ? delay : 0)),\n      // Give the user the option to reset their password in case the account was compromised:\n      switchMap(async (result: ApplyResult): Promise => {\n        const passwordResetSent = await this._sendPasswordResetEmail(result.restoredEmail);\n        return { ...result, passwordResetSent };\n      }),\n      catchError((problem: unknown): Observable => {\n        console.error('RecoverEmailComponent', problem);\n\n        return of({\n          errorCode: getErrorCode(problem),\n          passwordResetSent: false,\n          successful: false,\n        });\n      }),\n    );\n  }\n\n  /**\n   * Check that the oobCode is still valid, and then apply it.\n   * @returns the restored email address and a success flag.\n   * @throws Error if the oobCode is falsy or the firebase methods fail.\n   */\n  private async _doActionCode(oobCode: string | undefined): Promise {\n    if (oobCode) {\n      const info = await checkActionCode(this._auth, oobCode);\n      const { email: restoredEmail } = info.data;\n\n      await applyActionCode(this._auth, oobCode);\n      // Account email reverted to restoredEmail\n\n      // Problem with being pedantic with all types except undefined vs null is that sometimes you\n      // need to get rid of null from the type.\n      return { restoredEmail: restoredEmail ?? undefined, successful: true };\n    }\n\n    throw new Error('oobCode not found');\n  }\n\n  /**\n   * Firebase types indicate that the email may not always be returned (Accounts without email addresses?)\n   * If the email isn't truthy then just skip the reset.\n   * If the send email fails for some reason, just return false.\n   */\n  private async _sendPasswordResetEmail(restoredEmail: string | undefined): Promise {\n    if (restoredEmail) {\n      try {\n        await sendPasswordResetEmail(this._auth, restoredEmail);\n        return true;\n      } catch (err: unknown) {\n        console.error('RecoverEmailComponent#_sendPasswordResetEmail', err);\n      }\n    }\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RecoverEmailService.html":{"url":"injectables/RecoverEmailService.html","title":"injectable - RecoverEmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RecoverEmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/recover-email/recover-email.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _auth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                _doActionCode\n                            \n                            \n                                    Private\n                                    Async\n                                _sendPasswordResetEmail\n                            \n                            \n                                    Public\n                                recoverEmail$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _doActionCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    _doActionCode(oobCode: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/recover-email/recover-email.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Check that the oobCode is still valid, and then apply it.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oobCode\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                the restored email address and a success flag.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _sendPasswordResetEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    _sendPasswordResetEmail(restoredEmail: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/recover-email/recover-email.service.ts:91\n                        \n                    \n\n\n            \n                \n                        Firebase types indicate that the email may not always be returned (Accounts without email addresses?)\nIf the email isn't truthy then just skip the reset.\nIf the send email fails for some reason, just return false.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                restoredEmail\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        recoverEmail$\n                        \n                    \n                \n            \n            \n                \n                        \n                    recoverEmail$(code: string | undefined, delay: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/recover-email/recover-email.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Creates and Observable that when subscribed to will apply the action code to restore the user's\noriginal email address. And if present will automatically send a password reset email to the\nrestored address in case of account compromise.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                delay\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    SEND_EMAIL_DELAY\n                                            \n\n                                            \n                                                    \nNot for production use! Only for use with testing.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Auth\n\n                    \n                \n                \n                    \n                        Default value : inject(Auth)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/recover-email/recover-email.service.ts:33\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport {\n  applyActionCode,\n  Auth,\n  checkActionCode,\n  sendPasswordResetEmail,\n} from '@angular/fire/auth';\nimport {\n  catchError,\n  delayWhen,\n  of,\n  switchMap,\n  timer,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { getErrorCode } from '../error-code';\n\nexport interface RecoverEmailResults extends ApplyResult {\n  errorCode?: string;\n  passwordResetSent: boolean;\n}\n\ninterface ApplyResult {\n  restoredEmail?: string;\n  successful: boolean;\n}\n\nexport const SEND_EMAIL_DELAY = 500; // milliseconds\n\n@Injectable({ providedIn: 'root' })\nexport class RecoverEmailService {\n  private readonly _auth: Auth = inject(Auth);\n\n  /**\n   * Creates and Observable that when subscribed to will apply the action code to restore the user's\n   * original email address. And if present will automatically send a password reset email to the\n   * restored address in case of account compromise.\n   *\n   * @param delay - Not for production use! Only for use with testing.\n   */\n  public recoverEmail$(code: string | undefined, delay: number = SEND_EMAIL_DELAY): Observable {\n    return of(code).pipe(\n      switchMap(async (oobCode: string | undefined): Promise => this._doActionCode(oobCode)),\n      // Unfortunately it can take time for Firebase to recognize that the email has been restored\n      // so we can send the password reset email.\n      delayWhen((result: ApplyResult): Observable => timer(result.restoredEmail ? delay : 0)),\n      // Give the user the option to reset their password in case the account was compromised:\n      switchMap(async (result: ApplyResult): Promise => {\n        const passwordResetSent = await this._sendPasswordResetEmail(result.restoredEmail);\n        return { ...result, passwordResetSent };\n      }),\n      catchError((problem: unknown): Observable => {\n        console.error('RecoverEmailComponent', problem);\n\n        return of({\n          errorCode: getErrorCode(problem),\n          passwordResetSent: false,\n          successful: false,\n        });\n      }),\n    );\n  }\n\n  /**\n   * Check that the oobCode is still valid, and then apply it.\n   * @returns the restored email address and a success flag.\n   * @throws Error if the oobCode is falsy or the firebase methods fail.\n   */\n  private async _doActionCode(oobCode: string | undefined): Promise {\n    if (oobCode) {\n      const info = await checkActionCode(this._auth, oobCode);\n      const { email: restoredEmail } = info.data;\n\n      await applyActionCode(this._auth, oobCode);\n      // Account email reverted to restoredEmail\n\n      // Problem with being pedantic with all types except undefined vs null is that sometimes you\n      // need to get rid of null from the type.\n      return { restoredEmail: restoredEmail ?? undefined, successful: true };\n    }\n\n    throw new Error('oobCode not found');\n  }\n\n  /**\n   * Firebase types indicate that the email may not always be returned (Accounts without email addresses?)\n   * If the email isn't truthy then just skip the reset.\n   * If the send email fails for some reason, just return false.\n   */\n  private async _sendPasswordResetEmail(restoredEmail: string | undefined): Promise {\n    if (restoredEmail) {\n      try {\n        await sendPasswordResetEmail(this._auth, restoredEmail);\n        return true;\n      } catch (err: unknown) {\n        console.error('RecoverEmailComponent#_sendPasswordResetEmail', err);\n      }\n    }\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/reset-password/reset-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                            ReactiveFormsModule\n                            RouterLink\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Private\n                                    Readonly\n                                _service\n                            \n                            \n                                    Public\n                                    Readonly\n                                $formPasswordsInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password1CntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password1CntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password2CntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password2CntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                maxPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                minPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                password1Cntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                password2Cntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                resetPasswordForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                vm$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:50\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/reset-password/reset-password.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResetPasswordService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $formPasswordsInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password1CntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password1CntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password2CntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password2CntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        maxPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.maxLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        minPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.minLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password1Cntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password2Cntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        resetPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResetPasswordFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        vm$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport type { Signal } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport type { FormControl, ValidationErrors } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport type { Observable } from 'rxjs';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { getState } from '../actions/get-state';\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { createPasswordControl, PASSWORDS } from '../identity-forms';\nimport { confirmMatch, confirmMatchFormErrors } from '../validators/confirm-match';\nimport { ResetPasswordService } from './reset-password.service';\nimport type { ResetPasswordResults } from './reset-password.service';\n\ntype ResetPasswordFormGroup = FormGroup;\n  password2: FormControl;\n}>;\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    ReactiveFormsModule,\n    RouterLink,\n    SpinnerComponent,\n  ],\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n})\nexport class ResetPasswordComponent {\n  public readonly $formPasswordsInvalid: Signal;\n  public readonly $password1CntrlErrors: Signal;\n  public readonly $password1CntrlInvalid: Signal;\n  public readonly $password2CntrlErrors: Signal;\n  public readonly $password2CntrlInvalid: Signal;\n  public readonly maxPasswordLength: number = PASSWORDS.maxLength;\n  public readonly minPasswordLength: number = PASSWORDS.minLength;\n  public readonly password1Cntrl: FormControl;\n  public readonly password2Cntrl: FormControl;\n  public readonly resetPasswordForm: ResetPasswordFormGroup;\n  public readonly vm$: Observable;\n\n  private readonly _router: Router;\n  private readonly _service: ResetPasswordService;\n\n  constructor() {\n    this._router = inject(Router);\n    this._service = inject(ResetPasswordService);\n\n    ({\n      $errors: this.$password1CntrlErrors,\n      $invalid: this.$password1CntrlInvalid,\n      control: this.password1Cntrl,\n    } = createPasswordControl(true));\n    ({\n      $errors: this.$password2CntrlErrors,\n      $invalid: this.$password2CntrlInvalid,\n      control: this.password2Cntrl,\n    } = createPasswordControl());\n\n    this.resetPasswordForm = new FormGroup(\n      {\n        password1: this.password1Cntrl,\n        password2: this.password2Cntrl,\n      },\n      confirmMatch('password1', 'password2'),\n    );\n\n    this.$formPasswordsInvalid = confirmMatchFormErrors(this.resetPasswordForm, this.password1Cntrl, this.password2Cntrl);\n\n    const { oobCode } = getState(this._router.getCurrentNavigation());\n    this.vm$ = this._service.resetPassword$(oobCode);\n  }\n\n  public onSubmit(): void {\n    const { password1 } = this.resetPasswordForm.value;\n\n    if (this.resetPasswordForm.invalid || !password1) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this._service.replacePassword(password1);\n  }\n}\n\n    \n\n    \n        @if (vm$ | async; as vm) {\n  \n    @if (vm.showForm) {\n      \n        \n          Replace the password for {{ vm.email }} account.\n        \n\n        \n          New password:\n          \n          \n            @if ($password1CntrlErrors(); as errors) {\n              \n                @if (errors['required']) {\n                  \n                    Please enter a new password.\n                  \n                }\n                @if (errors['minlength']) {\n                  \n                    Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and\n                    lowercase letters, numbers, and symbols.\n                  \n                }\n                @if (errors['maxlength']) {\n                  \n                    Your password may not be longer than {{ maxPasswordLength }} characters.\n                  \n                }\n                @if (errors['passwordstrength']) {\n                  \n                    Your password is not very strong. Include a combination of upper and lowercase letters, numbers, and symbols.\n                  \n                }\n                @if (errors['firebasevalidator']) {\n                  \n                    Your password needs to include: TODO\n                  \n                }\n              \n            }\n          \n        \n\n        \n          \n            Confirm password:\n          \n          \n          \n            @if ($password2CntrlErrors(); as errors) {\n              \n                @if (errors['required']) {\n                  \n                    Please re-enter your password.\n                  \n                }\n                @if (errors['minlength']) {\n                  \n                    Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and\n                    lowercase letters, numbers, and symbols.\n                  \n                }\n                @if (errors['maxlength']) {\n                  \n                    Your password may not be longer than {{ maxPasswordLength }} characters.\n                  \n                }\n              \n            }\n          \n        \n\n        \n          @if ($formPasswordsInvalid()) {\n            \n              Passwords must match.\n            \n          }\n        \n\n        @if (vm.errorCode) {\n          \n            \n          \n        }\n\n        \n          \n            Replace password\n          \n        \n      \n    } @else if (vm.errorCode) {\n      There was a problem with your reset link\n      \n        \n      \n      \n        Please\n        contact support\n        for assistance.\n      \n    } @else {\n      Your password has been replaced!\n      \n        Return to login\n      \n    }\n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (vm$ | async; as vm) {      @if (vm.showForm) {                        Replace the password for {{ vm.email }} account.                          New password:                                @if ($password1CntrlErrors(); as errors) {                              @if (errors[\\'required\\']) {                                      Please enter a new password.                                  }                @if (errors[\\'minlength\\']) {                                      Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and                    lowercase letters, numbers, and symbols.                                  }                @if (errors[\\'maxlength\\']) {                                      Your password may not be longer than {{ maxPasswordLength }} characters.                                  }                @if (errors[\\'passwordstrength\\']) {                                      Your password is not very strong. Include a combination of upper and lowercase letters, numbers, and symbols.                                  }                @if (errors[\\'firebasevalidator\\']) {                                      Your password needs to include: TODO                                  }                          }                                                Confirm password:                                          @if ($password2CntrlErrors(); as errors) {                              @if (errors[\\'required\\']) {                                      Please re-enter your password.                                  }                @if (errors[\\'minlength\\']) {                                      Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and                    lowercase letters, numbers, and symbols.                                  }                @if (errors[\\'maxlength\\']) {                                      Your password may not be longer than {{ maxPasswordLength }} characters.                                  }                          }                                    @if ($formPasswordsInvalid()) {                          Passwords must match.                      }                @if (vm.errorCode) {                                        }                              Replace password                            } @else if (vm.errorCode) {      There was a problem with your reset link                                  Please        contact support        for assistance.          } @else {      Your password has been replaced!              Return to login          }  } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResetPasswordService.html":{"url":"injectables/ResetPasswordService.html","title":"injectable - ResetPasswordService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResetPasswordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/reset-password/reset-password.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _auth\n                            \n                            \n                                    Private\n                                    Readonly\n                                _newPasswordSubject$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                _confirmPasswordReset\n                            \n                            \n                                    Private\n                                    Async\n                                _verifyCode\n                            \n                            \n                                    Public\n                                replacePassword\n                            \n                            \n                                    Public\n                                resetPassword$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _confirmPasswordReset\n                        \n                    \n                \n            \n            \n                \n                        \n                    _confirmPasswordReset(code: string | undefined, email: string, newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/reset-password/reset-password.service.ts:102\n                        \n                    \n\n\n            \n                \n                        Applies the new password to the user's account using the oobCode.\n             redisplay the form.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nIs necessary only in the case that confirmPasswordReset fails, and we need to\nredisplay the form.\n\n\n                                            \n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _verifyCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    _verifyCode(code: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/reset-password/reset-password.service.ts:117\n                        \n                    \n\n\n            \n                \n                        This identifies the email for the User who's password would be reset by the oobCode.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        replacePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    replacePassword(newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/reset-password/reset-password.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Triggers the confirmPasswordReset promise to apply the action code and replace the user's password.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resetPassword$\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetPassword$(code: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/reset-password/reset-password.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Sets up an Observable that will first verify the oobCode is valid for password resetting, and\nthen show the password reset form and the user's email address.\nThis is followed by setting up a subject to emit a new password that will then be confirmed as\nthe new password for the user. While that action is pending it emits undefined to show the\nspinner again. In the event of an error it shows the form again with an error message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Auth\n\n                    \n                \n                \n                    \n                        Default value : inject(Auth)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.service.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _newPasswordSubject$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.service.ts:44\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Auth, confirmPasswordReset, verifyPasswordResetCode } from '@angular/fire/auth';\nimport {\n  from,\n  merge,\n  of,\n  startWith,\n  Subject,\n  switchMap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { getErrorCode } from '../error-code';\n\nexport type ResetPasswordResults = PasswordResetSuccess | ShowForm | VerifiedFailed | undefined;\n\ntype ConfirmResult = PasswordResetSuccess | ShowForm;\n\n// Final state after resetting password\ninterface PasswordResetSuccess {\n  errorCode: undefined; // This makes the template type checker happier\n  showForm: false;\n}\n\n// Verified Success & Password Reset Failure\ninterface ShowForm {\n  email: string;\n  errorCode?: string;\n  showForm: true;\n}\n\n// Code Verification Failed\ninterface VerifiedFailed {\n  email: undefined; // This makes the type checker happier in the destructuring\n  errorCode: string;\n  showForm: false;\n}\n\ntype VerifiedResult = ShowForm | VerifiedFailed;\n\n@Injectable({ providedIn: 'root' })\nexport class ResetPasswordService {\n  private readonly _auth: Auth = inject(Auth);\n  private readonly _newPasswordSubject$: Subject = new Subject();\n\n  /**\n   * Triggers the confirmPasswordReset promise to apply the action code and replace the user's password.\n   */\n  public replacePassword(newPassword: string): void {\n    this._newPasswordSubject$.next(newPassword);\n  }\n\n  /**\n   * Sets up an Observable that will first verify the oobCode is valid for password resetting, and\n   * then show the password reset form and the user's email address.\n   * This is followed by setting up a subject to emit a new password that will then be confirmed as\n   * the new password for the user. While that action is pending it emits `undefined` to show the\n   * spinner again. In the event of an error it shows the form again with an error message.\n   */\n  public resetPassword$(code: string | undefined): Observable {\n    return of(code).pipe(\n      switchMap(async (oobCode: string | undefined): Promise => this._verifyCode(oobCode)),\n      switchMap((verifyResults: VerifiedResult): Observable => {\n        const verifyResults$ = of(verifyResults);\n        const { email } = verifyResults;\n\n        // Verified succeeded\n        if (email) {\n          // This design with an inner `merge` after `_verifyCode` settles is to accomodate passing\n          // the email to _confirmPasswordReset in case the new password is rejected.\n          // However, it does make testing this path more complicated I think. Would it be better to\n          // move the merge to the return of resetPassword$ and store the email as a private property?\n          const confirmPasswordReset$ = this._newPasswordSubject$.pipe(\n            switchMap((newPassword: string): Observable => {\n              const promise = this._confirmPasswordReset(code, email, newPassword);\n              return from(promise)\n                // Show the spinner while applying the action code.\n                .pipe(startWith(undefined));\n            }),\n          );\n\n          return merge(\n            // This will emit first after code verification.\n            verifyResults$,\n            // This will emit after form submission.\n            confirmPasswordReset$,\n          );\n        }\n\n        // Verified failed\n        return verifyResults$;\n      }),\n    );\n  }\n\n  /**\n   * Applies the new password to the user's account using the oobCode.\n   * @param email - Is necessary only in the case that `confirmPasswordReset` fails, and we need to\n   *              redisplay the form.\n   * @throws If the oobCode is falsy\n   */\n  private async _confirmPasswordReset(code: string | undefined, email: string, newPassword: string): Promise {\n    if (code) {\n      try {\n        await confirmPasswordReset(this._auth, code, newPassword);\n        return { errorCode: undefined, showForm: false };\n      } catch (err: unknown) {\n        return { email, errorCode: getErrorCode(err), showForm: true };\n      }\n    }\n    throw new Error('oobCode not found');\n  }\n\n  /**\n   * This identifies the email for the User who's password would be reset by the oobCode.\n   */\n  private async _verifyCode(code: string | undefined): Promise {\n    if (code) {\n      try {\n        const email = await verifyPasswordResetCode(this._auth, code);\n        return { email, showForm: true };\n      } catch (err: unknown) {\n        return { email: undefined, errorCode: getErrorCode(err), showForm: false };\n      }\n    }\n\n    return { email: undefined, errorCode: 'oobCode not found', showForm: false };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShowForm.html":{"url":"interfaces/ShowForm.html","title":"interface - ShowForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShowForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/reset-password/reset-password.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                        \n                                            showForm\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showForm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showForm:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Auth, confirmPasswordReset, verifyPasswordResetCode } from '@angular/fire/auth';\nimport {\n  from,\n  merge,\n  of,\n  startWith,\n  Subject,\n  switchMap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { getErrorCode } from '../error-code';\n\nexport type ResetPasswordResults = PasswordResetSuccess | ShowForm | VerifiedFailed | undefined;\n\ntype ConfirmResult = PasswordResetSuccess | ShowForm;\n\n// Final state after resetting password\ninterface PasswordResetSuccess {\n  errorCode: undefined; // This makes the template type checker happier\n  showForm: false;\n}\n\n// Verified Success & Password Reset Failure\ninterface ShowForm {\n  email: string;\n  errorCode?: string;\n  showForm: true;\n}\n\n// Code Verification Failed\ninterface VerifiedFailed {\n  email: undefined; // This makes the type checker happier in the destructuring\n  errorCode: string;\n  showForm: false;\n}\n\ntype VerifiedResult = ShowForm | VerifiedFailed;\n\n@Injectable({ providedIn: 'root' })\nexport class ResetPasswordService {\n  private readonly _auth: Auth = inject(Auth);\n  private readonly _newPasswordSubject$: Subject = new Subject();\n\n  /**\n   * Triggers the confirmPasswordReset promise to apply the action code and replace the user's password.\n   */\n  public replacePassword(newPassword: string): void {\n    this._newPasswordSubject$.next(newPassword);\n  }\n\n  /**\n   * Sets up an Observable that will first verify the oobCode is valid for password resetting, and\n   * then show the password reset form and the user's email address.\n   * This is followed by setting up a subject to emit a new password that will then be confirmed as\n   * the new password for the user. While that action is pending it emits `undefined` to show the\n   * spinner again. In the event of an error it shows the form again with an error message.\n   */\n  public resetPassword$(code: string | undefined): Observable {\n    return of(code).pipe(\n      switchMap(async (oobCode: string | undefined): Promise => this._verifyCode(oobCode)),\n      switchMap((verifyResults: VerifiedResult): Observable => {\n        const verifyResults$ = of(verifyResults);\n        const { email } = verifyResults;\n\n        // Verified succeeded\n        if (email) {\n          // This design with an inner `merge` after `_verifyCode` settles is to accomodate passing\n          // the email to _confirmPasswordReset in case the new password is rejected.\n          // However, it does make testing this path more complicated I think. Would it be better to\n          // move the merge to the return of resetPassword$ and store the email as a private property?\n          const confirmPasswordReset$ = this._newPasswordSubject$.pipe(\n            switchMap((newPassword: string): Observable => {\n              const promise = this._confirmPasswordReset(code, email, newPassword);\n              return from(promise)\n                // Show the spinner while applying the action code.\n                .pipe(startWith(undefined));\n            }),\n          );\n\n          return merge(\n            // This will emit first after code verification.\n            verifyResults$,\n            // This will emit after form submission.\n            confirmPasswordReset$,\n          );\n        }\n\n        // Verified failed\n        return verifyResults$;\n      }),\n    );\n  }\n\n  /**\n   * Applies the new password to the user's account using the oobCode.\n   * @param email - Is necessary only in the case that `confirmPasswordReset` fails, and we need to\n   *              redisplay the form.\n   * @throws If the oobCode is falsy\n   */\n  private async _confirmPasswordReset(code: string | undefined, email: string, newPassword: string): Promise {\n    if (code) {\n      try {\n        await confirmPasswordReset(this._auth, code, newPassword);\n        return { errorCode: undefined, showForm: false };\n      } catch (err: unknown) {\n        return { email, errorCode: getErrorCode(err), showForm: true };\n      }\n    }\n    throw new Error('oobCode not found');\n  }\n\n  /**\n   * This identifies the email for the User who's password would be reset by the oobCode.\n   */\n  private async _verifyCode(code: string | undefined): Promise {\n    if (code) {\n      try {\n        const email = await verifyPasswordResetCode(this._auth, code);\n        return { email, showForm: true };\n      } catch (err: unknown) {\n        return { email: undefined, errorCode: getErrorCode(err), showForm: false };\n      }\n    }\n\n    return { email: undefined, errorCode: 'oobCode not found', showForm: false };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/sidebar/sidebar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Application menu sidebar for logged in vies. Contains links to primary application features, user\naccount features should be linked from the accounts menu in the header.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sidebar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n/**\n * Application menu sidebar for logged in vies. Contains links to primary application features, user\n * account features should be linked from the accounts menu in the header.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-sidebar',\n  styleUrl: './sidebar.component.scss',\n  templateUrl: './sidebar.component.html',\n})\nexport class SidebarComponent {}\n\n    \n\n    \n        \n  sidebar works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  sidebar works!'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/spinner/spinner.component.ts\n\n\n\n    \n        Description\n    \n    \n        Use while waiting for asynchronous tasks to complete.\nSource: https://github.com/n3r4zzurr0/svg-spinners/blob/main/svg-css/blocks-shuffle-3.svg\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spinner\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./spinner.component.svg\n            \n\n\n\n            \n                styleUrl\n                ./spinner.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n/**\n * Use while waiting for asynchronous tasks to complete.\n *\n * Source: https://github.com/n3r4zzurr0/svg-spinners/blob/main/svg-css/blocks-shuffle-3.svg\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-spinner',\n  styleUrl: './spinner.component.scss',\n  templateUrl: './spinner.component.svg',\n})\nexport class SpinnerComponent {}\n\n    \n\n    \n        \n  Loading…\n  \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Loading…      '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StandardLayoutComponent.html":{"url":"components/StandardLayoutComponent.html","title":"component - StandardLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StandardLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/standard/standard.component.ts\n\n\n\n    \n        Description\n    \n    \n        Full screen layout for logged in views. Design is mobile first with header, main content, sidebar,\nand footer on smaller screens. Larger screens layout with full width header and footer, and middle\ncontent containing a sidebar and the main content area.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-standard-layout\n            \n\n\n            \n                imports\n                \n                                FooterComponent\n                                HeaderComponent\n                            RouterOutlet\n                                SidebarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./standard.component.html\n            \n\n\n\n            \n                styleUrl\n                ./standard.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\nimport { FooterComponent } from '../footer/footer.component';\nimport { HeaderComponent } from '../header/header.component';\nimport { SidebarComponent } from '../sidebar/sidebar.component';\n\n/**\n * Full screen layout for logged in views. Design is mobile first with header, main content, sidebar,\n * and footer on smaller screens. Larger screens layout with full width header and footer, and middle\n * content containing a sidebar and the main content area.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    FooterComponent,\n    HeaderComponent,\n    RouterOutlet,\n    SidebarComponent,\n  ],\n  selector: 'app-standard-layout',\n  styleUrl: './standard.component.scss',\n  templateUrl: './standard.component.html',\n})\nexport class StandardLayoutComponent {}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StandardLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TermsAndConditionsComponent.html":{"url":"components/TermsAndConditionsComponent.html","title":"component - TermsAndConditionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TermsAndConditionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/legal/terms-and-conditions/terms-and-conditions.component.ts\n\n\n\n    \n        Description\n    \n    \n        View accessible to all visitors that establishes rules for user interaction, protects the website\nowner's legal interests by limiting liability, clarifies ownership of content, and sets\nexpectations for how users can engage with the site, essentially acting as a legal contract\noutlining the rights and responsibilities of both the website owner and the user.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-terms-and-conditions\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./terms-and-conditions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n/**\n * View accessible to all visitors that establishes rules for user interaction, protects the website\n * owner's legal interests by limiting liability, clarifies ownership of content, and sets\n * expectations for how users can engage with the site, essentially acting as a legal contract\n * outlining the rights and responsibilities of both the website owner and the user.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ RouterLink ],\n  selector: 'app-terms-and-conditions',\n  templateUrl: './terms-and-conditions.component.html',\n})\nexport class TermsAndConditionsComponent {}\n\n    \n\n    \n        \n  Terms &amp; Conditions\n  \n    The application\n    \n      This application is presented for demonstration purposes only. Access may be granted and revoked by the author or designated\n      representatives at any time. There are no warranties express or implied. Use at your own risk.\n    \n  \n  \n    The code\n    \n      TL;DR\n      Here’s what the license entails:\n    \n    \n      \n        Anyone can copy, modify and distribute this software.\n      \n      \n        You have to include the license and copyright notice with each and every distribution.\n      \n      \n        You can use this software privately.\n      \n      \n        You can use this software for commercial purposes.\n      \n      \n        If you dare build your business solely from this code, you risk open-sourcing the whole code base.\n      \n      \n        If you modify it, you have to indicate changes made to the code.\n      \n      \n        Any modifications of this code base MUST be distributed with the same license, GPLv3.\n      \n      \n        This software is provided without warranty.\n      \n      \n        The software author or license can not be held liable for any damages inflicted by the software.\n      \n    \n    \n      \n        Summary provided by kn9ts.\n      \n    \n    See full license for details.\n    Return to Brainfry\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Terms & Conditions      The application          This application is presented for demonstration purposes only. Access may be granted and revoked by the author or designated      representatives at any time. There are no warranties express or implied. Use at your own risk.            The code          TL;DR      Here’s what the license entails:                      Anyone can copy, modify and distribute this software.                    You have to include the license and copyright notice with each and every distribution.                    You can use this software privately.                    You can use this software for commercial purposes.                    If you dare build your business solely from this code, you risk open-sourcing the whole code base.                    If you modify it, you have to indicate changes made to the code.                    Any modifications of this code base MUST be distributed with the same license, GPLv3.                    This software is provided without warranty.                    The software author or license can not be held liable for any damages inflicted by the software.                            Summary provided by kn9ts.              See full license for details.    Return to Brainfry  '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TermsAndConditionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserPhotosService.html":{"url":"injectables/UserPhotosService.html","title":"injectable - UserPhotosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserPhotosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/user-photos/user-photos.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Specific handling for Firebase storage of user profile photos.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _refreshFilesSubject$\n                            \n                            \n                                    Private\n                                    Readonly\n                                _storage\n                            \n                            \n                                    Private\n                                    Readonly\n                                _taskSubject$\n                            \n                            \n                                    Public\n                                    Readonly\n                                uploadPercentage$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getProfilePhotos\n                            \n                            \n                                    Public\n                                uploadPhoto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/user-photos/user-photos.service.ts:68\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getProfilePhotos\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfilePhotos(uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/user-photos/user-photos.service.ts:91\n                        \n                    \n\n\n            \n                \n                        Gets a list of profile photos from Firebase Storage for the UID. Sorted by most recently uploaded.\nSo long as something is subscribed to uploadPercentage$ then this will be refreshed on each upload.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        uploadPhoto\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadPhoto(files: FileList, uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/user-photos/user-photos.service.ts:140\n                        \n                    \n\n\n            \n                \n                        Uploads files to the user's profile photos directory. uploadPercentage$ will track progress.\nNote that files is expected to be a list of one File. However the code is nominally designed\nto handle multiple uploads. In that case the uploadPercentage$ will only be for the final file\nuploaded, which if the previous files are still going might be wrong. Unclear how to handle that\ncase at this time.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        FileList\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _refreshFilesSubject$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/user-photos.service.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                \n                    \n                        Default value : inject(Storage)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/user-photos.service.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _taskSubject$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/user-photos.service.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        uploadPercentage$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/user-photos.service.ts:64\n                        \n                    \n\n            \n                \n                    Track the percentage uploaded of uploadPhoto.\nIdea here is that while falsy (before first emit, when emitting undefined) then the template\nwill show an @else branch for file picker UI. But while uploading it will emit progress for\nuse in a progress meter.\nTo automatically refresh the uploaded profile photos from getProfilePhotos this must be\nsubscribed to.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport {\n  getDownloadURL,\n  getMetadata,\n  listAll,\n  percentage,\n  ref,\n  Storage,\n  uploadBytesResumable,\n} from '@angular/fire/storage';\nimport type {\n  FullMetadata,\n  ListResult,\n  UploadTask,\n  UploadTaskSnapshot,\n} from '@angular/fire/storage';\nimport {\n  BehaviorSubject,\n  endWith,\n  finalize,\n  Subject,\n  switchMap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\n/**\n * Firebase storage file\n */\nexport interface Photo {\n  metadata: FullMetadata;\n  url: string;\n}\n\n/**\n * Upload progress to Firebase Storage\n */\nexport interface Progress {\n  progress: number;\n  snapshot: UploadTaskSnapshot;\n}\n\n/** Total allowed uploaded profile photos. */\nexport const MAXIMUM_PHOTOS = 6;\n/** Directory below UID directory for files. */\nconst PHOTO_DIR = 'profile-photos';\n/** Represent random number using letters and numbers. */\nconst RADIX = 36;\n/** Remove the whole number and decimal point from Math.random */\nconst SKIP_WHOLE_NUM = 2;\n\n/**\n * Specific handling for Firebase storage of user profile photos.\n */\n@Injectable({ providedIn: 'root' })\nexport class UserPhotosService {\n  /**\n   * Track the percentage uploaded of `uploadPhoto`.\n   * Idea here is that while falsy (before first emit, when emitting undefined) then the template\n   * will show an `@else` branch for file picker UI. But while uploading it will emit progress for\n   * use in a progress meter.\n   * To automatically refresh the uploaded profile photos from `getProfilePhotos` this must be\n   * subscribed to.\n   */\n  public readonly uploadPercentage$: Observable;\n\n  private readonly _refreshFilesSubject$: BehaviorSubject;\n  private readonly _storage: Storage = inject(Storage);\n  private readonly _taskSubject$: Subject;\n\n  constructor() {\n    this._refreshFilesSubject$ = new BehaviorSubject(undefined);\n    this._taskSubject$ = new Subject();\n\n    this.uploadPercentage$ = this._taskSubject$.pipe(\n      switchMap((task: UploadTask): Observable =>\n        // First emit the upload progress as a percentage.\n        // https://github.com/FirebaseExtended/rxfire/blob/b91f358e2c13c6bf33fb4a540e3963c3902a62b1/storage/index.ts#L115\n        percentage(task).pipe(\n          // Then when complete (100% progress), emit undefined to reset the Observable to falsy.\n          endWith(undefined),\n          // Inform `getProfilePhotos` that there are new files to fetch since storage doesn't stream StorageReferences.\n          finalize((): void => { this._refreshFilesSubject$.next(); }),\n        )),\n    );\n  }\n\n  /**\n   * Gets a list of profile photos from Firebase Storage for the UID. Sorted by most recently uploaded.\n   * So long as something is subscribed to `uploadPercentage$` then this will be refreshed on each upload.\n   */\n  public getProfilePhotos(uid: string): Observable {\n    const profilePhotosRef = ref(this._storage, `${uid}/${PHOTO_DIR}`);\n\n    return this._refreshFilesSubject$.pipe(\n      // Using an inner Observable here to allow us to refresh the files list after each upload.\n      // But this will only work if someone is subscribed to `uploadPercentage$`!\n      switchMap(async (): Promise => {\n        const profilePhotos: Photo[] = [];\n        const profilePhotosList: ListResult = await listAll(profilePhotosRef);\n        const promises: Array, PromiseSettledResult]>> = [];\n\n        // Need the metadata for sorting and the download URL for displaying & form values.\n        // Note this does not handle nested folders, but we aren't using those.\n        for (const item of profilePhotosList.items) {\n          const promise = Promise.allSettled([ getDownloadURL(item), getMetadata(item) ]);\n          promises.push(promise);\n        }\n\n        // Build the data structure for the Photos.\n        for (const result of await Promise.all(promises)) {\n          const [ settledUrl, settledMetadata ] = result;\n          if (settledUrl.status === 'rejected') {\n            console.error(settledUrl.reason);\n          } else if (settledMetadata.status === 'rejected') {\n            console.error(settledMetadata.reason);\n          } else {\n            profilePhotos.push({\n              metadata: settledMetadata.value,\n              url: settledUrl.value,\n            });\n          }\n        }\n\n        // Organize the photos by most recently uploaded.\n        profilePhotos.sort((a: Photo, b: Photo): number => Number(new Date(b.metadata.updated)) - Number(new Date(a.metadata.updated)));\n\n        return profilePhotos;\n      }),\n    );\n  }\n\n  /**\n   * Uploads files to the user's profile photos directory. `uploadPercentage$` will track progress.\n   *\n   * Note that `files` is expected to be a list of one File. However the code is nominally designed\n   * to handle multiple uploads. In that case the `uploadPercentage$` will only be for the final file\n   * uploaded, which if the previous files are still going might be wrong. Unclear how to handle that\n   * case at this time.\n   */\n  public uploadPhoto(files: FileList, uid: string): void {\n    for (const file of files) {\n      // Unlike AWS S3, Firebase storage knows what folders are, and requires you to traverse into them.\n      // So for more straightforward access prefix the filename with a random value to avoid collisions\n      // instead of using a folder.\n      const prefix = Math.random().toString(RADIX).slice(SKIP_WHOLE_NUM);\n      const path = `${uid}/${PHOTO_DIR}/${prefix}-${file.name}`;\n      const storageRef = ref(this._storage, path);\n      const task = uploadBytesResumable(storageRef, file);\n      this._taskSubject$.next(task);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/user-profile/user-profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Form to manage Firebase User profile.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                            NgOptimizedImage\n                                PhotoUploadComponent\n                            ReactiveFormsModule\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-profile.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _userPhotoService\n                            \n                            \n                                    Public\n                                    Readonly\n                                $errorCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                $nameCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $nameCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $photoUrlCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $photoUrlCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $showForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                $showUrlInput\n                            \n                            \n                                    Public\n                                    Readonly\n                                nameCntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                photoUrlCntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                vm$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onSubmit\n                            \n                            \n                                    Public\n                                togglePhotoUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:104\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/user-profile/user-profile.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Update the Firebase User profile data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        togglePhotoUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    togglePhotoUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/user-profile/user-profile.component.ts:189\n                        \n                    \n\n\n            \n                \n                        Toggle the UI to set the photoURL manually to a remote URL or to picking from a list of uploaded\nprofile photos in Firebase Storage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _userPhotoService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserPhotosService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:81\n                        \n                    \n\n            \n                \n                    Error codes from updateProfile when form is submitted.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $nameCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:83\n                        \n                    \n\n            \n                \n                    Error messages specific for the displayName field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $nameCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:85\n                        \n                    \n\n            \n                \n                    Aria-invalid attribute for displayName field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $photoUrlCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:87\n                        \n                    \n\n            \n                \n                    Error messages specific for the photoURL field (custom URL entry).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $photoUrlCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:89\n                        \n                    \n\n            \n                \n                    Aria-invalid attribute for photoURL field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $showForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:91\n                        \n                    \n\n            \n                \n                    Toggle spinner and HTML Form display.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $showUrlInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:93\n                        \n                    \n\n            \n                \n                    Toggle photoURL URL input and upload file interface.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        nameCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        photoUrlCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        vm$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:102\n                        \n                    \n\n            \n                \n                    Collect the current User and profile photos uploaded to Firebase storage. Initalize profileForm\nwith data from Firebase User, and determine if photoURL is an uploaded file. If so, default the\ninterace to uploads instead of the URL.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe, NgOptimizedImage } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { Signal, WritableSignal } from '@angular/core';\nimport { updateProfile } from '@angular/fire/auth';\nimport type { User } from '@angular/fire/auth';\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport type { ValidationErrors } from '@angular/forms';\nimport {\n  filter,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser } from '@app/core/user.token';\nimport { controlErrorsSignal } from '@app/shared/control-errors-signal.util';\nimport { controlInvalidSignal } from '@app/shared/control-invalid-signal.util';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\nimport { PhotoUploadComponent } from '../user-photos/photo-upload/photo-upload.component';\nimport { UserPhotosService } from '../user-photos/user-photos.service';\nimport type { Photo } from '../user-photos/user-photos.service';\n\n/**\n * Angular FormGroup for Firebase [updateProfile](https://firebase.google.com/docs/reference/node/firebase.User#updateprofile)\n * parameters.\n */\ntype ProfileFormGroup = FormGroup;\n  photoURL: FormControl;\n}>;\n\n/**\n * Template requires a list of photos uploaded to Firebase storage and the Firebase User object.\n */\ninterface ViewModel {\n  profilePhotos: Photo[];\n  user: User;\n}\n\n/**\n * Form to manage Firebase User profile.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    NgOptimizedImage,\n    PhotoUploadComponent,\n    ReactiveFormsModule,\n    SpinnerComponent,\n  ],\n  selector: 'app-user-profile',\n  styleUrl: './user-profile.component.scss',\n  templateUrl: './user-profile.component.html',\n})\nexport class UserProfileComponent {\n  /** Error codes from `updateProfile` when form is submitted. */\n  public readonly $errorCode: WritableSignal;\n  /** Error messages specific for the displayName field. */\n  public readonly $nameCntrlErrors: Signal;\n  /** Aria-invalid attribute for displayName field. */\n  public readonly $nameCntrlInvalid: Signal;\n  /** Error messages specific for the photoURL field (custom URL entry). */\n  public readonly $photoUrlCntrlErrors: Signal;\n  /** Aria-invalid attribute for photoURL field. */\n  public readonly $photoUrlCntrlInvalid: Signal;\n  /** Toggle spinner and HTML Form display. */\n  public readonly $showForm: WritableSignal;\n  /** Toggle photoURL URL input and upload file interface. */\n  public readonly $showUrlInput: WritableSignal;\n  public readonly nameCntrl: FormControl;\n  public readonly photoUrlCntrl: FormControl;\n  public readonly profileForm: ProfileFormGroup;\n  /**\n   * Collect the current User and profile photos uploaded to Firebase storage. Initalize `profileForm`\n   * with data from Firebase User, and determine if photoURL is an uploaded file. If so, default the\n   * interace to uploads instead of the URL.\n   */\n  public readonly vm$: Observable;\n\n  private readonly _userPhotoService: UserPhotosService;\n\n  constructor() {\n    this._userPhotoService = inject(UserPhotosService);\n\n    this.nameCntrl = new FormControl(null, Validators.required); // eslint-disable-line unicorn/no-null -- Forms use null\n    this.$nameCntrlErrors = controlErrorsSignal(this.nameCntrl);\n    this.$nameCntrlInvalid = controlInvalidSignal(this.nameCntrl);\n\n    // eslint-disable-next-line unicorn/no-null -- Forms use null\n    this.photoUrlCntrl = new FormControl(null, Validators.pattern(/\\.(?:avif|gif|jpe?g|png|webp)(?:\\?.*)?$/u));\n    this.$photoUrlCntrlErrors = controlErrorsSignal(this.photoUrlCntrl);\n    this.$photoUrlCntrlInvalid = controlInvalidSignal(this.photoUrlCntrl);\n\n    this.profileForm = new FormGroup({\n      displayName: this.nameCntrl,\n      photoURL: this.photoUrlCntrl,\n    });\n\n    this.$errorCode = signal('');\n    this.$showForm = signal(false);\n    this.$showUrlInput = signal(true);\n\n    // Not handling non-logged in users because the Route guards should.\n    this.vm$ = inject(USER$).pipe(\n      filter((user: MaybeUser): user is User => user != undefined),\n      tap({\n        next: (user: User): void => {\n          this.profileForm.patchValue(user);\n          this.$showForm.set(true);\n        },\n      }),\n      switchMap((user: User): Observable => {\n        const { photoURL, uid } = user;\n        // Get uploads for this user, and then identify if the User#photoURL is one of the uploaded\n        // files.\n        return this._userPhotoService.getProfilePhotos(uid).pipe(\n          map((profilePhotos: Photo[]): ViewModel => {\n            for (const photo of profilePhotos) {\n              if (photo.url === photoURL) {\n                // Show the upload photo UI instead since that is what was used.\n                this.$showUrlInput.set(false);\n                break;\n              }\n            }\n\n            return { profilePhotos, user };\n          }),\n        );\n      }),\n    );\n  }\n\n  /**\n   * Update the Firebase User profile data.\n   */\n  public async onSubmit(user: User): Promise {\n    const { displayName, photoURL } = this.profileForm.value;\n\n    // Validators prevent email1 or password being falsy, but TypeScript doesn't know that.\n    if (this.profileForm.invalid || !displayName) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this.$showForm.set(false);\n    this.$errorCode.set(''); // Clear out any existing errors\n\n    try {\n      // It appears that the types for photoURL are incorrect and you must use an empty string\n      // instead of null to clear the value. https://stackoverflow.com/questions/71047275/setting-a-firebase-user-photourl-value-to-null\n      // auth/invalid-json-payload-received.-/photourl-must-be-string\n      const safePhotoURL = photoURL ?? '';\n      await updateProfile(user, { displayName, photoURL: safePhotoURL });\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n    }\n\n    this.$showForm.set(true);\n  }\n\n  /**\n   * Toggle the UI to set the photoURL manually to a remote URL or to picking from a list of uploaded\n   * profile photos in Firebase Storage.\n   */\n  public togglePhotoUrl(): void {\n    this.$showUrlInput.update((showUrl: boolean): boolean => !showUrl);\n  }\n}\n\n    \n\n    \n        @if (vm$ | async; as vm) {\n  \n    Your Profile\n    @if ($showForm()) {\n      \n        \n          Your name:\n          \n          \n            @if ($nameCntrlErrors(); as errors) {\n              \n                @if (errors['required']) {\n                  \n                    Tell use how you would like to be addressed.\n                  \n                }\n              \n            }\n          \n        \n\n        \n          Your photo:\n\n          @if ($showUrlInput()) {\n            \n              Link to your photo:\n              \n              \n                @if ($photoUrlCntrlErrors(); as errors) {\n                  \n                    @if (errors['pattern']) {\n                      \n                        Photo URL must link to a file with an image file extension like jpeg, jpg, png, avif, webp, or gif.\n                      \n                    }\n                  \n                }\n              \n            \n\n            @if (photoUrlCntrl.value && photoUrlCntrl.valid) {\n              \n                \n              \n            }\n\n            \n              Upload a photo\n            \n          } @else {\n            \n              @for (item of vm.profilePhotos; track item.url; let indx = $index) {\n                \n                \n                  \n                \n              }\n\n              \n\n              \n                Use a link to a photo\n              \n            \n          }\n        \n\n        @if ($errorCode(); as errorCode) {\n          \n            \n          \n        }\n\n        \n          \n            Update profile\n          \n        \n      \n    } @else {\n      \n    }\n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (vm$ | async; as vm) {      Your Profile    @if ($showForm()) {                        Your name:                                @if ($nameCntrlErrors(); as errors) {                              @if (errors[\\'required\\']) {                                      Tell use how you would like to be addressed.                                  }                          }                                    Your photo:          @if ($showUrlInput()) {                          Link to your photo:                                            @if ($photoUrlCntrlErrors(); as errors) {                                      @if (errors[\\'pattern\\']) {                                              Photo URL must link to a file with an image file extension like jpeg, jpg, png, avif, webp, or gif.                                          }                                  }                                      @if (photoUrlCntrl.value && photoUrlCntrl.valid) {                                                        }                          Upload a photo                      } @else {                          @for (item of vm.profilePhotos; track item.url; let indx = $index) {                                                                                }                                            Use a link to a photo                                    }                @if ($errorCode(); as errorCode) {                                        }                              Update profile                            } @else {          }  } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VerifiedFailed.html":{"url":"interfaces/VerifiedFailed.html","title":"interface - VerifiedFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VerifiedFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/reset-password/reset-password.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                        \n                                            showForm\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showForm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showForm:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Auth, confirmPasswordReset, verifyPasswordResetCode } from '@angular/fire/auth';\nimport {\n  from,\n  merge,\n  of,\n  startWith,\n  Subject,\n  switchMap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { getErrorCode } from '../error-code';\n\nexport type ResetPasswordResults = PasswordResetSuccess | ShowForm | VerifiedFailed | undefined;\n\ntype ConfirmResult = PasswordResetSuccess | ShowForm;\n\n// Final state after resetting password\ninterface PasswordResetSuccess {\n  errorCode: undefined; // This makes the template type checker happier\n  showForm: false;\n}\n\n// Verified Success & Password Reset Failure\ninterface ShowForm {\n  email: string;\n  errorCode?: string;\n  showForm: true;\n}\n\n// Code Verification Failed\ninterface VerifiedFailed {\n  email: undefined; // This makes the type checker happier in the destructuring\n  errorCode: string;\n  showForm: false;\n}\n\ntype VerifiedResult = ShowForm | VerifiedFailed;\n\n@Injectable({ providedIn: 'root' })\nexport class ResetPasswordService {\n  private readonly _auth: Auth = inject(Auth);\n  private readonly _newPasswordSubject$: Subject = new Subject();\n\n  /**\n   * Triggers the confirmPasswordReset promise to apply the action code and replace the user's password.\n   */\n  public replacePassword(newPassword: string): void {\n    this._newPasswordSubject$.next(newPassword);\n  }\n\n  /**\n   * Sets up an Observable that will first verify the oobCode is valid for password resetting, and\n   * then show the password reset form and the user's email address.\n   * This is followed by setting up a subject to emit a new password that will then be confirmed as\n   * the new password for the user. While that action is pending it emits `undefined` to show the\n   * spinner again. In the event of an error it shows the form again with an error message.\n   */\n  public resetPassword$(code: string | undefined): Observable {\n    return of(code).pipe(\n      switchMap(async (oobCode: string | undefined): Promise => this._verifyCode(oobCode)),\n      switchMap((verifyResults: VerifiedResult): Observable => {\n        const verifyResults$ = of(verifyResults);\n        const { email } = verifyResults;\n\n        // Verified succeeded\n        if (email) {\n          // This design with an inner `merge` after `_verifyCode` settles is to accomodate passing\n          // the email to _confirmPasswordReset in case the new password is rejected.\n          // However, it does make testing this path more complicated I think. Would it be better to\n          // move the merge to the return of resetPassword$ and store the email as a private property?\n          const confirmPasswordReset$ = this._newPasswordSubject$.pipe(\n            switchMap((newPassword: string): Observable => {\n              const promise = this._confirmPasswordReset(code, email, newPassword);\n              return from(promise)\n                // Show the spinner while applying the action code.\n                .pipe(startWith(undefined));\n            }),\n          );\n\n          return merge(\n            // This will emit first after code verification.\n            verifyResults$,\n            // This will emit after form submission.\n            confirmPasswordReset$,\n          );\n        }\n\n        // Verified failed\n        return verifyResults$;\n      }),\n    );\n  }\n\n  /**\n   * Applies the new password to the user's account using the oobCode.\n   * @param email - Is necessary only in the case that `confirmPasswordReset` fails, and we need to\n   *              redisplay the form.\n   * @throws If the oobCode is falsy\n   */\n  private async _confirmPasswordReset(code: string | undefined, email: string, newPassword: string): Promise {\n    if (code) {\n      try {\n        await confirmPasswordReset(this._auth, code, newPassword);\n        return { errorCode: undefined, showForm: false };\n      } catch (err: unknown) {\n        return { email, errorCode: getErrorCode(err), showForm: true };\n      }\n    }\n    throw new Error('oobCode not found');\n  }\n\n  /**\n   * This identifies the email for the User who's password would be reset by the oobCode.\n   */\n  private async _verifyCode(code: string | undefined): Promise {\n    if (code) {\n      try {\n        const email = await verifyPasswordResetCode(this._auth, code);\n        return { email, showForm: true };\n      } catch (err: unknown) {\n        return { email: undefined, errorCode: getErrorCode(err), showForm: false };\n      }\n    }\n\n    return { email: undefined, errorCode: 'oobCode not found', showForm: false };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VerifyEmailComponent.html":{"url":"components/VerifyEmailComponent.html","title":"component - VerifyEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VerifyEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/verify-email/verify-email.component.ts\n\n\n\n    \n        Description\n    \n    \n        Marks the user's email as verified.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-verify-email\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                                SpinnerComponent\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./verify-email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Private\n                                    Readonly\n                                _service\n                            \n                            \n                                    Public\n                                    Readonly\n                                vm\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/verify-email/verify-email.component.ts:30\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/verify-email/verify-email.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerifyEmailService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/verify-email/verify-email.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        vm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Promise\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/verify-email/verify-email.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { Router, RouterLink } from '@angular/router';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { getState } from '../actions/get-state';\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { VerifyEmailService } from './verify-email.service';\nimport type { VerifyEmailResult } from './verify-email.service';\n\n/**\n * Marks the user's email as verified.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    SpinnerComponent,\n    RouterLink,\n  ],\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n})\nexport class VerifyEmailComponent {\n  public readonly vm: Promise;\n\n  private readonly _router: Router;\n  private readonly _service: VerifyEmailService;\n\n  constructor() {\n    this._router = inject(Router);\n    this._service = inject(VerifyEmailService);\n\n    const { continueUrl, oobCode } = getState(this._router.getCurrentNavigation());\n    this.vm = this._service.verifyEmail(oobCode, continueUrl);\n  }\n}\n\n    \n\n    \n        @if (vm | async; as vm) {\n  \n    @if (vm.verified) {\n      \n        Your email has been verified!\n      \n      \n        Continue\n      \n    } @else {\n      \n        There was a problem with your verification link\n      \n      \n        \n      \n      \n        Please\n        contact support\n        for assistance.\n      \n    }\n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (vm | async; as vm) {      @if (vm.verified) {              Your email has been verified!                    Continue          } @else {              There was a problem with your verification link                                        Please        contact support        for assistance.          }  } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VerifyEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VerifyEmailResult.html":{"url":"interfaces/VerifyEmailResult.html","title":"interface - VerifyEmailResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VerifyEmailResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/verify-email/verify-email.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Results of verifying an email address with Firebase.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            continueUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                        \n                                            verified\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        continueUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        continueUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Destination after verifying email.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Error that prevented verification, if verfied is false.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        verified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { applyActionCode, Auth } from '@angular/fire/auth';\n\nimport { getErrorCode } from '../error-code';\n\n/**\n * Results of verifying an email address with Firebase.\n */\nexport interface VerifyEmailResult {\n  /** Destination after verifying email. */\n  continueUrl: string;\n  /** Error that prevented verification, if verfied is false. */\n  errorCode?: string;\n  verified: boolean;\n}\n\n/**\n * Wrapper for verifying an email with Firebase. This is mostly just to make unit testing easier.\n */\n@Injectable({ providedIn: 'root' })\nexport class VerifyEmailService {\n  private readonly _auth: Auth = inject(Auth);\n\n  /**\n   * Apply the oobCode to verify the user account's email address.\n   * Catches errors and wraps in the results interface for use in the template.\n   */\n  public async verifyEmail(oobCode: string | undefined, continueUrl: string = '/'): Promise {\n    if (oobCode) {\n      try {\n        await applyActionCode(this._auth, oobCode);\n        return { continueUrl, verified: true };\n      } catch (err: unknown) {\n        const errorCode = getErrorCode(err);\n        return { continueUrl, errorCode, verified: false };\n      }\n    }\n\n    return { continueUrl, errorCode: 'oobCode not found', verified: false };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VerifyEmailService.html":{"url":"injectables/VerifyEmailService.html","title":"injectable - VerifyEmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VerifyEmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/verify-email/verify-email.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Wrapper for verifying an email with Firebase. This is mostly just to make unit testing easier.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _auth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyEmail(oobCode: string | undefined, continueUrl: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/verify-email/verify-email.service.ts:28\n                        \n                    \n\n\n            \n                \n                        Apply the oobCode to verify the user account's email address.\nCatches errors and wraps in the results interface for use in the template.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                oobCode\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                continueUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '/'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Auth\n\n                    \n                \n                \n                    \n                        Default value : inject(Auth)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/verify-email/verify-email.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { applyActionCode, Auth } from '@angular/fire/auth';\n\nimport { getErrorCode } from '../error-code';\n\n/**\n * Results of verifying an email address with Firebase.\n */\nexport interface VerifyEmailResult {\n  /** Destination after verifying email. */\n  continueUrl: string;\n  /** Error that prevented verification, if verfied is false. */\n  errorCode?: string;\n  verified: boolean;\n}\n\n/**\n * Wrapper for verifying an email with Firebase. This is mostly just to make unit testing easier.\n */\n@Injectable({ providedIn: 'root' })\nexport class VerifyEmailService {\n  private readonly _auth: Auth = inject(Auth);\n\n  /**\n   * Apply the oobCode to verify the user account's email address.\n   * Catches errors and wraps in the results interface for use in the template.\n   */\n  public async verifyEmail(oobCode: string | undefined, continueUrl: string = '/'): Promise {\n    if (oobCode) {\n      try {\n        await applyActionCode(this._auth, oobCode);\n        return { continueUrl, verified: true };\n      } catch (err: unknown) {\n        const errorCode = getErrorCode(err);\n        return { continueUrl, errorCode, verified: false };\n      }\n    }\n\n    return { continueUrl, errorCode: 'oobCode not found', verified: false };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ViewModel.html":{"url":"interfaces/ViewModel.html","title":"interface - ViewModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ViewModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/user-profile/user-profile.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Template requires a list of photos uploaded to Firebase storage and the Firebase User object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            profilePhotos\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        profilePhotos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profilePhotos:         Photo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Photo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AsyncPipe, NgOptimizedImage } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { Signal, WritableSignal } from '@angular/core';\nimport { updateProfile } from '@angular/fire/auth';\nimport type { User } from '@angular/fire/auth';\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport type { ValidationErrors } from '@angular/forms';\nimport {\n  filter,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser } from '@app/core/user.token';\nimport { controlErrorsSignal } from '@app/shared/control-errors-signal.util';\nimport { controlInvalidSignal } from '@app/shared/control-invalid-signal.util';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\nimport { PhotoUploadComponent } from '../user-photos/photo-upload/photo-upload.component';\nimport { UserPhotosService } from '../user-photos/user-photos.service';\nimport type { Photo } from '../user-photos/user-photos.service';\n\n/**\n * Angular FormGroup for Firebase [updateProfile](https://firebase.google.com/docs/reference/node/firebase.User#updateprofile)\n * parameters.\n */\ntype ProfileFormGroup = FormGroup;\n  photoURL: FormControl;\n}>;\n\n/**\n * Template requires a list of photos uploaded to Firebase storage and the Firebase User object.\n */\ninterface ViewModel {\n  profilePhotos: Photo[];\n  user: User;\n}\n\n/**\n * Form to manage Firebase User profile.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    NgOptimizedImage,\n    PhotoUploadComponent,\n    ReactiveFormsModule,\n    SpinnerComponent,\n  ],\n  selector: 'app-user-profile',\n  styleUrl: './user-profile.component.scss',\n  templateUrl: './user-profile.component.html',\n})\nexport class UserProfileComponent {\n  /** Error codes from `updateProfile` when form is submitted. */\n  public readonly $errorCode: WritableSignal;\n  /** Error messages specific for the displayName field. */\n  public readonly $nameCntrlErrors: Signal;\n  /** Aria-invalid attribute for displayName field. */\n  public readonly $nameCntrlInvalid: Signal;\n  /** Error messages specific for the photoURL field (custom URL entry). */\n  public readonly $photoUrlCntrlErrors: Signal;\n  /** Aria-invalid attribute for photoURL field. */\n  public readonly $photoUrlCntrlInvalid: Signal;\n  /** Toggle spinner and HTML Form display. */\n  public readonly $showForm: WritableSignal;\n  /** Toggle photoURL URL input and upload file interface. */\n  public readonly $showUrlInput: WritableSignal;\n  public readonly nameCntrl: FormControl;\n  public readonly photoUrlCntrl: FormControl;\n  public readonly profileForm: ProfileFormGroup;\n  /**\n   * Collect the current User and profile photos uploaded to Firebase storage. Initalize `profileForm`\n   * with data from Firebase User, and determine if photoURL is an uploaded file. If so, default the\n   * interace to uploads instead of the URL.\n   */\n  public readonly vm$: Observable;\n\n  private readonly _userPhotoService: UserPhotosService;\n\n  constructor() {\n    this._userPhotoService = inject(UserPhotosService);\n\n    this.nameCntrl = new FormControl(null, Validators.required); // eslint-disable-line unicorn/no-null -- Forms use null\n    this.$nameCntrlErrors = controlErrorsSignal(this.nameCntrl);\n    this.$nameCntrlInvalid = controlInvalidSignal(this.nameCntrl);\n\n    // eslint-disable-next-line unicorn/no-null -- Forms use null\n    this.photoUrlCntrl = new FormControl(null, Validators.pattern(/\\.(?:avif|gif|jpe?g|png|webp)(?:\\?.*)?$/u));\n    this.$photoUrlCntrlErrors = controlErrorsSignal(this.photoUrlCntrl);\n    this.$photoUrlCntrlInvalid = controlInvalidSignal(this.photoUrlCntrl);\n\n    this.profileForm = new FormGroup({\n      displayName: this.nameCntrl,\n      photoURL: this.photoUrlCntrl,\n    });\n\n    this.$errorCode = signal('');\n    this.$showForm = signal(false);\n    this.$showUrlInput = signal(true);\n\n    // Not handling non-logged in users because the Route guards should.\n    this.vm$ = inject(USER$).pipe(\n      filter((user: MaybeUser): user is User => user != undefined),\n      tap({\n        next: (user: User): void => {\n          this.profileForm.patchValue(user);\n          this.$showForm.set(true);\n        },\n      }),\n      switchMap((user: User): Observable => {\n        const { photoURL, uid } = user;\n        // Get uploads for this user, and then identify if the User#photoURL is one of the uploaded\n        // files.\n        return this._userPhotoService.getProfilePhotos(uid).pipe(\n          map((profilePhotos: Photo[]): ViewModel => {\n            for (const photo of profilePhotos) {\n              if (photo.url === photoURL) {\n                // Show the upload photo UI instead since that is what was used.\n                this.$showUrlInput.set(false);\n                break;\n              }\n            }\n\n            return { profilePhotos, user };\n          }),\n        );\n      }),\n    );\n  }\n\n  /**\n   * Update the Firebase User profile data.\n   */\n  public async onSubmit(user: User): Promise {\n    const { displayName, photoURL } = this.profileForm.value;\n\n    // Validators prevent email1 or password being falsy, but TypeScript doesn't know that.\n    if (this.profileForm.invalid || !displayName) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this.$showForm.set(false);\n    this.$errorCode.set(''); // Clear out any existing errors\n\n    try {\n      // It appears that the types for photoURL are incorrect and you must use an empty string\n      // instead of null to clear the value. https://stackoverflow.com/questions/71047275/setting-a-firebase-user-photourl-value-to-null\n      // auth/invalid-json-payload-received.-/photourl-must-be-string\n      const safePhotoURL = photoURL ?? '';\n      await updateProfile(user, { displayName, photoURL: safePhotoURL });\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n    }\n\n    this.$showForm.set(true);\n  }\n\n  /**\n   * Toggle the UI to set the photoURL manually to a remote URL or to picking from a list of uploaded\n   * profile photos in Firebase Storage.\n   */\n  public togglePhotoUrl(): void {\n    this.$showUrlInput.update((showUrl: boolean): boolean => !showUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/app-title-strategy.service.ts\n            \n            injectable\n            AppTitleStrategyService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/core/firebase-app.provider.ts\n            \n            variable\n            provideOurFirebaseApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/email-verified.guard.ts\n            \n            variable\n            emailVerifiedGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/no-auth.guard.ts\n            \n            variable\n            noAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/user.token.ts\n            \n            variable\n            USER$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/user.token.ts\n            \n            type alias\n            MaybeUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/user.token.ts\n            \n            type alias\n            MaybeUser$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/identity/actions/actions.component.ts\n            \n            component\n            ActionsComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/identity/actions/actions.component.ts\n            \n            interface\n            ActionCodeState\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                        src/app/identity/actions/get-state.ts\n            \n            variable\n            getState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/identity/auth-error-messages/auth-error-messages.component.ts\n            \n            component\n            AuthErrorMessagesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/identity/change-email/change-email.component.ts\n            \n            component\n            ChangeEmailComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                        src/app/identity/change-email/change-email.component.ts\n            \n            type alias\n            ChangeEmailFormGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/identity/change-email/change-email.component.ts\n            \n            type alias\n            VerifyStatuses\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/change-password/change-password.component.ts\n            \n            component\n            ChangePasswordComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                        src/app/identity/change-password/change-password.component.ts\n            \n            type alias\n            ChangePasswordFormGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/confirm-email/confirm-email.component.ts\n            \n            component\n            ConfirmEmailComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/identity/confirm-email/confirm-email.component.ts\n            \n            type alias\n            VerifyStatuses\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/delete-account/delete-account.component.ts\n            \n            component\n            DeleteAccountComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                        src/app/identity/delete-account/delete-account.component.ts\n            \n            type alias\n            DeleteAccountFormGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/identity/delete-account/delete-account.component.ts\n            \n            type alias\n            DialogRef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/identity/error-code.ts\n            \n            variable\n            getErrorCode\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/identity/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        src/app/identity/forgot-password/forgot-password.component.ts\n            \n            type alias\n            ForgotFormGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/identity-forms.ts\n            \n            interface\n            ControlStruct\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                        src/app/identity/identity-forms.ts\n            \n            variable\n            createEmailControl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/identity-forms.ts\n            \n            variable\n            createPasswordControl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/identity-forms.ts\n            \n            variable\n            getControlStructure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                        src/app/identity/login/login.component.ts\n            \n            type alias\n            LoginFormGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/logout/logout.component.ts\n            \n            component\n            LogoutComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/identity/recover-email/recover-email.component.ts\n            \n            component\n            RecoverEmailComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/identity/recover-email/recover-email.service.ts\n            \n            injectable\n            RecoverEmailService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/identity/recover-email/recover-email.service.ts\n            \n            interface\n            ApplyResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/identity/recover-email/recover-email.service.ts\n            \n            interface\n            RecoverEmailResults\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/identity/recover-email/recover-email.service.ts\n            \n            variable\n            SEND_EMAIL_DELAY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                        src/app/identity/reset-password/reset-password.component.ts\n            \n            type alias\n            ResetPasswordFormGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/reset-password/reset-password.service.ts\n            \n            injectable\n            ResetPasswordService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/identity/reset-password/reset-password.service.ts\n            \n            interface\n            PasswordResetSuccess\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/identity/reset-password/reset-password.service.ts\n            \n            interface\n            ShowForm\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/identity/reset-password/reset-password.service.ts\n            \n            interface\n            VerifiedFailed\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/identity/reset-password/reset-password.service.ts\n            \n            type alias\n            ConfirmResult\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/identity/reset-password/reset-password.service.ts\n            \n            type alias\n            ResetPasswordResults\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/identity/reset-password/reset-password.service.ts\n            \n            type alias\n            VerifiedResult\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/user-photos/photo-manager/photo-manager.component.ts\n            \n            component\n            PhotoManagerComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/user-photos/photo-upload/photo-upload.component.ts\n            \n            component\n            PhotoUploadComponent\n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                        src/app/identity/user-photos/photo-upload/photo-upload.component.ts\n            \n            type alias\n            FileInputRef\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/identity/user-photos/user-photos.service.ts\n            \n            injectable\n            UserPhotosService\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/identity/user-photos/user-photos.service.ts\n            \n            interface\n            Photo\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/identity/user-photos/user-photos.service.ts\n            \n            interface\n            Progress\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                        src/app/identity/user-photos/user-photos.service.ts\n            \n            variable\n            MAXIMUM_PHOTOS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/user-photos/user-photos.service.ts\n            \n            variable\n            PHOTO_DIR\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/user-photos/user-photos.service.ts\n            \n            variable\n            RADIX\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/user-photos/user-photos.service.ts\n            \n            variable\n            SKIP_WHOLE_NUM\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/identity/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                68 %\n                (11/16)\n            \n        \n        \n            \n                \n                src/app/identity/user-profile/user-profile.component.ts\n            \n            interface\n            ViewModel\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                        src/app/identity/user-profile/user-profile.component.ts\n            \n            type alias\n            ProfileFormGroup\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/validators/confirm-match/confirm-match.validator.ts\n            \n            variable\n            confirmMatch\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/validators/confirm-match/confirm-match.validator.ts\n            \n            variable\n            ERROR_NAME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/validators/confirm-match/match-error.signal.ts\n            \n            variable\n            confirmMatchFormErrors\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/validators/passwords/firebase.validator.ts\n            \n            variable\n            passwordFirebaseValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/validators/passwords/strength.validator.ts\n            \n            variable\n            passwordStrengthValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/validators/passwords/util.ts\n            \n            variable\n            getPasswordControlValue\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/identity/verify-email/verify-email.component.ts\n            \n            component\n            VerifyEmailComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/identity/verify-email/verify-email.service.ts\n            \n            injectable\n            VerifyEmailService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/identity/verify-email/verify-email.service.ts\n            \n            interface\n            VerifyEmailResult\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/layouts/central/central.component.ts\n            \n            component\n            CentralLayoutComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/layouts/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/layouts/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/layouts/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/layouts/standard/standard.component.ts\n            \n            component\n            StandardLayoutComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/legal/privacy-policy/privacy-policy.component.ts\n            \n            component\n            PrivacyPolicyComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/legal/terms-and-conditions/terms-and-conditions.component.ts\n            \n            component\n            TermsAndConditionsComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/page-not-found/page-not-found.component.ts\n            \n            variable\n            ROBOTS_META\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/shared/constants.ts\n            \n            variable\n            FORMS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/shared/constants.ts\n            \n            variable\n            PASSWORDS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/control-errors-signal.util.ts\n            \n            interface\n            CombinedObs\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                        src/app/shared/control-errors-signal.util.ts\n            \n            variable\n            controlErrorsSignal\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/control-invalid-signal.util.ts\n            \n            interface\n            ControlProperties\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                        src/app/shared/control-invalid-signal.util.ts\n            \n            variable\n            controlInvalidSignal\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/shared/control-invalid-signal.util.ts\n            \n            variable\n            isInvalid\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/spinner/spinner.component.ts\n            \n            component\n            SpinnerComponent\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^19.1.5\n        \n            @angular/common : ^19.1.5\n        \n            @angular/compiler : ^19.1.5\n        \n            @angular/core : ^19.1.5\n        \n            @angular/fire : ^19.0.0\n        \n            @angular/forms : ^19.1.5\n        \n            @angular/platform-browser : ^19.1.5\n        \n            @angular/platform-browser-dynamic : ^19.1.5\n        \n            @angular/router : ^19.1.5\n        \n            @angular/service-worker : ^19.1.5\n        \n            @fortawesome/angular-fontawesome : ^1.0.0\n        \n            @fortawesome/free-brands-svg-icons : ^6.7.1\n        \n            @fortawesome/free-regular-svg-icons : ^6.7.1\n        \n            @fortawesome/free-solid-svg-icons : ^6.7.1\n        \n            check-password-strength : ^3.0.0\n        \n            modern-normalize : ^3.0.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBrainFry Pub Quiz App\n\nDeveloper Setup\nThere are two primary areas of this code:\n\nTerraform Infrastructure as Code used to create the GCP Firebase project.\nAngular Single Page Application\n\nInstall general dependencies:\nExample :brew install dprint git git-absorb git-machete\nnpm --global install markdownlint-cli prettier-plugin-multiline-arrays prettierTo manage the application infrastructure see Developer Setup Terraform Doc\nTo work on the Angular application see Developer Setup Angular Doc\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\nExample :                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\nExample :                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\nExample :a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\nExample :a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\nExample :a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\nExample :                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\nExample :\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\nExample :  Copyright (C)   \nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' and show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttps://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttps://www.gnu.org/licenses/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    26 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n        \n            Description : Angular application for creating and presenting pub quizzes.\n        \n            Homepage : https://brainfry-app.web.app/\n        \n            Bugs : https://github.com/rgant/brainfry/issues/new\n        \n            License : AGPL-3.0-or-later\n        \n            Repository : git+https://github.com/rgant/brainfry.git\n        \n            Author : J Rob Gant\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ChangeEmailFormGroup   (src/.../change-email.component.ts)\n                        \n                        \n                            ChangePasswordFormGroup   (src/.../change-password.component.ts)\n                        \n                        \n                            ConfirmResult   (src/.../reset-password.service.ts)\n                        \n                        \n                            DeleteAccountFormGroup   (src/.../delete-account.component.ts)\n                        \n                        \n                            DialogRef   (src/.../delete-account.component.ts)\n                        \n                        \n                            FileInputRef   (src/.../photo-upload.component.ts)\n                        \n                        \n                            ForgotFormGroup   (src/.../forgot-password.component.ts)\n                        \n                        \n                            LoginFormGroup   (src/.../login.component.ts)\n                        \n                        \n                            MaybeUser   (src/.../user.token.ts)\n                        \n                        \n                            MaybeUser$   (src/.../user.token.ts)\n                        \n                        \n                            ProfileFormGroup   (src/.../user-profile.component.ts)\n                        \n                        \n                            ResetPasswordFormGroup   (src/.../reset-password.component.ts)\n                        \n                        \n                            ResetPasswordResults   (src/.../reset-password.service.ts)\n                        \n                        \n                            VerifiedResult   (src/.../reset-password.service.ts)\n                        \n                        \n                            VerifyStatuses   (src/.../change-email.component.ts)\n                        \n                        \n                            VerifyStatuses   (src/.../confirm-email.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/identity/change-email/change-email.component.ts\n    \n    \n        \n            \n                \n                    \n                    ChangeEmailFormGroup\n                \n            \n            \n                \n                        FormGroup\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VerifyStatuses\n                \n            \n            \n                \n                        \"sending\" | \"sent\" | \"unsent\"\n\n                \n            \n        \n    \n    src/app/identity/change-password/change-password.component.ts\n    \n    \n        \n            \n                \n                    \n                    ChangePasswordFormGroup\n                \n            \n            \n                \n                        FormGroup\n\n                \n            \n        \n    \n    src/app/identity/reset-password/reset-password.service.ts\n    \n    \n        \n            \n                \n                    \n                    ConfirmResult\n                \n            \n            \n                \n                        PasswordResetSuccess | ShowForm\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResetPasswordResults\n                \n            \n            \n                \n                        PasswordResetSuccess | ShowForm | VerifiedFailed | undefined\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VerifiedResult\n                \n            \n            \n                \n                        ShowForm | VerifiedFailed\n\n                \n            \n        \n    \n    src/app/identity/delete-account/delete-account.component.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteAccountFormGroup\n                \n            \n            \n                \n                        FormGroup\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DialogRef\n                \n            \n            \n                \n                        ElementRef\n\n                \n            \n        \n    \n    src/app/identity/user-photos/photo-upload/photo-upload.component.ts\n    \n    \n        \n            \n                \n                    \n                    FileInputRef\n                \n            \n            \n                \n                    Template reference to HTML input type=file\n\n                \n            \n            \n                \n                        ElementRef\n\n                \n            \n        \n    \n    src/app/identity/forgot-password/forgot-password.component.ts\n    \n    \n        \n            \n                \n                    \n                    ForgotFormGroup\n                \n            \n            \n                \n                        FormGroup\n\n                \n            \n        \n    \n    src/app/identity/login/login.component.ts\n    \n    \n        \n            \n                \n                    \n                    LoginFormGroup\n                \n            \n            \n                \n                        FormGroup\n\n                \n            \n        \n    \n    src/app/core/user.token.ts\n    \n    \n        \n            \n                \n                    \n                    MaybeUser\n                \n            \n            \n                \n                        User | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MaybeUser$\n                \n            \n            \n                \n                            Observable\n\n                \n            \n        \n    \n    src/app/identity/user-profile/user-profile.component.ts\n    \n    \n        \n            \n                \n                    \n                    ProfileFormGroup\n                \n            \n            \n                \n                    Angular FormGroup for Firebase updateProfile\nparameters.\n\n                \n            \n            \n                \n                        FormGroup\n\n                \n            \n        \n    \n    src/app/identity/reset-password/reset-password.component.ts\n    \n    \n        \n            \n                \n                    \n                    ResetPasswordFormGroup\n                \n            \n            \n                \n                        FormGroup\n\n                \n            \n        \n    \n    src/app/identity/confirm-email/confirm-email.component.ts\n    \n    \n        \n            \n                \n                    \n                    VerifyStatuses\n                \n            \n            \n                \n                        \"sending\" | \"sent\" | \"unsent\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            confirmMatch   (src/.../confirm-match.validator.ts)\n                        \n                        \n                            confirmMatchFormErrors   (src/.../match-error.signal.ts)\n                        \n                        \n                            controlErrorsSignal   (src/.../control-errors-signal.util.ts)\n                        \n                        \n                            controlInvalidSignal   (src/.../control-invalid-signal.util.ts)\n                        \n                        \n                            createEmailControl   (src/.../identity-forms.ts)\n                        \n                        \n                            createPasswordControl   (src/.../identity-forms.ts)\n                        \n                        \n                            emailVerifiedGuard   (src/.../email-verified.guard.ts)\n                        \n                        \n                            ERROR_NAME   (src/.../confirm-match.validator.ts)\n                        \n                        \n                            FORMS   (src/.../constants.ts)\n                        \n                        \n                            getControlStructure   (src/.../identity-forms.ts)\n                        \n                        \n                            getErrorCode   (src/.../error-code.ts)\n                        \n                        \n                            getPasswordControlValue   (src/.../util.ts)\n                        \n                        \n                            getState   (src/.../get-state.ts)\n                        \n                        \n                            isInvalid   (src/.../control-invalid-signal.util.ts)\n                        \n                        \n                            MAXIMUM_PHOTOS   (src/.../user-photos.service.ts)\n                        \n                        \n                            noAuthGuard   (src/.../no-auth.guard.ts)\n                        \n                        \n                            passwordFirebaseValidator   (src/.../firebase.validator.ts)\n                        \n                        \n                            PASSWORDS   (src/.../constants.ts)\n                        \n                        \n                            passwordStrengthValidator   (src/.../strength.validator.ts)\n                        \n                        \n                            PHOTO_DIR   (src/.../user-photos.service.ts)\n                        \n                        \n                            provideOurFirebaseApp   (src/.../firebase-app.provider.ts)\n                        \n                        \n                            RADIX   (src/.../user-photos.service.ts)\n                        \n                        \n                            ROBOTS_META   (src/.../page-not-found.component.ts)\n                        \n                        \n                            SEND_EMAIL_DELAY   (src/.../recover-email.service.ts)\n                        \n                        \n                            SKIP_WHOLE_NUM   (src/.../user-photos.service.ts)\n                        \n                        \n                            USER$   (src/.../user.token.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideOurFirebaseApp(),\n    provideAuth((): Auth => getAuth()),\n    // provideAnalytics((): Analytics => getAnalytics()),\n    // ScreenTrackingService,\n    // UserTrackingService,\n    // provideAppCheck((): AppCheck => {\n    //   const provider = new ReCaptchaEnterpriseProvider('6LfG3rEqAAAAAK18S9UyMuK8wd3JSWjVnmDzmlrT');\n    //   return initializeAppCheck(undefined, { isTokenAutoRefreshEnabled: true, provider });\n    // }),\n    provideFirestore((): Firestore => getFirestore()),\n    // provideFunctions((): Functions => getFunctions()),\n    providePerformance((): FirebasePerformance => getPerformance()),\n    provideServiceWorker(\n      'ngsw-worker.js',\n      {\n        enabled: !isDevMode(),\n        registrationStrategy: 'registerWhenStable:30000',\n      },\n    ),\n    provideStorage((): FirebaseStorage => getStorage()),\n    // provideVertexAI((): VertexAI => getVertexAI()),\n    provideRouter(\n      routes,\n      withComponentInputBinding(),\n      withInMemoryScrolling({ anchorScrolling: 'enabled', scrollPositionRestoration: 'enabled' }),\n    ),\n    { provide: TitleStrategy, useClass: AppTitleStrategyService },\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateChildFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  _childRoute: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n): Observable => {\n  const router = inject(Router);\n  const user$ = inject(USER$);\n  const { url } = state;\n\n  return user$.pipe(\n    map((maybeUser: User | null): UrlTree | true => {\n      if (!maybeUser) {\n        return router.parseUrl(`/login?next=${url}`);\n      }\n\n      return true;\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/app/identity/validators/confirm-match/confirm-match.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        confirmMatch\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (password1: string, password2: string): ValidatorFn =>\n  // control: AbstractControl is required by the type ValidatorFn, but the actual expected type is FormGroup.\n  (formGrp: AbstractControl): ValidationErrors | null => {\n    if (!(formGrp instanceof FormGroup)) {\n      throw new TypeError('Control must be an instance of FormGroup.');\n    }\n\n    const control1 = formGrp.get(password1);\n    const control2 = formGrp.get(password2);\n\n    if (!control1) {\n      throw new Error(`Cannot find FormControl named '${password1}'.`);\n    }\n    if (!control2) {\n      throw new Error(`Cannot find FormControl named '${password2}'.`);\n    }\n\n    // eslint-disable-next-line unicorn/no-null -- ValidatorFn returns null\n    return control1.value === control2.value ? null : { [ERROR_NAME]: true };\n  }\n                    \n                \n\n            \n                \n                    Requires that two controls have the same value to validate the FormGroup.\nUsage:\nExample :  new FormGroup(\n   {\n     password1: new FormControl(null, [ Validators.required, Validators.minLength(num), Validators.maxLength(num) ]),\n     password2: new FormControl(null, [ Validators.required, Validators.minLength(num), Validators.maxLength(num) ]),\n   },\n   { validators: confirmMatch('password1', 'password2') },\n );\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ERROR_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'confirmmatch'\n                    \n                \n\n            \n                \n                    ValidationError property name for confirmMatch Validator.\n\n                \n            \n\n        \n    \n\n    src/app/identity/validators/confirm-match/match-error.signal.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        confirmMatchFormErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (form: FormGroup, control1: FormControl, control2: FormControl): Signal => {\n  const initialValue: boolean = form.invalid && control1.valid && control2.valid && form.errors?.[ERROR_NAME] != undefined;\n\n  const formStatus$: Observable = form.statusChanges.pipe(\n    // Wait for input to stop before displaying error messages\n    debounceTime(FORMS.inputDebounce),\n    map((status: FormControlStatus): boolean => {\n      const { errors } = form;\n      if (status === 'INVALID' && control1.valid && control2.valid && errors) {\n        return errors[ERROR_NAME] != undefined;\n      }\n      return false;\n    }),\n  );\n\n  return toSignal(formStatus$, { initialValue });\n}\n                    \n                \n\n            \n                \n                    Only display the confirmmatch error if the two controls are valid, and the form has the error.\n\n                \n            \n\n        \n    \n\n    src/app/shared/control-errors-signal.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        controlErrorsSignal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (control: AbstractControl): Signal => {\n  // Only care about dirty controls for purposes of displaying validation error messages.\n  const controlDirty$: Observable = control.events.pipe(\n    filter((event: ControlEvent): event is PristineChangeEvent => event instanceof PristineChangeEvent),\n    map((event: PristineChangeEvent): boolean => !event.pristine),\n  );\n\n  // When status is INVALID emit control.errors, otherwise undefined\n  const controlStatus$: Observable = control.statusChanges.pipe(\n    // Wait for input to stop before displaying error messages\n    debounceTime(FORMS.inputDebounce),\n    map((status: FormControlStatus): ValidationErrors | undefined => {\n      const { errors } = control;\n      if (status === 'INVALID' && errors) {\n        return errors;\n      }\n      return undefined;\n    }),\n  );\n\n  // Combine the Observables so that ValidationErrors are emitted only when the control is dirty.\n  const controlErrors$: Observable = combineLatest({\n    /* eslint-disable rxjs/finnish */\n    dirty: controlDirty$,\n    errors: controlStatus$,\n  }).pipe(\n    map(({ dirty, errors }: CombinedObs): ValidationErrors | undefined => {\n      if (dirty) {\n        return errors;\n      }\n\n      return undefined;\n    }),\n  );\n\n  return toSignal(controlErrors$);\n}\n                    \n                \n\n            \n                \n                    Creates an Angular Signal that emits the validation errors for a Control only when the Control is\nalso modified (dirty).\n\n                \n            \n\n        \n    \n\n    src/app/shared/control-invalid-signal.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        controlInvalidSignal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (control: AbstractControl): Signal => {\n  const defaultProperties: ControlProperties = {\n    dirty: control.dirty,\n    invalid: control.invalid,\n    touched: control.touched,\n  };\n  const initialValue = isInvalid(defaultProperties);\n\n  const controlEvents$: Observable = control.events.pipe(\n    scan(\n      (current: ControlProperties, event: ControlEvent): ControlProperties => {\n        if (event instanceof PristineChangeEvent) {\n          return { ...current, dirty: !event.pristine };\n        }\n\n        if (event instanceof TouchedChangeEvent) {\n          return { ...current, touched: event.touched };\n        }\n\n        if (event instanceof StatusChangeEvent) {\n          return { ...current, invalid: event.status === 'INVALID' };\n        }\n\n        return current;\n      },\n      defaultProperties,\n    ),\n    map((properties: ControlProperties): boolean => isInvalid(properties)),\n    distinctUntilChanged(),\n  );\n\n  return toSignal(controlEvents$, { initialValue });\n}\n                    \n                \n\n            \n                \n                    Create an Angular Signal that flags as modified and invalid based on the Control properties.\n\nInvalid - the value fails validation checks.\nDirty - the value is different from the initial value.\nTouched - the Control has been focused during the current view.\n\nThis ensures that the aria-invalid attribute is only set on Controls that the user has interacted\nwith.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (properties: ControlProperties): boolean => {\n  let invalid = true;\n\n  for (const val of Object.values(properties)) {\n    invalid &&= Boolean(val);\n  }\n\n  return invalid;\n}\n                    \n                \n\n            \n                \n                    When all the ControlProperties are true then the Control is invalid.\n\n                \n            \n\n        \n    \n\n    src/app/identity/identity-forms.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createEmailControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): ControlStruct => {\n  // eslint-disable-next-line unicorn/no-null -- DOM forms use null\n  const control = new FormControl(null, [ Validators.required, Validators.email ]);\n  return getControlStructure(control);\n}\n                    \n                \n\n            \n                \n                    Emails are required and must be a valid email address.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createPasswordControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (isNewPassword: boolean = false): ControlStruct => {\n  const control = new FormControl(\n    null, // eslint-disable-line unicorn/no-null -- DOM forms use null\n    [\n      Validators.required,\n      Validators.minLength(PASSWORDS.minLength),\n      Validators.maxLength(PASSWORDS.maxLength),\n    ],\n  );\n\n  if (isNewPassword) {\n    control.addValidators(passwordStrengthValidator);\n    control.addAsyncValidators(passwordFirebaseValidator());\n  }\n\n  return getControlStructure(control);\n}\n                    \n                \n\n            \n                \n                    Passwords are required and have length requirements. Complexity is required for new password fields.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getControlStructure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (control: T): ControlStruct => {\n  const $invalid = controlInvalidSignal(control);\n  const $errors = controlErrorsSignal(control);\n\n  return { $errors, $invalid, control };\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/email-verified.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emailVerifiedGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateChildFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  _childRoute: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n): Observable => {\n  const router = inject(Router);\n  const user$ = inject(USER$);\n  const { url } = state;\n\n  return user$.pipe(\n    map((maybeUser: User | null): UrlTree | boolean => {\n      if (!maybeUser) {\n        return false;\n      }\n\n      if (!maybeUser.emailVerified) {\n        return router.parseUrl(`/confirm-email?next=${url}`);\n      }\n\n      return true;\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FORMS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  /** Input event delay for form fields to prevent an event on every keystroke. Milliseconds */\n  inputDebounce: 1000,\n} as const\n                    \n                \n\n            \n                \n                    Common settings for forms.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PASSWORDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  /** Glyphs, Firebase default maximum */\n  maxLength: 4096,\n\n  /** Glyphs, nominally secure length */\n  minLength: 12,\n\n  /**\n   * Password strength as computed by check-password-strength library.\n   * https://github.com/deanilvincent/check-password-strength?tab=readme-ov-file#result\n   */\n  minStrength: 2,\n} as const\n                    \n                \n\n            \n                \n                    This should match Password Policy\n\n                \n            \n\n        \n    \n\n    src/app/identity/error-code.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getErrorCode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (err: unknown): string => {\n  if (err instanceof FirebaseError) {\n    return err.code;\n  }\n  if (err instanceof Error) {\n    return err.message;\n  }\n\n  console.error('Unknown Error', err);\n  return 'unknown';\n}\n                    \n                \n\n            \n                \n                    TypeScript/linters want caught errors to be of type unknown. So this function handles checking\nfor FirebaseError and extracting the code, or the message from plain Errors.\n\n                \n            \n\n        \n    \n\n    src/app/identity/validators/passwords/util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getPasswordControlValue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (control: AbstractControl): string | null => {\n  const { value } = control;\n\n  // Like Validators.email, rely on Validators.required to check for blank passwords.\n  if (value == undefined || value === '') {\n    return null; // eslint-disable-line unicorn/no-null -- ValidatorFn returns null\n  }\n\n  if (typeof value !== 'string') {\n    throw new TypeError(`Invalid Control Value Type: '${typeof value}'`);\n  }\n\n  return value;\n}\n                    \n                \n\n            \n                \n                    Safely extract the value from a control, expecting it to be a string or nullish.\n\n                \n            \n\n        \n    \n\n    src/app/identity/actions/get-state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (maybeNavigation: Navigation | null): Partial =>\n  maybeNavigation?.extras.state ?? {}\n                    \n                \n\n            \n                \n                    Get the ActionCodeState from the Navigation extras state, if we can.\n\n                \n            \n\n        \n    \n\n    src/app/identity/user-photos/user-photos.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MAXIMUM_PHOTOS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n\n            \n                \n                    Total allowed uploaded profile photos.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PHOTO_DIR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile-photos'\n                    \n                \n\n            \n                \n                    Directory below UID directory for files.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RADIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 36\n                    \n                \n\n            \n                \n                    Represent random number using letters and numbers.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SKIP_WHOLE_NUM\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n\n            \n                \n                    Remove the whole number and decimal point from Math.random\n\n                \n            \n\n        \n    \n\n    src/app/core/guards/no-auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        noAuthGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateChildFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  childRoute: ActivatedRouteSnapshot,\n  _state: RouterStateSnapshot,\n): Observable => {\n  const router = inject(Router);\n  /** Navigate to the `next` query parameter if set, else to the root and allow default redirectTo Route to decide initial destination. */\n  const nextUrl = childRoute.queryParamMap.get('next') ?? '/';\n  const user$ = inject(USER$);\n\n  return user$.pipe(\n    map((maybeUser: User | null): UrlTree | true => {\n      if (maybeUser) {\n        return router.parseUrl(nextUrl);\n      }\n\n      return true;\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/app/identity/validators/passwords/firebase.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordFirebaseValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): AsyncValidatorFn => {\n  const auth: Auth = inject(Auth);\n\n  return async (control: AbstractControl): Promise => {\n    const value = getPasswordControlValue(control);\n\n    // Like Validators.email, rely on Validators.required to check for blank passwords.\n    if (value == undefined) {\n      return null; // eslint-disable-line unicorn/no-null -- ValidatorFn returns null\n    }\n\n    // Opened an issue about this being necessary: https://github.com/angular/angularfire/issues/3614\n    const { passwordPolicy: _, ...status } = await validatePassword(auth, value);\n\n    return status.isValid ? null : { firebasevalidator: status }; // eslint-disable-line unicorn/no-null -- ValidatorFn returns null\n  };\n}\n                    \n                \n\n            \n                \n                    Validate against the Firebase Project Authentication Password Policy.\nNote: This validator will be called on every InputEvent/Control.valueChange event after the sync\nvalidators pass. But Firebase Auth caches the password policy fetch request so the first time is\nthe only remote request and so it is safe to not throttle this validator. Not that there is a\nclean way to throttle AsyncValidatorFns :-(\nNote: at this time there is no actual need for this because the policy only enforces length and\nother Validators already check for that. However it is nice to know how to do this.\n\n                \n            \n\n        \n    \n\n    src/app/identity/validators/passwords/strength.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordStrengthValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : (control: AbstractControl): ValidationErrors | null => {\n  const value = getPasswordControlValue(control);\n\n  // Like Validators.email, rely on Validators.required to check for blank passwords.\n  if (value == undefined) {\n    return null; // eslint-disable-line unicorn/no-null -- ValidatorFn returns null\n  }\n\n  const strength = passwordStrength(value);\n  return strength.id \n                    \n                \n\n            \n                \n                    Validator for new password complexity based on check-password-strength\n\n                \n            \n\n        \n    \n\n    src/app/core/firebase-app.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        provideOurFirebaseApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): EnvironmentProviders =>\n  provideFirebaseApp(\n    (): FirebaseApp =>\n      initializeApp({\n        apiKey: 'AIzaSyB75fqz0szrfVCLvpil9_t9UPQlLYplNcI',\n        appId: '1:207926801743:web:e1402f665312fb7ab0813a',\n        authDomain: 'brainfry-app.firebaseapp.com',\n        messagingSenderId: '207926801743',\n        projectId: 'brainfry-app',\n        storageBucket: 'brainfry-app.appspot.com',\n      }),\n  )\n                    \n                \n\n\n        \n    \n\n    src/app/page-not-found/page-not-found.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROBOTS_META\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MetaDefinition\n\n                    \n                \n                \n                    \n                        Default value : {\n  content: 'noindex, nofollow',\n  name: 'robots',\n} as const\n                    \n                \n\n            \n                \n                    Block robots from indexing the 404 page.\n\n                \n            \n\n        \n    \n\n    src/app/identity/recover-email/recover-email.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SEND_EMAIL_DELAY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n\n\n        \n    \n\n    src/app/core/user.token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'USER$',\n  { factory: (): MaybeUser$ => user(inject(Auth)) },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
