var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionCodeState.html",[0,0.339,1,2.477]],["body/interfaces/ActionCodeState.html",[0,0.364,1,3.547,2,1.269,3,0.183,4,0.162,5,0.142,6,2.879,7,0.292,8,4.702,9,0.34,10,0.453,11,4.464,12,6.051,13,5.618,14,2.771,15,1.832,16,0.018,17,2.058,18,0.527,19,3.093,20,3.275,21,3.609,22,3.841,23,0.738,24,3.303,25,1.551,26,4.209,27,1.424,28,2.747,29,3.293,30,4.702,31,2.128,32,4.702,33,3.093,34,4.737,35,3.081,36,0.259,37,0.709,38,0.034,39,4.209,40,3.155,41,0.581,42,2.927,43,0.216,44,4.438,45,1.621,46,2.816,47,1.065,48,0.858,49,1.388,50,0.244,51,0.761,52,1.387,53,3.155,54,3.155,55,0.853,56,2.318,57,3.155,58,0.749,59,2.879,60,0.709,61,3.155,62,1.088,63,3.155,64,3.524,65,2.467,66,3.092,67,3.524,68,3.524,69,3.524,70,3.745,71,1.852,72,4.702,73,2.681,74,2.232,75,0.992,76,0.709,77,0.709,78,0.779,79,0.709,80,0.643,81,0.389,82,0.204,83,0.709,84,3.494,85,3.122,86,0.706,87,3.841,88,1.015,89,3.524,90,3.524,91,3.155,92,1.949,93,2.475,94,2.659,95,3.524,96,1.521,97,3.524,98,3.524,99,3.524,100,1.673,101,3.524,102,2.475,103,3.524,104,1.327,105,2.318,106,0.975,107,4.702,108,2.318,109,3.524,110,3.524,111,3.524,112,3.524,113,3.524,114,3.155,115,0.676,116,2.475,117,0.441,118,0.975,119,3.524,120,0.776,121,3.155,122,2.181,123,1.849,124,2.181,125,2.181,126,2.181,127,2.059,128,3.524,129,3.524,130,2.659,131,2.475,132,2.475,133,3.524,134,3.155,135,3.524,136,0.946,137,5.292,138,4.702,139,2.747,140,3.524,141,3.524,142,3.524,143,3.155,144,2.659,145,1.039,146,3.524,147,4.702,148,1.694,149,3.524,150,4.702,151,3.524,152,3.524,153,1.949,154,1.453,155,2.659,156,1.065,157,2.059,158,1.019,159,2.879,160,1.521,161,2.659,162,2.659,163,2.475,164,2.879,165,0.012,166,0.012]],["title/components/ActionsComponent.html",[38,0.024,83,0.661]],["body/components/ActionsComponent.html",[0,0.295,1,2.155,3,0.148,4,0.131,5,0.115,6,2.333,7,0.237,8,2.856,9,0.275,10,0.392,11,4.325,12,5.836,13,5.512,14,2.621,15,1.651,16,0.018,17,1.79,18,0.564,19,1.879,20,2.517,21,3.546,22,2.333,23,0.702,24,2.006,25,0.942,26,2.557,27,1.25,28,1.669,29,3.13,30,2.856,31,1.292,32,2.856,33,1.879,34,4.241,35,3.208,36,0.237,37,0.575,38,0.034,39,3.641,40,2.557,41,0.471,42,2.62,43,0.187,44,4.787,45,1.633,46,2.911,47,0.863,48,0.942,49,1.125,50,0.211,51,0.785,52,1.448,53,2.557,54,2.557,55,0.691,56,1.879,57,2.557,58,0.685,59,2.333,60,0.575,61,2.557,62,0.941,63,2.557,64,4.068,65,2.709,66,3.313,67,4.068,68,4.068,69,4.068,70,4.003,71,2.034,72,5.162,73,2.693,74,2.451,75,1.196,76,0.818,77,0.818,78,0.899,79,1.356,80,1.231,81,0.449,82,0.165,83,1.038,84,3.894,85,3.479,86,0.787,87,3.323,88,1.164,89,4.737,90,4.737,91,3.641,92,2.62,93,2.857,94,3.069,95,4.068,96,1.756,97,4.068,98,4.068,99,4.068,100,1.931,101,4.068,102,2.857,103,4.068,104,1.532,105,2.676,106,1.311,107,4.068,108,1.879,109,2.856,110,2.856,111,2.856,112,2.856,113,2.856,114,2.557,115,0.78,116,2.006,117,0.509,118,0.79,119,2.856,120,0.782,121,2.557,122,1.768,123,1.499,124,1.768,125,1.768,126,1.768,127,1.669,128,2.856,129,2.856,130,2.155,131,2.006,132,2.006,133,2.856,134,2.557,135,2.856,136,0.818,137,4.737,138,4.068,139,2.376,140,2.856,141,2.856,142,2.856,143,2.557,144,2.155,145,0.899,146,2.856,147,4.068,148,1.86,149,2.856,150,4.068,151,2.856,152,2.856,153,1.58,154,1.177,155,2.155,156,0.863,157,1.669,158,0.826,159,2.333,160,1.233,161,2.155,162,2.155,163,2.006,164,2.333,165,0.01,166,0.01,167,0.602,168,0.661,169,0.575,170,3.641,171,1.665,172,4.715,173,4.715,174,4.715,175,2.517,176,4.715,177,4.715,178,3.31,179,3.31,180,0.661,181,0.818,182,0.858,183,0.661,184,1.194,185,0.661,186,0.671,187,0.661,188,0.602,189,0.661,190,0.575,191,0.379,192,0.237,193,0.661,194,0.602,195,0.661,196,0.941,197,0.602,198,0.706,199,1.096,200,0.602,201,1.096,202,0.575,203,0.471,204,0.602,205,0.661,206,0.602,207,0.631,208,0.661,209,0.602,210,0.661,211,0.602,212,0.661,213,0.602,214,0.661,215,0.602,216,0.661,217,0.602,218,0.661,219,0.602,220,0.575,221,0.661,222,0.602,223,0.706,224,0.661,225,0.575,226,0.661,227,0.602,228,0.661,229,0.661,230,0.602,231,0.661,232,0.575,233,0.661,234,0.602,235,0.661,236,0.602,237,0.602,238,0.602,239,0.661,240,0.661,241,0.602,242,0.631,243,0.602,244,0.631,245,0.661,246,0.575,247,0.131,248,0.661,249,0.602,250,0.661,251,0.661]],["title/components/AppComponent.html",[38,0.024,188,0.693]],["body/components/AppComponent.html",[3,0.223,4,0.197,5,0.173,7,0.356,16,0.017,23,0.505,36,0.245,37,0.864,38,0.046,43,0.197,46,2.665,47,1.298,48,0.784,50,0.223,75,1.127,76,1.075,77,1.075,78,1.181,79,1.392,80,1.263,81,0.59,82,0.248,83,0.864,115,0.824,117,0.537,120,0.709,156,1.614,165,0.013,166,0.013,167,0.906,168,0.994,169,0.864,180,0.994,181,1.075,182,1.127,183,0.994,184,1.407,185,0.994,186,0.882,187,0.994,188,1.283,189,0.994,190,0.864,191,0.57,192,0.356,193,0.994,194,0.906,195,0.994,196,1.236,197,0.906,198,0.928,199,1.345,200,0.906,201,1.345,202,0.864,203,0.709,204,0.906,205,0.994,206,0.906,207,0.949,208,0.994,209,0.906,210,0.994,211,0.906,212,0.994,213,0.906,214,0.994,215,0.906,216,0.994,217,0.906,218,0.994,219,0.906,220,0.864,221,0.994,222,0.906,223,0.928,224,0.994,225,0.864,226,0.994,227,0.906,228,0.994,229,0.994,230,0.906,231,0.994,232,0.864,233,0.994,234,0.906,235,0.994,236,0.906,237,0.906,238,0.906,239,0.994,240,0.994,241,0.906,242,0.949,243,0.906,244,0.949,245,0.994,246,0.864,247,0.197,248,0.994,249,0.906,250,0.994,251,0.994,252,4.297,253,4.365,254,6.193,255,4.783,256,2.955,257,3.753,258,6.193,259,5.206]],["title/injectables/AppTitleStrategyService.html",[260,0.95,261,2.683]],["body/injectables/AppTitleStrategyService.html",[3,0.226,4,0.201,5,0.176,7,0.363,9,0.421,10,0.521,15,1.495,16,0.018,17,1.38,18,0.549,36,0.281,41,0.722,43,0.201,47,1.632,50,0.226,51,0.753,55,1.482,58,0.58,71,1.723,82,0.253,86,0.733,88,1.228,106,1.622,156,1.321,160,2.643,165,0.014,166,0.014,171,1.621,181,1.087,182,1.139,186,0.722,220,1.231,260,1.562,261,4.413,262,2.876,263,6.29,264,4.798,265,4.373,266,4.027,267,2.306,268,1.632,269,3.343,270,5.861,271,6.794,272,6.794,273,1.705,274,6.261,275,6.261,276,6.261,277,6.122,278,5.068,279,6.261,280,7.29,281,1.803,282,2.555,283,1.158,284,2.227,285,5.068,286,5.402,287,3.553,288,3.914,289,3.071,290,1.723,291,5.068,292,5.068,293,5.068,294,5.068,295,6.261,296,5.068,297,3.299,298,2.876,299,6.261,300,5.068,301,6.261,302,5.068,303,5.068,304,5.068]],["title/interfaces/ApplyResult.html",[0,0.339,305,2.477]],["body/interfaces/ApplyResult.html",[0,0.482,2,1.256,3,0.242,4,0.16,5,0.14,7,0.289,9,0.336,10,0.45,14,2.766,15,1.732,16,0.018,17,2.023,18,0.504,23,0.797,27,1.274,28,2.037,29,1.83,36,0.269,41,0.575,43,0.16,50,0.273,51,0.689,52,1.361,58,0.746,60,0.702,62,1.425,82,0.202,86,0.436,88,1.009,104,1.759,115,0.895,117,0.783,118,1.705,136,1.131,144,2.631,145,1.295,148,1.682,156,1.054,165,0.016,166,0.012,191,0.619,192,0.437,247,0.242,260,1.35,268,1.054,269,2.158,273,1.101,283,0.923,290,1.374,305,4.422,306,2.449,307,2.449,308,2.294,309,4.422,310,5.784,311,5.4,312,3.627,313,1.945,314,4.18,315,2.427,316,2.89,317,3.523,318,2.631,319,3.122,320,2.849,321,1.313,322,2.294,323,3.122,324,1.578,325,3.122,326,1.292,327,1.484,328,1.256,329,2.037,330,1.83,331,3.463,332,2.449,333,1.739,334,1.84,335,2.849,336,3.122,337,5.033,338,2.294,339,2.631,340,2.631,341,2.849,342,2.849,343,3.523,344,2.849,345,1.656,346,1.506,347,2.849,348,3.122,349,3.122,350,2.449,351,1.739,352,1.656,353,2.037,354,2.449,355,3.122,356,1.202,357,2.849,358,1.656,359,3.075,360,4.301,361,1.84,362,2.17,363,3.122,364,2.158,365,4.301,366,2.849,367,1.35,368,1.656,369,3.122,370,1.506,371,2.294,372,2.582,373,3.122,374,3.122,375,2.631,376,1.578,377,3.122,378,3.122,379,3.122,380,2.158,381,2.631,382,2.849,383,2.849,384,3.072,385,3.122,386,1.983,387,1.656,388,3.122,389,3.122,390,3.122,391,2.849,392,3.122,393,2.294,394,1.474,395,3.122,396,2.45,397,3.122,398,2.427,399,2.294,400,2.449,401,1.506,402,2.158,403,2.849,404,2.294,405,1.313,406,1.032,407,3.122,408,3.122,409,3.122,410,2.631,411,3.122,412,1.506,413,3.122,414,2.45,415,2.631,416,3.122,417,2.728,418,3.122,419,1.313,420,3.122,421,1.202,422,2.294,423,1.739,424,2.449,425,2.849,426,3.122,427,2.294,428,2.294,429,3.122,430,2.849,431,3.122,432,3.122,433,1.929,434,2.849,435,3.122,436,1.054,437,2.849,438,1.374,439,3.122]],["title/components/AuthErrorMessagesComponent.html",[38,0.024,190,0.661]],["body/components/AuthErrorMessagesComponent.html",[3,0.115,4,0.102,5,0.089,7,0.184,9,0.214,10,0.325,16,0.018,18,0.366,21,1.971,23,0.759,25,1.506,27,1.607,29,3.041,31,1.527,34,3.021,35,1.683,36,0.155,37,0.446,38,0.03,42,1.226,43,0.155,44,3.446,48,0.405,50,0.115,51,0.481,52,0.903,75,0.712,76,0.679,77,0.679,79,1.327,80,1.205,81,0.245,82,0.128,83,0.446,86,0.511,87,1.811,91,3.021,94,3.446,105,3.931,115,0.425,117,0.277,118,1.653,120,0.366,148,0.799,154,2.39,158,1.321,165,0.009,166,0.009,167,0.467,168,0.513,169,0.446,170,3.657,171,0.893,175,3.041,180,0.513,181,0.679,182,0.712,183,0.513,184,1.056,185,0.513,186,0.557,187,0.513,188,0.467,189,0.513,190,0.919,191,0.754,192,0.516,193,0.513,194,0.467,195,0.513,196,0.781,197,0.467,198,0.793,199,0.945,200,0.467,201,0.945,202,0.446,203,0.366,204,0.467,205,0.513,206,0.467,207,0.49,208,0.513,209,0.467,210,0.513,211,0.467,212,0.513,213,0.467,214,0.513,215,0.467,216,0.513,217,0.467,218,0.513,219,0.467,220,0.446,221,0.513,222,0.467,223,0.586,224,0.513,225,0.446,226,0.513,227,0.467,228,0.513,229,0.513,230,0.467,231,0.513,232,0.446,233,0.513,234,0.467,235,0.513,236,0.467,237,0.467,238,0.467,239,0.513,240,0.513,241,0.467,242,0.49,243,0.467,244,0.49,245,0.513,246,0.446,247,0.291,248,0.513,249,0.467,250,0.513,251,0.513,256,1.866,268,1.02,289,3.636,313,1.83,338,2.22,359,3.024,361,2.701,362,2.287,367,1.604,370,2.58,396,1.771,401,1.457,412,1.457,423,1.683,425,2.757,436,1.676,440,4.086,441,1.94,442,2.217,443,3.374,444,3.911,445,3.911,446,3.911,447,3.911,448,2.757,449,2.37,450,2.546,451,3.911,452,3.911,453,1.163,454,3.911,455,3.911,456,2.546,457,0.781,458,3.911,459,3.911,460,2.569,461,0.914,462,2.569,463,1.984,464,1.984,465,2.569,466,2.569,467,3.911,468,3.911,469,6.718,470,6.001,471,2.891,472,1.971,473,2.765,474,3.911,475,5.294,476,5.294,477,3.911,478,4.019,479,6.43,480,4.567,481,3.636,482,3.911,483,4.088,484,2.546,485,6.299,486,2.826,487,3.911,488,3.204,489,3.911,490,5.547,491,5.294,492,3.911,493,6.001,494,1.329,495,2.526,496,3.446,497,3.911,498,3.911,499,6.43,500,6.43,501,5.294,502,3.911,503,2.37,504,5.469,505,2.22,506,7.081,507,3.374,508,3.021,509,4.532,510,3.731,511,3.911,512,3.911,513,3.911,514,3.021,515,5.294,516,4.088,517,3.911,518,4.567,519,3.731,520,3.911,521,3.911,522,3.911,523,5.547,524,2.22,525,3.911,526,5.294,527,1.866,528,3.374,529,3.021,530,3.911,531,2.22,532,3.021,533,5.177,534,4.567,535,3.446,536,3.911,537,2.757,538,3.911,539,3.911,540,3.021,541,2.757,542,1.971,543,5.796,544,3.911,545,4.567,546,2.088,547,3.636,548,3.374,549,3.911,550,3.374,551,3.021,552,3.911,553,3.911,554,4.567,555,3.911,556,3.911,557,5.294,558,5.294,559,6.001,560,3.911,561,3.911,562,4.567,563,5.294,564,3.911,565,5.294,566,3.911,567,3.911,568,5.294,569,4.567,570,3.208,571,3.911,572,3.911,573,6.718,574,3.911,575,2.088,576,3.911,577,3.374,578,4.567,579,3.911,580,3.911,581,3.021,582,3.021,583,3.911,584,3.374,585,3.374,586,3.911,587,3.374,588,3.911,589,6.001,590,3.911,591,3.911,592,3.911,593,3.911,594,3.911,595,3.911,596,3.374,597,2.37,598,2.37,599,1.971,600,3.911,601,1.971,602,3.911,603,3.374,604,3.911,605,1.602,606,2.757]],["title/components/CentralLayoutComponent.html",[38,0.024,194,0.693]],["body/components/CentralLayoutComponent.html",[3,0.214,4,0.19,5,0.166,7,0.342,16,0.017,23,0.485,25,1.719,36,0.275,37,0.83,38,0.042,43,0.19,47,1.247,48,0.753,50,0.214,75,1.099,76,1.048,77,1.048,78,1.151,79,1.389,80,1.261,81,0.455,82,0.238,83,0.83,115,0.791,117,0.516,120,0.681,165,0.013,166,0.013,167,0.87,168,0.955,169,0.83,175,3.224,180,0.955,181,1.048,182,1.099,183,0.955,184,1.387,185,0.955,186,0.86,187,0.955,188,0.87,189,0.955,190,0.83,191,0.547,192,0.342,193,0.955,194,1.265,195,1.321,196,1.205,197,0.87,198,0.905,199,1.321,200,0.87,201,1.321,202,0.83,203,0.681,204,0.87,205,0.955,206,0.87,207,0.912,208,0.955,209,1.265,210,0.955,211,0.87,212,0.955,213,0.87,214,0.955,215,0.87,216,0.955,217,0.87,218,0.955,219,0.87,220,0.83,221,0.955,222,0.87,223,0.905,224,0.955,225,0.83,226,0.955,227,0.87,228,0.955,229,0.955,230,0.87,231,0.955,232,0.83,233,0.955,234,0.87,235,0.955,236,0.87,237,0.87,238,0.87,239,0.955,240,0.955,241,0.87,242,0.912,243,0.87,244,0.912,245,0.955,246,0.83,247,0.19,248,0.955,249,0.87,250,0.955,251,0.955,259,5.111,287,3.427,457,1.205,484,3.931,607,4.127,608,2.148,609,5.997,610,5.21,611,2.249,612,6.039,613,5.21,614,5.21,615,6.039,616,4.664,617,3.224,618,4.664,619,4.307,620,2.354,621,6.039,622,2.148,623,6.039,624,1.554,625,4.127,626,3.66,627,2.599]],["title/components/ChangeEmailComponent.html",[38,0.024,197,0.693]],["body/components/ChangeEmailComponent.html",[3,0.109,4,0.097,5,0.085,7,0.175,9,0.203,10,0.313,14,1.922,16,0.018,18,0.574,23,0.796,25,1.469,27,1.078,28,1.899,31,0.955,35,1.621,36,0.281,37,0.425,38,0.029,41,0.348,43,0.149,45,2.139,48,0.813,49,0.832,50,0.109,51,0.792,52,0.984,55,0.787,58,0.59,60,1.307,71,0.832,74,2.411,75,0.686,76,0.654,77,0.654,78,0.718,79,1.321,80,1.199,81,0.233,82,0.122,83,0.425,85,3.021,86,0.844,93,1.483,96,0.911,100,1.002,104,1.224,106,1.097,115,0.405,117,0.264,118,1.787,120,0.348,127,1.233,136,0.654,145,0.718,154,2.4,158,0.94,160,0.911,165,0.008,166,0.008,167,0.445,168,0.488,169,0.425,171,1.654,180,0.488,181,0.654,182,0.686,183,0.488,184,1.03,185,0.488,186,0.654,187,0.488,188,0.445,189,0.488,190,0.896,191,0.431,192,0.475,193,0.488,194,0.445,195,0.488,196,0.752,197,0.939,198,1.051,199,0.917,200,0.445,201,0.917,202,0.425,203,0.925,204,0.445,205,0.488,206,0.445,207,0.466,208,0.488,209,0.445,210,0.488,211,0.445,212,0.488,213,0.445,214,0.488,215,0.445,216,0.488,217,0.445,218,0.488,219,0.445,220,0.425,221,0.488,222,0.445,223,0.565,224,0.488,225,0.425,226,0.488,227,0.445,228,0.488,229,0.488,230,0.445,231,0.488,232,0.425,233,0.488,234,0.445,235,0.488,236,0.445,237,0.445,238,0.445,239,0.488,240,0.488,241,0.445,242,0.466,243,0.445,244,0.466,245,0.488,246,0.425,247,0.29,248,0.488,249,0.836,250,0.488,251,0.488,267,2.11,268,1.345,273,1.026,281,0.87,283,0.559,313,2.024,316,2.012,321,1.224,328,0.761,331,2.929,333,1.621,334,2.084,359,1.899,370,1.922,386,0.795,394,0.666,399,2.138,401,2.193,405,0.795,406,1.062,412,0.911,421,0.728,436,0.638,438,0.832,441,1.002,453,2.123,457,0.752,461,0.87,471,3.017,472,2.601,473,2.015,488,2.012,494,1.281,495,1.798,524,3.887,527,1.798,540,2.91,541,3.637,542,1.899,547,1.483,575,2.012,597,3.127,611,0.911,624,0.795,628,5.136,629,5.629,630,1.483,631,1.732,632,4.452,633,3.251,634,1.899,635,1.882,636,2.453,637,2.656,638,5.573,639,4.595,640,5.573,641,4.595,642,6.132,643,4.304,644,3.549,645,4.452,646,4.595,647,4.595,648,4.595,649,3.627,650,3.627,651,3.549,652,2.283,653,3.768,654,2.656,655,2.447,656,2.91,657,2.453,658,2.656,659,2.447,660,1.922,661,3.452,662,2.447,663,2.724,664,3.021,665,2.447,666,2.447,667,2.398,668,2.447,669,2.447,670,2.452,671,2.447,672,2.447,673,2.447,674,3.768,675,3.251,676,3.251,677,1.706,678,3.549,679,2.447,680,3.099,681,2.447,682,2.447,683,2.452,684,2.447,685,2.462,686,2.138,687,2.929,688,2.452,689,2.447,690,2.452,691,2.447,692,1.977,693,1.89,694,1.89,695,2.447,696,2.192,697,1.621,698,1.108,699,1.899,700,1.108,701,1.725,702,1.89,703,2.784,704,2.012,705,1.306,706,1.389,707,0.955,708,1.593,709,1.593,710,1.89,711,3.627,712,1.389,713,4.595,714,2.447,715,2.447,716,1.977,717,4.595,718,2.447,719,2.447,720,4.595,721,1.89,722,1.89,723,2.91,724,2.447,725,3.627,726,2.447,727,2.447,728,2.447,729,1.306,730,2.111,731,2.111,732,1.233,733,1.168,734,1.725,735,1.483,736,2.447,737,1.233,738,1.168,739,1.725,740,1.053,741,2.447,742,3.238,743,1.306,744,1.306,745,1.168,746,1.306,747,2.111,748,2.91,749,1.89,750,1.89,751,2.447,752,2.111,753,0.955,754,1.306,755,2.447,756,3.831,757,3.251,758,2.608,759,2.91,760,3.986,761,1.593,762,1.899,763,2.283,764,2.452,765,2.452,766,1.899,767,2.452,768,1.593,769,2.91,770,3.768,771,3.251,772,3.251,773,2.452,774,3.251,775,3.251,776,2.447,777,2.608,778,2.91,779,1.593,780,1.593]],["title/components/ChangePasswordComponent.html",[38,0.024,200,0.693]],["body/components/ChangePasswordComponent.html",[3,0.112,4,0.1,5,0.087,7,0.18,9,0.209,10,0.32,16,0.018,18,0.574,19,2.972,23,0.391,25,1.49,27,1.094,31,0.982,36,0.279,37,0.437,38,0.029,41,0.358,43,0.152,45,2.15,48,0.825,49,0.855,50,0.112,51,0.794,52,0.734,55,0.804,58,0.599,60,1.255,71,0.855,75,0.7,76,0.668,77,0.668,78,0.734,79,1.325,80,1.202,81,0.24,82,0.125,83,0.437,86,0.846,93,1.525,96,0.937,100,1.031,106,1.116,115,0.416,117,0.271,118,1.887,120,0.358,127,1.268,136,0.668,145,0.734,154,2.417,158,0.96,160,0.937,165,0.008,166,0.008,167,0.458,168,0.502,169,0.437,171,1.662,180,0.502,181,0.668,182,0.7,183,0.502,184,1.045,185,0.502,186,0.665,187,0.502,188,0.458,189,0.502,190,0.909,191,0.44,192,0.478,193,0.502,194,0.458,195,0.502,196,0.768,197,0.458,198,1.033,199,0.933,200,0.953,201,0.933,202,0.437,203,0.665,204,0.458,205,0.502,206,0.458,207,0.48,208,0.502,209,0.458,210,0.502,211,0.458,212,0.502,213,0.458,214,0.502,215,0.458,216,0.502,217,0.458,218,0.502,219,0.458,220,0.437,221,0.502,222,0.458,223,0.577,224,0.502,225,0.437,226,0.502,227,0.458,228,0.502,229,0.502,230,0.458,231,0.502,232,0.437,233,0.502,234,0.458,235,0.502,236,0.458,237,0.458,238,0.458,239,0.502,240,0.502,241,0.458,242,0.48,243,0.458,244,0.48,245,0.502,246,0.437,247,0.279,248,0.502,249,0.458,250,0.502,251,0.502,267,2.267,268,1.551,273,1.048,281,0.895,283,0.575,313,0.685,321,1.251,328,0.782,333,1.656,334,2.105,338,2.184,356,1.39,367,0.96,370,1.951,386,0.818,394,0.685,405,0.818,406,1.076,412,0.937,421,0.748,436,0.656,438,0.855,441,1.031,453,2.134,457,0.768,461,0.895,471,2.966,472,2.639,494,1.308,524,3.912,527,3.048,541,3.691,547,1.525,575,3.178,597,4.177,611,0.937,624,0.818,628,5.159,631,2.035,634,1.94,635,1.915,636,2.496,649,4.262,650,4.262,652,2.332,654,2.713,656,2.973,657,2.496,660,1.951,661,3.474,663,2.749,664,3.048,667,2.428,680,3.124,683,2.505,685,2.498,686,2.184,687,2.972,688,2.505,690,2.505,692,2.011,693,1.943,694,1.943,696,2.23,697,1.656,698,1.139,699,1.94,700,1.139,704,2.496,705,2.496,706,1.428,707,0.982,708,1.638,709,1.638,710,1.943,711,3.043,712,1.428,716,2.011,725,1.638,729,1.343,732,1.268,733,1.2,734,1.773,735,1.525,737,1.268,738,1.2,739,1.773,740,1.083,742,1.773,743,1.343,744,1.343,745,1.2,746,1.343,748,2.973,749,1.943,750,1.943,753,0.982,754,1.343,758,2.653,761,3.043,762,3,763,3.871,764,4.158,765,4.158,766,3.22,767,4.158,768,3.043,777,2.653,779,3.043,780,3.043,781,5.653,782,1.638,783,2.973,784,5.643,785,4.675,786,4.869,787,4.869,788,4.033,789,4.869,790,4.033,791,2.312,792,4.675,793,4.675,794,4.033,795,4.033,796,3.849,797,2.516,798,1.943,799,5.135,800,2.17,801,2.17,802,2.17,803,2.17,804,2.516,805,2.516,806,2.17,807,2.516,808,2.332,809,3.321,810,1.503,811,3.61,812,2.516,813,2.516,814,2.516,815,2.516,816,2.516,817,2.516,818,2.516,819,4.358,820,3.61,821,2.516,822,2.516,823,3.849,824,2.17,825,2.17,826,4.033,827,2.17,828,2.17,829,2.17,830,4.033,831,2.516,832,5.236,833,1.943,834,2.17,835,2.516,836,1.525,837,1.525,838,2.516,839,2.516,840,1.525,841,2.516,842,1.525,843,2.17,844,3.321,845,3.321,846,2.17,847,3.321,848,2.17,849,2.17]],["title/interfaces/CombinedObs.html",[0,0.339,850,2.683]],["body/interfaces/CombinedObs.html",[0,0.426,2,1.487,3,0.214,4,0.19,5,0.166,7,0.342,9,0.398,10,0.502,16,0.018,17,2.082,18,0.554,36,0.294,42,2.282,43,0.19,45,1.968,50,0.214,51,0.613,55,1.261,58,0.82,62,1.43,124,2.554,125,2.554,154,2.472,165,0.013,166,0.013,192,0.432,247,0.239,257,4.01,315,2.589,326,1.442,327,1.518,335,4.256,339,3.114,353,2.411,453,2.298,456,3.931,488,2.554,670,3.931,697,2.599,698,3.435,707,1.868,716,3.265,756,3.931,762,3.044,850,4.664,851,3.371,852,3.371,853,6.039,854,4.664,855,2.474,856,4.899,857,5.71,858,5.387,859,3.336,860,4.127,861,4.127,862,4.127,863,5.369,864,4.664,865,5.21,866,5.21,867,4.784,868,3.114,869,3.224,870,4.784,871,2.282,872,1.868,873,2.899,874,4.127,875,3.371,876,3.114,877,3.931,878,5.21,879,3.695,880,4.127,881,2.881,882,2.554,883,4.127,884,3.695,885,2.411,886,4.127,887,5.21,888,4.127,889,4.127,890,4.127,891,4.127,892,3.695,893,4.127,894,4.127,895,4.127,896,4.127,897,4.127]],["title/components/ConfirmEmailComponent.html",[38,0.024,202,0.661]],["body/components/ConfirmEmailComponent.html",[3,0.164,4,0.146,5,0.127,7,0.263,9,0.306,10,0.422,16,0.018,18,0.549,23,0.796,24,3.075,27,1.309,28,3.426,31,1.435,35,2.184,36,0.292,37,0.638,38,0.036,41,0.523,43,0.201,45,1.509,48,0.987,49,1.25,50,0.164,51,0.731,52,1.296,58,0.421,71,1.25,75,0.923,76,0.881,77,0.881,78,0.967,79,1.367,80,1.24,81,0.35,82,0.183,83,0.638,85,2.421,86,0.801,96,1.37,106,1.387,115,0.608,117,0.397,120,0.827,136,0.881,145,0.701,160,1.37,165,0.011,166,0.011,167,0.669,168,0.734,169,0.638,171,1.502,180,0.734,181,0.881,182,0.923,183,0.734,184,1.25,185,0.734,186,0.827,187,0.734,188,0.669,189,0.734,190,1.087,191,0.581,192,0.487,193,0.734,194,0.669,195,0.734,196,1.013,197,0.669,198,0.76,199,1.16,200,0.669,201,1.16,202,1.087,203,1.057,204,0.669,205,0.734,206,0.669,207,0.701,208,0.734,209,0.669,210,0.734,211,0.669,212,0.734,213,0.669,214,0.734,215,0.669,216,0.734,217,0.669,218,0.734,219,0.669,220,0.638,221,0.734,222,0.669,223,0.76,224,0.734,225,0.638,226,0.734,227,0.669,228,0.734,229,0.734,230,0.669,231,0.734,232,0.638,233,0.734,234,0.669,235,0.734,236,0.669,237,0.669,238,0.669,239,0.734,240,0.734,241,0.669,242,0.701,243,0.669,244,0.701,245,0.734,246,0.638,247,0.304,248,0.734,249,0.669,250,0.734,251,0.734,273,1.382,281,1.308,283,0.84,313,1.986,321,1.649,328,1.143,331,2.88,333,2.184,334,2.368,356,1.509,359,3.314,386,1.195,394,1.001,399,2.88,401,1.89,406,1.253,419,1.649,436,0.958,438,1.25,441,1.506,453,1.093,457,1.013,471,2.184,473,2.847,481,3.075,494,1.25,507,4.378,608,1.805,611,2.165,624,1.195,630,2.228,635,2.38,637,3.577,645,5.672,658,4.416,667,2.829,692,2.5,699,2.558,700,1.664,701,2.591,716,2.184,729,1.963,730,3.172,731,3.172,732,1.853,733,1.754,734,2.591,735,2.228,742,4.416,744,1.963,745,1.754,746,1.963,747,3.172,752,3.172,753,1.435,754,1.963,756,4.424,771,4.378,772,4.378,773,3.303,774,4.378,775,4.378,898,5.25,899,5.865,900,2.88,901,5.075,902,4.378,903,5.075,904,3.677,905,3.172,906,3.172,907,2.709,908,5.075,909,3.677,910,3.677]],["title/interfaces/ControlProperties.html",[0,0.339,911,2.683]],["body/interfaces/ControlProperties.html",[0,0.415,2,1.447,3,0.208,4,0.185,5,0.161,7,0.333,9,0.387,10,0.604,16,0.018,18,0.562,25,1.689,36,0.288,43,0.185,45,2.114,50,0.208,51,0.663,55,1.543,58,0.832,62,1.451,73,2.432,148,1.845,154,2.788,162,3.031,165,0.013,166,0.013,247,0.185,267,2.362,315,2.853,326,1.417,327,1.297,433,3.119,481,2.822,505,2.643,608,2.325,663,2.004,664,2.222,670,4.254,677,2.108,697,2.555,716,3.314,851,3.282,852,3.282,856,4.851,858,5.207,859,3.294,860,4.018,861,4.018,862,4.018,863,4.585,864,4.585,869,2.486,871,3.119,875,3.282,879,3.597,881,3.284,882,3.49,884,3.597,911,5.271,912,4.585,913,6.374,914,5.639,915,5.122,916,5.122,917,5.122,918,5.122,919,3.597,920,4.018,921,4.018,922,4.018,923,4.018,924,2.108,925,3.597,926,4.018,927,2.822,928,4.018,929,2.643,930,4.018,931,3.597,932,2.822,933,5.122,934,4.018,935,4.018,936,4.018,937,5.122,938,4.018,939,4.018,940,4.018,941,4.018,942,4.018,943,4.018,944,4.018]],["title/interfaces/ControlStruct.html",[0,0.339,945,2.683]],["body/interfaces/ControlStruct.html",[0,0.417,2,1.455,3,0.209,4,0.185,5,0.162,7,0.335,9,0.389,10,0.495,16,0.018,18,0.55,20,2.499,23,0.475,25,1.695,36,0.293,43,0.185,45,2.199,50,0.308,51,0.665,58,0.846,60,1.197,62,1.308,81,0.446,96,2.44,118,1.564,124,3.18,125,3.18,126,3.18,154,2.727,165,0.013,166,0.013,167,1.084,175,3.498,192,0.426,203,0.666,283,1.36,313,1.275,315,1.744,364,2.499,367,1.486,398,1.744,401,1.744,403,4.198,412,1.744,417,3.589,453,2.248,463,5.06,505,2.657,519,3.299,660,1.744,661,3.002,663,2.563,670,3.047,680,2.842,687,2.657,697,2.563,698,2.119,703,2.837,704,2.499,705,3.498,706,3.914,707,2.325,716,3.396,737,3.002,760,3.615,856,3.299,858,4.198,859,3.002,871,2.233,873,2.837,931,4.6,932,2.837,945,5.019,946,3.615,947,3.615,948,3.61,949,5.139,950,3.877,951,5.95,952,4.681,953,4.6,954,4.6,955,3.615,956,3.615,957,4.681,958,4.038,959,3.615,960,4.038,961,4.038,962,3.877,963,3.299,964,4.198,965,4.038,966,5.139,967,4.038,968,2.837,969,5.652,970,4.681,971,4.681,972,2.014,973,4.038,974,4.038,975,4.038,976,4.038]],["title/components/DashboardComponent.html",[38,0.024,204,0.693]],["body/components/DashboardComponent.html",[3,0.208,4,0.184,5,0.161,9,0.387,10,0.493,15,1.11,16,0.018,18,0.505,23,0.472,36,0.293,37,0.807,38,0.041,41,0.662,43,0.184,48,1.083,49,1.58,50,0.208,51,0.663,58,0.532,75,1.079,76,1.029,77,1.029,78,1.13,79,1.387,80,1.259,81,0.443,82,0.232,83,0.807,86,0.704,106,1.559,115,0.769,117,0.501,120,0.662,165,0.013,166,0.013,167,0.846,168,0.928,169,0.807,171,1.354,180,0.928,181,1.029,182,1.079,183,0.928,184,1.373,185,0.928,186,1.09,187,0.928,188,0.846,189,0.928,190,0.807,191,0.532,192,0.333,193,0.928,194,0.846,195,0.928,196,1.184,197,0.846,198,0.889,199,1.303,200,0.846,201,1.303,202,0.807,203,0.662,204,1.252,205,0.928,206,0.846,207,0.886,208,0.928,209,0.846,210,0.928,211,0.846,212,0.928,213,0.846,214,0.928,215,0.846,216,0.928,217,0.846,218,0.928,219,0.846,220,0.807,221,0.928,222,0.846,223,0.889,224,0.928,225,0.807,226,0.928,227,0.846,228,0.928,229,0.928,230,0.846,231,0.928,232,0.807,233,0.928,234,0.846,235,0.928,236,0.846,237,0.846,238,0.846,239,0.928,240,0.928,241,0.846,242,0.886,243,0.846,244,0.886,245,0.928,246,0.807,247,0.259,248,0.928,249,0.846,250,0.928,251,0.928,326,1.416,327,1.427,406,1.13,457,1.184,622,2.109,624,1.511,635,2.675,692,2.552,699,2.989,735,2.817,869,2.482,977,4.011,978,4.58,979,5.931,980,5.931,981,5.931,982,4.649,983,4.011,984,4.011,985,4.649,986,5.931]],["title/components/DeleteAccountComponent.html",[38,0.024,206,0.693]],["body/components/DeleteAccountComponent.html",[3,0.126,4,0.112,5,0.098,7,0.202,9,0.234,10,0.348,16,0.018,18,0.572,23,0.425,25,1.578,27,0.875,31,1.636,35,2.55,36,0.285,37,0.489,38,0.031,41,0.401,43,0.166,45,2.009,46,2.154,47,0.734,48,0.873,49,0.957,50,0.126,51,0.785,52,1.226,55,1.045,58,0.711,60,0.727,71,0.957,74,1.717,75,0.763,76,0.727,77,0.727,78,0.799,79,1.339,80,1.215,81,0.399,82,0.14,83,0.489,86,0.839,88,1.028,92,2.388,96,1.049,100,1.717,106,1.195,115,0.466,117,0.304,118,1.826,120,0.401,122,1.504,123,1.275,127,1.419,136,0.727,145,0.954,154,1.78,158,1.249,160,1.049,164,1.985,165,0.009,166,0.009,167,0.512,168,0.562,169,0.489,171,1.659,180,0.562,181,1.117,182,1.078,183,0.562,184,1.106,185,0.562,186,0.713,187,0.562,188,0.512,189,0.562,190,0.962,191,0.48,192,0.473,193,0.562,194,0.512,195,0.562,196,0.836,197,0.512,198,0.628,199,0.999,200,0.512,201,0.999,202,0.489,203,0.401,204,0.512,205,0.562,206,1.009,207,1.361,208,0.562,209,0.512,210,0.562,211,0.512,212,0.562,213,0.512,214,0.562,215,0.512,216,0.562,217,0.512,218,0.562,219,0.512,220,0.489,221,0.562,222,0.512,223,0.628,224,0.562,225,0.489,226,0.562,227,0.512,228,0.562,229,0.562,230,0.512,231,0.562,232,0.489,233,0.562,234,0.512,235,0.562,236,0.512,237,0.512,238,0.512,239,0.562,240,0.562,241,0.512,242,0.537,243,0.512,244,0.537,245,0.562,246,0.489,247,0.297,248,0.562,249,0.512,250,0.562,251,0.562,268,1.092,273,1.141,281,1.002,283,1.143,284,1.972,313,0.767,321,1.362,328,0.875,334,2.187,356,1.246,358,1.154,362,2.659,370,2.065,386,0.915,394,0.767,405,0.915,406,1.13,412,1.049,421,0.837,428,2.378,436,0.734,438,0.957,441,1.154,453,2.009,457,0.836,461,1.002,471,2.386,472,2.112,483,2.175,486,1.504,494,1.424,508,3.237,524,3.526,527,2,542,2.794,547,1.707,562,3.616,575,2.238,597,3.36,608,1.491,611,1.049,624,0.915,631,1.842,632,3.616,635,2.05,636,2.672,643,4.577,644,3.866,649,3.858,650,3.858,651,3.866,656,3.237,657,1.504,660,1.561,661,2.794,663,1.803,664,2,667,2.55,676,4.783,680,2.388,683,2.728,685,2.645,686,2.378,687,3.146,688,2.728,690,2.728,692,2.154,693,2.175,694,2.175,696,2.388,697,1.803,698,1.275,699,2.112,700,1.275,704,2.238,705,1.504,706,1.598,707,1.099,716,1.212,721,2.175,722,2.175,723,3.237,725,1.833,729,1.504,732,1.419,733,1.344,734,1.985,735,1.707,737,1.419,738,1.344,739,1.985,740,1.212,742,1.985,743,1.504,744,2.238,745,2,746,2.238,748,3.237,749,2.175,750,2.175,753,1.099,754,1.504,758,1.598,761,1.833,762,2.112,763,2.54,764,2.728,765,2.728,766,2.112,767,2.728,768,1.833,777,1.598,779,1.833,780,1.833,791,2.428,808,2.54,809,3.616,810,1.636,836,1.707,837,1.707,840,1.707,842,1.707,950,3.608,987,5.65,988,5.65,989,2.175,990,5.544,991,4.783,992,5.544,993,5.932,994,4.191,995,4.191,996,6.213,997,4.191,998,5.005,999,5.005,1000,5.544,1001,4.191,1002,5.544,1003,4.191,1004,2.816,1005,5.005,1006,5.113,1007,4.191,1008,2.816,1009,2.728,1010,2.816,1011,3.237,1012,4.191,1013,2.816,1014,2.816,1015,3.616,1016,2.816,1017,2.816,1018,2.816,1019,3.866,1020,2.816,1021,2.816,1022,2.816,1023,2.816,1024,2.816,1025,2.43,1026,3.237,1027,2.816,1028,1.504,1029,2.175,1030,2.816,1031,4.191,1032,4.191,1033,2.816,1034,2.816,1035,2.816,1036,2.816,1037,2.816,1038,2.816,1039,2.816,1040,2.816,1041,4.191,1042,3.616,1043,5.544,1044,4.191,1045,4.191,1046,4.191,1047,4.191]],["title/components/FooterComponent.html",[38,0.024,209,0.693]],["body/components/FooterComponent.html",[3,0.2,4,0.177,5,0.155,7,0.32,9,0.371,10,0.481,16,0.017,18,0.345,23,0.453,25,1.928,31,2.256,36,0.254,37,0.775,38,0.04,43,0.177,47,1.164,48,0.703,50,0.2,51,0.65,55,0.933,60,1.003,75,1.233,76,1.003,77,1.003,78,1.102,79,1.384,80,1.256,81,0.425,82,0.223,83,0.775,86,0.691,115,0.739,117,0.482,120,0.636,158,1.114,165,0.013,166,0.013,167,0.813,168,0.891,169,0.775,171,1.02,180,0.891,181,1.003,182,1.052,183,0.891,184,1.352,185,0.891,186,0.823,187,0.891,188,0.813,189,0.891,190,0.775,191,0.511,192,0.32,193,0.891,194,0.813,195,1.279,196,1.153,197,0.813,198,1.015,199,1.279,200,0.813,201,1.279,202,0.775,203,0.636,204,0.813,205,0.891,206,0.813,207,0.851,208,0.891,209,1.233,210,0.891,211,0.813,212,0.891,213,0.813,214,0.891,215,0.813,216,0.891,217,0.813,218,0.891,219,0.813,220,0.775,221,0.891,222,0.813,223,0.866,224,0.891,225,0.775,226,0.891,227,0.813,228,1.279,229,0.891,230,0.813,231,0.891,232,0.775,233,0.891,234,0.813,235,0.891,236,0.813,237,0.813,238,0.813,239,0.891,240,0.891,241,0.813,242,1.221,243,0.813,244,1.221,245,0.891,246,0.775,247,0.177,248,0.891,249,0.813,250,0.891,251,0.891,256,2.758,267,1.878,346,2.153,430,4.073,448,4.073,457,1.153,608,2.056,609,4.986,611,2.153,618,4.464,620,2.279,622,2.056,624,1.451,972,2.487,1048,3.853,1049,4.073,1050,5.846,1051,4.464,1052,4.073,1053,3.502,1054,5.552,1055,4.464,1056,4.949,1057,5.78,1058,5.78,1059,7.018,1060,4.08,1061,4.466,1062,2.256,1063,6.776,1064,4.986,1065,4.464,1066,3.502,1067,5.78,1068,5.78,1069,3.449,1070,5.78,1071,4.464,1072,3.853,1073,4.464]],["title/components/ForgotPasswordComponent.html",[38,0.024,211,0.693]],["body/components/ForgotPasswordComponent.html",[3,0.155,4,0.138,5,0.12,7,0.249,9,0.289,10,0.405,16,0.018,18,0.557,23,0.792,27,1.019,31,1.356,35,2.63,36,0.286,37,0.603,38,0.035,41,0.494,43,0.193,45,2.039,47,0.905,48,0.963,49,1.18,50,0.155,51,0.78,52,1.165,58,0.558,60,0.846,62,0.973,74,1.998,75,0.887,76,0.846,77,0.846,78,0.93,79,1.361,80,1.235,81,0.331,82,0.173,83,0.603,86,0.83,88,0.932,100,1.423,106,1.346,115,0.932,117,0.74,118,1.721,120,0.494,127,1.75,136,0.846,145,0.662,154,2.005,165,0.011,166,0.011,167,0.632,168,0.693,169,0.603,171,1.625,180,0.693,181,1.061,182,1.026,183,0.693,184,1.22,185,0.693,186,0.694,187,0.693,188,0.632,189,0.693,190,1.061,191,0.737,192,0.438,193,0.693,194,0.632,195,0.693,196,0.973,197,0.632,198,0.731,199,1.125,200,0.632,201,1.125,202,0.603,203,0.494,204,0.632,205,0.693,206,0.632,207,0.662,208,0.693,209,0.632,210,0.693,211,1.112,212,1.285,213,0.632,214,0.693,215,0.632,216,0.693,217,0.632,218,0.693,219,0.632,220,0.603,221,0.693,222,0.632,223,0.731,224,0.693,225,0.603,226,0.693,227,0.632,228,0.693,229,0.693,230,0.632,231,0.693,232,0.603,233,0.693,234,0.632,235,0.693,236,0.632,237,0.632,238,0.632,239,0.693,240,0.693,241,0.632,242,0.662,243,0.632,244,0.662,245,0.693,246,0.603,247,0.138,248,0.693,249,0.632,250,0.693,251,0.693,273,1.328,283,0.793,313,1.906,320,2.448,321,1.129,328,1.079,333,2.099,334,2.331,351,2.425,352,1.423,356,1.45,359,2.458,362,2.174,366,3.437,367,0.866,386,1.129,394,0.946,401,1.817,405,1.129,406,1.074,412,1.294,421,1.033,424,2.956,436,0.905,437,2.448,438,1.18,441,1.423,453,2.144,457,0.973,461,1.235,471,2.63,484,3.174,524,3.469,545,5.274,620,2.005,631,2.075,636,3.01,652,3.704,657,3.438,658,4.308,661,3.081,663,2.099,664,2.327,667,2.771,680,2.69,696,2.917,697,2.099,698,1.572,700,1.572,703,2.956,706,1.971,707,1.356,716,1.494,729,1.854,737,1.75,738,1.657,743,1.854,744,1.854,745,1.657,746,1.854,753,1.356,754,1.854,758,1.971,759,2.682,777,1.971,778,2.682,782,2.26,783,3.767,791,2.638,798,3.767,808,2.956,810,1.904,836,2.105,837,2.105,840,2.105,842,2.105,1074,5.568,1075,5.568,1076,5.555,1077,4.863,1078,4.863,1079,5.637,1080,3.473,1081,4.877,1082,3.767,1083,4.208,1084,3.473,1085,3.473,1086,2.996,1087,2.956,1088,2.996,1089,3.473,1090,4.353,1091,2.996,1092,2.682,1093,2.996,1094,2.996,1095,2.996,1096,2.996,1097,4.208,1098,3.473,1099,3.473,1100,3.473]],["title/components/HeaderComponent.html",[38,0.024,213,0.693]],["body/components/HeaderComponent.html",[3,0.175,4,0.155,5,0.135,7,0.28,9,0.325,10,0.44,16,0.018,18,0.535,23,0.608,36,0.28,37,0.678,38,0.038,43,0.21,45,1.162,47,1.018,48,0.615,50,0.175,51,0.741,55,1.252,58,0.605,71,1.328,75,0.962,76,0.918,77,0.918,78,1.008,79,1.372,80,1.246,81,0.372,82,0.299,83,0.678,85,2.861,86,0.823,115,0.646,117,0.421,118,1.263,120,0.556,158,1.496,165,0.012,166,0.012,167,0.711,168,0.78,169,0.678,171,1.581,180,0.78,181,0.918,182,0.962,183,0.78,184,1.283,185,0.78,186,0.854,187,0.78,188,0.711,189,0.78,190,0.678,191,0.447,192,0.28,193,0.78,194,0.711,195,0.78,196,1.056,197,0.711,198,1.037,199,1.197,200,0.711,201,1.197,202,0.678,203,0.556,204,0.711,205,0.78,206,0.711,207,1.143,208,0.78,209,0.711,210,0.78,211,0.711,212,0.78,213,1.169,214,0.78,215,0.711,216,0.78,217,0.711,218,0.78,219,0.711,220,0.678,221,0.78,222,0.711,223,0.792,224,0.78,225,0.678,226,0.78,227,0.711,228,0.78,229,0.78,230,0.711,231,0.78,232,0.678,233,0.78,234,0.711,235,0.78,236,0.711,237,0.711,238,0.711,239,0.78,240,0.78,241,0.711,242,1.143,243,0.711,244,0.745,245,0.78,246,0.678,247,0.297,248,0.78,249,0.711,250,0.78,251,0.78,253,3.728,266,3.002,273,1.44,281,1.389,283,1.208,284,2.286,362,2.561,427,3.647,457,1.056,494,1.798,608,1.881,611,1.97,619,3.903,620,2.133,622,1.881,624,1.269,626,3.205,627,2.276,634,2.666,663,2.276,667,2.58,762,2.666,769,4.085,881,3.482,882,2.085,1051,4.085,1101,3.37,1102,4.963,1103,5.832,1104,5.289,1105,5.997,1106,5.289,1107,5.289,1108,5.997,1109,6.923,1110,6.923,1111,5.289,1112,6.426,1113,5.289,1114,3.906,1115,3.906,1116,5.289,1117,6.715,1118,5.997,1119,5.289,1120,3.906,1121,5.289,1122,3.906,1123,6.426,1124,2.166,1125,6.923,1126,3.205,1127,3.906,1128,5.289,1129,5.289,1130,6.715,1131,3.906,1132,5.289,1133,4.085,1134,3.906,1135,3.906,1136,4.563,1137,4.563,1138,3.37,1139,3.37,1140,3.37,1141,3.37,1142,5.289,1143,3.906,1144,3.906,1145,3.906,1146,3.906,1147,3.906,1148,2.666,1149,2.394,1150,2.824,1151,4.563]],["title/components/LoginComponent.html",[38,0.024,215,0.693]],["body/components/LoginComponent.html",[3,0.135,4,0.12,5,0.105,7,0.216,9,0.251,10,0.367,16,0.018,18,0.575,20,3.512,23,0.762,25,1.631,27,1.197,31,1.178,35,1.298,36,0.277,37,0.524,38,0.033,41,0.43,42,2.486,43,0.175,44,3.392,45,2.107,46,2.242,47,0.786,48,0.903,49,1.025,50,0.135,51,0.798,55,1.197,58,0.505,60,0.765,70,2.354,74,2.348,75,0.802,76,0.765,77,0.765,78,0.841,79,1.347,80,1.222,81,0.287,82,0.15,83,0.524,84,2.354,86,0.846,88,1.053,92,2.486,100,1.236,106,1.244,115,0.499,117,0.325,118,1.838,120,0.43,123,1.996,127,1.521,136,0.765,145,0.841,154,2.265,155,2.87,156,1.149,157,2.223,158,1.589,159,3.108,160,1.643,161,2.87,162,2.87,163,2.672,165,0.01,166,0.01,167,0.549,168,0.602,169,0.524,171,1.689,180,0.602,181,0.765,182,0.802,183,0.602,184,1.144,185,0.602,186,0.628,187,0.602,188,0.549,189,0.602,190,0.995,191,0.698,192,0.5,193,0.602,194,0.549,195,0.602,196,0.88,197,0.549,198,0.661,199,1.04,200,0.549,201,1.04,202,0.524,203,0.43,204,0.549,205,0.602,206,0.549,207,0.575,208,0.602,209,0.549,210,0.602,211,0.549,212,1.04,213,0.549,214,0.602,215,1.043,216,0.602,217,0.549,218,0.602,219,0.549,220,0.524,221,0.602,222,0.549,223,0.661,224,0.602,225,0.524,226,0.602,227,0.549,228,0.602,229,0.602,230,0.549,231,0.602,232,0.524,233,0.602,234,0.549,235,0.602,236,0.549,237,0.549,238,0.549,239,0.602,240,0.602,241,0.549,242,0.575,243,0.549,244,0.575,245,0.602,246,0.524,247,0.12,248,0.602,249,0.549,250,0.602,251,0.602,268,1.149,273,1.201,283,0.689,313,1.561,321,0.98,328,0.938,333,1.897,334,2.236,351,2.242,352,1.236,370,2.135,386,0.98,394,0.822,401,1.643,405,0.98,406,0.993,412,1.124,421,0.897,436,0.786,438,1.025,441,1.236,453,2.107,457,0.88,461,1.073,471,2.902,484,4.748,524,3.827,527,2.104,547,3.158,569,3.804,575,2.354,597,3.474,608,1.568,620,1.854,631,2.044,636,2.782,643,4.71,644,4.025,649,3.969,650,3.969,651,4.025,652,3.474,657,1.611,661,3.399,663,2.466,664,2.735,667,2.624,677,1.996,680,3.039,683,2.87,685,2.735,686,2.503,687,3.253,688,2.87,690,2.87,696,2.486,697,1.897,698,1.366,700,1.366,703,2.672,704,2.354,705,1.611,706,1.712,707,1.178,716,1.897,721,2.33,722,2.33,723,3.406,729,1.611,737,1.521,738,1.44,743,1.611,744,1.611,745,1.44,746,1.611,753,1.178,754,1.611,758,2.503,759,2.33,761,1.964,762,2.223,763,2.672,764,2.87,765,2.87,766,2.223,767,2.87,768,1.964,777,2.503,778,2.33,779,1.964,780,1.964,791,2.498,808,2.672,810,1.722,836,1.828,837,1.828,840,1.828,842,1.828,1076,5.261,1077,4.496,1078,4.496,1094,2.603,1095,2.603,1096,2.603,1097,3.804,1152,2.33,1153,4.409,1154,5.211,1155,4.409,1156,3.017,1157,3.017,1158,3.017,1159,3.017,1160,3.017,1161,3.017,1162,3.017,1163,3.017,1164,3.017,1165,4.025,1166,3.017,1167,3.017,1168,3.017,1169,3.017,1170,2.354,1171,3.017,1172,3.017,1173,3.017,1174,3.017,1175,3.017,1176,3.017,1177,3.017]],["title/components/LogoutComponent.html",[38,0.024,217,0.693]],["body/components/LogoutComponent.html",[3,0.19,4,0.168,5,0.147,7,0.304,9,0.353,10,0.465,16,0.017,18,0.514,23,0.431,35,2.407,36,0.274,37,0.737,38,0.039,41,0.605,43,0.222,45,1.263,46,2.691,47,1.107,48,1.047,49,1.443,50,0.19,51,0.753,52,1.066,55,1.306,65,1.923,75,1.018,76,0.971,77,0.971,78,1.066,79,1.38,80,1.252,81,0.404,82,0.212,83,0.737,86,0.765,88,1.173,92,2.984,100,2.291,115,0.702,117,0.458,120,0.605,123,2.532,136,0.971,145,1.066,155,2.764,156,1.107,157,2.141,158,1.723,160,2.083,164,2.993,165,0.012,166,0.012,167,0.773,168,0.848,169,0.737,171,1.518,180,0.848,181,0.971,182,1.018,183,0.848,184,1.326,185,0.848,186,0.796,187,0.848,188,0.773,189,0.848,190,0.737,191,0.76,192,0.304,193,0.848,194,0.773,195,0.848,196,1.116,197,0.773,198,0.838,199,1.248,200,0.773,201,1.248,202,0.737,203,0.605,204,0.773,205,0.848,206,0.773,207,0.81,208,0.848,209,0.773,210,0.848,211,0.773,212,0.848,213,0.773,214,0.848,215,0.773,216,0.848,217,1.209,218,0.848,219,0.773,220,0.737,221,0.848,222,0.773,223,0.838,224,0.848,225,0.737,226,0.848,227,0.773,228,0.848,229,0.848,230,0.773,231,0.848,232,0.737,233,0.848,234,0.773,235,0.848,236,0.773,237,0.773,238,0.773,239,0.848,240,0.848,241,0.773,242,0.81,243,0.773,244,0.81,245,0.848,246,0.737,247,0.274,248,0.848,249,0.773,250,0.848,251,0.848,255,4.319,256,2.669,267,2.16,273,1.523,283,0.97,321,1.38,351,2.691,352,2.291,356,1.663,387,2.291,406,1.192,457,1.116,542,2.819,620,2.224,631,1.738,667,2.691,733,2.026,769,4.319,810,2.183,929,3.174,978,3.28,1126,3.389,1151,6.718,1178,3.664,1179,5.593,1180,5.593,1181,5.334,1182,4.247,1183,2.532,1184,4.825,1185,5.593,1186,5.734,1187,4.247,1188,4.247,1189,4.247,1190,4.319,1191,4.825,1192,4.319,1193,4.247,1194,3.28,1195,4.247,1196,2.267,1197,4.247,1198,4.825,1199,4.247]],["title/components/PageNotFoundComponent.html",[38,0.024,219,0.693]],["body/components/PageNotFoundComponent.html",[3,0.176,4,0.156,5,0.137,7,0.283,9,0.328,10,0.443,16,0.018,18,0.499,23,0.401,36,0.275,37,0.685,38,0.046,41,0.562,43,0.211,47,1.029,48,0.622,50,0.238,51,0.612,55,1.113,58,0.61,75,0.969,76,0.925,77,0.925,78,1.016,79,1.373,80,1.246,81,0.376,82,0.197,83,0.685,86,0.749,88,1.149,100,2.182,115,0.653,117,0.426,120,0.562,124,2.108,125,2.108,126,2.108,158,1.329,160,1.984,165,0.012,166,0.012,167,0.969,168,0.788,169,0.685,171,1.474,180,0.788,181,1.12,182,0.969,183,0.788,184,1.288,185,0.788,186,0.858,187,0.788,188,0.718,189,0.788,190,0.685,191,0.452,192,0.283,193,0.788,194,0.718,195,0.788,196,1.063,197,0.718,198,0.798,199,1.203,200,0.718,201,1.203,202,0.685,203,0.562,204,0.718,205,0.788,206,0.718,207,0.753,208,0.788,209,0.718,210,0.788,211,0.718,212,0.788,213,0.718,214,0.788,215,0.718,216,0.788,217,0.718,218,0.788,219,1.174,220,1.304,221,0.788,222,0.718,223,0.798,224,0.788,225,0.685,226,0.788,227,0.718,228,0.788,229,0.788,230,0.718,231,0.788,232,0.685,233,0.788,234,0.718,235,0.788,236,0.718,237,0.718,238,0.718,239,0.788,240,0.788,241,0.718,242,0.753,243,0.718,244,0.753,245,0.788,246,0.685,247,0.156,248,0.788,249,0.718,250,0.788,251,0.788,273,1.451,283,1.217,284,2.296,286,5.569,287,2.241,288,4.115,289,3.229,387,2.182,417,3.5,423,2.292,457,1.063,575,2.845,619,3.925,620,2.145,622,1.895,624,1.283,711,3.468,871,2.542,962,2.57,972,2.292,978,4.115,1028,2.845,1149,2.412,1184,4.596,1186,4.596,1190,3.049,1198,4.596,1200,5.206,1201,5.206,1202,3.049,1203,5.328,1204,5.328,1205,3.229,1206,5.328,1207,4.596,1208,5.328,1209,6.74,1210,6.74,1211,5.328,1212,5.328,1213,6.03,1214,6.03,1215,6.455,1216,6.455,1217,3.948,1218,3.024,1219,5.328,1220,7.315,1221,5.328,1222,5.328,1223,3.948,1224,5.569,1225,5.202,1226,5.328,1227,5.202,1228,5.328,1229,2.845,1230,5.328,1231,5.328,1232,4.596,1233,5.328,1234,5.328,1235,5.328,1236,3.948,1237,3.024,1238,5.328,1239,5.328,1240,5.328,1241,5.328,1242,3.948,1243,5.328,1244,5.328,1245,4.596,1246,3.049,1247,3.406,1248,3.406,1249,2.241,1250,5.328,1251,3.948,1252,3.948,1253,5.328,1254,3.024,1255,5.328,1256,5.328,1257,5.328,1258,3.229,1259,3.468]],["title/interfaces/PasswordResetSuccess.html",[0,0.339,1260,2.16]],["body/interfaces/PasswordResetSuccess.html",[0,0.522,2,1.162,3,0.167,4,0.148,5,0.13,7,0.268,9,0.311,10,0.427,14,2.655,15,1.764,16,0.018,17,2.043,18,0.551,23,0.776,27,1.543,29,2.654,36,0.262,41,0.532,43,0.148,50,0.229,51,0.742,52,1.203,58,0.757,60,1.215,62,1.46,73,2.103,81,0.489,82,0.186,86,0.554,88,1.094,104,1.215,105,2.914,116,2.266,117,0.755,118,1.833,120,0.532,136,1.148,139,1.885,145,0.979,148,1.822,156,0.975,165,0.014,166,0.011,191,0.587,192,0.501,203,0.532,247,0.232,260,1.281,266,2.122,268,0.975,284,1.33,290,1.271,313,1.398,316,1.997,321,1.215,324,1.46,326,1.226,327,1.445,328,1.162,329,2.955,333,2.209,334,2.487,345,1.532,346,1.393,351,1.609,352,1.532,356,1.744,361,1.745,362,1.33,364,1.997,368,1.532,371,2.122,372,1.784,386,1.668,394,1.398,398,2.464,401,1.393,402,3.532,404,2.122,405,1.215,406,0.979,419,1.215,421,1.112,422,2.122,423,2.209,433,1.784,436,1.338,438,1.745,473,2.464,495,2.798,535,3.342,570,2.266,599,1.885,631,2.215,660,1.913,685,3.011,712,3.328,753,2.005,791,3.107,810,2.005,855,1.532,872,1.46,881,1.784,885,2.955,907,1.997,929,2.122,1062,1.46,1087,2.266,1183,3.093,1196,2.741,1205,2.266,1229,1.997,1260,3.582,1261,2.122,1262,2.122,1263,2.266,1264,4.132,1265,3.816,1266,4.132,1267,4.132,1268,4.132,1269,4.662,1270,2.636,1271,4.448,1272,2.636,1273,3.37,1274,2.266,1275,2.434,1276,2.122,1277,3.328,1278,3.111,1279,2.266,1280,2.434,1281,1.784,1282,2.636,1283,2.434,1284,3.111,1285,2.122,1286,2.636,1287,2.434,1288,2.636,1289,2.636,1290,3.619,1291,2.434,1292,2.636,1293,2.636,1294,2.636,1295,2.636,1296,2.636,1297,2.636,1298,4.448,1299,2.636,1300,2.636,1301,2.434,1302,2.636,1303,2.636,1304,2.636,1305,2.636,1306,2.636,1307,2.122,1308,1.997,1309,1.997,1310,2.434,1311,1.885,1312,2.636,1313,2.636,1314,2.266,1315,2.636,1316,2.636,1317,2.636,1318,4.132,1319,2.636,1320,2.636,1321,2.434,1322,2.636,1323,2.636,1324,2.636,1325,2.636,1326,2.636,1327,2.636,1328,2.636]],["title/interfaces/Photo.html",[0,0.339,223,0.57]],["body/interfaces/Photo.html",[0,0.519,2,1.148,3,0.165,4,0.146,5,0.258,7,0.264,9,0.307,10,0.423,15,1.572,16,0.018,17,1.387,18,0.485,21,3.582,25,1.051,27,0.771,36,0.261,41,0.526,43,0.146,50,0.281,51,0.721,52,1.298,55,0.771,58,0.874,60,1.143,62,1.016,65,2.637,74,1.513,81,0.352,82,0.184,86,0.628,88,0.964,96,1.376,106,0.882,117,0.398,130,2.404,136,0.884,139,2.566,145,0.97,153,1.763,156,0.963,157,1.862,165,0.011,166,0.011,169,1.233,223,1.02,247,0.202,260,1.27,268,1.637,282,1.862,284,1.811,290,1.256,297,2.404,298,2.097,324,1.442,326,1.215,327,1.487,354,3.53,356,1.099,358,1.513,361,1.73,367,0.922,370,2.339,372,1.763,376,2.274,380,1.972,384,2.89,387,2.085,400,2.239,405,1.654,419,1.893,449,2.239,461,1.314,472,1.862,486,1.972,488,1.972,527,1.763,542,1.862,598,2.239,599,1.862,601,3.635,605,1.513,606,3.588,631,1.148,660,1.896,740,1.59,766,1.862,773,2.404,855,1.513,872,1.442,877,2.404,885,3.165,900,2.097,907,1.972,924,2.305,927,2.239,948,3.085,972,2.191,1124,2.572,1148,3.516,1150,3.851,1183,1.672,1196,1.972,1218,2.097,1273,3.11,1307,2.89,1329,1.763,1330,2.097,1331,2.404,1332,4.849,1333,3.932,1334,3.588,1335,4.499,1336,3.932,1337,2.853,1338,2.853,1339,2.853,1340,4.106,1341,2.853,1342,2.853,1343,3.932,1344,3.932,1345,3.932,1346,3.932,1347,3.932,1348,2.853,1349,3.932,1350,4.125,1351,4.307,1352,2.853,1353,2.604,1354,3.314,1355,2.604,1356,2.853,1357,2.604,1358,2.239,1359,3.959,1360,2.239,1361,2.404,1362,4.106,1363,3.306,1364,3.724,1365,2.404,1366,2.404,1367,3.588,1368,2.404,1369,2.604,1370,2.239,1371,2.604,1372,2.604,1373,2.604,1374,2.404,1375,1.972,1376,3.792,1377,2.853,1378,2.853,1379,2.853,1380,2.853,1381,2.604,1382,2.239,1383,2.853,1384,2.853,1385,3.932,1386,4.798,1387,2.604,1388,3.588,1389,2.853,1390,2.853,1391,2.853,1392,3.932,1393,2.853,1394,2.853,1395,2.853,1396,2.853,1397,2.604,1398,2.853,1399,2.853,1400,2.853,1401,2.853,1402,2.853,1403,2.604,1404,2.853,1405,2.853,1406,2.853,1407,2.853,1408,3.932,1409,2.853,1410,2.853,1411,2.853,1412,3.932,1413,2.853,1414,2.853,1415,1.763,1416,2.853,1417,3.314,1418,2.853,1419,2.853,1420,2.097,1421,2.853,1422,2.853,1423,2.853,1424,2.853,1425,3.932,1426,2.853,1427,1.862,1428,2.404,1429,2.853,1430,2.853,1431,2.853,1432,2.853,1433,2.853,1434,2.853,1435,2.853,1436,2.853,1437,2.853,1438,2.853,1439,2.853,1440,2.853,1441,2.853,1442,2.853,1443,2.853,1444,2.853,1445,2.853,1446,2.853,1447,2.604,1448,3.932,1449,2.853,1450,2.853,1451,3.085,1452,2.097,1453,2.604,1454,2.604,1455,2.853,1456,2.404,1457,2.853,1458,1.972,1459,2.853,1460,2.853,1461,2.853,1462,2.853,1463,2.853,1464,2.853,1465,2.853,1466,2.853,1467,2.853,1468,3.932,1469,2.853,1470,2.604,1471,2.853,1472,1.763,1473,2.853,1474,2.853,1475,2.853,1476,2.853,1477,2.853,1478,2.853]],["title/components/PhotoManagerComponent.html",[38,0.024,222,0.693]],["body/components/PhotoManagerComponent.html",[3,0.224,4,0.199,5,0.174,16,0.017,23,0.509,36,0.199,37,0.871,38,0.042,43,0.199,48,0.79,50,0.224,75,1.132,76,1.08,77,1.08,78,0.956,79,1.393,80,1.264,81,0.478,82,0.25,83,0.871,115,0.83,117,0.541,120,0.714,131,3.77,165,0.014,166,0.014,167,0.913,168,1.001,169,0.871,180,1.001,181,1.08,182,1.132,183,1.001,184,1.411,185,1.001,186,0.886,187,1.001,188,0.913,189,1.001,190,0.871,191,0.574,192,0.359,193,1.001,194,0.913,195,1.001,196,1.242,197,0.913,198,0.932,199,1.35,200,0.913,201,1.35,202,0.871,203,0.714,204,0.913,205,1.001,206,0.913,207,0.956,208,1.001,209,0.913,210,1.001,211,0.913,212,1.001,213,0.913,214,1.001,215,0.913,216,1.001,217,0.913,218,1.001,219,0.913,220,0.871,221,1.001,222,1.286,223,1.154,224,1.001,225,0.871,226,1.001,227,0.913,228,1.001,229,1.001,230,0.913,231,1.001,232,0.871,233,1.001,234,0.913,235,1.001,236,0.913,237,0.913,238,0.913,239,1.001,240,1.001,241,0.913,242,0.956,243,0.913,244,0.956,245,1.001,246,0.871,247,0.199,248,1.001,249,0.913,250,1.001,251,1.001,457,1.242,622,2.213,1329,2.394,1479,3.04,1480,4.328,1481,4.328,1482,7.071,1483,6.222,1484,6.222]],["title/components/PhotoUploadComponent.html",[38,0.024,225,0.661]],["body/components/PhotoUploadComponent.html",[3,0.16,4,0.142,5,0.215,7,0.256,9,0.298,10,0.414,16,0.018,18,0.572,23,0.363,36,0.274,37,0.621,38,0.045,41,0.51,42,2.377,43,0.197,44,4.502,45,1.704,47,0.933,48,0.564,50,0.16,51,0.775,52,1.181,55,1.36,58,0.57,75,0.906,76,0.865,77,0.865,78,0.95,79,1.364,80,1.238,81,0.474,82,0.178,83,0.621,86,0.821,87,3.511,88,1.115,106,1.368,115,0.592,117,0.386,120,0.51,148,1.548,158,1.429,165,0.011,166,0.011,167,0.651,168,0.714,169,0.621,170,3.848,171,1.674,175,2.66,180,0.714,181,0.994,182,0.906,183,0.714,184,1.236,185,0.714,186,0.709,187,0.714,188,0.651,189,0.714,190,0.621,191,0.41,192,0.256,193,0.714,194,0.651,195,0.714,196,0.994,197,0.651,198,0.746,199,1.143,200,0.651,201,1.143,202,0.621,203,0.51,204,0.651,205,0.714,206,0.651,207,0.682,208,0.714,209,0.651,210,0.714,211,0.651,212,0.714,213,0.651,214,0.714,215,0.651,216,0.714,217,0.651,218,0.714,219,0.651,220,0.621,221,0.714,222,0.651,223,1.108,224,0.714,225,1.075,226,0.714,227,0.651,228,0.714,229,0.714,230,0.651,231,0.714,232,0.621,233,0.714,234,0.651,235,0.714,236,0.651,237,0.651,238,0.651,239,0.714,240,0.714,241,0.651,242,0.682,243,0.651,244,0.682,245,0.714,246,0.621,247,0.287,248,0.714,249,0.651,250,0.714,251,0.714,267,2.191,273,1.357,283,1.138,284,2.038,289,3.019,326,0.855,327,1.252,345,2.041,358,1.466,370,2.576,402,1.911,405,1.619,406,0.95,457,0.994,472,2.511,542,2.511,601,2.511,620,2.038,622,1.772,624,1.163,635,2.347,686,3.516,745,2.377,872,1.945,991,4.298,1025,3.089,1026,3.848,1028,1.911,1049,3.511,1062,1.945,1065,3.848,1148,2.511,1149,2.255,1150,3.307,1310,3.243,1329,3.528,1340,3.511,1350,4.442,1351,3.946,1358,3.019,1359,3.252,1360,3.472,1363,3.696,1364,3.059,1375,3.059,1381,4.038,1382,3.019,1386,4.589,1397,2.523,1451,3.019,1479,4.481,1485,4.813,1486,2.765,1487,4.982,1488,4.982,1489,5.73,1490,4.425,1491,7.163,1492,6.512,1493,6.195,1494,5.73,1495,4.982,1496,4.982,1497,5.816,1498,4.982,1499,3.472,1500,3.58,1501,4.982,1502,3.58,1503,3.58,1504,4.982,1505,3.58,1506,3.848,1507,3.58,1508,3.58,1509,4.982,1510,4.982,1511,4.982,1512,3.848,1513,3.089,1514,2.765,1515,3.58,1516,3.58,1517,3.58,1518,3.58,1519,4.982]],["title/components/PrivacyPolicyComponent.html",[38,0.024,227,0.693]],["body/components/PrivacyPolicyComponent.html",[3,0.114,4,0.187,5,0.089,7,0.183,16,0.017,19,2.212,23,0.577,25,1.827,27,0.814,31,1.521,36,0.154,37,0.444,38,0.03,43,0.101,47,0.667,48,0.403,50,0.114,62,0.778,66,1.964,73,1.596,75,0.709,76,0.676,77,0.676,78,0.743,79,1.327,80,1.204,81,0.243,82,0.127,83,0.444,86,0.42,115,0.423,117,0.276,120,0.364,165,0.008,166,0.008,167,0.465,168,0.51,169,0.444,175,2.819,180,0.51,181,0.676,182,0.709,183,0.51,184,1.054,185,0.51,186,0.752,187,0.51,188,0.465,189,0.51,190,0.444,191,0.293,192,0.183,193,0.51,194,0.465,195,0.51,196,0.778,197,0.465,198,0.584,199,0.942,200,0.465,201,0.942,202,0.444,203,0.364,204,0.465,205,0.51,206,0.465,207,1.3,208,0.51,209,0.465,210,0.51,211,0.465,212,0.51,213,0.465,214,0.51,215,0.465,216,0.51,217,0.465,218,0.51,219,0.465,220,0.819,221,0.51,222,0.465,223,0.584,224,0.51,225,0.444,226,0.51,227,0.961,228,1.511,229,0.51,230,0.465,231,0.51,232,0.444,233,0.51,234,0.465,235,0.51,236,0.465,237,0.465,238,0.465,239,0.51,240,0.51,241,0.465,242,0.487,243,0.465,244,0.487,245,0.51,246,0.444,247,0.247,248,0.51,249,0.465,250,0.51,251,0.51,256,3.063,257,2.362,268,1.377,289,2.362,313,1.061,362,2.13,367,1.796,375,4.179,376,2.62,381,2.537,412,1.452,414,1.764,415,2.537,419,1.266,427,2.212,428,2.212,443,3.362,448,2.747,457,0.778,471,1.677,473,1.521,481,2.362,494,2.351,509,3.722,514,6.009,529,4.078,531,3.644,537,4.525,551,4.959,575,2.081,577,3.362,578,4.556,581,4.078,598,2.362,601,1.964,605,3.242,608,2.13,617,2.081,620,1.68,626,4.574,634,2.662,658,2.747,677,1.764,707,1.521,738,1.859,854,3.01,875,2.747,876,4.368,900,2.997,924,1.764,972,1.677,1052,4.221,1071,5.748,1082,3.01,1087,2.362,1092,3.01,1133,3.01,1148,1.964,1149,3.038,1170,2.081,1218,2.997,1229,3.428,1237,3.399,1254,2.212,1258,3.63,1281,2.858,1291,2.537,1308,2.081,1354,2.537,1387,2.747,1427,1.964,1452,2.212,1497,3.362,1520,2.206,1521,2.206,1522,2.206,1523,1.964,1524,4.556,1525,3.897,1526,6.766,1527,5.281,1528,3.897,1529,2.212,1530,3.897,1531,3.897,1532,3.897,1533,3.897,1534,5.167,1535,3.897,1536,3.897,1537,3.897,1538,5.281,1539,3.362,1540,3.897,1541,3.362,1542,2.362,1543,3.01,1544,3.897,1545,3.897,1546,3.897,1547,3.897,1548,5.281,1549,2.557,1550,3.897,1551,2.557,1552,2.557,1553,2.557,1554,2.557,1555,2.557,1556,3.362,1557,2.537,1558,5.281,1559,3.897,1560,4.626,1561,5.99,1562,5.167,1563,3.01,1564,3.362,1565,3.897,1566,3.897,1567,5.789,1568,3.897,1569,3.362,1570,4.556,1571,3.362,1572,5.281,1573,3.897,1574,5.281,1575,3.01,1576,3.897,1577,3.897,1578,3.897,1579,3.897,1580,4.556,1581,3.362,1582,4.556,1583,3.897,1584,3.897,1585,3.897,1586,3.897,1587,3.897,1588,3.897,1589,4.556,1590,3.897,1591,5.281,1592,6.918,1593,3.362,1594,3.362,1595,3.897,1596,5.281,1597,3.897,1598,3.897,1599,3.362,1600,3.897,1601,3.897,1602,3.897,1603,3.897,1604,5.281,1605,3.897,1606,3.897,1607,5.167,1608,3.897,1609,4.556,1610,3.897,1611,3.897,1612,3.362,1613,3.897,1614,4.556,1615,3.01,1616,3.2,1617,3.897,1618,3.897,1619,3.897,1620,6.421,1621,3.897,1622,3.897,1623,6.918,1624,3.362,1625,4.556,1626,3.362,1627,2.747,1628,3.362,1629,3.897,1630,3.897,1631,3.362,1632,3.897,1633,3.897,1634,3.897,1635,3.362,1636,3.897,1637,3.897,1638,3.897,1639,3.897,1640,3.897,1641,3.897,1642,3.362,1643,3.897,1644,5.167,1645,3.362,1646,3.897,1647,3.362,1648,3.897,1649,3.897,1650,3.897,1651,5.281,1652,3.362,1653,3.897,1654,3.362,1655,4.556,1656,3.897,1657,3.362,1658,3.362,1659,3.897,1660,4.556,1661,3.362,1662,3.897,1663,3.362,1664,3.362,1665,3.362,1666,3.362,1667,3.722,1668,3.897,1669,3.897,1670,3.897,1671,3.362,1672,4.556,1673,3.897,1674,3.897,1675,3.897,1676,3.897,1677,3.897,1678,3.2,1679,3.362,1680,3.897,1681,3.362,1682,3.897,1683,3.897,1684,3.897,1685,3.362,1686,3.362,1687,3.362,1688,3.362,1689,3.897,1690,3.362,1691,4.626,1692,5.167,1693,5.99,1694,5.167,1695,3.362,1696,3.897,1697,5.281,1698,3.897,1699,3.897,1700,3.897,1701,3.897,1702,3.897,1703,5.539,1704,3.897,1705,3.01,1706,3.362,1707,3.362,1708,3.362,1709,3.897,1710,3.897,1711,3.362,1712,3.897]],["title/interfaces/Progress.html",[0,0.339,1351,2.307]],["body/interfaces/Progress.html",[0,0.56,2,1.149,3,0.165,4,0.146,5,0.25,7,0.265,9,0.307,10,0.423,15,1.391,16,0.018,17,1.387,18,0.485,21,3.165,25,1.449,27,0.772,36,0.261,41,0.526,43,0.146,50,0.281,51,0.721,52,1.298,55,0.772,58,0.874,60,1.143,62,1.017,65,2.638,74,1.514,81,0.352,82,0.184,86,0.629,88,0.964,96,1.377,106,0.882,117,0.399,130,2.406,136,0.884,139,2.567,145,0.971,153,1.764,156,0.964,157,1.863,165,0.011,166,0.011,169,1.09,223,0.987,247,0.202,260,1.271,268,1.637,282,3.165,284,1.812,290,1.256,297,2.406,298,2.098,324,1.443,326,1.216,327,1.487,354,3.532,356,1.099,358,1.514,361,1.731,367,0.922,370,2.536,372,1.764,376,1.989,380,2.72,384,2.891,387,2.086,400,2.24,405,1.655,419,1.655,449,2.24,461,1.315,472,1.863,486,1.974,488,1.974,527,1.764,542,1.863,598,2.24,599,1.863,601,3.636,605,1.514,606,3.59,631,1.149,660,1.897,740,1.591,766,1.863,773,2.406,855,1.514,872,1.443,877,2.406,885,3.165,900,2.098,907,1.974,924,1.673,927,2.24,948,3.087,972,2.192,1124,2.572,1148,3.517,1150,3.852,1183,1.673,1196,1.974,1218,2.098,1273,3.111,1307,2.891,1329,1.764,1330,2.098,1331,2.406,1332,3.934,1333,2.855,1334,2.605,1335,3.934,1336,2.855,1337,2.855,1338,2.855,1339,2.855,1340,4.107,1341,2.855,1342,2.855,1343,3.934,1344,3.934,1345,3.934,1346,4.85,1347,3.934,1348,2.855,1349,3.934,1350,4.308,1351,4.538,1352,3.934,1353,3.59,1354,3.793,1355,3.59,1356,3.934,1357,2.605,1358,2.24,1359,3.96,1360,2.24,1361,2.406,1362,4.107,1363,3.307,1364,3.725,1365,2.406,1366,2.406,1367,3.59,1368,2.406,1369,2.605,1370,2.24,1371,2.605,1372,2.605,1373,2.605,1374,2.406,1375,1.974,1376,3.793,1377,2.855,1378,2.855,1379,2.855,1380,2.855,1381,2.605,1382,2.24,1383,2.855,1384,2.855,1385,3.934,1386,4.799,1387,2.605,1388,3.59,1389,2.855,1390,2.855,1391,2.855,1392,3.934,1393,2.855,1394,2.855,1395,2.855,1396,2.855,1397,2.605,1398,2.855,1399,2.855,1400,2.855,1401,2.855,1402,2.855,1403,2.605,1404,2.855,1405,2.855,1406,2.855,1407,2.855,1408,3.934,1409,2.855,1410,2.855,1411,2.855,1412,3.934,1413,2.855,1414,2.855,1415,1.764,1416,2.855,1417,3.315,1418,2.855,1419,2.855,1420,2.098,1421,2.855,1422,2.855,1423,2.855,1424,2.855,1425,3.934,1426,2.855,1427,1.863,1428,2.406,1429,2.855,1430,2.855,1431,2.855,1432,2.855,1433,2.855,1434,2.855,1435,2.855,1436,2.855,1437,2.855,1438,2.855,1439,2.855,1440,2.855,1441,2.855,1442,2.855,1443,2.855,1444,2.855,1445,2.855,1446,2.855,1447,2.605,1448,3.934,1449,2.855,1450,2.855,1451,3.087,1452,2.098,1453,2.605,1454,2.605,1455,2.855,1456,2.406,1457,2.855,1458,1.974,1459,2.855,1460,2.855,1461,2.855,1462,2.855,1463,2.855,1464,2.855,1465,2.855,1466,2.855,1467,2.855,1468,3.934,1469,2.855,1470,2.605,1471,2.855,1472,1.764,1473,2.855,1474,2.855,1475,2.855,1476,2.855,1477,2.855,1478,2.855]],["title/interfaces/Quiz.html",[0,0.339,627,1.638]],["body/interfaces/Quiz.html",[0,0.571,2,1.064,3,0.153,4,0.136,5,0.119,7,0.245,9,0.285,10,0.401,15,1.716,16,0.018,18,0.548,33,1.943,36,0.263,41,0.487,43,0.136,50,0.25,51,0.729,55,0.715,56,1.943,58,0.839,60,1.153,62,1.45,65,1.549,66,1.725,70,2.577,82,0.241,84,1.827,86,0.737,88,0.798,104,1.112,106,0.817,108,1.943,132,3.389,136,0.971,145,0.652,148,1.064,153,1.633,156,0.892,158,0.854,165,0.011,166,0.011,192,0.245,198,0.513,247,0.254,260,1.204,264,3.681,267,1.569,268,1.258,269,2.986,282,1.725,283,0.782,290,1.163,312,2.986,315,1.275,322,1.943,326,1.152,327,1.327,330,2.185,345,1.977,346,1.275,353,1.725,358,2.722,361,1.163,367,0.854,368,1.402,376,1.336,387,1.977,393,1.943,394,0.932,396,2.185,398,1.275,406,1.066,414,2.532,419,1.112,421,1.436,436,0.892,450,2.228,453,1.018,461,1.217,478,2.74,494,1.901,496,2.228,503,2.074,531,1.943,546,1.827,605,2.291,608,1.217,617,1.827,627,3.224,634,1.725,677,2.185,740,1.473,855,1.402,859,3.061,872,1.336,882,2.986,924,1.549,968,2.074,972,1.473,1009,2.228,1028,3.243,1060,4.402,1062,1.336,1066,3.681,1124,1.402,1149,1.549,1170,1.827,1237,2.74,1249,1.943,1254,1.943,1309,1.827,1311,1.725,1415,1.633,1420,1.943,1427,2.433,1458,1.827,1472,2.303,1499,4.666,1523,1.725,1529,3.635,1542,2.074,1557,2.228,1616,2.925,1678,2.074,1713,2.074,1714,4.281,1715,3.881,1716,4.539,1717,4.615,1718,4.281,1719,3.402,1720,3.402,1721,3.402,1722,3.64,1723,4.139,1724,3.142,1725,2.412,1726,2.412,1727,2.412,1728,2.412,1729,2.228,1730,2.412,1731,4.326,1732,3.64,1733,2.412,1734,4.281,1735,3.142,1736,3.402,1737,3.64,1738,3.953,1739,3.142,1740,3.142,1741,3.142,1742,4.539,1743,2.412,1744,2.412,1745,3.142,1746,2.074,1747,2.412,1748,2.412,1749,4.445,1750,3.35,1751,3.142,1752,2.228,1753,2.074,1754,1.725,1755,2.228,1756,2.228,1757,2.228,1758,2.228,1759,2.074,1760,2.228,1761,2.228,1762,2.228,1763,2.228,1764,2.228,1765,2.228,1766,2.228,1767,2.228,1768,2.228,1769,2.228,1770,2.228,1771,2.074,1772,2.228,1773,2.228,1774,2.228,1775,3.142,1776,3.142,1777,2.228,1778,4.027,1779,2.228,1780,2.228,1781,2.074,1782,2.228,1783,2.074,1784,2.228,1785,2.228,1786,2.228,1787,2.228,1788,2.228,1789,2.228,1790,2.074,1791,2.228,1792,2.074,1793,2.228,1794,3.635,1795,2.228,1796,2.228,1797,2.412,1798,2.074,1799,3.402,1800,3.953,1801,2.074,1802,2.412,1803,2.412,1804,2.412,1805,2.412,1806,2.074,1807,2.412,1808,2.412,1809,2.412,1810,2.228,1811,1.827,1812,2.412,1813,2.412,1814,2.412,1815,2.412,1816,3.402,1817,2.412,1818,2.412,1819,2.412,1820,3.402,1821,2.412,1822,2.412,1823,2.412,1824,2.412,1825,2.412,1826,3.942,1827,2.412,1828,2.412,1829,2.412,1830,3.402,1831,2.412,1832,2.228,1833,2.412,1834,2.412,1835,2.412,1836,2.412,1837,2.412,1838,2.412,1839,2.412,1840,2.412,1841,2.074,1842,3.142,1843,3.142,1844,2.074,1845,2.412,1846,2.412,1847,2.412,1848,2.412,1849,2.228,1850,2.412,1851,2.412]],["title/components/QuizEditorComponent.html",[38,0.024,230,0.693]],["body/components/QuizEditorComponent.html",[3,0.226,4,0.201,5,0.176,16,0.017,23,0.514,36,0.201,37,0.88,38,0.043,43,0.201,48,0.798,50,0.226,75,1.139,76,1.087,77,1.087,78,0.966,79,1.393,80,1.264,81,0.483,82,0.253,83,0.88,115,0.838,117,0.547,120,0.722,131,3.794,165,0.014,166,0.014,167,0.922,168,1.011,169,0.88,180,1.011,181,1.087,182,1.139,183,1.011,184,1.416,185,1.011,186,0.891,187,1.011,188,0.922,189,1.011,190,0.88,191,0.58,192,0.363,193,1.011,194,0.922,195,1.011,196,1.25,197,0.922,198,0.938,199,1.356,200,0.922,201,1.356,202,0.88,203,0.722,204,0.922,205,1.011,206,0.922,207,0.966,208,1.011,209,0.922,210,1.011,211,0.922,212,1.011,213,0.922,214,1.011,215,0.922,216,1.011,217,0.922,218,1.011,219,0.922,220,0.88,221,1.011,222,0.922,223,0.938,224,1.011,225,0.88,226,1.011,227,0.922,228,1.011,229,1.011,230,1.291,231,1.011,232,0.88,233,1.011,234,0.922,235,1.011,236,0.922,237,0.922,238,0.922,239,1.011,240,1.011,241,0.922,242,0.966,243,0.922,244,0.966,245,1.011,246,0.88,247,0.201,248,1.011,249,0.922,250,1.011,251,1.011,457,1.25,622,2.227,1852,4.373,1853,7.096,1854,6.261,1855,6.261]],["title/components/QuizListComponent.html",[38,0.024,232,0.661]],["body/components/QuizListComponent.html",[0,0.34,3,0.17,4,0.151,5,0.132,9,0.317,10,0.433,15,1.414,16,0.018,17,1.038,18,0.561,23,0.387,24,3.153,36,0.294,37,0.662,38,0.037,41,0.543,43,0.206,45,1.134,46,2.548,47,0.994,48,1.002,49,1.296,50,0.17,51,0.758,58,0.436,60,1.104,71,1.296,75,0.947,76,0.903,77,0.903,78,0.992,79,1.37,80,1.244,81,0.363,82,0.19,83,0.662,86,0.783,88,1.137,92,2.826,96,1.42,106,1.414,115,0.631,117,0.411,120,0.543,122,2.036,123,1.726,136,0.903,145,0.992,160,1.42,165,0.011,166,0.011,167,0.694,168,0.761,169,0.662,171,1.57,180,0.761,181,0.903,182,0.947,183,0.761,184,1.27,185,0.761,186,0.843,187,0.761,188,0.694,189,0.761,190,0.662,191,0.436,192,0.273,193,0.761,194,0.694,195,0.761,196,1.038,197,0.694,198,0.78,199,1.182,200,0.694,201,1.182,202,0.662,203,0.543,204,0.694,205,0.761,206,0.694,207,0.727,208,0.761,209,0.694,210,0.761,211,0.694,212,0.761,213,0.694,214,0.761,215,0.694,216,0.761,217,0.694,218,0.761,219,0.694,220,0.662,221,0.761,222,0.694,223,0.78,224,0.761,225,0.662,226,0.761,227,0.694,228,0.761,229,0.761,230,0.694,231,0.761,232,1.104,233,0.761,234,0.694,235,0.761,236,0.694,237,0.694,238,0.694,239,0.761,240,0.761,241,0.694,242,0.727,243,0.694,244,0.727,245,0.761,246,0.662,247,0.3,248,0.761,249,0.694,250,0.761,251,0.761,273,1.417,281,1.356,283,0.871,324,1.489,326,1.242,327,1.39,380,2.778,406,1.269,457,1.038,494,1.296,505,2.953,608,1.851,611,1.42,620,2.107,622,1.851,624,1.239,627,3.125,635,2.426,667,2.548,692,2.239,699,2.622,732,1.922,733,1.819,810,2.031,868,2.482,869,2.036,1053,3.153,1056,4.574,1066,3.153,1124,2.606,1126,2.311,1181,5.143,1194,2.945,1376,3.387,1523,2.622,1529,2.953,1575,4.018,1750,3.66,1801,3.589,1811,3.162,1856,2.945,1857,4.489,1858,4.489,1859,3.855,1860,3.993,1861,5.203,1862,5.203,1863,4.489,1864,3.813,1865,3.813,1866,3.813,1867,3.813,1868,4.489,1869,4.018,1870,3.813,1871,4.489,1872,2.953,1873,2.482,1874,3.29,1875,3.29,1876,2.164,1877,2.687,1878,2.687,1879,2.687,1880,3.29,1881,3.29,1882,4.489,1883,3.29,1884,3.29,1885,5.203,1886,5.203,1887,5.203,1888,5.203,1889,5.203,1890,3.813,1891,5.203,1892,5.203,1893,5.203,1894,3.813]],["title/interfaces/QuizModel.html",[0,0.339,1746,2.307]],["body/interfaces/QuizModel.html",[0,0.543,2,1.073,3,0.154,4,0.137,5,0.12,7,0.247,9,0.287,10,0.404,15,1.668,16,0.018,18,0.54,33,1.959,36,0.264,41,0.491,43,0.137,50,0.251,51,0.731,55,0.721,56,1.959,58,0.841,60,1.156,62,1.453,65,1.562,66,1.739,70,2.592,82,0.242,84,1.842,86,0.719,88,0.803,104,1.121,106,0.824,108,1.959,132,3.404,136,0.975,145,0.658,148,1.073,153,1.647,156,0.9,158,0.861,165,0.011,166,0.011,192,0.247,198,0.517,247,0.255,260,1.211,264,3.694,267,1.578,268,1.266,269,2.999,282,1.739,283,0.788,290,1.173,312,2.999,315,1.285,322,1.959,326,1.159,327,1.332,330,2.543,345,1.989,346,1.285,353,1.739,358,2.729,361,1.173,367,0.861,368,1.414,376,1.347,387,1.989,393,1.959,394,0.94,396,2.198,398,1.285,406,1.071,414,2.543,419,1.121,421,1.444,436,0.9,450,2.246,453,1.026,461,1.227,478,2.756,494,1.909,496,2.246,503,2.091,531,1.959,546,1.842,605,2.301,608,1.227,617,1.842,627,3.187,634,1.739,677,2.198,740,1.485,855,1.414,859,3.072,872,1.347,882,2.999,924,1.562,968,2.091,972,1.485,1009,2.246,1028,3.255,1060,4.362,1062,1.347,1066,3.694,1124,1.414,1149,1.562,1170,1.842,1237,1.959,1249,1.959,1254,1.959,1309,1.842,1311,1.739,1415,1.647,1420,1.959,1427,2.447,1458,1.842,1472,2.317,1499,4.61,1523,1.739,1529,3.646,1542,2.091,1557,2.246,1616,2.091,1678,2.091,1713,2.091,1714,3.422,1715,3.893,1716,4.549,1717,4.624,1718,4.296,1719,2.432,1720,2.432,1721,2.432,1722,3.656,1723,4.148,1724,3.16,1725,2.432,1726,2.432,1727,2.432,1728,2.432,1729,2.246,1730,2.432,1731,4.337,1732,3.968,1733,2.432,1734,4.926,1735,3.16,1736,3.422,1737,3.656,1738,3.968,1739,3.16,1740,3.16,1741,3.16,1742,4.549,1743,3.422,1744,3.422,1745,3.656,1746,2.942,1747,2.432,1748,2.432,1749,4.456,1750,3.359,1751,3.16,1752,2.246,1753,2.091,1754,1.739,1755,2.246,1756,2.246,1757,2.246,1758,2.246,1759,2.091,1760,2.246,1761,2.246,1762,2.246,1763,2.246,1764,2.246,1765,2.246,1766,2.246,1767,2.246,1768,2.246,1769,2.246,1770,2.246,1771,2.091,1772,2.246,1773,2.246,1774,2.246,1775,3.16,1776,3.16,1777,2.246,1778,4.038,1779,2.246,1780,2.246,1781,2.091,1782,2.246,1783,2.091,1784,2.246,1785,2.246,1786,2.246,1787,2.246,1788,2.246,1789,2.246,1790,2.091,1791,2.246,1792,2.091,1793,2.246,1794,3.646,1795,2.246,1796,2.246,1797,2.432,1798,2.091,1799,3.422,1800,3.968,1801,2.091,1802,2.432,1803,2.432,1804,2.432,1805,2.432,1806,2.091,1807,2.432,1808,2.432,1809,2.432,1810,2.246,1811,1.842,1812,2.432,1813,2.432,1814,2.432,1815,2.432,1816,3.422,1817,2.432,1818,2.432,1819,2.432,1820,3.422,1821,2.432,1822,2.432,1823,2.432,1824,2.432,1825,2.432,1826,3.959,1827,2.432,1828,2.432,1829,2.432,1830,3.422,1831,2.432,1832,2.246,1833,2.432,1834,2.432,1835,2.432,1836,2.432,1837,2.432,1838,2.432,1839,2.432,1840,2.432,1841,2.091,1842,3.16,1843,3.16,1844,2.091,1845,2.432,1846,2.432,1847,2.432,1848,2.432,1849,2.246,1850,2.432,1851,2.432]],["title/interfaces/QuizPayload.html",[0,0.339,1715,2.307]],["body/interfaces/QuizPayload.html",[0,0.542,2,1.066,3,0.153,4,0.136,5,0.119,7,0.246,9,0.285,10,0.402,15,1.752,16,0.018,18,0.548,33,1.947,36,0.264,41,0.488,43,0.136,50,0.25,51,0.73,55,0.717,56,1.947,58,0.84,60,1.186,62,1.451,65,1.553,66,1.729,70,2.582,82,0.241,84,1.832,86,0.717,88,0.8,104,1.115,106,0.819,108,1.947,132,3.394,136,0.972,145,0.654,148,1.066,153,1.637,156,0.894,158,0.856,165,0.011,166,0.011,192,0.246,198,0.514,247,0.264,260,1.206,264,4.229,267,1.571,268,1.261,269,2.582,282,1.729,283,0.784,290,1.166,312,2.582,315,2.086,322,1.947,326,1.154,327,1.328,330,2.189,345,1.981,346,1.278,353,1.729,358,2.724,361,1.166,367,0.856,368,1.406,376,1.34,387,1.981,393,1.947,394,0.935,396,2.189,398,1.278,406,1.067,414,2.535,419,1.115,421,1.438,436,0.894,450,2.233,453,1.02,461,1.22,478,2.745,494,2.179,496,2.233,503,2.079,531,1.947,546,1.832,605,2.294,608,1.22,617,1.832,627,3.242,634,1.729,677,2.535,740,1.476,855,1.406,859,3.065,872,1.34,882,2.99,924,1.553,968,2.931,972,1.476,1009,2.233,1028,3.247,1060,4.331,1062,1.888,1066,3.394,1124,1.406,1149,1.553,1170,1.832,1237,1.947,1249,1.947,1254,1.947,1309,1.832,1311,1.729,1415,1.637,1420,1.947,1427,2.437,1458,1.832,1472,2.307,1499,4.624,1523,1.729,1529,4.027,1542,2.079,1557,2.233,1616,2.079,1678,2.079,1713,2.079,1714,3.408,1715,3.885,1716,4.172,1717,4.329,1718,3.947,1719,2.418,1720,2.418,1721,2.418,1722,3.148,1723,4.031,1724,3.148,1725,2.418,1726,2.418,1727,2.418,1728,2.418,1729,2.233,1730,2.418,1731,4.329,1732,3.645,1733,2.418,1734,4.286,1735,3.148,1736,3.408,1737,3.645,1738,3.958,1739,3.148,1740,3.148,1741,3.148,1742,4.542,1743,2.418,1744,2.418,1745,3.148,1746,2.079,1747,3.408,1748,3.408,1749,4.68,1750,3.445,1751,3.148,1752,2.233,1753,2.079,1754,1.729,1755,2.233,1756,2.233,1757,2.233,1758,2.233,1759,2.079,1760,2.233,1761,2.233,1762,2.233,1763,2.233,1764,2.233,1765,2.233,1766,2.233,1767,2.233,1768,2.233,1769,2.233,1770,2.233,1771,2.079,1772,2.233,1773,2.233,1774,2.233,1775,3.148,1776,3.148,1777,2.233,1778,4.031,1779,2.233,1780,2.233,1781,2.079,1782,2.233,1783,2.079,1784,2.233,1785,2.233,1786,2.233,1787,2.233,1788,2.233,1789,2.233,1790,2.079,1791,2.233,1792,2.079,1793,2.233,1794,3.638,1795,2.233,1796,2.233,1797,2.418,1798,2.079,1799,3.408,1800,3.958,1801,2.079,1802,2.418,1803,2.418,1804,2.418,1805,2.418,1806,2.079,1807,2.418,1808,2.418,1809,2.418,1810,2.233,1811,1.832,1812,2.418,1813,2.418,1814,2.418,1815,2.418,1816,3.408,1817,2.418,1818,2.418,1819,2.418,1820,3.408,1821,2.418,1822,2.418,1823,2.418,1824,2.418,1825,2.418,1826,3.947,1827,2.418,1828,2.418,1829,2.418,1830,3.408,1831,2.418,1832,2.233,1833,2.418,1834,2.418,1835,2.418,1836,2.418,1837,2.418,1838,2.418,1839,2.418,1840,2.418,1841,2.079,1842,3.148,1843,3.148,1844,2.079,1845,2.418,1846,2.418,1847,2.418,1848,2.418,1849,2.233,1850,2.418,1851,2.418]],["title/components/QuizPresenterComponent.html",[38,0.024,234,0.693]],["body/components/QuizPresenterComponent.html",[3,0.226,4,0.201,5,0.176,16,0.017,23,0.514,36,0.201,37,0.88,38,0.043,43,0.201,48,0.798,50,0.226,75,1.139,76,1.087,77,1.087,78,0.966,79,1.393,80,1.264,81,0.483,82,0.253,83,0.88,115,0.838,117,0.547,120,0.722,131,3.794,165,0.014,166,0.014,167,0.922,168,1.011,169,0.88,180,1.011,181,1.087,182,1.139,183,1.011,184,1.416,185,1.011,186,0.891,187,1.011,188,0.922,189,1.011,190,0.88,191,0.58,192,0.363,193,1.011,194,0.922,195,1.011,196,1.25,197,0.922,198,0.938,199,1.356,200,0.922,201,1.356,202,0.88,203,0.722,204,0.922,205,1.011,206,0.922,207,0.966,208,1.011,209,0.922,210,1.011,211,0.922,212,1.011,213,0.922,214,1.011,215,0.922,216,1.011,217,0.922,218,1.011,219,0.922,220,0.88,221,1.011,222,0.922,223,0.938,224,1.011,225,0.88,226,1.011,227,0.922,228,1.011,229,1.011,230,0.922,231,1.011,232,0.88,233,1.011,234,1.291,235,1.011,236,0.922,237,0.922,238,0.922,239,1.011,240,1.011,241,0.922,242,0.966,243,0.922,244,0.966,245,1.011,246,0.88,247,0.201,248,1.011,249,0.922,250,1.011,251,1.011,457,1.25,622,2.227,1895,4.373,1896,7.096,1897,6.261,1898,6.261]],["title/injectables/QuizService.html",[260,0.95,1811,2.032]],["body/injectables/QuizService.html",[0,0.518,3,0.139,4,0.123,5,0.108,7,0.223,9,0.258,10,0.375,15,1.792,16,0.018,18,0.562,33,1.764,36,0.255,41,0.443,43,0.123,50,0.237,51,0.744,55,0.649,56,1.764,58,0.825,60,1.18,62,1.423,65,1.407,66,1.567,70,2.406,71,2.097,82,0.225,84,2.406,86,0.801,88,1.064,104,1.01,106,1.265,108,3.008,132,3.212,136,1.117,145,0.593,148,0.966,153,1.483,156,0.81,158,1.124,165,0.01,166,0.01,171,1.553,186,0.879,192,0.223,198,0.466,207,0.859,247,0.269,260,1.124,262,1.764,264,3.74,267,1.889,268,1.175,269,2.406,273,1.227,281,2.195,282,1.567,283,1.47,290,1.056,312,2.406,315,1.158,322,1.764,326,1.076,327,1.406,330,2.04,345,1.846,346,1.678,353,2.271,358,2.636,361,1.056,367,0.775,368,1.273,376,1.214,387,2.171,393,1.764,394,0.847,396,2.04,398,1.158,406,1.321,414,2.4,419,1.01,421,1.34,436,0.81,450,2.933,453,0.924,461,1.106,478,2.557,494,1.976,496,2.933,503,1.884,505,2.557,531,2.557,546,1.66,605,2.381,608,1.603,617,1.66,627,3.214,634,2.271,677,2.04,740,1.338,855,1.273,859,2.672,872,1.214,882,2.83,924,2.04,968,1.884,972,1.939,1009,2.933,1028,3.104,1060,4.296,1062,1.214,1066,3.523,1124,2.381,1149,2.04,1170,1.66,1237,1.764,1249,1.764,1254,1.764,1309,2.406,1311,1.567,1415,1.483,1420,1.764,1427,2.93,1458,1.66,1472,2.15,1499,4.688,1523,2.271,1529,3.767,1542,1.884,1557,2.023,1616,1.884,1667,3.176,1678,1.884,1713,1.884,1714,3.176,1715,3.523,1716,4.017,1717,4.189,1718,4.097,1719,2.191,1720,2.191,1721,2.191,1722,2.933,1723,3.9,1724,2.933,1725,2.191,1726,2.191,1727,2.191,1728,2.191,1729,2.023,1730,2.191,1731,4.189,1732,3.784,1733,2.191,1734,4.349,1735,2.933,1736,3.176,1737,3.784,1738,3.784,1739,2.933,1740,2.933,1741,2.933,1742,4.425,1743,2.191,1744,2.191,1745,2.933,1746,1.884,1747,2.191,1748,2.191,1749,4.734,1750,3.493,1751,2.933,1752,2.023,1753,1.884,1754,1.567,1755,2.023,1756,2.023,1757,2.023,1758,2.023,1759,1.884,1760,2.023,1761,2.023,1762,2.023,1763,2.023,1764,2.023,1765,2.023,1766,2.023,1767,2.023,1768,2.023,1769,2.023,1770,2.023,1771,1.884,1772,2.023,1773,2.023,1774,2.023,1775,2.933,1776,2.933,1777,2.023,1778,4.265,1779,2.023,1780,2.023,1781,1.884,1782,2.023,1783,1.884,1784,2.023,1785,2.023,1786,2.023,1787,2.023,1788,2.023,1789,2.023,1790,1.884,1791,2.023,1792,1.884,1793,2.023,1794,3.767,1795,2.023,1796,2.023,1797,2.191,1798,1.884,1799,4.097,1800,4.425,1801,2.731,1802,3.176,1803,3.176,1804,3.176,1805,3.176,1806,2.731,1807,3.176,1808,3.176,1809,3.176,1810,2.933,1811,2.406,1812,3.736,1813,3.736,1814,2.191,1815,2.191,1816,3.176,1817,2.191,1818,2.191,1819,3.176,1820,3.176,1821,2.191,1822,2.191,1823,2.191,1824,2.191,1825,3.176,1826,3.736,1827,2.191,1828,3.176,1829,3.176,1830,3.176,1831,2.191,1832,2.933,1833,3.176,1834,2.191,1835,2.191,1836,2.191,1837,2.191,1838,2.191,1839,2.191,1840,2.191,1841,1.884,1842,2.933,1843,2.933,1844,1.884,1845,2.191,1846,2.191,1847,3.176,1848,2.191,1849,2.023,1850,2.191,1851,2.191,1899,4.506,1900,4.506,1901,3.108,1902,3.108,1903,3.108,1904,3.108,1905,3.108,1906,3.108]],["title/components/RecoverEmailComponent.html",[38,0.024,236,0.693]],["body/components/RecoverEmailComponent.html",[3,0.176,4,0.156,5,0.137,7,0.283,9,0.328,10,0.443,14,2.246,16,0.018,18,0.521,23,0.767,28,2.685,36,0.29,37,0.685,38,0.038,41,0.562,43,0.156,46,2.595,47,1.029,48,1.017,49,1.342,50,0.176,51,0.742,52,1.23,58,0.452,73,1.617,75,0.969,76,0.925,77,0.925,78,1.016,79,1.373,80,1.246,81,0.574,82,0.197,83,0.685,85,3.08,86,0.65,88,1.149,92,2.877,102,3.229,106,1.439,115,1.21,117,0.727,118,1.541,120,0.562,122,2.108,123,1.787,165,0.014,166,0.012,167,0.718,168,0.788,169,0.685,171,1.474,180,0.788,181,0.925,182,0.969,183,0.788,184,1.288,185,0.788,186,0.758,187,0.788,188,0.718,189,0.788,190,1.12,191,0.61,192,0.432,193,0.788,194,0.718,195,0.788,196,1.063,197,0.718,198,0.967,199,1.203,200,0.718,201,1.203,202,0.685,203,0.562,204,0.718,205,0.788,206,0.718,207,0.753,208,0.788,209,0.718,210,0.788,211,0.718,212,0.788,213,0.718,214,0.788,215,0.718,216,0.788,217,0.718,218,0.788,219,0.718,220,0.685,221,0.788,222,0.718,223,0.798,224,0.788,225,0.685,226,0.788,227,0.718,228,0.788,229,0.788,230,0.718,231,0.788,232,0.685,233,0.788,234,0.718,235,0.788,236,1.174,237,0.718,238,0.718,239,0.788,240,0.788,241,0.718,242,0.753,243,0.718,244,0.753,245,0.788,246,0.685,247,0.267,248,0.788,249,0.718,250,0.788,251,0.788,267,1.731,298,3.024,306,4.085,307,4.085,309,3.468,313,1.451,326,0.943,327,1.472,332,2.393,350,3.654,360,4.55,362,2.296,383,4.55,396,2.412,406,1.016,441,1.617,457,1.063,471,2.778,510,3.755,620,2.145,624,1.283,630,2.393,635,2.47,637,3.755,700,1.787,739,3.755,881,3.08,902,4.596,1053,3.229,1258,3.229,1259,3.468,1456,3.468,1859,3.925,1860,4.029,1873,2.57,1876,2.241,1907,5.328,1908,4.115,1909,4.115,1910,3.755,1911,3.406,1912,3.948,1913,3.755,1914,4.596,1915,4.596,1916,3.755,1917,2.57,1918,3.049,1919,4.596,1920,3.948,1921,3.049,1922,3.948,1923,5.328,1924,6.455,1925,5.328,1926,5.328,1927,4.115]],["title/interfaces/RecoverEmailResults.html",[0,0.339,332,2.307]],["body/interfaces/RecoverEmailResults.html",[0,0.482,2,1.254,3,0.242,4,0.16,5,0.14,7,0.289,9,0.336,10,0.45,14,2.702,15,1.732,16,0.018,17,1.976,18,0.503,23,0.797,27,1.36,28,2.725,29,1.827,36,0.269,41,0.575,43,0.16,50,0.272,51,0.689,52,1.361,58,0.745,60,0.7,62,1.425,82,0.201,86,0.435,88,1.009,104,1.757,115,0.668,117,0.801,118,1.754,136,1.13,144,2.627,145,1.294,148,1.68,156,1.052,165,0.015,166,0.012,191,0.619,192,0.466,247,0.214,260,1.349,268,1.052,269,2.887,273,1.099,281,1.923,283,0.922,290,1.372,305,4.42,306,2.446,307,2.446,308,2.291,309,4.549,310,5.603,311,4.709,312,3.255,313,1.849,314,3.117,315,2.426,316,2.155,317,2.627,318,2.627,319,3.117,320,2.845,321,1.312,322,2.291,323,3.117,324,1.576,325,3.117,326,1.291,327,1.483,328,1.254,329,2.725,330,2.448,331,3.696,332,3.277,333,2.327,334,2.308,335,3.811,336,4.176,337,5.513,338,2.291,339,2.627,340,2.627,341,2.845,342,2.845,343,3.519,344,2.845,345,1.653,346,1.503,347,2.845,348,3.117,349,3.117,350,2.446,351,1.737,352,1.653,353,2.034,354,2.446,355,3.117,356,1.2,357,2.845,358,1.653,359,3.073,360,4.297,361,1.838,362,2.169,363,3.117,364,2.155,365,4.297,366,2.845,367,1.349,368,1.653,369,3.117,370,1.503,371,2.291,372,2.58,373,3.117,374,3.117,375,2.627,376,1.576,377,3.117,378,3.117,379,3.117,380,2.155,381,2.627,382,2.845,383,2.845,384,3.069,385,3.117,386,1.981,387,1.653,388,3.117,389,3.117,390,3.117,391,2.845,392,3.117,393,2.291,394,1.473,395,3.117,396,2.448,397,3.117,398,2.426,399,2.291,400,2.446,401,1.503,402,2.155,403,2.845,404,2.291,405,1.312,406,1.031,407,3.117,408,3.117,409,3.117,410,2.627,411,3.117,412,1.503,413,3.117,414,2.448,415,2.627,416,3.117,417,2.725,418,3.117,419,1.312,420,3.117,421,1.2,422,2.291,423,1.737,424,2.446,425,2.845,426,3.117,427,2.291,428,2.291,429,3.117,430,2.845,431,3.117,432,3.117,433,1.926,434,2.845,435,3.117,436,1.052,437,2.845,438,1.372,439,3.117]],["title/injectables/RecoverEmailService.html",[260,0.95,350,2.307]],["body/injectables/RecoverEmailService.html",[0,0.452,3,0.227,4,0.146,5,0.127,7,0.363,9,0.306,10,0.422,14,2.717,15,1.773,16,0.018,17,2.05,18,0.525,23,0.798,27,1.373,28,1.853,29,2.297,36,0.26,41,0.523,43,0.146,50,0.26,51,0.707,52,1.328,55,1.06,58,0.717,60,0.638,62,1.417,71,1.975,82,0.183,86,0.627,88,1.192,104,2.036,114,3.919,115,0.608,117,0.795,118,1.72,136,1.18,144,2.393,145,1.253,148,1.577,156,0.958,158,1.266,165,0.014,166,0.011,171,1.431,186,0.827,191,0.665,192,0.416,247,0.201,260,1.266,262,2.087,268,0.958,269,1.963,273,1.583,281,2.067,283,1.431,290,1.25,305,4.078,306,3.984,307,3.984,308,2.087,309,4.078,310,5.565,311,4.488,312,3.345,313,1.933,314,2.84,315,1.89,316,1.963,317,2.393,318,2.393,319,2.84,320,2.591,321,1.195,322,2.087,323,2.84,324,1.435,325,2.84,326,1.211,327,1.522,328,1.143,329,1.853,330,1.664,331,3.556,332,2.228,333,1.582,334,1.725,335,2.591,336,2.84,337,4.839,338,2.087,339,2.393,340,2.393,341,2.591,342,2.591,343,3.782,344,2.591,345,2.079,346,1.89,347,3.577,348,3.919,349,3.919,350,3.075,351,2.5,352,2.079,353,2.558,354,3.075,355,3.919,356,1.509,357,3.577,358,2.079,359,3.314,360,4.634,361,1.975,362,2.229,363,3.919,364,1.963,365,4.634,366,3.577,367,1.563,368,2.079,369,3.919,370,2.165,371,2.087,372,2.421,373,2.84,374,2.84,375,2.393,376,1.435,377,2.84,378,2.84,379,2.84,380,1.963,381,2.393,382,2.591,383,2.591,384,2.88,385,2.84,386,1.888,387,1.506,388,2.84,389,2.84,390,2.84,391,2.591,392,2.84,393,2.087,394,1.382,395,2.84,396,2.297,397,2.84,398,2.449,399,2.88,400,3.075,401,1.89,402,2.709,403,3.577,404,2.087,405,1.195,406,1.296,407,3.919,408,2.84,409,2.84,410,2.393,411,2.84,412,1.37,413,2.84,414,2.631,415,2.393,416,2.84,417,2.558,418,2.84,419,1.195,420,2.84,421,1.093,422,2.087,423,1.582,424,3.075,425,3.577,426,3.919,427,2.88,428,2.88,429,3.919,430,3.577,431,3.919,432,3.919,433,2.421,434,3.577,435,3.919,436,0.958,437,2.591,438,1.25,439,2.84,1928,5.075,1929,5.075,1930,3.677,1931,3.677,1932,3.677,1933,3.677]],["title/components/ResetPasswordComponent.html",[38,0.024,237,0.693]],["body/components/ResetPasswordComponent.html",[3,0.124,4,0.11,5,0.096,7,0.199,9,0.231,10,0.345,14,2.194,16,0.018,18,0.571,19,3.124,23,0.282,25,1.566,35,1.784,36,0.285,37,0.482,38,0.031,41,0.395,43,0.164,45,2.068,46,2.135,47,0.724,48,0.867,49,0.943,50,0.124,51,0.791,52,1.049,55,0.866,58,0.474,60,1.207,62,0.827,73,1.137,74,2.255,75,0.754,76,0.72,77,0.72,78,0.79,79,1.337,80,1.213,81,0.264,82,0.138,83,0.482,85,1.978,86,0.838,88,1.022,92,2.368,93,2.513,102,2.513,106,1.185,115,0.821,117,0.768,118,1.883,120,0.395,122,1.482,123,1.257,154,2.342,158,1.034,165,0.009,166,0.009,167,0.505,168,0.554,169,0.482,171,1.655,180,0.554,181,0.72,182,0.754,183,0.554,184,1.099,185,0.554,186,0.59,187,0.554,188,0.505,189,0.554,190,0.955,191,0.474,192,0.458,193,0.554,194,0.505,195,0.554,196,0.827,197,0.505,198,0.621,199,0.99,200,0.505,201,0.99,202,0.482,203,0.88,204,0.505,205,0.554,206,0.505,207,0.529,208,0.554,209,0.505,210,0.554,211,0.505,212,0.554,213,0.505,214,0.554,215,0.505,216,0.554,217,0.505,218,0.554,219,0.505,220,0.482,221,0.554,222,0.505,223,0.621,224,0.554,225,0.482,226,0.554,227,0.505,228,0.554,229,0.554,230,0.505,231,0.554,232,0.482,233,0.554,234,0.505,235,0.554,236,0.505,237,1.002,238,0.505,239,0.554,240,0.554,241,0.505,242,0.529,243,0.505,244,0.529,245,0.554,246,0.482,247,0.11,248,0.554,249,0.505,250,0.554,251,0.554,267,1.347,273,1.129,283,0.634,284,1.475,298,2.353,326,0.663,327,1.084,338,2.353,356,1.904,362,2.095,370,2.05,396,1.877,406,0.79,421,0.825,441,1.137,453,2.038,457,0.827,471,2.948,472,2.09,473,1.619,484,2.699,524,3.736,527,2.949,541,3.88,575,2.939,597,3.99,620,1.765,624,0.902,631,1.831,635,2.033,636,2.65,649,4.168,650,4.168,652,3.336,657,1.482,660,2.05,661,3.318,663,2.659,664,2.627,680,2.949,683,2.699,685,2.627,686,2.353,687,3.124,688,2.699,690,2.699,696,2.368,697,1.784,698,1.257,700,1.257,704,2.214,705,2.65,706,1.575,707,1.084,708,1.807,709,1.807,710,2.144,711,3.23,716,1.784,743,1.482,758,2.353,761,2.699,762,2.775,763,3.745,764,4.022,765,4.022,766,3.115,767,4.022,768,2.699,777,2.353,779,2.699,780,2.699,782,1.807,783,3.202,786,5.082,787,5.082,788,4.282,789,5.082,790,4.282,794,4.282,795,4.282,798,2.144,800,2.395,801,2.395,802,2.395,803,2.395,806,3.577,819,3.833,820,3.833,824,2.395,825,2.395,826,4.282,827,2.395,828,2.395,829,2.395,830,4.282,833,2.144,834,2.395,843,2.395,844,3.577,845,3.577,846,2.395,847,3.577,848,2.395,849,2.395,1086,2.395,1088,2.395,1091,2.395,1258,2.513,1259,2.699,1261,4.142,1262,4.142,1276,1.575,1281,1.325,1285,2.817,1287,4.022,1859,3.23,1860,3.635,1873,1.807,1876,1.575,1908,3.202,1909,3.202,1910,2.922,1917,1.807,1918,2.144,1921,2.144,1927,3.202,1934,4.963,1935,2.776,1936,2.776,1937,4.146,1938,2.776,1939,3.833,1940,2.776,1941,2.776,1942,4.146,1943,2.776,1944,2.776,1945,2.776,1946,2.776,1947,2.776,1948,2.776,1949,2.776,1950,4.146,1951,4.146,1952,5.505,1953,4.146]],["title/injectables/ResetPasswordService.html",[260,0.95,1285,2.16]],["body/injectables/ResetPasswordService.html",[0,0.488,3,0.147,4,0.13,5,0.114,7,0.336,9,0.274,10,0.39,14,2.713,15,1.836,16,0.018,17,2.06,18,0.563,23,0.776,27,1.556,29,2.856,36,0.25,41,0.468,43,0.13,50,0.21,51,0.751,52,1.137,55,0.98,58,0.722,60,1.252,62,1.422,71,2.028,73,1.348,81,0.313,82,0.164,86,0.708,88,1.215,104,1.525,105,3.387,116,3.316,117,0.778,118,1.849,120,0.668,136,1.198,139,1.658,145,0.895,148,1.701,156,0.858,158,1.171,165,0.014,166,0.01,171,1.498,186,0.85,191,0.626,192,0.503,203,0.468,247,0.25,260,1.171,262,1.867,266,2.664,268,1.224,273,1.279,281,2.123,283,1.363,284,1.67,290,1.118,313,1.491,316,1.757,321,1.069,324,1.285,326,1.121,327,1.475,328,1.023,329,2.758,333,2.02,334,2.295,345,1.923,346,1.749,351,2.355,352,1.923,356,1.951,361,1.86,362,1.67,364,1.757,368,1.348,371,1.867,372,1.57,386,1.525,394,1.279,398,2.35,401,1.749,402,2.922,404,1.867,405,1.069,406,1.251,419,1.525,421,0.978,422,1.867,423,2.02,433,2.24,436,1.224,438,1.596,473,2.463,495,2.611,535,3.055,570,2.845,599,1.658,631,2.242,660,2.039,685,2.847,712,3.387,753,1.833,791,2.984,810,2.137,855,1.348,872,1.833,881,2.24,885,3.008,907,2.506,929,1.867,1062,1.285,1087,1.994,1183,3.057,1196,1.757,1205,1.994,1229,2.506,1260,3.106,1261,3.832,1262,3.832,1263,1.994,1264,3.857,1265,3.055,1266,3.309,1267,3.309,1268,3.309,1269,4.759,1270,2.319,1271,4.206,1272,2.319,1273,3.605,1274,1.994,1275,2.142,1276,1.867,1277,3.106,1278,2.845,1279,1.994,1280,2.142,1281,1.57,1282,2.319,1283,2.142,1284,2.845,1285,2.664,1286,3.857,1287,3.055,1288,3.309,1289,2.319,1290,4.206,1291,3.055,1292,3.309,1293,3.309,1294,3.309,1295,3.309,1296,2.319,1297,2.319,1298,4.206,1299,2.319,1300,2.319,1301,2.142,1302,3.857,1303,2.319,1304,2.319,1305,2.319,1306,3.857,1307,1.867,1308,1.757,1309,1.757,1310,2.142,1311,1.658,1312,2.319,1313,2.319,1314,1.994,1315,2.319,1316,2.319,1317,2.319,1318,4.624,1319,2.319,1320,2.319,1321,3.055,1322,3.857,1323,3.309,1324,2.319,1325,3.309,1326,3.309,1327,3.309,1328,2.319,1954,4.694,1955,3.29,1956,3.29,1957,3.29,1958,3.29,1959,3.29,1960,3.29]],["title/interfaces/ShowForm.html",[0,0.339,791,1.559]],["body/interfaces/ShowForm.html",[0,0.519,2,1.147,3,0.165,4,0.146,5,0.128,7,0.264,9,0.307,10,0.423,14,2.686,15,1.808,16,0.018,17,2.008,18,0.549,23,0.785,27,1.552,29,2.636,36,0.261,41,0.526,43,0.146,50,0.227,51,0.741,52,1.297,58,0.753,60,1.233,62,1.457,73,1.512,81,0.352,82,0.184,86,0.549,88,1.089,104,1.2,105,2.888,116,2.237,117,0.787,118,1.847,120,0.526,136,1.143,139,1.861,145,0.97,148,1.81,156,0.962,165,0.014,166,0.011,191,0.582,192,0.509,203,0.724,247,0.249,260,1.27,266,2.095,268,0.962,281,1.81,284,1.313,290,1.255,313,1.586,316,1.971,321,1.2,324,1.441,326,1.215,327,1.438,328,1.147,329,2.935,333,2.506,334,2.481,345,1.512,346,1.375,351,1.588,352,1.512,356,1.732,361,1.73,362,1.313,364,1.971,368,1.512,371,2.095,372,1.761,386,1.654,394,1.386,398,2.452,401,1.375,402,3.351,404,2.095,405,1.2,406,0.97,419,1.2,421,1.098,422,2.095,423,2.19,433,1.761,436,1.327,438,1.73,473,2.45,495,2.995,535,3.312,570,2.237,599,1.861,631,2.209,660,1.896,685,2.779,712,3.305,753,1.987,791,3.117,810,1.987,855,1.512,872,1.441,881,1.761,885,2.935,907,1.971,929,2.095,1062,1.987,1087,2.237,1183,2.981,1196,1.971,1205,2.237,1229,1.971,1260,3.305,1261,2.095,1262,2.095,1263,2.237,1264,3.587,1265,3.312,1266,3.587,1267,3.587,1268,3.587,1269,4.64,1270,2.602,1271,4.424,1272,2.602,1273,3.351,1274,2.237,1275,2.403,1276,2.095,1277,3.305,1278,3.084,1279,2.237,1280,3.312,1281,2.428,1282,2.602,1283,2.403,1284,3.084,1285,2.095,1286,2.602,1287,2.403,1288,2.602,1289,2.602,1290,3.587,1291,2.403,1292,2.602,1293,2.602,1294,2.602,1295,2.602,1296,2.602,1297,2.602,1298,4.424,1299,2.602,1300,2.602,1301,2.403,1302,2.602,1303,2.602,1304,2.602,1305,2.602,1306,2.602,1307,2.095,1308,1.971,1309,1.971,1310,2.403,1311,1.861,1312,2.602,1313,2.602,1314,2.237,1315,2.602,1316,2.602,1317,2.602,1318,4.104,1319,2.602,1320,2.602,1321,2.403,1322,2.602,1323,2.602,1324,2.602,1325,2.602,1326,2.602,1327,2.602,1328,2.602]],["title/components/SidebarComponent.html",[38,0.024,238,0.693]],["body/components/SidebarComponent.html",[3,0.217,4,0.192,5,0.168,7,0.348,16,0.017,23,0.493,36,0.242,37,0.843,38,0.042,43,0.192,47,1.266,48,0.765,50,0.217,75,1.109,76,1.058,77,1.058,78,1.162,79,1.39,80,1.262,81,0.462,82,0.242,83,0.843,115,0.803,117,0.524,120,0.691,165,0.013,166,0.013,167,0.884,168,0.969,169,0.843,180,0.969,181,1.058,182,1.109,183,0.969,184,1.395,185,0.969,186,0.868,187,0.969,188,0.884,189,0.969,190,0.843,191,0.556,192,0.348,193,0.969,194,0.884,195,0.969,196,1.217,197,0.884,198,0.913,199,1.33,200,0.884,201,1.33,202,0.843,203,0.691,204,0.884,205,0.969,206,0.884,207,0.926,208,0.969,209,0.884,210,0.969,211,0.884,212,0.969,213,0.884,214,0.969,215,0.884,216,0.969,217,0.884,218,0.969,219,0.884,220,0.843,221,0.969,222,0.884,223,0.913,224,0.969,225,0.843,226,0.969,227,0.884,228,0.969,229,0.969,230,0.884,231,0.969,232,0.843,233,0.969,234,0.884,235,0.969,236,0.884,237,0.884,238,1.272,239,0.969,240,0.969,241,0.884,242,0.926,243,0.884,244,0.926,245,0.969,246,0.843,247,0.264,248,0.969,249,0.884,250,0.969,251,0.969,253,4.297,256,3.335,362,2.168,427,3.46,448,4.297,457,1.217,611,2.271,620,2.37,622,2.168,762,3.073,1102,4.708,1103,5.398,1750,3.073,1961,4.189,1962,6.03,1963,6.096,1964,6.989,1965,5.26,1966,6.096,1967,6.096]],["title/components/SpinnerComponent.html",[38,0.024,48,0.599]],["body/components/SpinnerComponent.html",[3,0.221,4,0.266,5,0.172,7,0.355,16,0.017,23,0.503,36,0.196,37,0.86,38,0.042,43,0.196,48,1.109,50,0.221,75,1.123,76,1.071,77,1.071,79,1.392,80,1.263,81,0.472,82,0.247,83,0.86,115,0.819,117,0.534,120,0.705,165,0.013,166,0.013,167,0.901,168,0.989,169,0.86,180,0.989,181,1.071,182,1.123,183,0.989,184,1.405,185,0.989,186,0.879,187,0.989,188,0.901,189,0.989,190,0.86,191,0.567,192,0.355,193,0.989,194,0.901,195,0.989,196,1.232,197,0.901,198,0.925,199,1.342,200,0.901,201,1.342,202,0.86,203,0.705,204,0.901,205,0.989,206,0.901,207,0.944,208,0.989,209,0.901,210,0.989,211,0.901,212,0.989,213,0.901,214,0.989,215,0.901,216,0.989,217,0.901,218,0.989,219,0.901,220,0.86,221,0.989,222,0.901,223,0.925,224,0.989,225,0.86,226,0.989,227,0.901,228,0.989,229,0.989,230,0.901,231,0.989,232,0.86,233,0.989,234,0.901,235,0.989,236,0.901,237,0.901,238,0.901,239,0.989,240,0.989,241,0.901,242,0.944,243,0.901,244,0.944,245,0.989,246,0.86,247,0.196,248,0.989,249,0.901,250,0.989,251,0.989,367,1.54,457,1.232,542,3.111,622,2.195,810,2.41,1968,4.273,1969,6.172,1970,6.172,1971,6.172,1972,6.172,1973,6.172,1974,6.172,1975,6.172,1976,6.172,1977,6.172,1978,6.172,1979,6.172]],["title/components/StandardLayoutComponent.html",[38,0.024,241,0.693]],["body/components/StandardLayoutComponent.html",[3,0.208,4,0.185,5,0.162,7,0.334,16,0.017,23,0.473,36,0.282,37,0.81,38,0.041,43,0.185,47,1.216,48,0.735,50,0.208,75,1.081,76,1.031,77,1.031,78,1.133,79,1.387,80,1.259,81,0.444,82,0.233,83,0.81,115,0.772,117,0.503,120,0.664,165,0.013,166,0.013,167,0.849,168,0.931,169,0.81,180,0.931,181,1.031,182,1.081,183,0.931,184,1.375,185,0.931,186,0.846,187,0.931,188,0.849,189,0.931,190,0.81,191,0.534,192,0.334,193,0.931,194,0.849,195,0.931,196,1.186,197,0.849,198,0.89,199,1.305,200,0.849,201,1.305,202,0.81,203,0.664,204,0.849,205,0.931,206,0.849,207,0.889,208,0.931,209,1.253,210,0.931,211,0.849,212,0.931,213,1.253,214,0.931,215,0.849,216,0.931,217,0.849,218,0.931,219,0.849,220,0.81,221,0.931,222,0.849,223,0.89,224,0.931,225,0.81,226,0.931,227,0.849,228,0.931,229,0.931,230,0.849,231,0.931,232,0.81,233,0.931,234,0.849,235,0.931,236,0.849,237,0.849,238,1.253,239,0.931,240,0.931,241,1.253,242,1.247,243,0.849,244,0.889,245,0.931,246,0.81,247,0.185,248,0.931,249,0.849,250,0.931,251,0.931,259,5.052,287,4.127,457,1.186,532,4.59,611,2.214,613,5.128,614,5.128,618,5.617,622,2.114,625,4.025,660,2.214,1011,4.59,1050,5.942,1051,4.59,1102,5.319,1133,4.59,1301,3.869,1962,5.942,1980,4.025,1981,5.319,1982,6.887,1983,5.943,1984,6.887,1985,5.128,1986,5.943,1987,5.943,1988,5.943,1989,4.665,1990,4.665]],["title/components/TermsAndConditionsComponent.html",[38,0.024,243,0.693]],["body/components/TermsAndConditionsComponent.html",[3,0.183,4,0.162,5,0.142,7,0.293,16,0.017,19,3.099,23,0.416,27,1.555,36,0.216,37,0.711,38,0.039,43,0.162,47,1.068,48,0.645,50,0.183,62,1.09,75,0.994,76,0.948,77,0.948,78,1.041,79,1.377,80,1.249,81,0.39,82,0.204,83,0.711,115,0.678,117,0.442,120,0.583,165,0.012,166,0.012,167,0.745,168,0.818,169,0.711,180,0.818,181,0.948,182,0.994,183,0.818,184,1.308,185,0.818,186,0.777,187,0.818,188,0.745,189,0.818,190,0.711,191,0.469,192,0.293,193,0.818,194,0.745,195,0.818,196,1.09,197,0.745,198,0.818,199,1.226,200,0.745,201,1.226,202,0.711,203,0.583,204,0.745,205,0.818,206,0.745,207,0.781,208,0.818,209,0.745,210,0.818,211,0.745,212,0.818,213,0.745,214,0.818,215,0.745,216,0.818,217,0.745,218,0.818,219,0.745,220,0.711,221,0.818,222,0.745,223,0.818,224,0.818,225,0.711,226,0.818,227,0.745,228,0.818,229,0.818,230,0.745,231,0.818,232,0.711,233,0.818,234,0.745,235,0.818,236,0.745,237,0.745,238,0.745,239,0.818,240,0.818,241,0.745,242,0.781,243,1.192,244,1.366,245,0.818,246,0.711,247,0.27,248,0.818,249,0.745,250,0.818,251,0.818,256,3.126,266,3.099,287,3.099,297,3.555,346,2.034,367,1.751,376,2.132,424,3.309,428,3.099,457,1.09,494,1.856,509,4.618,540,4.218,546,2.916,608,1.942,620,2.185,626,3.309,876,4.265,900,3.099,948,3.309,1052,4.618,1054,4.218,1055,4.218,1065,4.218,1069,4.218,1072,3.534,1073,5.06,1192,4.218,1370,3.309,1523,2.753,1524,4.711,1541,4.711,1569,5.653,1615,4.218,1691,4.218,1703,4.711,1749,3.555,1981,4.218,1991,3.534,1992,3.534,1993,3.534,1994,5.461,1995,4.711,1996,5.461,1997,5.461,1998,5.461,1999,4.711,2000,4.711,2001,5.461,2002,5.461,2003,5.461,2004,5.461,2005,5.461,2006,5.461,2007,5.461,2008,4.711,2009,4.711,2010,5.461,2011,5.461,2012,5.461,2013,4.711,2014,5.461,2015,5.06,2016,4.711,2017,5.461,2018,4.711,2019,4.711,2020,4.711,2021,5.653,2022,5.461,2023,5.461,2024,5.247,2025,5.461,2026,5.653,2027,4.711,2028,6.521,2029,4.711,2030,5.461,2031,4.711,2032,5.461,2033,4.711,2034,4.711,2035,5.461,2036,6.552,2037,4.711,2038,4.711,2039,5.461,2040,4.711,2041,5.461,2042,4.711,2043,4.711,2044,5.461,2045,5.461,2046,5.461,2047,4.218,2048,4.711]],["title/injectables/UserPhotosService.html",[260,0.95,1375,2.032]],["body/injectables/UserPhotosService.html",[0,0.487,3,0.147,4,0.13,5,0.252,7,0.235,9,0.273,10,0.389,15,1.61,16,0.018,17,1.488,18,0.533,21,3.003,25,0.933,27,0.978,36,0.25,41,0.467,43,0.13,50,0.266,51,0.76,52,1.286,55,0.978,58,0.861,60,1.171,62,0.934,65,2.852,71,1.591,74,1.918,81,0.446,82,0.163,86,0.757,88,1.161,96,1.744,106,1.304,117,0.354,130,2.134,136,0.813,139,2.36,145,0.893,153,2.234,156,0.855,157,1.653,158,0.818,165,0.01,166,0.01,169,1.034,171,1.54,186,0.667,223,0.982,247,0.236,260,1.168,262,1.861,268,1.553,273,1.275,281,1.665,282,1.653,283,1.069,284,1.943,290,1.114,297,2.134,298,2.657,324,1.28,326,1.118,327,1.507,354,3.818,356,1.392,358,1.918,361,2.025,367,1.168,370,2.219,372,1.564,376,2.132,380,1.75,384,2.657,387,2.237,400,2.837,405,1.775,419,1.522,449,1.987,461,1.166,472,2.36,486,1.75,488,2.5,527,1.564,542,1.653,598,2.837,599,1.653,601,3.632,605,1.343,606,3.849,631,1.019,660,2.034,740,2.015,766,1.653,773,2.134,855,1.343,872,1.828,877,2.134,885,3.303,900,1.861,907,2.5,924,1.484,927,1.987,948,3.31,972,2.35,1124,2.763,1148,3.669,1150,3.949,1183,2.12,1196,2.5,1218,1.861,1273,3.181,1307,2.657,1329,3.291,1330,3.914,1331,2.134,1332,3.616,1333,2.532,1334,2.311,1335,3.616,1336,2.532,1337,2.532,1338,2.532,1339,2.532,1340,4.199,1341,2.532,1342,2.532,1343,3.616,1344,3.616,1345,3.616,1346,3.616,1347,4.218,1348,2.532,1349,3.616,1350,4.179,1351,4.367,1352,2.532,1353,2.311,1354,3.048,1355,2.311,1356,2.532,1357,2.311,1358,1.987,1359,4.131,1360,1.987,1361,2.134,1362,4.199,1363,3.828,1364,3.848,1365,2.134,1366,2.134,1367,3.3,1368,2.134,1369,2.311,1370,1.987,1371,2.311,1372,2.311,1373,2.311,1374,2.134,1375,2.5,1376,4.265,1377,4.601,1378,3.616,1379,3.616,1380,3.616,1381,3.3,1382,2.837,1383,3.616,1384,3.616,1385,4.866,1386,5.131,1387,3.3,1388,3.849,1389,4.218,1390,4.218,1391,3.616,1392,4.218,1393,4.218,1394,2.532,1395,2.532,1396,2.532,1397,2.311,1398,2.532,1399,2.532,1400,2.532,1401,2.532,1402,2.532,1403,2.311,1404,2.532,1405,2.532,1406,2.532,1407,3.616,1408,4.218,1409,3.616,1410,3.616,1411,2.532,1412,3.616,1413,2.532,1414,2.532,1415,1.564,1416,2.532,1417,3.048,1418,2.532,1419,2.532,1420,1.861,1421,2.532,1422,2.532,1423,2.532,1424,2.532,1425,3.616,1426,2.532,1427,1.653,1428,2.134,1429,2.532,1430,2.532,1431,2.532,1432,2.532,1433,2.532,1434,2.532,1435,2.532,1436,2.532,1437,2.532,1438,2.532,1439,2.532,1440,2.532,1441,2.532,1442,2.532,1443,2.532,1444,2.532,1445,2.532,1446,2.532,1447,2.311,1448,3.616,1449,2.532,1450,2.532,1451,3.61,1452,2.657,1453,3.3,1454,3.3,1455,3.616,1456,3.048,1457,3.616,1458,2.5,1459,3.616,1460,3.616,1461,4.218,1462,2.532,1463,2.532,1464,2.532,1465,2.532,1466,2.532,1467,2.532,1468,3.616,1469,2.532,1470,2.311,1471,2.532,1472,1.564,1473,2.532,1474,2.532,1475,2.532,1476,2.532,1477,2.532,1478,2.532,2049,4.682,2050,3.279,2051,3.279,2052,3.279,2053,3.279,2054,3.279]],["title/components/UserProfileComponent.html",[38,0.024,246,0.661]],["body/components/UserProfileComponent.html",[0,0.422,3,0.115,4,0.102,5,0.228,7,0.184,9,0.394,10,0.326,15,0.935,16,0.018,17,0.701,18,0.568,20,2.09,21,3.388,23,0.261,25,0.732,27,0.818,31,1.004,36,0.289,37,0.447,38,0.03,41,0.366,42,1.868,43,0.155,45,2.032,48,0.834,49,0.874,50,0.115,51,0.787,52,1.35,55,0.818,58,0.652,60,0.919,62,0.781,71,1.331,74,2.17,75,0.712,76,0.68,77,0.68,78,0.746,79,1.328,80,1.205,81,0.373,82,0.128,83,0.447,85,2.865,86,0.836,88,0.784,94,2.548,96,0.958,100,1.054,106,1.131,115,0.426,117,0.278,118,0.614,120,0.366,124,2.09,125,2.09,126,2.09,127,1.297,136,0.68,145,0.49,154,2.027,158,0.977,160,0.958,165,0.009,166,0.009,167,0.468,168,0.513,169,0.447,171,1.632,180,0.513,181,0.919,182,0.712,183,0.513,184,1.057,185,0.513,186,0.811,187,0.513,188,0.468,189,0.513,190,0.919,191,0.448,192,0.481,193,0.513,194,0.468,195,0.513,196,0.781,197,0.468,198,0.587,199,0.946,200,0.468,201,0.946,202,0.447,203,0.366,204,0.468,205,0.513,206,0.468,207,0.49,208,0.513,209,0.468,210,0.513,211,0.468,212,0.513,213,0.468,214,0.513,215,0.468,216,0.513,217,0.468,218,0.513,219,0.468,220,0.447,221,0.513,222,0.468,223,1.087,224,0.513,225,0.919,226,0.513,227,0.468,228,0.513,229,0.513,230,0.468,231,0.513,232,0.447,233,0.513,234,0.468,235,0.513,236,0.468,237,0.468,238,0.468,239,0.513,240,0.513,241,0.468,242,0.49,243,0.468,244,0.49,245,0.513,246,0.919,247,0.306,248,0.513,249,0.468,250,0.513,251,0.513,267,1.272,273,1.066,281,0.915,283,0.894,284,1.686,315,1.458,321,0.836,324,1.004,326,0.935,327,1.157,328,0.8,330,1.165,334,2.121,356,0.765,367,1.557,386,0.836,394,0.701,405,0.836,406,1.086,412,0.958,414,1.165,417,3.026,421,0.765,436,0.671,438,0.874,441,1.054,453,1.785,456,3.448,457,0.781,461,0.915,494,0.874,504,1.987,516,1.987,601,2.873,605,2.335,611,0.958,619,3.085,622,1.393,624,0.836,631,1.94,635,1.941,636,2.531,652,2.373,654,2.76,657,2.531,661,3.242,663,2.279,664,2.528,667,2.686,677,1.772,680,2.865,692,1.685,696,2.528,697,1.685,698,1.165,699,1.973,700,1.165,707,1.529,725,1.675,729,1.374,732,1.297,733,1.228,737,1.973,738,1.228,743,1.374,744,1.374,745,1.868,746,1.374,753,1.004,754,1.374,758,1.46,777,1.46,791,2.335,808,3.638,810,1.529,836,1.559,837,1.559,840,1.559,842,2.373,868,1.675,869,1.374,871,1.228,873,1.559,912,3.024,932,1.559,953,3.024,954,3.024,962,2.548,963,2.76,964,1.813,1062,1.529,1124,1.941,1126,1.559,1148,3.603,1149,1.772,1150,3.043,1183,1.165,1281,1.868,1329,3.438,1330,2.222,1350,3.454,1359,3.651,1363,1.46,1364,1.374,1375,2.531,1376,2.548,1382,2.872,1417,3.085,1428,2.548,1451,2.872,1452,1.46,1472,2.528,1479,1.559,1485,1.675,1490,3.661,1506,1.987,1512,3.024,1563,1.987,1667,3.734,1754,1.297,1794,1.46,1841,1.559,1844,1.559,1860,3.542,1872,2.222,1876,1.46,1877,1.813,1878,1.813,1879,1.813,2055,5.078,2056,1.813,2057,3.378,2058,3.378,2059,4.917,2060,4.089,2061,4.917,2062,4.089,2063,4.917,2064,4.089,2065,4.089,2066,4.917,2067,4.57,2068,3.915,2069,2.573,2070,2.573,2071,6.369,2072,3.378,2073,3.024,2074,3.378,2075,2.573,2076,3.661,2077,2.573,2078,5.55,2079,2.573,2080,2.573,2081,3.378,2082,3.378,2083,2.573,2084,2.573,2085,2.573,2086,2.573,2087,2.573,2088,3.341,2089,2.573,2090,2.573,2091,3.378,2092,3.378,2093,3.378,2094,2.22,2095,2.22,2096,2.22,2097,3.378,2098,2.22,2099,2.22,2100,2.22,2101,2.22,2102,3.378,2103,2.22,2104,2.22,2105,2.22,2106,2.22,2107,2.22,2108,2.22,2109,2.22,2110,2.22,2111,2.22,2112,2.22,2113,2.22,2114,2.22,2115,2.22,2116,2.22,2117,2.22,2118,2.22,2119,2.22,2120,2.22,2121,1.987,2122,3.378,2123,2.22,2124,2.22,2125,2.22,2126,3.915,2127,3.378,2128,2.573,2129,3.915,2130,3.915,2131,3.915,2132,3.915,2133,3.915,2134,3.915,2135,3.915,2136,3.915,2137,3.915,2138,3.915,2139,3.915,2140,3.915,2141,3.915,2142,2.573]],["title/interfaces/VerifiedFailed.html",[0,0.339,1277,2.16]],["body/interfaces/VerifiedFailed.html",[0,0.52,2,1.153,3,0.166,4,0.147,5,0.129,7,0.266,9,0.308,10,0.424,14,2.65,15,1.788,16,0.018,17,2.04,18,0.558,23,0.783,27,1.565,29,2.643,36,0.261,41,0.528,43,0.147,50,0.228,51,0.741,52,1.299,58,0.755,60,1.212,62,1.458,73,1.519,81,0.353,82,0.185,86,0.551,88,1.091,104,1.205,105,2.898,116,2.248,117,0.753,118,1.825,120,0.528,136,1.145,139,1.87,145,0.973,148,1.815,156,0.967,165,0.014,166,0.011,191,0.584,192,0.523,203,0.528,247,0.231,260,1.274,266,2.105,268,0.967,284,1.319,290,1.261,313,1.391,316,1.98,321,1.205,324,1.448,326,1.219,327,1.441,328,1.153,329,2.943,333,2.512,334,2.483,345,1.519,346,1.382,351,1.596,352,1.519,356,1.736,361,1.735,362,1.319,364,1.98,368,1.519,371,2.105,372,1.77,386,1.659,394,1.391,398,2.457,401,1.382,402,3.117,404,2.105,405,1.205,406,0.973,419,1.205,421,1.103,422,2.105,423,2.197,433,1.77,436,1.331,438,1.735,473,2.575,495,2.786,535,3.8,570,2.248,599,1.87,631,2.211,660,1.902,685,3.001,712,3.313,753,1.993,791,3.104,810,1.993,855,1.519,872,1.448,881,1.77,885,2.943,907,1.98,929,2.898,1062,1.448,1087,2.248,1183,3.086,1196,1.98,1205,2.248,1229,1.98,1260,3.313,1261,2.105,1262,2.105,1263,2.248,1264,3.598,1265,3.8,1266,4.115,1267,4.115,1268,4.115,1269,4.648,1270,2.614,1271,4.433,1272,2.614,1273,3.358,1274,2.248,1275,2.414,1276,2.105,1277,3.569,1278,3.094,1279,2.248,1280,2.414,1281,1.77,1282,3.598,1283,2.414,1284,3.094,1285,2.105,1286,2.614,1287,2.414,1288,2.614,1289,2.614,1290,3.598,1291,2.414,1292,2.614,1293,2.614,1294,2.614,1295,2.614,1296,2.614,1297,2.614,1298,4.433,1299,2.614,1300,2.614,1301,2.414,1302,2.614,1303,2.614,1304,2.614,1305,2.614,1306,2.614,1307,2.105,1308,1.98,1309,1.98,1310,2.414,1311,1.87,1312,2.614,1313,2.614,1314,2.248,1315,2.614,1316,2.614,1317,2.614,1318,4.115,1319,2.614,1320,2.614,1321,2.414,1322,2.614,1323,2.614,1324,2.614,1325,2.614,1326,2.614,1327,2.614,1328,2.614]],["title/components/VerifyEmailComponent.html",[38,0.024,249,0.693]],["body/components/VerifyEmailComponent.html",[3,0.185,4,0.164,5,0.143,7,0.296,9,0.344,10,0.457,11,3.329,14,2.299,16,0.018,18,0.508,23,0.749,36,0.289,37,0.717,38,0.039,41,0.589,43,0.164,46,2.655,47,1.078,48,1.036,49,1.405,50,0.185,51,0.749,52,1.047,58,0.473,73,1.693,75,1,76,0.953,77,0.953,78,1.047,79,1.377,80,1.25,81,0.588,82,0.206,83,0.717,85,2.621,86,0.666,88,1.164,92,2.944,102,3.329,106,1.473,115,0.684,117,0.446,120,1.051,122,2.207,123,1.871,136,0.953,165,0.014,166,0.012,167,0.752,168,0.825,169,0.717,171,1.502,180,0.825,181,0.953,182,1,183,0.825,184,1.312,185,0.825,186,0.782,187,0.825,188,0.752,189,0.825,190,1.141,191,0.629,192,0.442,193,0.825,194,0.752,195,0.825,196,1.096,197,0.752,198,0.823,199,1.232,200,0.752,201,1.232,202,0.717,203,0.589,204,0.752,205,0.825,206,0.752,207,0.788,208,0.825,209,0.752,210,0.825,211,0.752,212,0.825,213,0.752,214,0.825,215,0.752,216,0.825,217,0.752,218,0.825,219,0.752,220,0.717,221,0.825,222,0.752,223,0.823,224,0.825,225,0.717,226,0.825,227,0.752,228,0.825,229,0.825,230,0.752,231,0.825,232,0.717,233,0.825,234,0.752,235,0.825,236,0.752,237,0.752,238,0.752,239,0.825,240,0.825,241,0.752,242,0.788,243,0.752,244,0.788,245,0.825,246,0.717,247,0.244,248,0.825,249,1.196,250,0.825,251,0.825,267,1.785,298,3.118,313,1.496,327,1.2,356,1.634,396,2.487,406,1.047,441,1.693,457,1.096,471,2.364,473,2.748,495,3.138,510,3.872,620,2.195,624,1.343,630,2.505,635,2.528,637,3.872,700,1.871,905,3.567,906,3.567,1053,3.329,1258,3.329,1259,3.576,1859,4.016,1860,4.076,1873,2.691,1876,2.346,1908,4.243,1909,4.243,1910,3.872,1911,4.74,1913,3.872,1914,4.74,1915,4.74,1916,3.872,1917,2.691,1918,3.193,1919,4.74,1921,3.193,1927,4.243,2143,4.825,2144,4.825,2145,4.74,2146,4.016,2147,2.691,2148,4.134,2149,4.134,2150,5.494]],["title/interfaces/VerifyEmailResult.html",[0,0.339,2147,2.477]],["body/interfaces/VerifyEmailResult.html",[0,0.557,2,1.572,3,0.226,4,0.2,5,0.175,7,0.362,9,0.421,10,0.52,11,4.606,14,2.641,15,1.814,16,0.018,17,1.378,18,0.525,22,5.135,23,0.771,27,1.056,36,0.269,41,0.72,43,0.2,50,0.279,51,0.72,52,1.294,58,0.579,62,1.355,81,0.482,82,0.252,86,0.546,88,0.837,104,1.644,120,0.72,136,0.878,145,0.964,148,1.572,156,1.319,163,3.79,165,0.016,166,0.014,191,0.716,192,0.486,247,0.2,260,1.56,281,2.224,290,1.719,308,2.871,313,1.849,315,2.529,317,3.293,318,3.293,321,1.644,328,1.572,334,2.557,351,2.177,352,2.072,367,1.262,368,2.072,386,1.644,394,1.378,398,2.641,406,0.964,410,3.293,423,2.177,436,1.319,438,1.719,453,1.504,473,2.442,495,3.655,753,1.975,1308,2.701,1913,3.566,2143,3.566,2144,3.566,2146,3.293,2147,4.07,2151,4.83,2152,5.395,2153,5.395,2154,4.364,2155,4.364,2156,4.364,2157,4.364,2158,4.364,2159,4.364]],["title/injectables/VerifyEmailService.html",[260,0.95,2146,2.477]],["body/injectables/VerifyEmailService.html",[0,0.596,3,0.219,4,0.194,5,0.17,7,0.35,9,0.407,10,0.509,11,4.527,14,2.742,15,1.803,16,0.018,17,1.822,18,0.474,22,4.94,23,0.758,27,1.022,36,0.265,41,0.697,43,0.194,50,0.274,51,0.747,52,1.275,55,1.28,58,0.56,62,1.335,71,1.664,81,0.583,82,0.244,86,0.721,88,1.106,104,1.991,120,0.872,121,4.732,136,1.063,145,0.933,148,1.521,156,1.276,158,1.529,163,2.967,165,0.016,166,0.013,171,1.399,186,0.697,191,0.765,192,0.439,247,0.243,260,1.529,262,2.778,273,1.669,281,1.741,283,1.118,290,1.664,308,2.778,313,1.822,315,1.823,317,3.988,318,3.186,321,1.591,328,1.521,334,2.382,351,2.878,352,2.51,367,1.529,368,2.51,386,1.591,394,1.333,398,2.491,406,1.275,410,3.186,423,2.106,436,1.276,438,1.664,453,1.822,473,1.911,495,3.443,753,1.911,1308,3.271,1913,4.318,2143,4.714,2144,4.714,2146,3.988,2147,3.186,2151,3.781,2152,4.223,2153,4.223,2154,5.286,2155,5.286,2156,5.286,2157,5.286,2158,5.286,2159,5.286,2160,4.895,2161,4.895]],["title/interfaces/ViewModel.html",[0,0.339,1872,2.16]],["body/interfaces/ViewModel.html",[0,0.444,2,1.113,3,0.16,4,0.142,5,0.199,7,0.256,9,0.298,10,0.414,15,1.19,16,0.018,17,0.976,18,0.535,20,2.661,21,3.123,25,1.019,27,1.041,31,1.399,36,0.303,37,0.622,38,0.031,41,0.51,42,1.709,43,0.197,45,2.057,48,0.785,49,1.218,50,0.16,51,0.765,52,1.397,55,1.041,58,0.745,60,1.075,62,0.995,71,1.218,74,2.042,76,0.622,77,0.622,78,0.683,79,0.622,80,0.564,81,0.475,82,0.179,86,0.804,88,0.593,94,2.332,96,1.334,100,1.467,106,0.855,118,0.855,124,2.661,125,2.661,126,2.661,127,1.806,136,0.622,145,0.683,154,2.039,158,0.894,160,1.334,165,0.011,166,0.011,181,0.622,190,0.865,191,0.41,192,0.483,223,0.976,225,0.865,246,0.622,247,0.312,267,1.164,284,1.773,315,1.857,321,1.164,324,1.399,326,1.19,327,1.252,328,1.113,330,2.256,334,1.218,356,1.482,367,1.43,386,1.164,394,0.976,405,1.164,406,0.683,412,1.334,414,1.622,417,3.399,421,1.065,436,0.934,438,1.218,441,1.467,453,1.482,456,3.244,457,0.715,461,1.274,494,1.218,504,2.767,516,2.767,601,3.123,605,2.538,611,1.334,619,3.244,622,1.274,624,1.164,631,1.926,635,2.042,636,2.661,654,2.525,657,2.661,661,3.123,663,2.145,664,2.378,667,2.666,677,1.622,680,2.957,692,2.145,696,2.957,697,2.145,698,1.622,699,2.512,700,1.622,707,1.946,725,2.332,729,1.913,732,1.806,733,1.709,737,2.512,738,1.709,743,1.913,744,1.913,745,2.378,746,1.913,753,1.399,754,1.913,791,1.467,808,3.473,810,1.399,836,2.171,837,2.171,840,2.171,842,3.02,868,2.332,869,1.913,871,1.709,873,2.171,912,2.767,932,2.171,953,3.849,954,3.849,962,3.244,963,3.513,964,2.525,1062,1.399,1124,2.348,1126,2.171,1148,3.487,1149,1.622,1150,3.308,1183,1.622,1281,1.709,1329,1.709,1330,2.829,1350,3.02,1359,3.827,1363,2.033,1364,1.913,1375,2.661,1382,3.02,1417,4.389,1451,3.02,1452,2.033,1472,2.735,1479,2.171,1485,2.332,1490,2.767,1506,2.767,1512,3.849,1563,2.767,1667,2.525,1754,2.512,1794,2.033,1841,2.171,1844,2.171,1860,2.033,1872,3.253,1876,2.033,1877,2.525,1878,2.525,1879,2.525,2055,2.525,2056,2.525,2057,3.091,2058,3.091,2059,3.091,2060,3.091,2061,3.091,2062,3.091,2063,3.091,2064,3.091,2065,3.091,2066,4.3,2067,3.091,2071,6.506,2072,3.091,2073,2.767,2074,3.091,2076,3.849,2078,5.817,2081,3.091,2082,3.091,2088,3.513,2091,3.091,2092,3.091,2093,4.3,2094,3.091,2095,3.091,2096,3.091,2097,4.3,2098,3.091,2099,3.091,2100,3.091,2101,3.091,2102,4.3,2103,3.091,2104,3.091,2105,3.091,2106,3.091,2107,3.091,2108,3.091,2109,3.091,2110,3.091,2111,3.091,2112,3.091,2113,3.091,2114,3.091,2115,3.091,2116,3.091,2117,3.091,2118,3.091,2119,3.091,2120,3.091,2121,2.767,2122,4.3,2123,3.091,2124,3.091,2125,3.091]],["title/interfaces/ViewModel-1.html",[0,0.283,925,2.454,1872,1.803]],["body/interfaces/ViewModel-1.html",[0,0.447,2,1.558,3,0.224,4,0.199,5,0.174,9,0.417,10,0.517,15,1.197,16,0.018,17,1.365,18,0.572,36,0.307,37,0.87,38,0.039,41,0.714,43,0.246,45,1.491,46,2.676,47,1.307,48,0.979,49,1.704,50,0.224,51,0.717,58,0.574,60,0.87,76,0.87,77,0.87,78,0.955,79,0.87,80,0.789,82,0.25,86,0.729,88,1.029,92,2.392,96,1.867,106,1.197,122,2.676,123,2.269,136,0.87,145,1.185,160,1.867,165,0.014,166,0.014,232,0.87,247,0.312,324,1.957,326,1.484,327,1.477,406,0.955,457,1,494,1.704,611,1.867,620,2.212,622,1.783,624,1.629,627,3.187,635,2.547,667,2.676,692,2.676,699,3.134,732,2.526,733,2.392,810,1.957,868,3.262,869,2.676,1053,3.037,1056,4.802,1124,2.547,1126,3.037,1181,3.871,1194,3.871,1523,2.526,1750,3.784,1801,3.037,1811,3.32,1856,3.871,1857,4.324,1858,4.324,1859,3.262,1860,2.845,1863,4.324,1868,4.324,1869,3.871,1871,5.365,1872,3.837,1873,3.262,1874,4.324,1875,4.324,1876,2.845,1877,3.533,1878,3.533,1879,3.533,1880,4.324,1881,4.324,1882,5.365,1883,4.324,1884,4.324]],["title/coverage.html",[2162,4.014]],["body/coverage.html",[0,0.673,1,2.197,5,0.117,6,3.912,16,0.018,18,0.581,38,0.049,48,0.532,59,2.379,60,0.586,83,0.586,154,1.974,165,0.01,166,0.01,188,0.614,190,0.586,192,0.342,194,0.614,197,0.614,200,0.614,202,0.586,203,0.481,204,0.614,206,0.614,209,0.614,211,0.614,213,0.614,215,0.614,217,0.614,219,0.614,222,0.614,223,0.506,225,0.586,227,0.614,230,0.614,232,0.586,234,0.614,236,0.614,237,0.614,238,0.614,241,0.614,243,0.614,246,0.586,247,0.134,249,0.614,252,2.913,260,1.651,261,2.379,263,2.913,264,2.046,265,2.913,305,2.197,306,3.861,307,3.861,308,3.755,328,1.049,332,2.046,343,2.197,350,2.046,380,3.532,440,2.913,441,1.383,442,2.913,453,1.422,587,2.913,607,2.913,627,1.453,628,4.255,629,3.692,630,3.861,678,2.607,692,2.057,701,2.379,702,2.607,703,2.046,704,1.803,705,1.803,707,1.318,708,2.197,709,2.197,781,3.692,782,4.306,791,1.383,811,2.607,850,2.379,851,4.491,852,4.491,873,2.046,898,3.692,899,2.913,911,2.379,919,2.607,932,2.046,945,2.379,946,4.662,947,4.662,955,2.607,956,2.607,959,2.607,977,2.913,987,4.287,988,4.287,989,4.287,1019,2.607,1029,2.607,1048,2.913,1074,3.692,1075,3.692,1090,2.607,1101,2.913,1152,3.692,1165,2.607,1178,2.913,1200,3.692,1201,3.692,1202,3.692,1246,2.607,1260,1.916,1261,4.012,1262,4.012,1263,4.122,1276,1.916,1277,1.916,1279,2.046,1284,2.046,1285,1.916,1329,3.521,1330,3.861,1331,4.428,1351,2.046,1354,5.227,1360,2.046,1365,2.197,1368,2.197,1374,2.197,1375,1.803,1479,3.364,1480,2.913,1481,2.913,1485,3.112,1486,3.692,1514,2.607,1520,2.913,1521,2.913,1522,2.913,1713,4.122,1715,2.046,1723,2.046,1746,2.046,1759,2.046,1798,2.046,1811,1.803,1852,2.913,1856,3.692,1872,2.713,1895,2.913,1917,2.197,1939,2.607,1961,2.913,1968,2.913,1980,2.913,1991,2.913,1992,2.913,1993,2.913,2055,3.912,2056,3.912,2088,2.379,2143,3.912,2144,3.912,2146,2.197,2147,2.197,2162,2.607,2163,3.376,2164,3.376,2165,7.973,2166,2.913,2167,7.839,2168,2.913,2169,5.497,2170,6.037,2171,2.913,2172,2.913,2173,2.913,2174,2.913,2175,2.913,2176,2.913,2177,2.913,2178,2.913,2179,2.913,2180,2.913,2181,2.913,2182,4.287,2183,7.477,2184,4.781,2185,3.376,2186,3.376,2187,4.781,2188,2.913,2189,2.913,2190,7.068,2191,6.037,2192,4.781,2193,3.376,2194,3.376,2195,2.913,2196,3.376,2197,3.376,2198,2.913,2199,2.913,2200,3.376,2201,6.803,2202,3.376,2203,3.376,2204,3.376,2205,3.376,2206,4.781,2207,3.376,2208,3.376,2209,6.037,2210,4.781,2211,3.376,2212,3.376,2213,4.789,2214,4.125,2215,4.125,2216,2.913,2217,2.913,2218,2.913,2219,2.913,2220,2.913,2221,2.913,2222,2.913,2223,4.781,2224,3.376,2225,3.376,2226,3.376,2227,2.913,2228,3.376,2229,3.376,2230,4.125,2231,3.376,2232,3.376]],["title/dependencies.html",[2233,2.741,2234,3.227]],["body/dependencies.html",[16,0.017,43,0.228,47,1.501,118,1.375,165,0.015,166,0.015,288,5.222,289,4.098,326,1.375,399,3.269,624,1.871,697,2.478,1136,4.969,1137,4.969,1138,6.193,1139,4.969,1140,6.193,1141,6.193,2234,4.059,2235,5.759,2236,7.821,2237,5.759,2238,5.759,2239,5.759,2240,5.759,2241,5.759,2242,5.759,2243,5.759,2244,5.759,2245,7.179,2246,5.759,2247,4.969,2248,5.759,2249,5.759,2250,5.759,2251,5.759,2252,5.759,2253,5.759,2254,5.759,2255,5.759,2256,5.759]],["title/index.html",[9,0.264,2257,2.741,2258,2.741]],["body/index.html",[16,0.015,25,1.665,27,1.425,52,1.115,80,0.922,165,0.015,166,0.015,220,1.016,253,4.124,256,3.448,505,3.321,616,4.52,626,3.546,627,2.518,871,3.448,950,3.809,1049,4.124,1149,2.649,1415,2.792,1612,5.049,1627,4.124,1729,4.443,1806,3.546,2047,5.272,2234,4.124,2259,5.049,2260,7.226,2261,6.234,2262,6.825,2263,6.825,2264,5.852,2265,6.234,2266,5.049,2267,5.852,2268,5.852,2269,7.226,2270,5.852,2271,5.852,2272,5.852,2273,5.852,2274,5.852,2275,5.852,2276,5.852,2277,5.852,2278,5.852,2279,5.852]],["title/license.html",[2024,2.24,2257,2.741,2258,2.741]],["body/license.html",[0,0.433,2,0.978,4,0.291,5,0.083,13,1.859,16,0.011,18,0.186,19,2.581,20,0.753,25,1.664,26,1.859,27,1.498,31,0.551,36,0.056,38,0.026,40,1.09,60,0.843,62,0.282,66,0.711,73,0.578,74,1.29,82,0.07,85,0.673,86,0.741,88,0.233,100,0.986,104,1.981,118,0.337,126,0.753,131,3.544,134,1.859,143,1.859,157,0.711,161,0.918,165,0.007,166,0.005,171,0.322,175,1.987,198,0.626,242,0.6,244,1.357,247,0.246,255,2.874,257,2.756,268,0.97,273,0.384,284,0.502,287,0.801,312,1.285,313,0.384,329,1.213,330,0.639,340,0.918,346,0.897,357,0.995,358,1.524,361,0.818,367,1.702,370,0.897,375,0.918,376,1.453,381,2.718,382,2.219,384,0.801,391,1.697,401,1.386,412,0.897,415,2.422,419,1.357,423,0.607,424,0.855,428,2.756,433,0.673,434,0.995,449,0.855,464,2.431,471,0.607,478,0.801,480,1.217,481,2.255,485,2.077,486,0.753,494,1.815,508,2.431,509,4.214,510,1.697,514,3.952,518,1.217,519,2.944,523,1.217,528,3.21,529,2.431,531,2.904,532,1.09,533,3.21,534,5.844,537,2.944,543,1.217,546,2.23,550,4.414,551,5.147,554,3.21,581,1.09,582,3.226,584,3.603,585,4.772,598,1.908,599,2.448,601,0.711,603,4.917,605,1.29,608,0.502,616,1.859,617,2.23,631,1.771,633,1.217,634,0.711,660,0.897,675,3.21,707,0.551,716,1.957,732,2.691,738,1.149,740,0.607,745,0.673,756,0.918,762,1.213,763,0.855,799,2.716,854,2.431,859,3.014,876,2.049,881,0.673,892,1.09,900,2.581,924,2.059,925,3.226,927,2.531,928,3.603,948,3.352,949,1.217,950,0.918,1011,1.09,1015,1.217,1042,2.077,1052,4.017,1053,1.459,1054,5.451,1055,3.952,1060,0.801,1062,0.94,1064,2.716,1069,5.305,1073,4.708,1082,1.859,1103,1.09,1124,0.986,1170,2.23,1183,2.059,1191,1.217,1192,2.431,1218,1.366,1229,1.285,1232,1.217,1237,1.366,1249,1.787,1258,0.855,1259,2.049,1265,0.918,1273,0.753,1274,0.855,1278,0.855,1280,0.918,1281,0.673,1308,3.255,1314,0.855,1321,1.567,1334,2.622,1353,0.995,1355,3.899,1358,1.908,1364,1.987,1366,0.918,1370,1.908,1403,0.995,1415,3.719,1427,3.073,1428,0.918,1447,3.205,1452,2.581,1454,3.205,1456,1.567,1470,0.995,1472,0.673,1523,0.711,1526,2.077,1529,0.801,1534,2.077,1539,4.772,1543,3.751,1556,1.217,1560,2.874,1562,1.217,1564,2.077,1570,2.716,1571,1.217,1575,4.123,1580,2.077,1581,2.716,1582,1.217,1589,2.716,1593,3.923,1594,2.077,1599,1.217,1607,2.077,1614,2.077,1615,1.09,1616,0.855,1624,3.923,1625,1.217,1626,3.21,1627,4.297,1628,4.606,1631,2.077,1635,1.217,1642,1.217,1644,1.217,1645,1.217,1647,1.217,1652,1.217,1654,2.716,1655,1.217,1657,2.077,1658,1.217,1660,3.603,1661,2.077,1663,2.716,1664,1.217,1665,1.217,1666,2.077,1672,5.351,1679,2.077,1685,5.576,1686,2.716,1687,1.217,1688,1.217,1690,2.716,1691,2.874,1692,6.369,1694,1.217,1695,2.077,1705,5.305,1706,1.217,1708,1.217,1711,1.217,1722,2.96,1753,0.855,1754,3.359,1771,1.459,1778,1.908,1781,2.255,1783,0.855,1790,1.459,1792,0.855,1800,0.918,1810,2.049,1832,2.422,1842,3.6,1843,0.918,1849,0.918,1910,2.219,1916,0.995,1965,1.217,1981,1.09,1985,1.217,1995,1.217,1999,2.716,2000,4.19,2008,5.639,2009,2.077,2013,4.19,2015,1.859,2016,1.217,2018,2.077,2019,2.077,2020,3.21,2021,1.217,2024,5.511,2026,5.045,2027,3.603,2028,5.997,2029,3.603,2031,1.217,2033,1.217,2034,2.716,2037,2.077,2038,2.716,2040,5.351,2042,2.077,2043,2.716,2047,2.431,2048,2.077,2121,3.952,2127,1.217,2145,1.217,2151,1.09,2162,1.859,2169,1.217,2227,1.217,2265,3.21,2266,5.844,2280,6.536,2281,1.217,2282,1.411,2283,3.148,2284,5.116,2285,6.602,2286,4.548,2287,1.411,2288,1.411,2289,2.407,2290,4.176,2291,3.148,2292,6.096,2293,1.411,2294,1.411,2295,1.411,2296,2.407,2297,4.548,2298,1.411,2299,1.411,2300,5.116,2301,1.411,2302,1.411,2303,6.096,2304,7.443,2305,2.407,2306,4.856,2307,4.548,2308,1.411,2309,1.411,2310,3.721,2311,5.116,2312,5.116,2313,2.716,2314,1.411,2315,3.721,2316,1.411,2317,1.411,2318,2.407,2319,3.721,2320,2.407,2321,4.176,2322,2.407,2323,3.721,2324,1.217,2325,4.856,2326,1.411,2327,4.856,2328,1.411,2329,5.116,2330,2.407,2331,4.176,2332,1.411,2333,1.411,2334,1.411,2335,2.407,2336,1.411,2337,3.148,2338,1.411,2339,1.411,2340,1.411,2341,1.411,2342,5.116,2343,1.411,2344,1.411,2345,1.411,2346,1.411,2347,1.411,2348,2.407,2349,1.411,2350,1.411,2351,1.411,2352,2.407,2353,2.407,2354,1.411,2355,1.411,2356,2.407,2357,2.407,2358,1.411,2359,2.407,2360,2.407,2361,1.411,2362,1.411,2363,2.407,2364,3.148,2365,2.407,2366,1.411,2367,1.411,2368,4.548,2369,1.411,2370,1.411,2371,1.411,2372,1.411,2373,2.407,2374,3.148,2375,1.411,2376,1.411,2377,1.411,2378,3.721,2379,3.148,2380,1.411,2381,3.148,2382,1.411,2383,1.411,2384,1.411,2385,3.148,2386,1.411,2387,2.407,2388,2.407,2389,1.411,2390,1.411,2391,3.721,2392,5.116,2393,1.411,2394,3.148,2395,2.407,2396,7.329,2397,3.148,2398,5.339,2399,3.721,2400,2.407,2401,1.411,2402,3.148,2403,2.407,2404,2.407,2405,3.721,2406,1.411,2407,3.148,2408,1.411,2409,6.911,2410,2.407,2411,1.411,2412,5.116,2413,1.411,2414,6.202,2415,3.721,2416,5.116,2417,5.699,2418,1.411,2419,1.411,2420,1.411,2421,1.411,2422,1.411,2423,1.411,2424,3.148,2425,3.148,2426,1.411,2427,1.411,2428,1.411,2429,1.411,2430,1.411,2431,1.411,2432,1.411,2433,2.407,2434,5.531,2435,1.411,2436,1.411,2437,1.411,2438,4.176,2439,3.148,2440,3.148,2441,3.148,2442,1.411,2443,1.411,2444,4.176,2445,1.411,2446,1.411,2447,1.411,2448,1.411,2449,3.148,2450,1.411,2451,1.411,2452,1.411,2453,1.411,2454,2.407,2455,1.411,2456,1.411,2457,2.407,2458,1.411,2459,2.407,2460,2.407,2461,1.411,2462,2.407,2463,4.176,2464,1.411,2465,1.411,2466,4.548,2467,1.411,2468,1.411,2469,3.721,2470,1.411,2471,4.176,2472,1.411,2473,2.407,2474,1.411,2475,1.411,2476,3.148,2477,3.148,2478,1.411,2479,1.411,2480,1.411,2481,1.411,2482,1.411,2483,2.407,2484,2.407,2485,2.407,2486,5.979,2487,2.407,2488,1.411,2489,1.411,2490,1.411,2491,1.411,2492,1.411,2493,1.411,2494,3.148,2495,1.411,2496,1.411,2497,4.176,2498,4.176,2499,1.411,2500,3.148,2501,1.411,2502,1.411,2503,1.411,2504,2.407,2505,1.411,2506,1.411,2507,1.411,2508,1.411,2509,1.411,2510,1.411,2511,2.407,2512,2.407,2513,1.411,2514,3.148,2515,1.411,2516,1.411,2517,2.407,2518,1.411,2519,1.411,2520,1.411,2521,1.411,2522,2.407,2523,2.407,2524,2.077,2525,5.339,2526,2.407,2527,4.548,2528,1.411,2529,1.411,2530,2.407,2531,3.148,2532,3.148,2533,3.721,2534,3.721,2535,3.148,2536,3.721,2537,3.148,2538,1.411,2539,4.176,2540,3.148,2541,2.407,2542,2.407,2543,4.176,2544,2.407,2545,2.407,2546,3.148,2547,6.096,2548,4.176,2549,1.411,2550,1.411,2551,3.148,2552,3.148,2553,2.407,2554,1.411,2555,1.411,2556,1.411,2557,1.411,2558,1.411,2559,3.148,2560,1.411,2561,1.411,2562,2.407,2563,1.411,2564,2.407,2565,3.148,2566,1.411,2567,1.411,2568,1.411,2569,2.407,2570,2.407,2571,4.548,2572,6.664,2573,3.148,2574,2.407,2575,2.407,2576,2.407,2577,2.407,2578,2.407,2579,1.411,2580,1.411,2581,1.411,2582,1.411,2583,2.407,2584,1.411,2585,4.176,2586,1.411,2587,1.411,2588,1.411,2589,2.407,2590,1.411,2591,2.407,2592,5.116,2593,1.411,2594,1.411,2595,1.411,2596,1.411,2597,2.077,2598,1.411,2599,1.411,2600,3.148,2601,2.407,2602,3.721,2603,1.411,2604,1.411,2605,1.411,2606,1.411,2607,2.407,2608,1.411,2609,1.411,2610,2.716,2611,3.721,2612,1.411,2613,2.407,2614,1.411,2615,1.411,2616,1.411,2617,1.411,2618,1.411,2619,1.411,2620,1.411,2621,1.411,2622,1.411,2623,1.217,2624,1.411,2625,1.411,2626,1.411,2627,1.411,2628,3.721,2629,1.411,2630,1.411,2631,1.411,2632,1.411,2633,1.411,2634,1.411,2635,1.411,2636,1.411,2637,4.856,2638,1.411,2639,1.411,2640,3.148,2641,1.411,2642,3.148,2643,1.411,2644,1.411,2645,1.411,2646,1.411,2647,1.411,2648,1.411,2649,1.411,2650,1.411,2651,1.411,2652,1.411,2653,1.411,2654,2.407,2655,2.407,2656,1.411,2657,3.148,2658,1.411,2659,1.411,2660,2.407,2661,1.411,2662,2.407,2663,1.411,2664,1.411,2665,2.407,2666,2.407,2667,1.411,2668,1.411,2669,1.411,2670,1.411,2671,1.411,2672,3.721,2673,1.411,2674,1.411,2675,1.411,2676,1.411,2677,1.411,2678,1.411,2679,2.407,2680,2.407,2681,2.407,2682,3.148,2683,1.411,2684,2.407,2685,1.411,2686,3.148,2687,1.411,2688,2.407,2689,1.411,2690,2.407,2691,1.411,2692,3.148,2693,2.407,2694,1.411,2695,1.411,2696,2.407,2697,6.773,2698,2.407,2699,1.411,2700,4.176,2701,5.531,2702,3.148,2703,1.411,2704,1.411,2705,3.721,2706,1.411,2707,3.148,2708,2.407,2709,1.411,2710,1.411,2711,1.411,2712,1.411,2713,1.411,2714,1.411,2715,1.411,2716,1.411,2717,3.721,2718,2.407,2719,1.411,2720,1.411,2721,3.148,2722,1.411,2723,2.407,2724,3.148,2725,2.407,2726,1.411,2727,1.411,2728,1.411,2729,2.407,2730,3.148,2731,1.411,2732,1.411,2733,2.407,2734,1.411,2735,1.411,2736,1.411,2737,1.411,2738,1.411,2739,1.411,2740,3.148,2741,2.407,2742,1.411,2743,1.411,2744,3.721,2745,1.411,2746,3.148,2747,1.411,2748,1.411,2749,1.411,2750,2.407,2751,1.411,2752,1.411,2753,1.411,2754,3.148,2755,2.407,2756,2.407,2757,1.411,2758,4.856,2759,2.407,2760,3.148,2761,3.721,2762,2.407,2763,1.411,2764,3.148,2765,1.411,2766,2.407,2767,1.411,2768,1.411,2769,1.411,2770,1.411,2771,1.411,2772,2.407,2773,1.411,2774,1.411,2775,1.411,2776,2.407,2777,1.411,2778,2.407,2779,1.411,2780,1.411,2781,1.411,2782,1.411,2783,1.411,2784,1.411,2785,1.411,2786,3.148,2787,1.411,2788,1.411,2789,1.411,2790,1.411,2791,1.411,2792,2.407,2793,1.411,2794,1.411,2795,1.411,2796,1.411,2797,1.411,2798,1.411,2799,1.411,2800,1.411,2801,1.411,2802,1.411,2803,1.411,2804,1.411,2805,1.411,2806,2.407,2807,1.411,2808,1.411,2809,1.411,2810,1.411,2811,1.411,2812,1.411,2813,1.411,2814,1.411,2815,3.148,2816,1.411,2817,2.407,2818,1.411,2819,1.411,2820,1.411,2821,1.411,2822,2.407,2823,2.407,2824,3.148,2825,1.411,2826,2.407,2827,1.411,2828,1.411,2829,1.411,2830,3.148,2831,2.407,2832,1.411,2833,2.407,2834,2.407,2835,1.411,2836,1.411,2837,1.411,2838,1.411,2839,1.411,2840,1.411,2841,1.411,2842,1.411,2843,2.407,2844,1.411,2845,1.411,2846,1.411,2847,1.411,2848,1.411,2849,1.411,2850,1.411,2851,1.411,2852,1.411,2853,1.411,2854,1.411,2855,2.407,2856,1.411,2857,1.411,2858,2.407,2859,1.411,2860,1.411,2861,1.411,2862,1.411,2863,1.411,2864,1.411,2865,1.411,2866,1.411,2867,1.411,2868,1.411,2869,1.411,2870,1.411,2871,1.411,2872,3.148,2873,2.407,2874,1.411,2875,1.411,2876,1.411,2877,1.411,2878,1.411,2879,1.411,2880,1.411,2881,1.411,2882,1.411,2883,1.411,2884,1.411,2885,2.407,2886,1.411,2887,1.411,2888,1.411,2889,1.411,2890,1.411,2891,1.411,2892,1.411,2893,1.411,2894,1.411,2895,1.411,2896,1.411,2897,1.411,2898,1.411,2899,1.411,2900,1.411,2901,1.411,2902,1.411,2903,1.411,2904,1.411]],["title/modules.html",[2905,4.483]],["body/modules.html",[16,0.015,165,0.015,166,0.015,2905,5.39]],["title/overview.html",[2906,4.483]],["body/overview.html",[2,1.929,16,0.015,75,1.129,165,0.015,166,0.015,262,3.522,1361,4.039,2281,5.353,2906,5.353,2907,6.205]],["title/properties.html",[10,0.381,2233,2.741]],["body/properties.html",[7,0.432,10,0.502,16,0.017,165,0.015,166,0.015,256,2.879,582,4.66,871,2.879,1705,4.66,1707,5.205,1750,3.041,1869,4.66,2015,4.66,2024,4.252,2259,5.205,2908,6.033,2909,6.033,2910,6.033,2911,6.033,2912,6.033,2913,6.033,2914,6.033,2915,6.033,2916,6.033,2917,6.033,2918,6.033,2919,6.033,2920,6.033]],["title/miscellaneous/typealiases.html",[2921,2.24,2922,4.578]],["body/miscellaneous/typealiases.html",[9,0.418,16,0.017,17,1.369,18,0.389,23,0.718,24,3.046,28,3.412,35,2.68,42,2.398,52,1.29,60,1.175,71,1.708,81,0.593,93,3.775,118,1.793,136,0.872,165,0.016,166,0.014,181,1.081,182,1.133,203,0.964,247,0.268,257,3.046,267,2.024,327,1.361,329,3.412,331,3.841,356,1.852,359,2.533,362,2.216,367,1.254,417,3.139,473,1.962,483,3.882,486,2.684,488,2.684,547,3.046,570,3.046,611,1.872,628,4.39,629,3.882,630,3.775,631,1.562,678,4.811,692,3.129,696,3.651,701,4.39,702,3.882,712,4.015,757,5.374,781,3.882,782,4.824,791,2.772,811,4.811,871,2.398,898,3.882,987,3.882,988,3.882,989,5.228,993,4.336,1006,4.336,1019,4.811,1026,4.811,1028,3.326,1029,4.811,1074,3.882,1075,3.882,1090,4.811,1092,3.882,1093,4.336,1152,3.882,1165,4.811,1205,3.046,1260,3.535,1261,3.535,1262,3.535,1263,4.288,1274,3.046,1275,3.271,1276,3.535,1277,3.535,1278,3.775,1279,3.775,1281,2.398,1283,3.271,1284,3.775,1329,2.972,1479,3.046,1485,3.271,1486,4.811,1513,4.336,1514,4.811,1754,2.533,1939,4.811,2055,3.542,2056,4.39,2076,3.882,2088,4.39,2182,3.882,2195,5.374,2921,3.542,2923,5.026,2924,6.229,2925,7.075,2926,6.229,2927,5.026,2928,5.026,2929,5.026,2930,5.374,2931,4.336,2932,5.026]],["title/miscellaneous/variables.html",[2921,2.24,2933,3.95]],["body/miscellaneous/variables.html",[1,1.301,6,1.409,9,0.166,10,0.267,11,2.442,15,1.525,16,0.018,17,1.801,18,0.555,20,2.151,21,2.326,23,0.513,24,2.797,25,1.147,27,0.417,29,0.905,33,1.135,35,0.86,39,1.544,42,1.923,45,1.504,46,1.734,52,1.082,53,1.544,54,1.544,55,1.612,56,1.824,57,1.544,58,0.868,59,2.265,60,1.178,61,1.544,62,1.529,63,1.544,65,0.905,66,1.008,70,1.067,73,2.071,80,0.506,81,0.19,82,0.1,84,1.067,96,0.745,100,0.819,102,1.947,104,0.65,108,1.135,117,0.216,118,1.493,123,1.824,124,3.152,125,3.152,126,3.031,136,0.347,145,0.381,148,1.943,153,0.954,154,2.485,155,3.004,156,0.521,157,1.008,158,1.872,159,1.409,160,0.745,161,1.301,162,2.092,163,1.211,165,0.007,166,0.007,167,0.585,175,2.464,186,0.457,191,0.528,192,0.406,198,0.3,202,0.347,220,0.347,247,0.266,256,0.954,257,1.947,261,1.409,267,1.755,268,0.838,270,1.725,277,3.476,282,1.008,283,1.155,287,1.135,306,1.211,307,1.211,308,1.824,309,1.301,313,0.544,315,2.115,327,1.331,328,0.999,330,0.905,331,1.135,338,1.135,339,2.623,340,1.301,341,1.409,342,2.265,343,2.092,344,1.409,345,0.819,346,1.719,347,1.409,352,0.819,353,1.008,359,1.008,361,0.679,365,1.409,367,1.005,370,2.012,376,1.573,386,1.5,387,0.819,394,1.097,398,1.501,399,3.065,401,1.197,406,0.381,412,0.745,414,1.824,417,3.716,419,1.309,421,1.504,427,1.135,433,0.954,436,0.521,449,1.211,453,2.018,456,2.623,461,0.711,463,1.544,464,1.544,473,0.78,478,1.135,481,1.211,486,2.464,488,1.716,490,2.772,495,0.954,503,1.947,505,1.135,519,1.409,527,0.954,537,2.265,546,1.716,548,2.772,596,1.725,605,1.316,608,0.711,610,1.725,611,1.719,617,1.067,626,2.442,627,1.734,631,1.435,660,0.745,663,0.86,664,0.954,670,3.004,677,1.824,680,2.413,685,0.954,686,1.135,687,2.287,692,1.986,696,2.577,698,2.289,703,1.947,704,1.716,705,2.884,707,1.974,708,3.291,709,2.092,711,1.301,716,3.07,733,1.923,735,2.442,737,2.031,738,0.954,740,1.383,756,3.291,760,1.544,766,1.008,819,3.112,820,3.565,833,1.544,850,1.409,851,2.265,852,3.564,855,0.819,856,4.001,857,1.725,858,4.294,859,1.62,863,3.565,864,2.482,865,2.772,866,1.725,869,1.067,871,1.923,872,0.78,873,1.947,874,1.725,875,3.253,876,1.301,877,2.623,878,2.772,879,2.482,880,1.725,881,2.907,882,3.253,883,1.725,884,2.482,885,1.008,886,1.725,887,2.772,888,1.725,889,2.772,890,2.772,891,2.772,892,1.544,893,1.725,894,1.725,895,1.725,896,1.725,897,1.725,911,3.807,913,3.476,914,1.725,915,1.725,916,1.725,917,1.725,918,1.725,919,2.482,920,1.725,921,1.725,922,1.725,923,1.725,924,1.455,926,1.725,927,1.947,929,1.135,930,1.725,931,1.544,932,1.947,933,2.772,934,1.725,935,1.725,936,1.725,937,3.982,938,1.725,939,1.725,940,1.725,941,1.725,942,1.725,943,1.725,944,1.725,945,2.84,946,1.544,947,3.565,950,2.092,951,1.725,955,2.482,956,2.482,958,1.725,959,2.482,960,1.725,961,1.725,962,3.695,963,2.84,964,4.001,965,3.982,966,2.772,967,2.772,968,1.947,969,2.772,972,1.383,973,1.725,974,1.725,975,1.725,976,1.725,983,3.476,984,3.476,1049,1.409,1060,3.626,1062,0.78,1071,3.565,1083,3.476,1148,1.62,1150,1.716,1170,1.067,1190,1.544,1200,1.544,1201,1.544,1202,2.482,1207,4.363,1218,1.135,1224,2.772,1225,1.725,1227,1.725,1229,1.067,1245,1.725,1246,2.482,1247,1.725,1248,1.725,1249,1.135,1254,1.135,1311,1.008,1314,1.211,1329,0.954,1330,1.135,1331,3.291,1357,1.409,1358,1.211,1359,1.135,1360,1.947,1361,1.301,1362,2.265,1363,1.135,1364,1.067,1365,2.092,1366,1.301,1367,1.409,1368,2.092,1369,1.409,1370,1.211,1371,1.409,1372,1.409,1373,1.409,1374,2.092,1388,1.409,1415,0.954,1453,1.409,1458,1.067,1499,2.442,1542,1.211,1543,1.544,1560,3.112,1567,1.725,1609,1.725,1627,2.265,1671,1.725,1678,1.211,1681,1.725,1713,1.211,1716,2.092,1717,2.092,1723,2.442,1724,2.092,1731,3.291,1732,1.301,1735,1.301,1737,1.301,1738,2.623,1739,1.301,1740,1.301,1741,1.301,1742,3.695,1745,1.301,1750,1.008,1751,2.092,1752,1.301,1753,1.211,1754,1.008,1755,1.301,1756,1.301,1757,1.301,1758,1.301,1759,1.947,1760,1.301,1761,1.301,1762,1.301,1763,1.301,1764,1.301,1765,1.301,1766,1.301,1767,1.301,1768,1.301,1769,1.301,1770,2.623,1771,1.211,1772,1.301,1773,1.301,1774,1.301,1775,2.092,1776,2.092,1777,1.301,1778,1.947,1779,1.301,1780,1.301,1781,1.211,1782,1.301,1783,1.211,1784,1.301,1785,1.301,1786,1.301,1787,1.301,1788,1.301,1789,1.301,1790,1.211,1791,1.301,1792,1.211,1793,1.301,1794,1.824,1795,1.301,1796,1.301,1798,1.947,1806,1.947,1916,2.265,1917,2.092,2073,1.544,2166,1.725,2168,2.772,2171,1.725,2172,2.772,2173,3.476,2174,1.725,2175,2.772,2176,1.725,2177,2.772,2178,2.772,2179,1.725,2180,2.772,2181,2.772,2182,1.544,2188,1.725,2189,2.772,2198,1.725,2199,2.772,2213,2.772,2214,1.725,2215,3.476,2216,3.476,2217,1.725,2218,2.772,2219,1.725,2220,1.725,2221,1.725,2222,2.772,2230,1.725,2234,1.409,2247,3.982,2261,1.725,2313,1.725,2324,1.725,2524,1.725,2597,2.772,2610,1.725,2623,1.725,2921,1.409,2930,1.725,2931,3.982,2933,1.725,2934,1.999,2935,1.999,2936,1.999,2937,4.03,2938,3.214,2939,1.999,2940,4.03,2941,4.03,2942,1.999,2943,3.214,2944,1.999,2945,1.999,2946,1.999,2947,1.999,2948,1.999,2949,1.999,2950,1.999,2951,1.999,2952,1.999,2953,1.999,2954,1.999,2955,1.999,2956,1.999,2957,1.999,2958,1.999,2959,1.999,2960,1.999,2961,1.999,2962,1.999,2963,1.999,2964,1.999,2965,1.999,2966,1.999,2967,1.999,2968,1.999,2969,1.999,2970,1.999,2971,1.999,2972,1.999,2973,1.999,2974,1.999,2975,1.999,2976,1.999,2977,1.999,2978,1.999,2979,1.999,2980,1.999,2981,1.999,2982,1.999,2983,1.999,2984,1.999,2985,1.999,2986,1.999,2987,1.999,2988,1.999,2989,1.999,2990,1.999,2991,1.999,2992,1.999,2993,1.999,2994,4.03,2995,3.214,2996,4.03,2997,4.03,2998,1.999,2999,4.03,3000,4.03,3001,5.903,3002,3.214,3003,1.999,3004,1.999,3005,4.03,3006,1.999,3007,4.03,3008,1.999,3009,3.214,3010,3.214,3011,1.999,3012,1.999,3013,3.214,3014,3.214,3015,3.214,3016,1.999,3017,4.616,3018,1.999,3019,3.214,3020,3.214,3021,1.999,3022,1.999,3023,1.999,3024,1.999,3025,1.999,3026,1.999,3027,1.999,3028,1.999,3029,1.999,3030,1.999,3031,1.999,3032,1.999,3033,3.214,3034,1.999,3035,1.999,3036,1.999,3037,1.999,3038,1.999,3039,1.999,3040,1.999,3041,1.999,3042,1.999,3043,1.999,3044,1.999,3045,1.999,3046,1.999,3047,1.999,3048,1.999,3049,1.999,3050,1.999,3051,4.03,3052,4.03,3053,1.999,3054,1.999,3055,1.999,3056,1.999,3057,1.999,3058,1.999,3059,1.999,3060,1.999,3061,1.999,3062,1.999,3063,1.999,3064,1.999,3065,1.999,3066,1.999,3067,1.999,3068,3.214,3069,1.999,3070,1.999,3071,1.999,3072,1.999,3073,1.999,3074,1.999,3075,1.999,3076,1.999,3077,1.999,3078,1.999,3079,1.999,3080,3.214,3081,1.999,3082,1.999,3083,1.999,3084,1.999,3085,1.999,3086,1.999,3087,1.999,3088,1.999,3089,3.214,3090,1.999,3091,1.999,3092,1.999,3093,1.999,3094,1.999,3095,1.999,3096,1.999,3097,1.999,3098,1.999,3099,1.999,3100,1.999,3101,1.999,3102,1.999,3103,1.999,3104,1.999,3105,1.999,3106,1.999,3107,1.999,3108,1.999,3109,1.999]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"components/QuizPresenterComponent.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":380,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/QuizListComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/UserPhotosService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2908,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":2256,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2209,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2184,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":925,"title":{"interfaces/ViewModel-1.html":{}},"body":{"interfaces/ControlProperties.html":{},"license.html":{}}}],["1.0.0",{"_index":2243,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2165,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2494,"title":{},"body":{"license.html":{}}}],["10/13",{"_index":2186,"title":{},"body":{"coverage.html":{}}}],["10/16",{"_index":2197,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1354,"title":{},"body":{"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"coverage.html":{}}}],["1000",{"_index":3032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":2504,"title":{},"body":{"license.html":{}}}],["11/16",{"_index":2206,"title":{},"body":{"coverage.html":{}}}],["11/17",{"_index":2203,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":596,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"miscellaneous/variables.html":{}}}],["13",{"_index":1694,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["13/19",{"_index":2192,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":2665,"title":{},"body":{"license.html":{}}}],["16",{"_index":2666,"title":{},"body":{"license.html":{}}}],["17",{"_index":2907,"title":{},"body":{"overview.html":{}}}],["19.0.0",{"_index":2239,"title":{},"body":{"dependencies.html":{}}}],["19.1.6",{"_index":2236,"title":{},"body":{"dependencies.html":{}}}],["1996",{"_index":2510,"title":{},"body":{"license.html":{}}}],["1:207926801743:web:e1402f665312fb7ab0813a",{"_index":3094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":927,"title":{},"body":{"interfaces/ControlProperties.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":2254,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2225,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":2224,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":2228,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2508,"title":{},"body":{"license.html":{}}}],["2007",{"_index":2283,"title":{},"body":{"license.html":{}}}],["207926801743",{"_index":3098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":2227,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["29",{"_index":2281,"title":{},"body":{"license.html":{},"overview.html":{}}}],["3",{"_index":928,"title":{},"body":{"interfaces/ControlProperties.html":{},"license.html":{}}}],["3.0",{"_index":2916,"title":{},"body":{"properties.html":{}}}],["3.0.0",{"_index":2248,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":2251,"title":{},"body":{"dependencies.html":{}}}],["3.svg",{"_index":1976,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["3/3",{"_index":2190,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2170,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2713,"title":{},"body":{"license.html":{}}}],["36",{"_index":1369,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["3rd",{"_index":602,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["4",{"_index":2540,"title":{},"body":{"license.html":{}}}],["4/4",{"_index":2201,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2205,"title":{},"body":{"coverage.html":{}}}],["404",{"_index":1227,"title":{},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["4096",{"_index":3035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4e05",{"_index":1553,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["5",{"_index":2566,"title":{},"body":{"license.html":{}}}],["5/5",{"_index":2187,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":2194,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":2208,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":344,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":1361,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["6.7.1",{"_index":2245,"title":{},"body":{"dependencies.html":{}}}],["6/10",{"_index":2200,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":2212,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":2229,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":2169,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["62",{"_index":2196,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":2202,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":2223,"title":{},"body":{"coverage.html":{}}}],["68",{"_index":2191,"title":{},"body":{"coverage.html":{}}}],["6b",{"_index":2590,"title":{},"body":{"license.html":{}}}],["6d",{"_index":2605,"title":{},"body":{"license.html":{}}}],["7",{"_index":2537,"title":{},"body":{"license.html":{}}}],["7.8.0",{"_index":2252,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":2226,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":2207,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2210,"title":{},"body":{"coverage.html":{}}}],["76",{"_index":2185,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2204,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":2193,"title":{},"body":{"coverage.html":{}}}],["8fa53c7fa497",{"_index":1555,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["9/12",{"_index":2211,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":3072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_$actionstate",{"_index":89,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["_$confirmdialog",{"_index":998,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["_$fileinput",{"_index":1489,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["_auth",{"_index":351,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["_basetitle",{"_index":271,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["_childroute",{"_index":2995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_confirmpasswordreset",{"_index":1306,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["_confirmpasswordreset(code",{"_index":1323,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["_doactioncode",{"_index":1928,"title":{},"body":{"injectables/RecoverEmailService.html":{}}}],["_doactioncode(oobcode",{"_index":407,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["_firestore",{"_index":1812,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["_metaservice",{"_index":1213,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["_modepaths",{"_index":90,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["_newpasswordsubject",{"_index":1286,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["_options",{"_index":1793,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["_quizcollection",{"_index":1813,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["_refreshfilessubject",{"_index":1389,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["_robotstag",{"_index":1214,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["_router",{"_index":92,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/QuizListComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel-1.html":{}}}],["_sendpasswordresetemail",{"_index":1929,"title":{},"body":{"injectables/RecoverEmailService.html":{}}}],["_sendpasswordresetemail(restoredemail",{"_index":435,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["_service",{"_index":1859,"title":{},"body":{"components/QuizListComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel-1.html":{}}}],["_state",{"_index":3062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_storage",{"_index":1390,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["_tasksubject",{"_index":1393,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["_title",{"_index":272,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["_userphotoservice",{"_index":1490,"title":{},"body":{"components/PhotoUploadComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["_verifycode",{"_index":1302,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["_verifycode(code",{"_index":1327,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["ability",{"_index":1665,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["above",{"_index":2692,"title":{},"body":{"license.html":{}}}],["absence",{"_index":2538,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1688,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["absolutely",{"_index":2884,"title":{},"body":{"license.html":{}}}],["absorb",{"_index":2270,"title":{},"body":{"index.html":{}}}],["abstractcontrol",{"_index":856,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["abuse",{"_index":2351,"title":{},"body":{"license.html":{}}}],["accept",{"_index":2718,"title":{},"body":{"license.html":{}}}],["acceptable",{"_index":1684,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["acceptance",{"_index":2717,"title":{},"body":{"license.html":{}}}],["access",{"_index":900,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["accessable",{"_index":1840,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["accessible",{"_index":1523,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/TermsAndConditionsComponent.html":{},"interfaces/ViewModel-1.html":{},"license.html":{}}}],["accomodate",{"_index":1304,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["accompanied",{"_index":2573,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":2867,"title":{},"body":{"license.html":{}}}],["accord",{"_index":2536,"title":{},"body":{"license.html":{}}}],["accordance",{"_index":1558,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["according",{"_index":2859,"title":{},"body":{"license.html":{}}}],["account",{"_index":362,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/typealiases.html":{}}}],["account's",{"_index":317,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["account'},{'name",{"_index":208,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["account.component.html",{"_index":997,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts",{"_index":989,"title":{},"body":{"components/DeleteAccountComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["account.component.ts:128",{"_index":1010,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:49",{"_index":1014,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:51",{"_index":1016,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:53",{"_index":1017,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:55",{"_index":1018,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:56",{"_index":1020,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:58",{"_index":1021,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:60",{"_index":1022,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:61",{"_index":1023,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:62",{"_index":1024,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:64",{"_index":1013,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:65",{"_index":1003,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:90",{"_index":1004,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:99",{"_index":1008,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account/delete",{"_index":988,"title":{},"body":{"components/DeleteAccountComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["accounts",{"_index":427,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/HeaderComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["acd7",{"_index":1554,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["achieve",{"_index":2871,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":2479,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":2762,"title":{},"body":{"license.html":{}}}],["acting",{"_index":2005,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["action",{"_index":29,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/variables.html":{}}}],["actioncodesettings#mode",{"_index":151,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["actioncodesettings#oobcode",{"_index":152,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["actioncodestate",{"_index":1,"title":{"interfaces/ActionCodeState.html":{}},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":66,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["actions'},{'name",{"_index":187,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["actions/get",{"_index":1918,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["actionscomponent",{"_index":83,"title":{"components/ActionsComponent.html":{}},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["activatedroutesnapshot",{"_index":2996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activities",{"_index":2407,"title":{},"body":{"license.html":{}}}],["activity",{"_index":581,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["actual",{"_index":1916,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["actual_component",{"_index":251,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["actually",{"_index":633,"title":{},"body":{"components/ChangeEmailComponent.html":{},"license.html":{}}}],["adapt",{"_index":2389,"title":{},"body":{"license.html":{}}}],["add",{"_index":1781,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["adddoc",{"_index":1726,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["adddoc(this._quizcollection",{"_index":1823,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["added",{"_index":2535,"title":{},"body":{"license.html":{}}}],["adding",{"_index":1777,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["additional",{"_index":2547,"title":{},"body":{"license.html":{}}}],["additionally",{"_index":739,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/RecoverEmailComponent.html":{}}}],["address",{"_index":313,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["addressed",{"_index":2127,"title":{},"body":{"components/UserProfileComponent.html":{},"license.html":{}}}],["addresses",{"_index":429,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["adds",{"_index":970,"title":{},"body":{"interfaces/ControlStruct.html":{}}}],["adequate",{"_index":1662,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["administrator",{"_index":590,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["adopted",{"_index":2507,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":2646,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1708,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["affects",{"_index":2647,"title":{},"body":{"license.html":{}}}],["affero",{"_index":2815,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":2745,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":2474,"title":{},"body":{"license.html":{}}}],["afterwards",{"_index":349,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["again",{"_index":105,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["against",{"_index":2524,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["age",{"_index":1693,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aggregate",{"_index":2559,"title":{},"body":{"license.html":{}}}],["agpl",{"_index":2915,"title":{},"body":{"properties.html":{}}}],["agree",{"_index":1556,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["agreed",{"_index":2844,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1654,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["agreements",{"_index":1632,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aim",{"_index":2347,"title":{},"body":{"license.html":{}}}],["aizasyb75fqz0szrfvclvpil9_t9upqllyplnci",{"_index":3092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alias",{"_index":2183,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2923,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliasing",{"_index":462,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["alleging",{"_index":2753,"title":{},"body":{"license.html":{}}}],["allow",{"_index":157,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["allowed",{"_index":1358,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["allowing",{"_index":1545,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["allows",{"_index":1092,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/PrivacyPolicyComponent.html":{},"miscellaneous/typealiases.html":{}}}],["along",{"_index":2539,"title":{},"body":{"license.html":{}}}],["already",{"_index":478,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["altered",{"_index":1747,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["alternative",{"_index":2586,"title":{},"body":{"license.html":{}}}],["although",{"_index":2343,"title":{},"body":{"license.html":{}}}],["always",{"_index":425,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["amend",{"_index":1668,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["amp",{"_index":1072,"title":{},"body":{"components/FooterComponent.html":{},"components/TermsAndConditionsComponent.html":{}}}],["analysis",{"_index":1596,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["analytics",{"_index":2959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["analyze",{"_index":1610,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anchorscrolling",{"_index":2991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ancillary",{"_index":2719,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":2331,"title":{},"body":{"license.html":{}}}],["angular",{"_index":871,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/PageNotFoundComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":2235,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":624,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"components/QuizListComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":2237,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":43,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"components/QuizPresenterComponent.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":861,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{}}}],["angular/fire",{"_index":2238,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/app",{"_index":1725,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["angular/fire/auth",{"_index":321,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{}}}],["angular/fire/firestore",{"_index":1736,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["angular/fire/storage",{"_index":1343,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["angular/forms",{"_index":697,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":288,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"components/PageNotFoundComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":47,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"components/CentralLayoutComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizListComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel-1.html":{},"dependencies.html":{}}}],["angular/service",{"_index":2241,"title":{},"body":{"dependencies.html":{}}}],["another",{"_index":496,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["anti",{"_index":2496,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":1691,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["anything",{"_index":2399,"title":{},"body":{"license.html":{}}}],["anyway",{"_index":1257,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["apikey",{"_index":3091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":80,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.appspot.com",{"_index":3101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.config.ts",{"_index":3104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.firebaseapp.com",{"_index":3096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.provider.ts",{"_index":2172,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.web.app",{"_index":2912,"title":{},"body":{"properties.html":{}}}],["app/core/user.token",{"_index":699,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/QuizListComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["app/shared/constants",{"_index":952,"title":{},"body":{"interfaces/ControlStruct.html":{}}}],["app/shared/control",{"_index":953,"title":{},"body":{"interfaces/ControlStruct.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["app/shared/spinner/spinner.component",{"_index":49,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/QuizListComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["appcheck",{"_index":2964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":188,"title":{"components/AppComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2168,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appears",{"_index":1841,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["appid",{"_index":3093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicable",{"_index":1628,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["application",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/FooterComponent.html":{},"components/LogoutComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/TermsAndConditionsComponent.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":2953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":2900,"title":{},"body":{"license.html":{}}}],["application’s",{"_index":1583,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["applied",{"_index":1849,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{}}}],["applies",{"_index":1321,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{}}}],["apply",{"_index":104,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["applyactioncode",{"_index":318,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["applyactioncode(this._auth",{"_index":410,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["applying",{"_index":316,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["applyresult",{"_index":305,"title":{"interfaces/ApplyResult.html":{}},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"coverage.html":{}}}],["appropriate",{"_index":2416,"title":{},"body":{"license.html":{}}}],["appropriately",{"_index":2529,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":2863,"title":{},"body":{"license.html":{}}}],["apptitlestrategyservice",{"_index":261,"title":{"injectables/AppTitleStrategyService.html":{}},"body":{"injectables/AppTitleStrategyService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["area",{"_index":532,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/StandardLayoutComponent.html":{},"license.html":{}}}],["areas",{"_index":1612,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"index.html":{}}}],["aren't",{"_index":1426,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["arguments",{"_index":1114,"title":{},"body":{"components/HeaderComponent.html":{}}}],["aria",{"_index":663,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["arise",{"_index":2358,"title":{},"body":{"license.html":{}}}],["arising",{"_index":2847,"title":{},"body":{"license.html":{}}}],["around",{"_index":1914,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["arrange",{"_index":2778,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":2786,"title":{},"body":{"license.html":{}}}],["array",{"_index":1420,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"injectables/UserPhotosService.html":{}}}],["arrays",{"_index":2278,"title":{},"body":{"index.html":{}}}],["article",{"_index":2503,"title":{},"body":{"license.html":{}}}],["ask",{"_index":1559,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["asking",{"_index":2317,"title":{},"body":{"license.html":{}}}],["assert",{"_index":2328,"title":{},"body":{"license.html":{}}}],["assets",{"_index":2735,"title":{},"body":{"license.html":{}}}],["assistance",{"_index":1927,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["associated",{"_index":480,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["assume",{"_index":2839,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":2866,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":2681,"title":{},"body":{"license.html":{}}}],["assures",{"_index":2375,"title":{},"body":{"license.html":{}}}],["async",{"_index":406,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"miscellaneous/variables.html":{}}}],["asynchronous",{"_index":1970,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["asyncpipe",{"_index":635,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/PhotoUploadComponent.html":{},"components/QuizListComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["asyncvalidatorfn",{"_index":3067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asyncvalidatorfns",{"_index":3082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attach",{"_index":2873,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":2695,"title":{},"body":{"license.html":{}}}],["attend",{"_index":1595,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["attepting",{"_index":103,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["attribute",{"_index":664,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlProperties.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["attributed",{"_index":2338,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":2668,"title":{},"body":{"license.html":{}}}],["auth",{"_index":191,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["auth.guard.ts",{"_index":2180,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth/account",{"_index":544,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/cancelled",{"_index":498,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/code",{"_index":468,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/cors",{"_index":474,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/credential",{"_index":477,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/email",{"_index":491,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/expired",{"_index":497,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/invalid",{"_index":504,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["auth/missing",{"_index":536,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/multi",{"_index":538,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/network",{"_index":549,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/password",{"_index":517,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/popup",{"_index":558,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/quota",{"_index":564,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/redirect",{"_index":568,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/requires",{"_index":482,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/timeout",{"_index":571,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/too",{"_index":576,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/unverified",{"_index":583,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/user",{"_index":573,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/weak",{"_index":595,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/web",{"_index":600,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/wrong",{"_index":522,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["authdomain",{"_index":3095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticates",{"_index":656,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["authentication",{"_index":35,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["autherrormessagescomponent",{"_index":190,"title":{"components/AuthErrorMessagesComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{}}}],["authguard",{"_index":2175,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":2015,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{},"properties.html":{}}}],["authorization",{"_index":2630,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":2661,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":2759,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":2790,"title":{},"body":{"license.html":{}}}],["authors",{"_index":2306,"title":{},"body":{"license.html":{}}}],["automatic",{"_index":2727,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":358,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/DeleteAccountComponent.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["available",{"_index":1575,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/QuizListComponent.html":{},"license.html":{}}}],["avif",{"_index":2134,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["avoid",{"_index":1470,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["await",{"_index":145,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"miscellaneous/variables.html":{}}}],["awaited",{"_index":141,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["aware",{"_index":1697,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["away",{"_index":2299,"title":{},"body":{"license.html":{}}}],["aws",{"_index":1463,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["b",{"_index":1447,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["b5ec",{"_index":1552,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["back",{"_index":1186,"title":{},"body":{"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["badly",{"_index":512,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["band",{"_index":32,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["bar",{"_index":1511,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["base",{"_index":2036,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["based",{"_index":924,"title":{},"body":{"interfaces/ControlProperties.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["basic",{"_index":2468,"title":{},"body":{"license.html":{}}}],["basis",{"_index":1675,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["become",{"_index":1700,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["before",{"_index":488,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["begin",{"_index":1044,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["behalf",{"_index":2488,"title":{},"body":{"license.html":{}}}],["behaviorsubject",{"_index":1347,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["behaviorsubject(undefined",{"_index":1395,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["being",{"_index":412,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["believe",{"_index":2784,"title":{},"body":{"license.html":{}}}],["below",{"_index":449,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["benefit",{"_index":2781,"title":{},"body":{"license.html":{}}}],["best",{"_index":2870,"title":{},"body":{"license.html":{}}}],["better",{"_index":1311,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/variables.html":{}}}],["between",{"_index":1353,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["beyond",{"_index":2561,"title":{},"body":{"license.html":{}}}],["blank",{"_index":3052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["block",{"_index":1190,"title":{},"body":{"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["blocked",{"_index":559,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["blocking",{"_index":1184,"title":{},"body":{"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["blockwindow",{"_index":1181,"title":{},"body":{"components/LogoutComponent.html":{},"components/QuizListComponent.html":{},"interfaces/ViewModel-1.html":{}}}],["body",{"_index":2432,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":315,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["boolean(val",{"_index":922,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["both",{"_index":346,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/FooterComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/TermsAndConditionsComponent.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["box",{"_index":2891,"title":{},"body":{"license.html":{}}}],["brainfry",{"_index":626,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/HeaderComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["branch",{"_index":1380,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["brands",{"_index":2244,"title":{},"body":{"dependencies.html":{}}}],["break",{"_index":2116,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["brew",{"_index":2267,"title":{},"body":{"index.html":{}}}],["browser",{"_index":289,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"components/AuthErrorMessagesComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"dependencies.html":{}}}],["browser/meta",{"_index":1240,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["bugs",{"_index":2913,"title":{},"body":{"properties.html":{}}}],["build",{"_index":297,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{}}}],["building",{"_index":1531,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["business",{"_index":2033,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["button",{"_index":991,"title":{},"body":{"components/DeleteAccountComponent.html":{},"components/PhotoUploadComponent.html":{}}}],["c",{"_index":2284,"title":{},"body":{"license.html":{}}}],["caches",{"_index":3078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callbacks",{"_index":390,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["called",{"_index":464,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":1579,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["campaigns",{"_index":1602,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["canactivate",{"_index":2999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canactivatechild",{"_index":3000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canactivatechildfn",{"_index":2994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancel",{"_index":1047,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["cancelled",{"_index":500,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["care",{"_index":874,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["carry",{"_index":2541,"title":{},"body":{"license.html":{}}}],["case",{"_index":361,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["cases",{"_index":143,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"license.html":{}}}],["catch",{"_index":438,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{}}}],["catchall",{"_index":1204,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["catcherror",{"_index":322,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["catcherror((problem",{"_index":393,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["catches",{"_index":2157,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["caught",{"_index":3046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cause",{"_index":2564,"title":{},"body":{"license.html":{}}}],["cease",{"_index":2699,"title":{},"body":{"license.html":{}}}],["centers",{"_index":612,"title":{},"body":{"components/CentralLayoutComponent.html":{}}}],["central",{"_index":195,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["central.component.html",{"_index":621,"title":{},"body":{"components/CentralLayoutComponent.html":{}}}],["central.component.scss",{"_index":623,"title":{},"body":{"components/CentralLayoutComponent.html":{}}}],["centrallayoutcomponent",{"_index":194,"title":{"components/CentralLayoutComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["certain",{"_index":1560,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["cessation",{"_index":2709,"title":{},"body":{"license.html":{}}}],["change",{"_index":198,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Quiz.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"components/QuizPresenterComponent.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["changed",{"_index":2336,"title":{},"body":{"license.html":{}}}],["changedetection",{"_index":76,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["changedetectionstrategy",{"_index":37,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["changedetectionstrategy.onpush",{"_index":77,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["changeemailcomponent",{"_index":197,"title":{"components/ChangeEmailComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["changeemailform",{"_index":646,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["changeemailformgroup",{"_index":678,"title":{},"body":{"components/ChangeEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["changepasswordcomponent",{"_index":200,"title":{"components/ChangePasswordComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["changepasswordform",{"_index":792,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["changepasswordformgroup",{"_index":811,"title":{},"body":{"components/ChangePasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["changes",{"_index":1703,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{}}}],["changing",{"_index":2293,"title":{},"body":{"license.html":{}}}],["characterized",{"_index":2639,"title":{},"body":{"license.html":{}}}],["characters",{"_index":597,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["charge",{"_index":2311,"title":{},"body":{"license.html":{}}}],["check",{"_index":399,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["checkactioncode",{"_index":319,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["checkactioncode(this._auth",{"_index":408,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["checker",{"_index":1266,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["checking",{"_index":3048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checks",{"_index":926,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["child",{"_index":1698,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["children’s",{"_index":1689,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["childroute",{"_index":3061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["childroute.queryparammap.get('next",{"_index":3064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["choose",{"_index":2826,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":2829,"title":{},"body":{"license.html":{}}}],["circumstances",{"_index":2492,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":2497,"title":{},"body":{"license.html":{}}}],["civil",{"_index":2865,"title":{},"body":{"license.html":{}}}],["claim",{"_index":2750,"title":{},"body":{"license.html":{}}}],["claims",{"_index":2761,"title":{},"body":{"license.html":{}}}],["clarifies",{"_index":2001,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["class",{"_index":82,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"components/QuizPresenterComponent.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["clean",{"_index":3081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cleanurl",{"_index":59,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cleanurl(this.continueurl",{"_index":109,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["clear",{"_index":745,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PhotoUploadComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["clearly",{"_index":2332,"title":{},"body":{"license.html":{}}}],["cli",{"_index":2274,"title":{},"body":{"index.html":{}}}],["click",{"_index":769,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/HeaderComponent.html":{},"components/LogoutComponent.html":{}}}],["click(event",{"_index":1115,"title":{},"body":{"components/HeaderComponent.html":{}}}],["clicking",{"_index":632,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["clicks",{"_index":1118,"title":{},"body":{"components/HeaderComponent.html":{}}}],["client",{"_index":452,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["climbs",{"_index":1752,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["close",{"_index":1117,"title":{},"body":{"components/HeaderComponent.html":{}}}],["closed",{"_index":562,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["closedialog",{"_index":1000,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["closely",{"_index":2862,"title":{},"body":{"license.html":{}}}],["closes",{"_index":1005,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["code",{"_index":27,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["code.ts",{"_index":2199,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["code][subscriber",{"_index":530,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["codes",{"_index":94,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["collapsible",{"_index":1129,"title":{},"body":{"components/HeaderComponent.html":{}}}],["collect",{"_index":1281,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["collected",{"_index":1527,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["collection",{"_index":1557,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["collection(this._firestore",{"_index":1817,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["collection_name",{"_index":1798,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["collection_name).withconverter(converter",{"_index":1818,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["collectiondata",{"_index":1727,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["collectiondata(listquery).pipe",{"_index":1839,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["collectionreference",{"_index":1737,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["collects",{"_index":93,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/typealiases.html":{}}}],["collisions",{"_index":1471,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["combination",{"_index":763,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"license.html":{}}}],["combine",{"_index":892,"title":{},"body":{"interfaces/CombinedObs.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["combined",{"_index":329,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["combinedlatest",{"_index":853,"title":{},"body":{"interfaces/CombinedObs.html":{}}}],["combinedobs",{"_index":850,"title":{"interfaces/CombinedObs.html":{}},"body":{"interfaces/CombinedObs.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["combinelatest",{"_index":866,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["come",{"_index":444,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["comes",{"_index":2545,"title":{},"body":{"license.html":{}}}],["commands",{"_index":2424,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":2031,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["commercially",{"_index":1683,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["commitment",{"_index":2772,"title":{},"body":{"license.html":{}}}],["common",{"_index":2623,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["communicate",{"_index":1619,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["communication",{"_index":1580,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["communications",{"_index":1587,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["compatible",{"_index":1744,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["compilation",{"_index":2553,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":2560,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":2799,"title":{},"body":{"license.html":{}}}],["compiler",{"_index":2453,"title":{},"body":{"license.html":{}}}],["complete",{"_index":542,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/SpinnerComponent.html":{},"injectables/UserPhotosService.html":{}}}],["complexity",{"_index":967,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["compliance",{"_index":2732,"title":{},"body":{"license.html":{}}}],["complicated",{"_index":1309,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["comply",{"_index":1625,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["complying",{"_index":1533,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["component",{"_index":38,"title":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"coverage.html":{},"license.html":{}}}],["component_template",{"_index":185,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["components",{"_index":75,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"overview.html":{}}}],["compromise",{"_index":363,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["compromised",{"_index":383,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["computed",{"_index":39,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"miscellaneous/variables.html":{}}}],["computer",{"_index":2403,"title":{},"body":{"license.html":{}}}],["computers",{"_index":1647,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["concern",{"_index":1068,"title":{},"body":{"components/FooterComponent.html":{}}}],["concerning",{"_index":2816,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":2820,"title":{},"body":{"license.html":{}}}],["conditioned",{"_index":2795,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1073,"title":{},"body":{"components/FooterComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["conditions'},{'name",{"_index":245,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["conditions.component.html",{"_index":2010,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["conditions.component.ts",{"_index":1993,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"coverage.html":{}}}],["conditions/terms",{"_index":1992,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"coverage.html":{}}}],["configuration",{"_index":3103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configured",{"_index":1206,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["confirm",{"_index":203,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["confirmation",{"_index":712,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/typealiases.html":{}}}],["confirmed",{"_index":1293,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["confirmemailcomponent",{"_index":202,"title":{"components/ConfirmEmailComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmmatch",{"_index":708,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmmatch('email1",{"_index":726,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["confirmmatch('password1",{"_index":833,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["confirmmatchformerrors",{"_index":709,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmmatchformerrors(this.changeemailform",{"_index":728,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["confirmmatchformerrors(this.changepasswordform",{"_index":835,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["confirmmatchformerrors(this.resetpasswordform",{"_index":1945,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["confirmpasswordreset",{"_index":1269,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["confirmpasswordreset(this._auth",{"_index":1324,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["confirmresult",{"_index":1279,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["confirms",{"_index":995,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["conflicting",{"_index":502,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["connection",{"_index":554,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["consent",{"_index":1620,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["consequence",{"_index":2721,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":2846,"title":{},"body":{"license.html":{}}}],["consider",{"_index":2898,"title":{},"body":{"license.html":{}}}],["considered",{"_index":2683,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":2766,"title":{},"body":{"license.html":{}}}],["console.error('missing",{"_index":150,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["console.error('recoveremailservice",{"_index":395,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["console.error('recoveremailservice#_sendpasswordresetemail",{"_index":439,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["console.error('unknown",{"_index":3044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.error(`unknown",{"_index":149,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["console.error(settledmetadata.reason",{"_index":1441,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["console.error(settledurl.reason",{"_index":1439,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["conspicuously",{"_index":2528,"title":{},"body":{"license.html":{}}}],["const",{"_index":58,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"miscellaneous/variables.html":{}}}],["constantly",{"_index":2367,"title":{},"body":{"license.html":{}}}],["constants",{"_index":870,"title":{},"body":{"interfaces/CombinedObs.html":{}}}],["constitutes",{"_index":2478,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":106,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["construed",{"_index":2803,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":2611,"title":{},"body":{"license.html":{}}}],["consumers",{"_index":1779,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["contact",{"_index":1258,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["contain",{"_index":2800,"title":{},"body":{"license.html":{}}}],["containing",{"_index":1011,"title":{},"body":{"components/DeleteAccountComponent.html":{},"components/StandardLayoutComponent.html":{},"license.html":{}}}],["contains",{"_index":762,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/DeleteAccountComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["content",{"_index":287,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"components/CentralLayoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["contents",{"_index":2770,"title":{},"body":{"license.html":{}}}],["context",{"_index":2448,"title":{},"body":{"license.html":{}}}],["continue",{"_index":510,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/RecoverEmailComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["continued",{"_index":2634,"title":{},"body":{"license.html":{}}}],["continueurl",{"_index":11,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":2006,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["contracted",{"_index":1590,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["contractual",{"_index":2680,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":2808,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":2301,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":2758,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":2760,"title":{},"body":{"license.html":{}}}],["control",{"_index":716,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["control.addasyncvalidators(passwordfirebasevalidator",{"_index":976,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["control.addvalidators(passwordstrengthvalidator",{"_index":975,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["control.dirty",{"_index":934,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["control.errors",{"_index":886,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["control.events.pipe",{"_index":879,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["control.invalid",{"_index":935,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["control.statuschanges.pipe",{"_index":888,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["control.touched",{"_index":936,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["control1",{"_index":3005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control1.valid",{"_index":3019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control1.value",{"_index":3011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control2",{"_index":3007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control2.valid",{"_index":3020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control2.value",{"_index":3012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controldirty",{"_index":878,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["controlerrors",{"_index":894,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["controlerrorssignal",{"_index":873,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlStruct.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlerrorssignal(control",{"_index":961,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["controlerrorssignal(this.namecntrl",{"_index":2099,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["controlerrorssignal(this.photourlcntrl",{"_index":2105,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["controlevent",{"_index":864,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["controlevents",{"_index":939,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["controlinvalidsignal",{"_index":932,"title":{},"body":{"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlinvalidsignal(control",{"_index":960,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["controlinvalidsignal(this.namecntrl",{"_index":2101,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["controlinvalidsignal(this.photourlcntrl",{"_index":2107,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["controlled",{"_index":1706,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["controlproperties",{"_index":911,"title":{"interfaces/ControlProperties.html":{}},"body":{"interfaces/ControlProperties.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controls",{"_index":875,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["controlstatus",{"_index":887,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["controlstruct",{"_index":945,"title":{"interfaces/ControlStruct.html":{}},"body":{"interfaces/ControlStruct.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["convenient",{"_index":2418,"title":{},"body":{"license.html":{}}}],["convert",{"_index":56,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["converted",{"_index":1780,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["converter",{"_index":1723,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["converter.tofirestore",{"_index":1848,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["converting",{"_index":1774,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["convey",{"_index":2409,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":2788,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":2640,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":2414,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":2679,"title":{},"body":{"license.html":{}}}],["cookies",{"_index":604,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["copies",{"_index":2292,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1069,"title":{},"body":{"components/FooterComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["copying",{"_index":2378,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":2295,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1054,"title":{},"body":{"components/FooterComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["copyrightable",{"_index":2384,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":2490,"title":{},"body":{"license.html":{}}}],["correct",{"_index":450,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["correction",{"_index":2842,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":1772,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["correspond",{"_index":592,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["corresponding",{"_index":534,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["cost",{"_index":2583,"title":{},"body":{"license.html":{}}}],["counterclaim",{"_index":2751,"title":{},"body":{"license.html":{}}}],["countries",{"_index":2406,"title":{},"body":{"license.html":{}}}],["country",{"_index":529,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["course",{"_index":2889,"title":{},"body":{"license.html":{}}}],["court",{"_index":2807,"title":{},"body":{"license.html":{}}}],["courts",{"_index":2861,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":2774,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":2162,"title":{"coverage.html":{}},"body":{"coverage.html":{},"license.html":{}}}],["covered",{"_index":2396,"title":{},"body":{"license.html":{}}}],["crawlers",{"_index":1234,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["create",{"_index":505,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/QuizListComponent.html":{},"injectables/QuizService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["create(owner",{"_index":1819,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["created",{"_index":1243,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["createdat",{"_index":1716,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["createemailcontrol",{"_index":703,"title":{},"body":{"components/ChangeEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createnewquiz",{"_index":1861,"title":{},"body":{"components/QuizListComponent.html":{}}}],["createnewquiz(userid",{"_index":1863,"title":{},"body":{"components/QuizListComponent.html":{},"interfaces/ViewModel-1.html":{}}}],["createpasswordcontrol",{"_index":704,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createpasswordcontrol(true",{"_index":827,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["creates",{"_index":353,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":1869,"title":{},"body":{"components/QuizListComponent.html":{},"interfaces/ViewModel-1.html":{},"properties.html":{}}}],["creation",{"_index":1718,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["creator",{"_index":1748,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["credential",{"_index":479,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["credentials",{"_index":547,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/typealiases.html":{}}}],["criterion",{"_index":2427,"title":{},"body":{"license.html":{}}}],["cross",{"_index":2749,"title":{},"body":{"license.html":{}}}],["css/blocks",{"_index":1974,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["cure",{"_index":2712,"title":{},"body":{"license.html":{}}}],["current",{"_index":267,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlProperties.html":{},"components/FooterComponent.html":{},"components/LogoutComponent.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":24,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/QuizListComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["currentpw",{"_index":832,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["currentpwcntrl",{"_index":793,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["currentpwcntrlerrors",{"_index":784,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["currentpwcntrlinvalid",{"_index":785,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["custom",{"_index":2081,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["customarily",{"_index":2576,"title":{},"body":{"license.html":{}}}],["customer",{"_index":2581,"title":{},"body":{"license.html":{}}}],["cycles",{"_index":674,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["d",{"_index":2552,"title":{},"body":{"license.html":{}}}],["damages",{"_index":2043,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["danger",{"_index":2372,"title":{},"body":{"license.html":{}}}],["dare",{"_index":2032,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["dashboard",{"_index":978,"title":{},"body":{"components/DashboardComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["dashboard'},{'name",{"_index":205,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["dashboard.component.html",{"_index":979,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":980,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard@if",{"_index":1199,"title":{},"body":{"components/LogoutComponent.html":{}}}],["dashboardcomponent",{"_index":204,"title":{"components/DashboardComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["data",{"_index":605,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["data.createdat.todate",{"_index":1786,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["data.updatedat.todate",{"_index":1787,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":1745,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":1060,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["date(a.metadata.updated",{"_index":1450,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["date(b.metadata.updated",{"_index":1449,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["date:'short",{"_index":1890,"title":{},"body":{"components/QuizListComponent.html":{}}}],["date:\\'short",{"_index":1894,"title":{},"body":{"components/QuizListComponent.html":{}}}],["datepipe",{"_index":1056,"title":{},"body":{"components/FooterComponent.html":{},"components/QuizListComponent.html":{},"interfaces/ViewModel-1.html":{}}}],["dates",{"_index":1776,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["days",{"_index":2708,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":867,"title":{},"body":{"interfaces/CombinedObs.html":{}}}],["debouncetime(forms.inputdebounce",{"_index":890,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["december",{"_index":2509,"title":{},"body":{"license.html":{}}}],["decide",{"_index":161,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/LoginComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["decimal",{"_index":1371,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["decisions",{"_index":1547,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["declining",{"_index":2673,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":1120,"title":{},"body":{"components/HeaderComponent.html":{}}}],["deemed",{"_index":2499,"title":{},"body":{"license.html":{}}}],["default",{"_index":158,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["defaultproperties",{"_index":933,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["defective",{"_index":2838,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":2805,"title":{},"body":{"license.html":{}}}],["defined",{"_index":171,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"components/QuizListComponent.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"injectables/VerifyEmailService.html":{},"license.html":{}}}],["definition",{"_index":2460,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":2380,"title":{},"body":{"license.html":{}}}],["delay",{"_index":365,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"miscellaneous/variables.html":{}}}],["delaywhen",{"_index":323,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["delaywhen((result",{"_index":378,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["delete",{"_index":207,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["delete(id",{"_index":1825,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["deleteaccountcomponent",{"_index":206,"title":{"components/DeleteAccountComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["deleteaccountform",{"_index":999,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["deleteaccountformgroup",{"_index":1019,"title":{},"body":{"components/DeleteAccountComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["deleteacount",{"_index":1001,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["deleteacount(user",{"_index":1007,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["deleted",{"_index":588,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["deletedoc",{"_index":1728,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["deletedoc(reference",{"_index":1827,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["deletes",{"_index":1009,"title":{},"body":{"components/DeleteAccountComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["deleteuser",{"_index":1027,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["deleteuser(credentials.user",{"_index":1039,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["deleting",{"_index":1006,"title":{},"body":{"components/DeleteAccountComponent.html":{},"miscellaneous/typealiases.html":{}}}],["deletion",{"_index":996,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["demonstration",{"_index":2012,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["denied",{"_index":1843,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{}}}],["denominated",{"_index":2773,"title":{},"body":{"license.html":{}}}],["deny",{"_index":2341,"title":{},"body":{"license.html":{}}}],["denying",{"_index":2316,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":2234,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["deprive",{"_index":2779,"title":{},"body":{"license.html":{}}}],["desc",{"_index":1838,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"properties.html":{}}}],["descriptions",{"_index":1618,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["design",{"_index":1301,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/StandardLayoutComponent.html":{},"interfaces/VerifiedFailed.html":{}}}],["designated",{"_index":2016,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["designed",{"_index":1454,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["destination",{"_index":163,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/LoginComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["destructuring",{"_index":1282,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["detail",{"_index":2819,"title":{},"body":{"license.html":{}}}],["details",{"_index":2048,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["details.the",{"_index":2887,"title":{},"body":{"license.html":{}}}],["determine",{"_index":912,"title":{},"body":{"interfaces/ControlProperties.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["determining",{"_index":1599,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["develop",{"_index":2868,"title":{},"body":{"license.html":{}}}],["developer",{"_index":2260,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1810,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{}}}],["development",{"_index":2371,"title":{},"body":{"license.html":{}}}],["device",{"_index":579,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["devices",{"_index":2340,"title":{},"body":{"license.html":{}}}],["dhould",{"_index":615,"title":{},"body":{"components/CentralLayoutComponent.html":{}}}],["dialog",{"_index":993,"title":{},"body":{"components/DeleteAccountComponent.html":{},"miscellaneous/typealiases.html":{}}}],["dialogel",{"_index":1031,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["dialogel.nativeelement.close",{"_index":1033,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["dialogel.nativeelement.showmodal",{"_index":1040,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["dialogref",{"_index":1029,"title":{},"body":{"components/DeleteAccountComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["differ",{"_index":1652,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["different",{"_index":481,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["differently",{"_index":2664,"title":{},"body":{"license.html":{}}}],["direction",{"_index":2489,"title":{},"body":{"license.html":{}}}],["directions",{"_index":2595,"title":{},"body":{"license.html":{}}}],["directive",{"_index":183,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["directives",{"_index":250,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["directly",{"_index":2400,"title":{},"body":{"license.html":{}}}],["directory",{"_index":1362,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["dirty",{"_index":858,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["disable",{"_index":125,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlStruct.html":{},"components/PageNotFoundComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":589,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["disclaim",{"_index":2520,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":2830,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":2663,"title":{},"body":{"license.html":{}}}],["disclose",{"_index":1621,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["disclosing",{"_index":1536,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["discriminatory",{"_index":2792,"title":{},"body":{"license.html":{}}}],["display",{"_index":1062,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["displayed",{"_index":1015,"title":{},"body":{"components/DeleteAccountComponent.html":{},"license.html":{}}}],["displaying",{"_index":877,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["displayname",{"_index":2078,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["displays",{"_index":1053,"title":{},"body":{"components/FooterComponent.html":{},"components/QuizListComponent.html":{},"components/RecoverEmailComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel-1.html":{},"license.html":{}}}],["disputes",{"_index":1630,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["distinctuntilchanged",{"_index":917,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["distinguishing",{"_index":2821,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":2027,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["distributed",{"_index":1615,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["distributing",{"_index":2796,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":2029,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["doc",{"_index":1729,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"index.html":{}}}],["doc(this._quizcollection",{"_index":1826,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["docdata",{"_index":1730,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["docdata(reference",{"_index":1831,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["document",{"_index":1778,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":2163,"title":{},"body":{"coverage.html":{}}}],["documentdata",{"_index":1743,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["documented",{"_index":2650,"title":{},"body":{"license.html":{}}}],["documentreference",{"_index":1719,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["doesn't",{"_index":461,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["dom",{"_index":167,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["domains",{"_index":2360,"title":{},"body":{"license.html":{}}}],["don't",{"_index":392,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["done",{"_index":1804,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["doubtful",{"_index":2619,"title":{},"body":{"license.html":{}}}],["download",{"_index":1335,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["downstream",{"_index":2729,"title":{},"body":{"license.html":{}}}],["dprint",{"_index":2268,"title":{},"body":{"index.html":{}}}],["due",{"_index":501,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["dumb",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["durable",{"_index":2575,"title":{},"body":{"license.html":{}}}],["during",{"_index":929,"title":{},"body":{"interfaces/ControlProperties.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/variables.html":{}}}],["dwelling",{"_index":2618,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":2240,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":2461,"title":{},"body":{"license.html":{}}}],["e",{"_index":2601,"title":{},"body":{"license.html":{}}}],["e.164",{"_index":526,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["each",{"_index":948,"title":{},"body":{"interfaces/ControlStruct.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["earlier",{"_index":2395,"title":{},"body":{"license.html":{}}}],["easier",{"_index":2156,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["edit",{"_index":1801,"title":{},"body":{"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/ViewModel-1.html":{}}}],["editor",{"_index":1853,"title":{},"body":{"components/QuizEditorComponent.html":{}}}],["editor'},{'name",{"_index":231,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["editor.component.html",{"_index":1854,"title":{},"body":{"components/QuizEditorComponent.html":{}}}],["editor.component.scss",{"_index":1855,"title":{},"body":{"components/QuizEditorComponent.html":{}}}],["effect",{"_index":40,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"license.html":{}}}],["effect(async",{"_index":135,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["effected",{"_index":2518,"title":{},"body":{"license.html":{}}}],["effective",{"_index":1711,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["effectively",{"_index":2373,"title":{},"body":{"license.html":{}}}],["effectiveness",{"_index":1600,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["efforts",{"_index":2743,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1582,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["element",{"_index":182,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/typealiases.html":{}}}],["elementref",{"_index":1026,"title":{},"body":{"components/DeleteAccountComponent.html":{},"components/PhotoUploadComponent.html":{},"miscellaneous/typealiases.html":{}}}],["email",{"_index":23,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["email'},{'name",{"_index":199,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["email.component.html",{"_index":637,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/RecoverEmailComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["email.component.ts",{"_index":630,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/RecoverEmailComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["email.component.ts:104",{"_index":655,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:31",{"_index":905,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["email.component.ts:32",{"_index":1912,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["email.component.ts:33",{"_index":906,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["email.component.ts:34",{"_index":1911,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["email.component.ts:35",{"_index":902,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/RecoverEmailComponent.html":{}}}],["email.component.ts:48",{"_index":904,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:49",{"_index":659,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:51",{"_index":662,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:53",{"_index":665,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:55",{"_index":666,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:57",{"_index":668,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:59",{"_index":669,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:61",{"_index":671,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:63",{"_index":672,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:65",{"_index":673,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:66",{"_index":679,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:67",{"_index":681,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:68",{"_index":682,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:70",{"_index":684,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:72",{"_index":689,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:73",{"_index":691,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:74",{"_index":653,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.service",{"_index":1919,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["email.service.ts",{"_index":308,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["email.service.ts:103",{"_index":1931,"title":{},"body":{"injectables/RecoverEmailService.html":{}}}],["email.service.ts:23",{"_index":2161,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["email.service.ts:29",{"_index":2160,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["email.service.ts:43",{"_index":1933,"title":{},"body":{"injectables/RecoverEmailService.html":{}}}],["email.service.ts:52",{"_index":1932,"title":{},"body":{"injectables/RecoverEmailService.html":{}}}],["email.service.ts:82",{"_index":1930,"title":{},"body":{"injectables/RecoverEmailService.html":{}}}],["email.ts",{"_index":2195,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["email/change",{"_index":629,"title":{},"body":{"components/ChangeEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["email/confirm",{"_index":899,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"coverage.html":{}}}],["email/recover",{"_index":307,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["email/send",{"_index":702,"title":{},"body":{"components/ChangeEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["email/verify",{"_index":2144,"title":{},"body":{"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"coverage.html":{}}}],["email1",{"_index":725,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["email1cntrl",{"_index":647,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email1cntrl.value",{"_index":770,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email1cntrlerrors",{"_index":638,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email1cntrlinvalid",{"_index":639,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email2",{"_index":713,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email2cntrl",{"_index":648,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email2cntrlerrors",{"_index":640,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email2cntrlinvalid",{"_index":641,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email?next=${url",{"_index":3028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emailauthprovider",{"_index":693,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["emailauthprovider.credential(user.email",{"_index":749,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["emailcntrl",{"_index":1078,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["emailcntrlerrors",{"_index":1076,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["emailcntrlinvalid",{"_index":1077,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["emailcreds",{"_index":748,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["emails",{"_index":760,"title":{},"body":{"components/ChangeEmailComponent.html":{},"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["emailverifiedguard",{"_index":2178,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["embodied",{"_index":2570,"title":{},"body":{"license.html":{}}}],["emit",{"_index":885,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/variables.html":{}}}],["emits",{"_index":872,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/variables.html":{}}}],["emitted",{"_index":893,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["emitting",{"_index":1379,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["employer",{"_index":2892,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1844,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["enable",{"_index":2446,"title":{},"body":{"license.html":{}}}],["enabled",{"_index":1083,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["enables",{"_index":2411,"title":{},"body":{"license.html":{}}}],["end",{"_index":1278,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["endwith",{"_index":1348,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["endwith(undefined",{"_index":1402,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["enforce",{"_index":1631,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["enforces",{"_index":3083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enforcing",{"_index":2523,"title":{},"body":{"license.html":{}}}],["engage",{"_index":2003,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["engineered",{"_index":1757,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["ensure",{"_index":1657,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["ensures",{"_index":930,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["entails",{"_index":2025,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["enter",{"_index":524,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["entered",{"_index":2801,"title":{},"body":{"license.html":{}}}],["enters",{"_index":994,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["entire",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"components/LogoutComponent.html":{},"license.html":{}}}],["entirely",{"_index":2814,"title":{},"body":{"license.html":{}}}],["entity",{"_index":2733,"title":{},"body":{"license.html":{}}}],["entry",{"_index":2082,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["enumeration",{"_index":1081,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["environmentproviders",{"_index":3087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["equivalent",{"_index":1581,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["err",{"_index":386,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["err.code",{"_index":3042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err.message",{"_index":3043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erroneously",{"_index":2339,"title":{},"body":{"license.html":{}}}],["error",{"_index":192,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Quiz.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"components/QuizPresenterComponent.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["error('invalid",{"_index":743,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["error('oobcode",{"_index":422,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["error(`cannot",{"_index":3009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.signal.ts",{"_index":2218,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error_name",{"_index":2216,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorcode",{"_index":334,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{}}}],["errors",{"_index":453,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errors['email",{"_index":759,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["errors['firebasevalidator",{"_index":846,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors['maxlength",{"_index":768,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors['minlength",{"_index":761,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors['passwordstrength",{"_index":843,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors['pattern",{"_index":2128,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["errors['required",{"_index":758,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["errors[\\'email",{"_index":778,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["errors[\\'firebasevalidator",{"_index":849,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors[\\'maxlength",{"_index":780,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors[\\'minlength",{"_index":779,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors[\\'passwordstrength",{"_index":848,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors[\\'pattern",{"_index":2142,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["errors[\\'required",{"_index":777,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["errors[error_name",{"_index":3024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eslint",{"_index":124,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlStruct.html":{},"components/PageNotFoundComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["eslint/no",{"_index":128,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["especially",{"_index":1808,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["essential",{"_index":2449,"title":{},"body":{"license.html":{}}}],["essentially",{"_index":1541,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{}}}],["establish",{"_index":561,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["establishes",{"_index":1994,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["evaluate",{"_index":1603,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["even",{"_index":2855,"title":{},"body":{"license.html":{}}}],["event",{"_index":881,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"components/HeaderComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/RecoverEmailComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["event.preventdefault",{"_index":1035,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["event.pristine",{"_index":884,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["event.status",{"_index":941,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["event.stoppropagation",{"_index":1036,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["event.touched",{"_index":940,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["eventcoalescing",{"_index":2955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["everyone",{"_index":2289,"title":{},"body":{"license.html":{}}}],["exact",{"_index":2393,"title":{},"body":{"license.html":{}}}],["example",{"_index":1627,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["exceeded",{"_index":565,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["except",{"_index":415,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{}}}],["exceptions",{"_index":2655,"title":{},"body":{"license.html":{}}}],["excluded",{"_index":2609,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":2804,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":2876,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":2767,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":2484,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":2809,"title":{},"body":{"license.html":{}}}],["executable",{"_index":2440,"title":{},"body":{"license.html":{}}}],["execute",{"_index":2632,"title":{},"body":{"license.html":{}}}],["executing",{"_index":1232,"title":{},"body":{"components/PageNotFoundComponent.html":{},"license.html":{}}}],["exercise",{"_index":2744,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":2519,"title":{},"body":{"license.html":{}}}],["existing",{"_index":746,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["exists",{"_index":545,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["expanded",{"_index":1123,"title":{},"body":{"components/HeaderComponent.html":{}}}],["expectations",{"_index":2002,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["expected",{"_index":740,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["expecting",{"_index":3056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expects",{"_index":2624,"title":{},"body":{"license.html":{}}}],["experience",{"_index":1606,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["expired",{"_index":469,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["explains",{"_index":2333,"title":{},"body":{"license.html":{}}}],["explicitly",{"_index":2473,"title":{},"body":{"license.html":{}}}],["export",{"_index":50,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"components/QuizPresenterComponent.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["exported",{"_index":1797,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["express",{"_index":2019,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["expressed",{"_index":2832,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":2694,"title":{},"body":{"license.html":{}}}],["extend",{"_index":2363,"title":{},"body":{"license.html":{}}}],["extended",{"_index":2791,"title":{},"body":{"license.html":{}}}],["extends",{"_index":269,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["extension",{"_index":2130,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["extensions",{"_index":2557,"title":{},"body":{"license.html":{}}}],["extent",{"_index":1624,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["extra",{"_index":971,"title":{},"body":{"interfaces/ControlStruct.html":{}}}],["extract",{"_index":3055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extracting",{"_index":3049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extras",{"_index":3060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f",{"_index":2677,"title":{},"body":{"license.html":{}}}],["fabars",{"_index":1109,"title":{},"body":{"components/HeaderComponent.html":{}}}],["facilities",{"_index":2485,"title":{},"body":{"license.html":{}}}],["factor",{"_index":493,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["factory",{"_index":3107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["faiconcomponent",{"_index":1105,"title":{},"body":{"components/HeaderComponent.html":{}}}],["fail",{"_index":144,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["failed",{"_index":535,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["fails",{"_index":433,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/ControlProperties.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["failure",{"_index":1280,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{}}}],["fair",{"_index":2480,"title":{},"body":{"license.html":{}}}],["false",{"_index":398,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/ControlStruct.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["falsy",{"_index":405,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{}}}],["family",{"_index":2614,"title":{},"body":{"license.html":{}}}],["fashion",{"_index":2390,"title":{},"body":{"license.html":{}}}],["favor",{"_index":2621,"title":{},"body":{"license.html":{}}}],["fax",{"_index":1110,"title":{},"body":{"components/HeaderComponent.html":{}}}],["feature",{"_index":2421,"title":{},"body":{"license.html":{}}}],["features",{"_index":1964,"title":{},"body":{"components/SidebarComponent.html":{}}}],["fee",{"_index":2323,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":1388,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["fetches",{"_index":1828,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["few",{"_index":774,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["fewer",{"_index":1501,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["field",{"_index":661,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["fields",{"_index":968,"title":{},"body":{"interfaces/ControlStruct.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["fieldvalue",{"_index":1731,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"components/QuizPresenterComponent.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"coverage.html":{},"license.html":{}}}],["file#result",{"_index":3040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file(s",{"_index":1503,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["file.name",{"_index":1475,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["filecount",{"_index":1491,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["fileinpt",{"_index":1517,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["fileinputref",{"_index":1514,"title":{},"body":{"components/PhotoUploadComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["filelist",{"_index":1461,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["filename",{"_index":1469,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["files",{"_index":1364,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":868,"title":{},"body":{"interfaces/CombinedObs.html":{},"components/QuizListComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["filter((event",{"_index":880,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["filter((user",{"_index":1878,"title":{},"body":{"components/QuizListComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["final",{"_index":1196,"title":{},"body":{"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{}}}],["finalize",{"_index":1349,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["finalizing",{"_index":563,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["finally",{"_index":2365,"title":{},"body":{"license.html":{}}}],["find",{"_index":2597,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["firebase",{"_index":52,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["firebaseapp",{"_index":3089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebaseerror",{"_index":1724,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["firebaseperformance",{"_index":2974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebasestorage",{"_index":2983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebasevalidator",{"_index":3075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firestore",{"_index":1732,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["firestore/issues/2291",{"_index":1768,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["firestoredataconverter",{"_index":1738,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":660,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/StandardLayoutComponent.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["fitness",{"_index":2834,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":2574,"title":{},"body":{"license.html":{}}}],["flag",{"_index":403,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/ControlStruct.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["flags",{"_index":923,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":2465,"title":{},"body":{"license.html":{}}}],["focused",{"_index":914,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["folder",{"_index":773,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["folders",{"_index":1425,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["follow",{"_index":2379,"title":{},"body":{"license.html":{}}}],["followed",{"_index":1291,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["following",{"_index":1570,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["fontawesome",{"_index":1137,"title":{},"body":{"components/HeaderComponent.html":{},"dependencies.html":{}}}],["footer",{"_index":1050,"title":{},"body":{"components/FooterComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["footer'},{'name",{"_index":210,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["footer.component.html",{"_index":1057,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1058,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":625,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["footercomponent",{"_index":209,"title":{"components/FooterComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["forbid",{"_index":2517,"title":{},"body":{"license.html":{}}}],["force",{"_index":2481,"title":{},"body":{"license.html":{}}}],["forgot",{"_index":212,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["forgotform",{"_index":1079,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotformgroup",{"_index":1090,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["forgotpasswordcomponent",{"_index":211,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["form",{"_index":631,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["form.errors?.[error_name",{"_index":3021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["form.invalid",{"_index":3018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["form.statuschanges.pipe",{"_index":3023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format",{"_index":523,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["formatted",{"_index":513,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["formcontrol",{"_index":680,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["formcontrol(null",{"_index":963,"title":{},"body":{"interfaces/ControlStruct.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["formcontrolstatus",{"_index":865,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["formemailsinvalid",{"_index":642,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["formgroup",{"_index":696,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["formgrp",{"_index":3002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formgrp.get(password1",{"_index":3006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formgrp.get(password2",{"_index":3008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formpasswordsinvalid",{"_index":786,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["forms",{"_index":707,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["forms.ts",{"_index":947,"title":{},"body":{"interfaces/ControlStruct.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formstatus",{"_index":3022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fortawesome/angular",{"_index":1136,"title":{},"body":{"components/HeaderComponent.html":{},"dependencies.html":{}}}],["fortawesome/free",{"_index":1138,"title":{},"body":{"components/HeaderComponent.html":{},"dependencies.html":{}}}],["found",{"_index":423,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"license.html":{}}}],["found'},{'name",{"_index":221,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["found.component.html",{"_index":1211,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":1212,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1202,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["found.component.ts:28",{"_index":1236,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:30",{"_index":1242,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:36",{"_index":1217,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:46",{"_index":1223,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":1201,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["foundation",{"_index":2286,"title":{},"body":{"license.html":{}}}],["free",{"_index":2285,"title":{},"body":{"license.html":{}}}],["freedom",{"_index":2300,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":2326,"title":{},"body":{"license.html":{}}}],["from(promise",{"_index":1319,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["fromfirestore",{"_index":1782,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["fulfilling",{"_index":2502,"title":{},"body":{"license.html":{}}}],["full",{"_index":1981,"title":{},"body":{"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["fullmetadata",{"_index":1332,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["fully",{"_index":53,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":3047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["functionalities",{"_index":1574,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["functionality",{"_index":1640,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["functioning",{"_index":2635,"title":{},"body":{"license.html":{}}}],["functions",{"_index":2971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fundamentally",{"_index":2345,"title":{},"body":{"license.html":{}}}],["further",{"_index":2592,"title":{},"body":{"license.html":{}}}],["future",{"_index":134,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"license.html":{}}}],["game",{"_index":1253,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["gant",{"_index":2920,"title":{},"body":{"properties.html":{}}}],["gathered",{"_index":1544,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gcp",{"_index":2264,"title":{},"body":{"index.html":{}}}],["general",{"_index":2266,"title":{},"body":{"index.html":{},"license.html":{}}}],["generally",{"_index":1635,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["generate",{"_index":949,"title":{},"body":{"interfaces/ControlStruct.html":{},"license.html":{}}}],["getanalytics",{"_index":2960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getauth",{"_index":2957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getbyid",{"_index":1899,"title":{},"body":{"injectables/QuizService.html":{}}}],["getbyid(id",{"_index":1829,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["getcontrolstructure",{"_index":959,"title":{},"body":{"interfaces/ControlStruct.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getcontrolstructure(control",{"_index":966,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["getdownloadurl",{"_index":1337,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["getdownloadurl(item",{"_index":1431,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["geterrorcode",{"_index":328,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["geterrorcode(err",{"_index":753,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{}}}],["geterrorcode(problem",{"_index":397,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["getfirestore",{"_index":2969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getfunctions",{"_index":2972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getmetadata",{"_index":1338,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["getmetadata(item",{"_index":1432,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["getpasswordcontrolvalue",{"_index":2222,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getpasswordcontrolvalue(control",{"_index":3068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getperformance",{"_index":2975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getprofilephotos",{"_index":1385,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["getprofilephotos(uid",{"_index":1410,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["gets",{"_index":298,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserPhotosService.html":{},"components/VerifyEmailComponent.html":{}}}],["getstate",{"_index":1917,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getstate(this._router.getcurrentnavigation",{"_index":1921,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["getstorage",{"_index":2984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":2257,"title":{"index.html":{},"license.html":{}},"body":{}}],["getvertexai",{"_index":2987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gif",{"_index":2136,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["git",{"_index":2269,"title":{},"body":{"index.html":{}}}],["git+https://github.com/rgant/brainfry.git",{"_index":2917,"title":{},"body":{"properties.html":{}}}],["give",{"_index":381,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{}}}],["given",{"_index":2477,"title":{},"body":{"license.html":{}}}],["gives",{"_index":1664,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["giving",{"_index":2330,"title":{},"body":{"license.html":{}}}],["global",{"_index":1049,"title":{},"body":{"components/FooterComponent.html":{},"components/PhotoUploadComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["glyphs",{"_index":3033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gnu",{"_index":2280,"title":{},"body":{"license.html":{}}}],["go",{"_index":1198,"title":{},"body":{"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["goes",{"_index":1763,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["going",{"_index":1457,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["governed",{"_index":2657,"title":{},"body":{"license.html":{}}}],["governmental",{"_index":1650,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gpl",{"_index":2327,"title":{},"body":{"license.html":{}}}],["gplv3",{"_index":2039,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["grant",{"_index":584,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["granted",{"_index":2013,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["grants",{"_index":2724,"title":{},"body":{"license.html":{}}}],["gratis",{"_index":2322,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":2869,"title":{},"body":{"license.html":{}}}],["guarantee",{"_index":1687,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["guardian",{"_index":1696,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["guards",{"_index":733,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LogoutComponent.html":{},"components/QuizListComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"miscellaneous/variables.html":{}}}],["gui",{"_index":2890,"title":{},"body":{"license.html":{}}}],["hamburger",{"_index":1132,"title":{},"body":{"components/HeaderComponent.html":{}}}],["handle",{"_index":65,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["handler",{"_index":68,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["handles",{"_index":345,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/variables.html":{}}}],["handling",{"_index":96,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/QuizListComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"miscellaneous/variables.html":{}}}],["happen",{"_index":520,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["happy",{"_index":1267,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["having",{"_index":2483,"title":{},"body":{"license.html":{}}}],["head",{"_index":1221,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["header",{"_index":1102,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidebarComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["header'},{'name",{"_index":214,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["header.component.html",{"_index":1106,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1107,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":1989,"title":{},"body":{"components/StandardLayoutComponent.html":{}}}],["headercomponent",{"_index":213,"title":{"components/HeaderComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["held",{"_index":2041,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["hello",{"_index":986,"title":{},"body":{"components/DashboardComponent.html":{}}}],["here",{"_index":387,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["hereafter",{"_index":2763,"title":{},"body":{"license.html":{}}}],["here’s",{"_index":2023,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["hide",{"_index":1268,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["history",{"_index":98,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["holder",{"_index":2701,"title":{},"body":{"license.html":{}}}],["holders",{"_index":2662,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":2910,"title":{},"body":{"properties.html":{}}}],["hope",{"_index":2878,"title":{},"body":{"license.html":{}}}],["host",{"_index":556,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["hostlistener",{"_index":1135,"title":{},"body":{"components/HeaderComponent.html":{}}}],["hostlistener('click",{"_index":1121,"title":{},"body":{"components/HeaderComponent.html":{}}}],["hostlisteners",{"_index":1113,"title":{},"body":{"components/HeaderComponent.html":{}}}],["hosts",{"_index":2598,"title":{},"body":{"license.html":{}}}],["household",{"_index":2615,"title":{},"body":{"license.html":{}}}],["html",{"_index":181,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{}}}],["htmlanchorelement",{"_index":1143,"title":{},"body":{"components/HeaderComponent.html":{}}}],["htmlmetaelement",{"_index":1241,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["https://angular.dev/api/platform",{"_index":1239,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["https://brainfry",{"_index":2911,"title":{},"body":{"properties.html":{}}}],["https://firebase.google.com/docs/auth/admin/errors",{"_index":454,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["https://firebase.google.com/docs/auth/custom",{"_index":67,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["https://firebase.google.com/docs/reference/js/auth.actioncodeurl",{"_index":8,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["https://firebase.google.com/docs/reference/node/firebase.auth.error",{"_index":455,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["https://fsf.org",{"_index":2288,"title":{},"body":{"license.html":{}}}],["https://github.com/angular/angularfire/issues/3614",{"_index":3070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/deanilvincent/check",{"_index":3037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/firebase/firebase",{"_index":445,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["https://github.com/firebaseextended/rxfire/blob/b91f358e2c13c6bf33fb4a540e3963c3902a62b1/storage/index.ts#l115",{"_index":1400,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["https://github.com/googleapis/nodejs",{"_index":1767,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["https://github.com/n3r4zzurr0/svg",{"_index":1972,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["https://github.com/rgant/brainfry/issues/new",{"_index":2914,"title":{},"body":{"properties.html":{}}}],["https://stackoverflow.com/questions/71047275/setting",{"_index":2119,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["https://www.gnu.org/licenses",{"_index":2895,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses/why",{"_index":2903,"title":{},"body":{"license.html":{}}}],["hypothetical",{"_index":2888,"title":{},"body":{"license.html":{}}}],["i've",{"_index":1803,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["icon",{"_index":1125,"title":{},"body":{"components/HeaderComponent.html":{}}}],["icondefinition",{"_index":1130,"title":{},"body":{"components/HeaderComponent.html":{}}}],["icons",{"_index":1141,"title":{},"body":{"components/HeaderComponent.html":{},"dependencies.html":{}}}],["id",{"_index":1499,"title":{},"body":{"components/PhotoUploadComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["idea",{"_index":1378,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["identifiable",{"_index":1562,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["identifier",{"_index":587,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"coverage.html":{}}}],["identifies",{"_index":1325,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["identify",{"_index":1563,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["identifying",{"_index":1597,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["identity",{"_index":706,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["idfield",{"_index":1830,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["image",{"_index":2129,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["immediately",{"_index":1045,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["implement",{"_index":2447,"title":{},"body":{"license.html":{}}}],["implementation",{"_index":1594,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["implements",{"_index":1208,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["implied",{"_index":2020,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["import",{"_index":36,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"components/QuizPresenterComponent.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"license.html":{}}}],["important",{"_index":1676,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["importing",{"_index":2757,"title":{},"body":{"license.html":{}}}],["imports",{"_index":78,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["impose",{"_index":2682,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":2806,"title":{},"body":{"license.html":{}}}],["improve",{"_index":1604,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inability",{"_index":2848,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":2851,"title":{},"body":{"license.html":{}}}],["inbox",{"_index":771,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["inc",{"_index":2287,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":2845,"title":{},"body":{"license.html":{}}}],["include",{"_index":19,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/ChangePasswordComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["included",{"_index":2441,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1832,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{}}}],["including",{"_index":531,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{}}}],["inclusion",{"_index":2563,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":2346,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":2896,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":2617,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":516,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["indemnification",{"_index":2678,"title":{},"body":{"license.html":{}}}],["independent",{"_index":2555,"title":{},"body":{"license.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":280,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["indexing",{"_index":1225,"title":{},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":424,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["indicated",{"_index":1699,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["indicates",{"_index":335,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["indicating",{"_index":2691,"title":{},"body":{"license.html":{}}}],["individual",{"_index":2562,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":2353,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":2626,"title":{},"body":{"license.html":{}}}],["indx",{"_index":2141,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["inflicted",{"_index":2044,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"components/QuizPresenterComponent.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["info.data",{"_index":409,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["inform",{"_index":1403,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["information",{"_index":514,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["informative",{"_index":1586,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["informed",{"_index":1546,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["informs",{"_index":1525,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["infrastructure",{"_index":2263,"title":{},"body":{"index.html":{}}}],["infringe",{"_index":2725,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":2754,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":2402,"title":{},"body":{"license.html":{}}}],["initalize",{"_index":2091,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["initial",{"_index":162,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ControlProperties.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["initializeapp",{"_index":3090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initializeappcheck(undefined",{"_index":2966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initializes",{"_index":3102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initialvalue",{"_index":937,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["initiate",{"_index":2747,"title":{},"body":{"license.html":{}}}],["inject",{"_index":41,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["inject(auth",{"_index":352,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["inject(firestore",{"_index":1815,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["inject(meta",{"_index":1235,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["inject(quizservice",{"_index":1874,"title":{},"body":{"components/QuizListComponent.html":{},"interfaces/ViewModel-1.html":{}}}],["inject(recoveremailservice",{"_index":1920,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["inject(resetpasswordservice",{"_index":1943,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["inject(router",{"_index":123,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/QuizListComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel-1.html":{},"miscellaneous/variables.html":{}}}],["inject(storage",{"_index":1391,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["inject(title",{"_index":293,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["inject(user",{"_index":735,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(user$).pipe",{"_index":1877,"title":{},"body":{"components/QuizListComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["inject(userphotosservice",{"_index":1506,"title":{},"body":{"components/PhotoUploadComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["inject(verifyemailservice",{"_index":2148,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["injectable",{"_index":260,"title":{"injectables/AppTitleStrategyService.html":{},"injectables/QuizService.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"injectables/VerifyEmailService.html":{}},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"coverage.html":{}}}],["injectables",{"_index":262,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"injectables/QuizService.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"injectables/VerifyEmailService.html":{},"overview.html":{}}}],["injected",{"_index":1802,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["injectiontoken",{"_index":3106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inner",{"_index":855,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":42,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"interfaces/CombinedObs.html":{},"components/LoginComponent.html":{},"components/PhotoUploadComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["input.required",{"_index":87,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/PhotoUploadComponent.html":{}}}],["inputdebounce",{"_index":3031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inputevent/control.valuechange",{"_index":3076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inputs",{"_index":170,"title":{},"body":{"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/PhotoUploadComponent.html":{}}}],["inputsignal",{"_index":44,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/LoginComponent.html":{},"components/PhotoUploadComponent.html":{}}}],["inside",{"_index":1753,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["install",{"_index":2265,"title":{},"body":{"index.html":{},"license.html":{}}}],["installation",{"_index":2628,"title":{},"body":{"license.html":{}}}],["installed",{"_index":2642,"title":{},"body":{"license.html":{}}}],["instance",{"_index":3004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instanceof",{"_index":882,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"components/HeaderComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["instead",{"_index":1472,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["intact",{"_index":2532,"title":{},"body":{"license.html":{}}}],["intended",{"_index":2302,"title":{},"body":{"license.html":{}}}],["intention",{"_index":2521,"title":{},"body":{"license.html":{}}}],["interace",{"_index":2092,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["interact",{"_index":1611,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["interacted",{"_index":931,"title":{},"body":{"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["interaction",{"_index":1192,"title":{},"body":{"components/LogoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["interactive",{"_index":2415,"title":{},"body":{"license.html":{}}}],["interchange",{"_index":2577,"title":{},"body":{"license.html":{}}}],["interest",{"_index":2741,"title":{},"body":{"license.html":{}}}],["interests",{"_index":1998,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionCodeState.html":{},"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"interfaces/RecoverEmailResults.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"coverage.html":{},"license.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionCodeState.html":{},"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"interfaces/RecoverEmailResults.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"license.html":{},"overview.html":{}}}],["interfered",{"_index":2636,"title":{},"body":{"license.html":{}}}],["internal",{"_index":1634,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["internet",{"_index":1680,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["interop",{"_index":862,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{}}}],["interpretation",{"_index":2857,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":2455,"title":{},"body":{"license.html":{}}}],["interrupted",{"_index":553,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["intimate",{"_index":2464,"title":{},"body":{"license.html":{}}}],["invalid",{"_index":154,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["invalidate",{"_index":2550,"title":{},"body":{"license.html":{}}}],["irrecoverably",{"_index":1046,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["irrevocable",{"_index":2470,"title":{},"body":{"license.html":{}}}],["isdevmode",{"_index":2979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isinvalid",{"_index":919,"title":{},"body":{"interfaces/ControlProperties.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isinvalid(defaultproperties",{"_index":938,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["isinvalid(properties",{"_index":943,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["isn't",{"_index":430,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/FooterComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["isnewpassword",{"_index":969,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":3069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["istokenautorefreshenabled",{"_index":2967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["it's",{"_index":1542,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["item",{"_index":1428,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"license.html":{}}}],["item.url",{"_index":2140,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["itself",{"_index":2644,"title":{},"body":{"license.html":{}}}],["j",{"_index":2918,"title":{},"body":{"properties.html":{}}}],["javascript",{"_index":1231,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["jpeg",{"_index":2131,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["jpg",{"_index":2132,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["js",{"_index":446,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["json",{"_index":2120,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["june",{"_index":2282,"title":{},"body":{"license.html":{}}}],["jurisdiction",{"_index":1651,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["jurisdictions",{"_index":1540,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["keep",{"_index":2531,"title":{},"body":{"license.html":{}}}],["kernel",{"_index":2450,"title":{},"body":{"license.html":{}}}],["key",{"_index":2651,"title":{},"body":{"license.html":{}}}],["keys",{"_index":2631,"title":{},"body":{"license.html":{}}}],["keystroke",{"_index":3030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":2410,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":2296,"title":{},"body":{"license.html":{}}}],["kn9ts",{"_index":2046,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["know",{"_index":738,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["knowingly",{"_index":1695,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["knowledge",{"_index":2782,"title":{},"body":{"license.html":{}}}],["knows",{"_index":1465,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["lang",{"_index":12,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["language",{"_index":26,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"license.html":{}}}],["larger",{"_index":1985,"title":{},"body":{"components/StandardLayoutComponent.html":{},"license.html":{}}}],["later",{"_index":582,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{},"properties.html":{}}}],["law",{"_index":1539,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["lawful",{"_index":1674,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["laws",{"_index":1534,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["lawsuit",{"_index":2752,"title":{},"body":{"license.html":{}}}],["layout",{"_index":618,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/FooterComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["layout'},{'name",{"_index":196,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["legal",{"_index":1052,"title":{},"body":{"components/FooterComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["legally",{"_index":1641,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["legend",{"_index":180,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["length",{"_index":687,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["less",{"_index":1789,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["lesser",{"_index":2901,"title":{},"body":{"license.html":{}}}],["letters",{"_index":766,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["level",{"_index":1937,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["lgpl.html",{"_index":2904,"title":{},"body":{"license.html":{}}}],["liability",{"_index":2000,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["liable",{"_index":2042,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["libraries",{"_index":2439,"title":{},"body":{"license.html":{}}}],["library",{"_index":2610,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":2024,"title":{"license.html":{}},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":2385,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":2386,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":2387,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":2297,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":2728,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":2672,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":2722,"title":{},"body":{"license.html":{}}}],["limit",{"_index":2522,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":2843,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1564,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["limiting",{"_index":1999,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["line",{"_index":126,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ControlStruct.html":{},"components/PageNotFoundComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":85,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/HeaderComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["linked",{"_index":1965,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["linking",{"_index":2899,"title":{},"body":{"license.html":{}}}],["links",{"_index":448,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/FooterComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["linter",{"_index":460,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["list",{"_index":1124,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"license.html":{}}}],["list'},{'name",{"_index":233,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["list(owner",{"_index":1833,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["list.component.html",{"_index":1857,"title":{},"body":{"components/QuizListComponent.html":{},"interfaces/ViewModel-1.html":{}}}],["list.component.scss",{"_index":1858,"title":{},"body":{"components/QuizListComponent.html":{},"interfaces/ViewModel-1.html":{}}}],["listall",{"_index":1339,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["listall(profilephotosref",{"_index":1419,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["listquery",{"_index":1834,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["listresult",{"_index":1344,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["lists",{"_index":451,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["litigation",{"_index":2748,"title":{},"body":{"license.html":{}}}],["loading",{"_index":1979,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["local",{"_index":2858,"title":{},"body":{"license.html":{}}}],["located",{"_index":1648,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["log",{"_index":487,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["logged",{"_index":611,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/QuizListComponent.html":{},"components/SidebarComponent.html":{},"components/StandardLayoutComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":3066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":484,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["login'},{'name",{"_index":216,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["login.component.html",{"_index":1153,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":215,"title":{"components/LoginComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":1154,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginformgroup",{"_index":1165,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["logo",{"_index":1104,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logout",{"_index":1151,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogoutComponent.html":{}}}],["logout'},{'name",{"_index":218,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["logout.component.html",{"_index":1180,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logoutcomponent",{"_index":217,"title":{"components/LogoutComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["long",{"_index":598,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["longer",{"_index":575,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["loss",{"_index":2849,"title":{},"body":{"license.html":{}}}],["losses",{"_index":2852,"title":{},"body":{"license.html":{}}}],["lost",{"_index":1256,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["lowercase",{"_index":765,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["machete",{"_index":2271,"title":{},"body":{"index.html":{}}}],["machine",{"_index":2567,"title":{},"body":{"license.html":{}}}],["made",{"_index":2037,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["mail",{"_index":2880,"title":{},"body":{"license.html":{}}}],["main",{"_index":1982,"title":{},"body":{"components/StandardLayoutComponent.html":{}}}],["maintain",{"_index":1571,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["maintained",{"_index":1646,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["major",{"_index":2444,"title":{},"body":{"license.html":{}}}],["make",{"_index":1308,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"license.html":{}}}],["makes",{"_index":1265,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{}}}],["making",{"_index":2392,"title":{},"body":{"license.html":{}}}],["malformed",{"_index":521,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["manage",{"_index":1149,"title":{},"body":{"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"index.html":{}}}],["manager",{"_index":1482,"title":{},"body":{"components/PhotoManagerComponent.html":{}}}],["manager'},{'name",{"_index":224,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["manager.component.html",{"_index":1483,"title":{},"body":{"components/PhotoManagerComponent.html":{}}}],["manager.component.scss",{"_index":1484,"title":{},"body":{"components/PhotoManagerComponent.html":{}}}],["manager.component.ts",{"_index":1481,"title":{},"body":{"components/PhotoManagerComponent.html":{},"coverage.html":{}}}],["manager/photo",{"_index":1480,"title":{},"body":{"components/PhotoManagerComponent.html":{},"coverage.html":{}}}],["mangles",{"_index":1766,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["manipulate",{"_index":1773,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["manner",{"_index":2764,"title":{},"body":{"license.html":{}}}],["manually",{"_index":2072,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["manufacturer",{"_index":2344,"title":{},"body":{"license.html":{}}}],["many",{"_index":577,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["map",{"_index":869,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"components/DashboardComponent.html":{},"components/QuizListComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"miscellaneous/variables.html":{}}}],["map((event",{"_index":883,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["map((maybeuser",{"_index":984,"title":{},"body":{"components/DashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["map((profilephotos",{"_index":2113,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["map((properties",{"_index":942,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["map((quizzes",{"_index":1881,"title":{},"body":{"components/QuizListComponent.html":{},"interfaces/ViewModel-1.html":{}}}],["map((status",{"_index":891,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["maps",{"_index":95,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["march",{"_index":2802,"title":{},"body":{"license.html":{}}}],["markdownlint",{"_index":2273,"title":{},"body":{"index.html":{}}}],["marked",{"_index":2335,"title":{},"body":{"license.html":{}}}],["marketing",{"_index":1605,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["marks",{"_index":2145,"title":{},"body":{"components/VerifyEmailComponent.html":{},"license.html":{}}}],["masks",{"_index":2383,"title":{},"body":{"license.html":{}}}],["match",{"_index":711,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["match.validator.ts",{"_index":2215,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["match/confirm",{"_index":2214,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["match/match",{"_index":2217,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":166,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"components/QuizPresenterComponent.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":2486,"title":{},"body":{"license.html":{}}}],["materially",{"_index":2645,"title":{},"body":{"license.html":{}}}],["math.random",{"_index":1373,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["math.random().tostring(radix).slice(skip_whole_num",{"_index":1473,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["maximum",{"_index":686,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/PhotoUploadComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["maximum_photos",{"_index":1360,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maximumfiles",{"_index":1492,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["maxlength",{"_index":3034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxpasswordlength",{"_index":649,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["maybenavigation",{"_index":3058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybenavigation?.extras.state",{"_index":3059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybeuser",{"_index":692,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/QuizListComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maybeuser.emailverified",{"_index":3026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybeuser?.displayname",{"_index":985,"title":{},"body":{"components/DashboardComponent.html":{}}}],["meaning",{"_index":2685,"title":{},"body":{"license.html":{}}}],["means",{"_index":1685,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["measure",{"_index":2501,"title":{},"body":{"license.html":{}}}],["measures",{"_index":2514,"title":{},"body":{"license.html":{}}}],["media",{"_index":1566,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["medium",{"_index":2527,"title":{},"body":{"license.html":{}}}],["meet",{"_index":518,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["meets",{"_index":2426,"title":{},"body":{"license.html":{}}}],["menu",{"_index":1103,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["menushown",{"_index":1145,"title":{},"body":{"components/HeaderComponent.html":{}}}],["merchantability",{"_index":2833,"title":{},"body":{"license.html":{}}}],["mere",{"_index":2413,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1271,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["merging",{"_index":2737,"title":{},"body":{"license.html":{}}}],["message",{"_index":685,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":456,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/CombinedObs.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["messages'},{'name",{"_index":193,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["messages.component",{"_index":700,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["messages.component.html",{"_index":458,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["messages.component.ts",{"_index":442,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"coverage.html":{}}}],["messages.component.ts:20",{"_index":459,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["messages/auth",{"_index":441,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{}}}],["messagingsenderid",{"_index":3097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["messes",{"_index":1755,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["met",{"_index":2472,"title":{},"body":{"license.html":{}}}],["meta",{"_index":1220,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["metadata",{"_index":169,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["metadefinition",{"_index":1245,"title":{},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["meter",{"_index":1384,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["method",{"_index":1678,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":273,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"components/QuizListComponent.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"injectables/VerifyEmailService.html":{},"license.html":{}}}],["middle",{"_index":613,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["milliseconds",{"_index":342,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"miscellaneous/variables.html":{}}}],["minimum",{"_index":690,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["minlength",{"_index":3036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minpasswordlength",{"_index":650,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["minstrength",{"_index":3041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minutes",{"_index":775,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["miscellaneous",{"_index":2921,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":591,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["misrepresentation",{"_index":2669,"title":{},"body":{"license.html":{}}}],["misused",{"_index":129,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["mobile",{"_index":1133,"title":{},"body":{"components/HeaderComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["modal",{"_index":1868,"title":{},"body":{"components/QuizListComponent.html":{},"interfaces/ViewModel-1.html":{}}}],["mode",{"_index":13,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"license.html":{}}}],["model",{"_index":330,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["modern",{"_index":2249,"title":{},"body":{"dependencies.html":{}}}],["modification",{"_index":1722,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{}}}],["modifications",{"_index":2038,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["modified",{"_index":859,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["modifies",{"_index":2544,"title":{},"body":{"license.html":{}}}],["modify",{"_index":2026,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["modifying",{"_index":2404,"title":{},"body":{"license.html":{}}}],["modules",{"_index":2905,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monitor",{"_index":1572,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["more",{"_index":599,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{}}}],["moreover",{"_index":2710,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":2154,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["move",{"_index":1312,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["much",{"_index":1788,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["multi",{"_index":492,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["multiline",{"_index":2277,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":1455,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["name",{"_index":186,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["namecntrl",{"_index":2064,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["namecntrlerrors",{"_index":2059,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["namecntrlinvalid",{"_index":2060,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["named",{"_index":3010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["names",{"_index":391,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{}}}],["nature",{"_index":2556,"title":{},"body":{"license.html":{}}}],["navigate",{"_index":155,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"miscellaneous/variables.html":{}}}],["navigates",{"_index":1185,"title":{},"body":{"components/LogoutComponent.html":{}}}],["navigation",{"_index":102,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["necessary",{"_index":1229,"title":{},"body":{"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":419,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["needed",{"_index":1910,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["needs",{"_index":338,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["nested",{"_index":1424,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["network",{"_index":550,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["never",{"_index":1761,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":60,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["newer",{"_index":1809,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["newpassword",{"_index":1318,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["newquizdata",{"_index":1820,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["next",{"_index":20,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ControlStruct.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["nexturl",{"_index":3063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":295,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["ngondestroy",{"_index":1215,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["ngoninit",{"_index":1216,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["ngoptimizedimage",{"_index":619,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["ngsp",{"_index":1893,"title":{},"body":{"components/QuizListComponent.html":{}}}],["ngsubmit",{"_index":1093,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"miscellaneous/typealiases.html":{}}}],["ngsw",{"_index":2977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nice",{"_index":3084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noauthguard",{"_index":2181,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nofollow",{"_index":1248,"title":{},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["noindex",{"_index":1247,"title":{},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["nominally",{"_index":1453,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["non",{"_index":732,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/QuizListComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"license.html":{}}}],["noncommercially",{"_index":2588,"title":{},"body":{"license.html":{}}}],["normal",{"_index":2442,"title":{},"body":{"license.html":{}}}],["normalize",{"_index":2250,"title":{},"body":{"dependencies.html":{}}}],["normally",{"_index":2613,"title":{},"body":{"license.html":{}}}],["note",{"_index":972,"title":{},"body":{"interfaces/ControlStruct.html":{},"components/FooterComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["nothing",{"_index":2723,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1055,"title":{},"body":{"components/FooterComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["notices",{"_index":2417,"title":{},"body":{"license.html":{}}}],["notifications",{"_index":1585,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["notifies",{"_index":2711,"title":{},"body":{"license.html":{}}}],["notify",{"_index":2706,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":2660,"title":{},"body":{"license.html":{}}}],["now",{"_index":132,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["now.todatestring",{"_index":1822,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["npm",{"_index":2272,"title":{},"body":{"index.html":{}}}],["null",{"_index":417,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/ControlStruct.html":{},"components/PageNotFoundComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["nullish",{"_index":3057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":370,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["number(new",{"_index":1448,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["numbered",{"_index":2823,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":527,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1754,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.values(properties",{"_index":921,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":1714,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["obligate",{"_index":2812,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":1642,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["obligation",{"_index":1673,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["obligations",{"_index":1626,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["observable",{"_index":327,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"components/DashboardComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["observables",{"_index":857,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["observble",{"_index":1845,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["obtain",{"_index":1909,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["occasionally",{"_index":2587,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":557,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["occurring",{"_index":2720,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":2352,"title":{},"body":{"license.html":{}}}],["of(code).pipe",{"_index":371,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["of(verifyresults",{"_index":1299,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["offer",{"_index":2329,"title":{},"body":{"license.html":{}}}],["offered",{"_index":2604,"title":{},"body":{"license.html":{}}}],["offering",{"_index":2591,"title":{},"body":{"license.html":{}}}],["official",{"_index":2429,"title":{},"body":{"license.html":{}}}],["once",{"_index":1510,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["onclick",{"_index":1111,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onclick(event",{"_index":1119,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ondestroy",{"_index":1209,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["one",{"_index":1452,"title":{},"body":{"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["oninit",{"_index":1210,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["online",{"_index":1548,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["onsubmit",{"_index":652,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["onsubmit(user",{"_index":654,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["oobcode",{"_index":14,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["oobcodes",{"_index":348,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["oops",{"_index":1255,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["open",{"_index":1065,"title":{},"body":{"components/FooterComponent.html":{},"components/PhotoUploadComponent.html":{},"components/TermsAndConditionsComponent.html":{}}}],["opendialog",{"_index":1002,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["opened",{"_index":503,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["openfilepicker",{"_index":1493,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["opens",{"_index":992,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["operate",{"_index":2854,"title":{},"body":{"license.html":{}}}],["operated",{"_index":2593,"title":{},"body":{"license.html":{}}}],["operating",{"_index":2451,"title":{},"body":{"license.html":{}}}],["operation",{"_index":485,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["option",{"_index":382,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{}}}],["optional",{"_index":281,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/HeaderComponent.html":{},"components/QuizListComponent.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["options",{"_index":1783,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":1771,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["orderby",{"_index":1733,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["orderby('updatedat",{"_index":1837,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["organization",{"_index":1661,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["organizations",{"_index":2388,"title":{},"body":{"license.html":{}}}],["organize",{"_index":1445,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["origin",{"_index":2670,"title":{},"body":{"license.html":{}}}],["original",{"_index":312,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{}}}],["others",{"_index":2315,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CombinedObs.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":31,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["outlet",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["outlining",{"_index":2007,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["output",{"_index":854,"title":{},"body":{"interfaces/CombinedObs.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["outside",{"_index":1616,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{}}}],["ov",{"_index":3039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["over",{"_index":1254,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["overview",{"_index":2906,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":1800,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{}}}],["owner",{"_index":1749,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/TermsAndConditionsComponent.html":{}}}],["owner's",{"_index":1997,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["ownership",{"_index":540,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/TermsAndConditionsComponent.html":{}}}],["package",{"_index":2233,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packaged",{"_index":2549,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":2443,"title":{},"body":{"license.html":{}}}],["page",{"_index":220,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pagenotfoundcomponent",{"_index":219,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["pages",{"_index":609,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/FooterComponent.html":{}}}],["pagetitle",{"_index":301,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["pair",{"_index":958,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["paper",{"_index":2879,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":2698,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":2771,"title":{},"body":{"license.html":{}}}],["param",{"_index":364,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/ControlStruct.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["parameter",{"_index":84,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/LoginComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":71,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/HeaderComponent.html":{},"components/QuizListComponent.html":{},"injectables/QuizService.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{}}}],["parent",{"_index":1497,"title":{},"body":{"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["parental",{"_index":1701,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["parsed",{"_index":525,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["part",{"_index":1355,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["partial",{"_index":108,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":2434,"title":{},"body":{"license.html":{}}}],["parties",{"_index":2412,"title":{},"body":{"license.html":{}}}],["parts",{"_index":2466,"title":{},"body":{"license.html":{}}}],["party",{"_index":603,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["party's",{"_index":2739,"title":{},"body":{"license.html":{}}}],["pass",{"_index":2324,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["passing",{"_index":1305,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["password",{"_index":118,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"dependencies.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["password'},{'name",{"_index":201,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["password.component.html",{"_index":783,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":782,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["password.component.ts:100",{"_index":1935,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:114",{"_index":797,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:38",{"_index":1084,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:40",{"_index":1085,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:42",{"_index":1086,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:44",{"_index":1088,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:45",{"_index":1089,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:46",{"_index":1091,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:48",{"_index":798,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:50",{"_index":800,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:52",{"_index":801,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:54",{"_index":802,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:55",{"_index":1938,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:56",{"_index":803,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:57",{"_index":1940,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:58",{"_index":804,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:59",{"_index":1941,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:60",{"_index":805,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:61",{"_index":1936,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:62",{"_index":806,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:64",{"_index":807,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:65",{"_index":812,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:66",{"_index":813,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:67",{"_index":1080,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:68",{"_index":814,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:70",{"_index":815,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:71",{"_index":816,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:72",{"_index":817,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:73",{"_index":796,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.service",{"_index":1942,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.service.ts",{"_index":1263,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["password.service.ts:116",{"_index":1955,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:131",{"_index":1956,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:57",{"_index":1959,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:58",{"_index":1960,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:63",{"_index":1957,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:74",{"_index":1958,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password/change",{"_index":781,"title":{},"body":{"components/ChangePasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["password/forgot",{"_index":1075,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["password/reset",{"_index":1262,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["password1",{"_index":819,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["password1cntrl",{"_index":794,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password1cntrlerrors",{"_index":787,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password1cntrlinvalid",{"_index":788,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password2",{"_index":820,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["password2cntrl",{"_index":795,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password2cntrlerrors",{"_index":789,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password2cntrlinvalid",{"_index":790,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwordcntrl",{"_index":651,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{}}}],["passwordcntrlerrors",{"_index":643,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{}}}],["passwordcntrlinvalid",{"_index":644,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{}}}],["passwordfirebasevalidator",{"_index":955,"title":{},"body":{"interfaces/ControlStruct.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordpolicy",{"_index":3071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passwordresetsent",{"_index":337,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["passwordresetsuccess",{"_index":1260,"title":{"interfaces/PasswordResetSuccess.html":{}},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["passwords",{"_index":705,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwords.maxlength",{"_index":683,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwords.minlength",{"_index":688,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwordstrength(value",{"_index":3085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passwordstrengthvalidator",{"_index":956,"title":{},"body":{"interfaces/ControlStruct.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["past",{"_index":1805,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["patent",{"_index":2697,"title":{},"body":{"license.html":{}}}],["patents",{"_index":2368,"title":{},"body":{"license.html":{}}}],["path",{"_index":139,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{}}}],["paths",{"_index":1205,"title":{},"body":{"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/typealiases.html":{}}}],["pattern",{"_index":2350,"title":{},"body":{"license.html":{}}}],["payload",{"_index":1794,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["payment",{"_index":2797,"title":{},"body":{"license.html":{}}}],["pedantic",{"_index":413,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["peer",{"_index":2602,"title":{},"body":{"license.html":{}}}],["peers",{"_index":2603,"title":{},"body":{"license.html":{}}}],["pending",{"_index":570,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/typealiases.html":{}}}],["percentage",{"_index":1340,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["percentage(task).pipe",{"_index":1401,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["percentage.progress",{"_index":1519,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["perform",{"_index":33,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["performance",{"_index":2836,"title":{},"body":{"license.html":{}}}],["performed",{"_index":30,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["performing",{"_index":2459,"title":{},"body":{"license.html":{}}}],["performs",{"_index":1915,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["perhaps",{"_index":133,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["period",{"_index":1638,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["periodically",{"_index":1710,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["periods",{"_index":1643,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["permanently",{"_index":2705,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1842,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{}}}],["permissions",{"_index":585,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["permissive",{"_index":2534,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1690,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["permits",{"_index":2687,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":2290,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":2638,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1526,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["personally",{"_index":1561,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["pertinent",{"_index":2811,"title":{},"body":{"license.html":{}}}],["phone",{"_index":506,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["photo",{"_index":223,"title":{"interfaces/Photo.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{}}}],["photo.url",{"_index":2114,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["photo_dir",{"_index":1365,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["photomanagercomponent",{"_index":222,"title":{"components/PhotoManagerComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["photos",{"_index":1150,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["photos.service",{"_index":1512,"title":{},"body":{"components/PhotoUploadComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["photos.service.ts",{"_index":1331,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["photos.service.ts:146",{"_index":2051,"title":{},"body":{"injectables/UserPhotosService.html":{}}}],["photos.service.ts:68",{"_index":2054,"title":{},"body":{"injectables/UserPhotosService.html":{}}}],["photos.service.ts:71",{"_index":2052,"title":{},"body":{"injectables/UserPhotosService.html":{}}}],["photos.service.ts:72",{"_index":2053,"title":{},"body":{"injectables/UserPhotosService.html":{}}}],["photos.service.ts:74",{"_index":2049,"title":{},"body":{"injectables/UserPhotosService.html":{}}}],["photos.service.ts:97",{"_index":2050,"title":{},"body":{"injectables/UserPhotosService.html":{}}}],["photos/photo",{"_index":1479,"title":{},"body":{"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["photos/user",{"_index":1330,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["photouploadcomponent",{"_index":225,"title":{"components/PhotoUploadComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{}}}],["photourl",{"_index":2071,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["photourlcntrl",{"_index":2065,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["photourlcntrl.valid",{"_index":2138,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["photourlcntrl.value",{"_index":2137,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["photourlcntrlerrors",{"_index":2061,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["photourlcntrlinvalid",{"_index":2062,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["physical",{"_index":2571,"title":{},"body":{"license.html":{}}}],["physically",{"_index":2584,"title":{},"body":{"license.html":{}}}],["pick",{"_index":1821,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["picker",{"_index":1381,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["picking",{"_index":2074,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["pieces",{"_index":2314,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":896,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["pipe(startwith(undefined",{"_index":1320,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["place",{"_index":1660,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["plain",{"_index":3050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":471,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["plugin",{"_index":2276,"title":{},"body":{"index.html":{}}}],["plus",{"_index":2742,"title":{},"body":{"license.html":{}}}],["png",{"_index":2133,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["point",{"_index":1372,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["pointer",{"_index":2877,"title":{},"body":{"license.html":{}}}],["policies",{"_index":1633,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy",{"_index":1071,"title":{},"body":{"components/FooterComponent.html":{},"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["policy'},{'name",{"_index":229,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["policy.component.html",{"_index":1550,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.component.ts",{"_index":1522,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["policy/privacy",{"_index":1521,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["popup",{"_index":499,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["portion",{"_index":2607,"title":{},"body":{"license.html":{}}}],["possesses",{"_index":2582,"title":{},"body":{"license.html":{}}}],["possession",{"_index":2546,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":2856,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1274,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["possword",{"_index":1283,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/typealiases.html":{}}}],["posted",{"_index":1712,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["power",{"_index":2516,"title":{},"body":{"license.html":{}}}],["practical",{"_index":2298,"title":{},"body":{"license.html":{}}}],["practice",{"_index":2357,"title":{},"body":{"license.html":{}}}],["practices",{"_index":1537,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["preamble",{"_index":2294,"title":{},"body":{"license.html":{}}}],["precentage",{"_index":1352,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["precise",{"_index":2377,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":2354,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":2740,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":2428,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":1468,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["prefixed",{"_index":466,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["present",{"_index":357,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{}}}],["presented",{"_index":2011,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["presenter",{"_index":1896,"title":{},"body":{"components/QuizPresenterComponent.html":{}}}],["presenter'},{'name",{"_index":235,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["presenter.component.html",{"_index":1897,"title":{},"body":{"components/QuizPresenterComponent.html":{}}}],["presenter.component.scss",{"_index":1898,"title":{},"body":{"components/QuizPresenterComponent.html":{}}}],["presenting",{"_index":2909,"title":{},"body":{"properties.html":{}}}],["presents",{"_index":2423,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":2667,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":2275,"title":{},"body":{"index.html":{}}}],["prettierto",{"_index":2279,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":100,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["prevented",{"_index":2151,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"license.html":{}}}],["previous",{"_index":1456,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["previously",{"_index":593,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["price",{"_index":2310,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":2798,"title":{},"body":{"license.html":{}}}],["primary",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["prior",{"_index":2707,"title":{},"body":{"license.html":{}}}],["pristinechangeevent",{"_index":863,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["privacy",{"_index":228,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["privacypolicycomponent",{"_index":227,"title":{"components/PrivacyPolicyComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["private",{"_index":88,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"license.html":{}}}],["privately",{"_index":2030,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["probably",{"_index":1228,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["problem",{"_index":396,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["problem.code",{"_index":1846,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["problems",{"_index":2337,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":2629,"title":{},"body":{"license.html":{}}}],["proceed",{"_index":1043,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["process",{"_index":676,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["procuring",{"_index":2787,"title":{},"body":{"license.html":{}}}],["produce",{"_index":2454,"title":{},"body":{"license.html":{}}}],["product",{"_index":2572,"title":{},"body":{"license.html":{}}}],["production",{"_index":366,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["products",{"_index":1589,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["profile",{"_index":1148,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["profile'},{'name",{"_index":248,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["profile.component.html",{"_index":2057,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["profile.component.scss",{"_index":2058,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["profile.component.ts",{"_index":2056,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["profile.component.ts:103",{"_index":2090,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:105",{"_index":2068,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:161",{"_index":2069,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:190",{"_index":2070,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:82",{"_index":2075,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:84",{"_index":2077,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:86",{"_index":2079,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:88",{"_index":2080,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:90",{"_index":2083,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:92",{"_index":2084,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:94",{"_index":2085,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:95",{"_index":2086,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:96",{"_index":2087,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:97",{"_index":2089,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":2055,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["profileform",{"_index":2066,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["profileformgroup",{"_index":2088,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["profilephotos",{"_index":1417,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["profilephotos.push",{"_index":1442,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["profilephotos.sort((a",{"_index":1446,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["profilephotoslist",{"_index":1418,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["profilephotoslist.items",{"_index":1429,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["profilephotosref",{"_index":1411,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["program",{"_index":2304,"title":{},"body":{"license.html":{}}}],["program's",{"_index":2526,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":2893,"title":{},"body":{"license.html":{}}}],["programming",{"_index":2435,"title":{},"body":{"license.html":{}}}],["programs",{"_index":2307,"title":{},"body":{"license.html":{}}}],["progress",{"_index":1351,"title":{"interfaces/Progress.html":{}},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"coverage.html":{}}}],["prohibit",{"_index":2356,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":2512,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":2794,"title":{},"body":{"license.html":{}}}],["project",{"_index":1806,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["projectid",{"_index":3099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project’s",{"_index":566,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["prominent",{"_index":2425,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":2419,"title":{},"body":{"license.html":{}}}],["promise",{"_index":136,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise.all(promises",{"_index":1435,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["promise.allsettled",{"_index":1430,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["promise/prefer",{"_index":389,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["promises",{"_index":130,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["promises.push(promise",{"_index":1433,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["promisesettledresult",{"_index":1421,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["promotional",{"_index":1601,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["proof",{"_index":539,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["propagate",{"_index":2398,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":2726,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":2405,"title":{},"body":{"license.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":1314,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["proprietary",{"_index":2374,"title":{},"body":{"license.html":{}}}],["protect",{"_index":1686,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["protecting",{"_index":2348,"title":{},"body":{"license.html":{}}}],["protection",{"_index":1082,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["protects",{"_index":1996,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["protocols",{"_index":2649,"title":{},"body":{"license.html":{}}}],["prove",{"_index":2837,"title":{},"body":{"license.html":{}}}],["provide",{"_index":537,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provideanalytics",{"_index":2958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideappcheck",{"_index":2963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideauth",{"_index":2956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":509,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["providedin",{"_index":290,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["providefirebaseapp",{"_index":3088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providefirestore",{"_index":2968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providefunctions",{"_index":2970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideourfirebaseapp",{"_index":2173,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["provideperformance",{"_index":2973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":548,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"miscellaneous/variables.html":{}}}],["providerouter",{"_index":2988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1609,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["provideserviceworker",{"_index":2976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providestorage",{"_index":2982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providevertexai",{"_index":2985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["province",{"_index":1649,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["provision",{"_index":2364,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":2703,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":2827,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":2828,"title":{},"body":{"license.html":{}}}],["pub",{"_index":2259,"title":{},"body":{"index.html":{},"properties.html":{}}}],["public",{"_index":86,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"license.html":{}}}],["publicity",{"_index":2671,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":1614,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["publish",{"_index":2530,"title":{},"body":{"license.html":{}}}],["published",{"_index":2824,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":617,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["purposes",{"_index":876,"title":{},"body":{"interfaces/CombinedObs.html":{},"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["pursuant",{"_index":2785,"title":{},"body":{"license.html":{}}}],["push",{"_index":1584,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["qualified",{"_index":54,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"miscellaneous/variables.html":{}}}],["qualify",{"_index":2716,"title":{},"body":{"license.html":{}}}],["quality",{"_index":2835,"title":{},"body":{"license.html":{}}}],["query",{"_index":70,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/LoginComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["querydocumentsnapshot",{"_index":1739,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["quiz",{"_index":627,"title":{"interfaces/Quiz.html":{}},"body":{"components/CentralLayoutComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/ViewModel-1.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["quiz.id",{"_index":1887,"title":{},"body":{"components/QuizListComponent.html":{}}}],["quiz.owner",{"_index":1891,"title":{},"body":{"components/QuizListComponent.html":{}}}],["quiz.service",{"_index":1871,"title":{},"body":{"components/QuizListComponent.html":{},"interfaces/ViewModel-1.html":{}}}],["quiz.title",{"_index":1888,"title":{},"body":{"components/QuizListComponent.html":{}}}],["quiz.updatedat",{"_index":1889,"title":{},"body":{"components/QuizListComponent.html":{}}}],["quizeditorcomponent",{"_index":230,"title":{"components/QuizEditorComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["quizes",{"_index":1799,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["quizid",{"_index":1882,"title":{},"body":{"components/QuizListComponent.html":{},"interfaces/ViewModel-1.html":{}}}],["quizlistcomponent",{"_index":232,"title":{"components/QuizListComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel-1.html":{},"coverage.html":{}}}],["quizmodel",{"_index":1746,"title":{"interfaces/QuizModel.html":{}},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["quizpayload",{"_index":1715,"title":{"interfaces/QuizPayload.html":{}},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["quizpresentercomponent",{"_index":234,"title":{"components/QuizPresenterComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["quizservice",{"_index":1811,"title":{"injectables/QuizService.html":{}},"body":{"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/ViewModel-1.html":{},"coverage.html":{}}}],["quizzes",{"_index":1750,"title":{},"body":{"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/SidebarComponent.html":{},"interfaces/ViewModel-1.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["quota",{"_index":567,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["radix",{"_index":1368,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["random",{"_index":1367,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["re",{"_index":472,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserPhotosService.html":{}}}],["reactiveformsmodule",{"_index":636,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["read",{"_index":2902,"title":{},"body":{"license.html":{}}}],["readable",{"_index":2568,"title":{},"body":{"license.html":{}}}],["readily",{"_index":2777,"title":{},"body":{"license.html":{}}}],["reading",{"_index":2653,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":51,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["ready",{"_index":2362,"title":{},"body":{"license.html":{}}}],["real",{"_index":1067,"title":{},"body":{"components/FooterComponent.html":{}}}],["reason",{"_index":434,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{}}}],["reasonable",{"_index":1593,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["reasonably",{"_index":1656,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["reauthenticatewithcredential",{"_index":694,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["reauthenticatewithcredential(user",{"_index":750,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["recaptchaenterpriseprovider('6lfg3reqaaaaak18s9uymuk8wd3jswjvnmdzmlrt",{"_index":2965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["receipt",{"_index":2714,"title":{},"body":{"license.html":{}}}],["receive",{"_index":2312,"title":{},"body":{"license.html":{}}}],["received",{"_index":2121,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["receives",{"_index":2730,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":2789,"title":{},"body":{"license.html":{}}}],["recent",{"_index":483,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/DeleteAccountComponent.html":{},"miscellaneous/typealiases.html":{}}}],["recently",{"_index":1408,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["recipient",{"_index":533,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["recipient's",{"_index":2783,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":2325,"title":{},"body":{"license.html":{}}}],["recognize",{"_index":377,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["recognized",{"_index":2430,"title":{},"body":{"license.html":{}}}],["recognizes",{"_index":341,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"miscellaneous/variables.html":{}}}],["record",{"_index":91,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{}}}],["recorded",{"_index":1704,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["recover",{"_index":115,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["recovered",{"_index":314,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["recoveremail",{"_index":114,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/RecoverEmailService.html":{}}}],["recoveremail$(code",{"_index":369,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["recoveremailcomponent",{"_index":236,"title":{"components/RecoverEmailComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["recoveremailresults",{"_index":332,"title":{"interfaces/RecoverEmailResults.html":{}},"body":{"interfaces/ApplyResult.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"coverage.html":{}}}],["recoveremailservice",{"_index":350,"title":{"injectables/RecoverEmailService.html":{}},"body":{"interfaces/ApplyResult.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"coverage.html":{}}}],["recovering",{"_index":347,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"miscellaneous/variables.html":{}}}],["recovery",{"_index":309,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"miscellaneous/variables.html":{}}}],["redirect",{"_index":569,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/LoginComponent.html":{}}}],["redirecting",{"_index":1197,"title":{},"body":{"components/LogoutComponent.html":{}}}],["redirects",{"_index":3029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirectto",{"_index":159,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["redisplay",{"_index":1322,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["redistribute",{"_index":2872,"title":{},"body":{"license.html":{}}}],["ref",{"_index":1341,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["ref(this._storage",{"_index":1412,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["reference",{"_index":1028,"title":{},"body":{"components/DeleteAccountComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/typealiases.html":{}}}],["reference.id",{"_index":1824,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["referring",{"_index":2309,"title":{},"body":{"license.html":{}}}],["refers",{"_index":2381,"title":{},"body":{"license.html":{}}}],["refrain",{"_index":2813,"title":{},"body":{"license.html":{}}}],["refresh",{"_index":606,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["refreshed",{"_index":1409,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["regard",{"_index":2658,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":1538,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["regardless",{"_index":2548,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":2467,"title":{},"body":{"license.html":{}}}],["registered",{"_index":1576,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["registerwhenstable:30000",{"_index":2981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registration",{"_index":1573,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["registrationstrategy",{"_index":2980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regular",{"_index":2246,"title":{},"body":{"dependencies.html":{}}}],["reinstated",{"_index":2702,"title":{},"body":{"license.html":{}}}],["rejected",{"_index":1307,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{}}}],["related",{"_index":1588,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["relationship",{"_index":2491,"title":{},"body":{"license.html":{}}}],["relative",{"_index":57,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"miscellaneous/variables.html":{}}}],["released",{"_index":2305,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":2542,"title":{},"body":{"license.html":{}}}],["relicensing",{"_index":2688,"title":{},"body":{"license.html":{}}}],["rely",{"_index":3051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relying",{"_index":2776,"title":{},"body":{"license.html":{}}}],["remain",{"_index":2599,"title":{},"body":{"license.html":{}}}],["remains",{"_index":1064,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["remember",{"_index":1677,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["remote",{"_index":2073,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["removal",{"_index":2659,"title":{},"body":{"license.html":{}}}],["remove",{"_index":1218,"title":{},"body":{"components/PageNotFoundComponent.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["removed",{"_index":1244,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["render",{"_index":2376,"title":{},"body":{"license.html":{}}}],["rendered",{"_index":2850,"title":{},"body":{"license.html":{}}}],["repair",{"_index":2841,"title":{},"body":{"license.html":{}}}],["replace",{"_index":1287,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["replaced",{"_index":1953,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["replacepassword",{"_index":1954,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["replacepassword(newpassword",{"_index":1288,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["replaces",{"_index":97,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["replaceurl",{"_index":147,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["repository",{"_index":1707,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"properties.html":{}}}],["represent",{"_index":1366,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["representatives",{"_index":2017,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["represents",{"_index":1653,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["request",{"_index":490,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":586,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["requests",{"_index":578,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["require",{"_index":2463,"title":{},"body":{"license.html":{}}}],["required",{"_index":175,"title":{},"body":{"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"interfaces/ControlStruct.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["requirement",{"_index":2543,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":519,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/ControlStruct.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["requires",{"_index":486,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/DeleteAccountComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["requiring",{"_index":2391,"title":{},"body":{"license.html":{}}}],["resend",{"_index":507,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["reset",{"_index":117,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["resetpassword",{"_index":116,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["resetpassword$(code",{"_index":1295,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["resetpasswordcomponent",{"_index":237,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["resetpasswordform",{"_index":1934,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordformgroup",{"_index":1939,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["resetpasswordresults",{"_index":1276,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["resetpasswordservice",{"_index":1285,"title":{"injectables/ResetPasswordService.html":{}},"body":{"interfaces/PasswordResetSuccess.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{}}}],["resetting",{"_index":1264,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["resolve",{"_index":1629,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["resolved",{"_index":2620,"title":{},"body":{"license.html":{}}}],["respect",{"_index":2320,"title":{},"body":{"license.html":{}}}],["response",{"_index":333,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["responsibilities",{"_index":2009,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["responsible",{"_index":2731,"title":{},"body":{"license.html":{}}}],["restoration",{"_index":1926,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["restore",{"_index":355,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["restored",{"_index":360,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["restoredemail",{"_index":310,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["restrict",{"_index":2370,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":2513,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":2686,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":2684,"title":{},"body":{"license.html":{}}}],["result",{"_index":384,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["resulting",{"_index":2394,"title":{},"body":{"license.html":{}}}],["results",{"_index":165,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"components/QuizPresenterComponent.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1623,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["retained",{"_index":1636,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["retains",{"_index":2641,"title":{},"body":{"license.html":{}}}],["retention",{"_index":1622,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["retrying",{"_index":489,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["return",{"_index":62,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":426,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["returns",{"_index":283,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["reverse",{"_index":101,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["reverted",{"_index":411,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["reverts",{"_index":1907,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["review",{"_index":1709,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["reviewing",{"_index":2860,"title":{},"body":{"license.html":{}}}],["revised",{"_index":2817,"title":{},"body":{"license.html":{}}}],["revoked",{"_index":2014,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["rid",{"_index":420,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["right",{"_index":1663,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["rights",{"_index":2008,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["risk",{"_index":2021,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["rob",{"_index":2919,"title":{},"body":{"properties.html":{}}}],["robot",{"_index":1219,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["robots",{"_index":1224,"title":{},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["robots_meta",{"_index":1246,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rom",{"_index":2643,"title":{},"body":{"license.html":{}}}],["root",{"_index":156,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":189,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["route",{"_index":160,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/QuizListComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"miscellaneous/variables.html":{}}}],["routed",{"_index":1222,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["router",{"_index":46,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/QuizListComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel-1.html":{},"miscellaneous/variables.html":{}}}],["router.parseurl(`/confirm",{"_index":3027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.parseurl(`/login?next=${url",{"_index":2998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.parseurl(nexturl",{"_index":3065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":620,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizListComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel-1.html":{}}}],["routeroutlet",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"components/CentralLayoutComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["routerstatesnapshot",{"_index":277,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":1207,"title":{},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["royalty",{"_index":2746,"title":{},"body":{"license.html":{}}}],["rules",{"_index":1995,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["run",{"_index":2342,"title":{},"body":{"license.html":{}}}],["running",{"_index":2476,"title":{},"body":{"license.html":{}}}],["runs",{"_index":2452,"title":{},"body":{"license.html":{}}}],["rxfire",{"_index":1356,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["rxjs",{"_index":326,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"components/DashboardComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"dependencies.html":{}}}],["rxjs/finnish",{"_index":895,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["s3",{"_index":1464,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["safe",{"_index":3079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["safely",{"_index":3054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["safephotourl",{"_index":2122,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["safest",{"_index":2874,"title":{},"body":{"license.html":{}}}],["sake",{"_index":2334,"title":{},"body":{"license.html":{}}}],["sale",{"_index":2756,"title":{},"body":{"license.html":{}}}],["same",{"_index":546,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["satisfy",{"_index":2600,"title":{},"body":{"license.html":{}}}],["saying",{"_index":2596,"title":{},"body":{"license.html":{}}}],["scan",{"_index":918,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["school",{"_index":2894,"title":{},"body":{"license.html":{}}}],["scope",{"_index":2793,"title":{},"body":{"license.html":{}}}],["screen",{"_index":614,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["screens",{"_index":1984,"title":{},"body":{"components/StandardLayoutComponent.html":{}}}],["screentrackingservice",{"_index":2961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scripts",{"_index":2456,"title":{},"body":{"license.html":{}}}],["scrollpositionrestoration",{"_index":2992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sdk/blob/105d248bd4ddf5d38d5fa7b8a3ec57af2abf459a/packages/auth/src/core/errors.ts",{"_index":447,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["second",{"_index":541,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["secondarily",{"_index":2401,"title":{},"body":{"license.html":{}}}],["section",{"_index":1672,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["sections",{"_index":2565,"title":{},"body":{"license.html":{}}}],["secure",{"_index":1681,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["securely",{"_index":1659,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["security",{"_index":1592,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["see",{"_index":2047,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"index.html":{},"license.html":{}}}],["selector",{"_index":79,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["self",{"_index":64,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["sell",{"_index":2769,"title":{},"body":{"license.html":{}}}],["selling",{"_index":2755,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":2382,"title":{},"body":{"license.html":{}}}],["send",{"_index":359,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["send_email_delay",{"_index":343,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sendconfirmemail",{"_index":901,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["sendconfirmemail(user",{"_index":903,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["sendemailverification",{"_index":909,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["sendemailverification(user",{"_index":910,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["sending",{"_index":331,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sendpasswordresetemail",{"_index":320,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["sendpasswordresetemail(this._auth",{"_index":437,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["sends",{"_index":658,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["sendverifyemailstatuses",{"_index":701,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["sensitive",{"_index":34,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{}}}],["sent",{"_index":28,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"miscellaneous/typealiases.html":{}}}],["separable",{"_index":2606,"title":{},"body":{"license.html":{}}}],["separate",{"_index":2554,"title":{},"body":{"license.html":{}}}],["separately",{"_index":2551,"title":{},"body":{"license.html":{}}}],["serve",{"_index":296,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["server",{"_index":2585,"title":{},"body":{"license.html":{}}}],["servers",{"_index":1702,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["serves",{"_index":2445,"title":{},"body":{"license.html":{}}}],["service",{"_index":1237,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{}}}],["services",{"_index":1591,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["servicing",{"_index":2840,"title":{},"body":{"license.html":{}}}],["session",{"_index":1179,"title":{},"body":{"components/LogoutComponent.html":{}}}],["set",{"_index":677,"title":{},"body":{"components/ChangeEmailComponent.html":{},"interfaces/ControlProperties.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["setoptions",{"_index":1740,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["sets",{"_index":266,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"components/HeaderComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/TermsAndConditionsComponent.html":{},"interfaces/VerifiedFailed.html":{}}}],["setting",{"_index":1292,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["settings",{"_index":1671,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["settledmetadata",{"_index":1437,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["settledmetadata.status",{"_index":1440,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["settledmetadata.value",{"_index":1443,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["settledurl",{"_index":1436,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["settledurl.status",{"_index":1438,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["settledurl.value",{"_index":1444,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["settles",{"_index":1303,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["setup",{"_index":2261,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["shall",{"_index":2498,"title":{},"body":{"license.html":{}}}],["share",{"_index":1607,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["shared",{"_index":1529,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{}}}],["short",{"_index":2882,"title":{},"body":{"license.html":{}}}],["shorter",{"_index":1637,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["show",{"_index":1183,"title":{},"body":{"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["showform",{"_index":791,"title":{"interfaces/ShowForm.html":{}},"body":{"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["showing",{"_index":809,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["showmenu",{"_index":1108,"title":{},"body":{"components/HeaderComponent.html":{}}}],["shows",{"_index":1294,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["showurl",{"_index":2125,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["showurlinput",{"_index":2063,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["shuffle",{"_index":1975,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["sidebar",{"_index":1962,"title":{},"body":{"components/SidebarComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["sidebar'},{'name",{"_index":239,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["sidebar.component.html",{"_index":1966,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1967,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.component",{"_index":1990,"title":{},"body":{"components/StandardLayoutComponent.html":{}}}],["sidebarcomponent",{"_index":238,"title":{"components/SidebarComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["sign",{"_index":543,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["signal",{"_index":45,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PhotoUploadComponent.html":{},"components/QuizListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"miscellaneous/variables.html":{}}}],["signal('unsent",{"_index":731,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["signal(false",{"_index":1126,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogoutComponent.html":{},"components/QuizListComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["signal(true",{"_index":837,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["signal.util",{"_index":954,"title":{},"body":{"interfaces/ControlStruct.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["signal.util.ts",{"_index":852,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["signals",{"_index":463,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["signatures",{"_index":1756,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["signed",{"_index":594,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["significant",{"_index":2627,"title":{},"body":{"license.html":{}}}],["signing",{"_index":1669,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["signinwithemailandpassword",{"_index":1172,"title":{},"body":{"components/LoginComponent.html":{}}}],["signinwithemailandpassword(this._auth",{"_index":1176,"title":{},"body":{"components/LoginComponent.html":{}}}],["signout",{"_index":1193,"title":{},"body":{"components/LogoutComponent.html":{}}}],["signout(this._auth",{"_index":1195,"title":{},"body":{"components/LogoutComponent.html":{}}}],["similar",{"_index":2511,"title":{},"body":{"license.html":{}}}],["similarly",{"_index":1617,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["simultaneously",{"_index":2810,"title":{},"body":{"license.html":{}}}],["single",{"_index":616,"title":{},"body":{"components/CentralLayoutComponent.html":{},"index.html":{},"license.html":{}}}],["site",{"_index":2004,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["situations",{"_index":1608,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["skip",{"_index":432,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["skip_whole_num",{"_index":1374,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["smaller",{"_index":1983,"title":{},"body":{"components/StandardLayoutComponent.html":{}}}],["sms",{"_index":470,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["snapshot",{"_index":282,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["snapshot.data(options",{"_index":1784,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["snapshot.id",{"_index":1785,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["snapshotoptions",{"_index":1741,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["social",{"_index":1565,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["soft",{"_index":1226,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["software",{"_index":2028,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["sold",{"_index":2616,"title":{},"body":{"license.html":{}}}],["sole",{"_index":2482,"title":{},"body":{"license.html":{}}}],["solely",{"_index":2034,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["solid",{"_index":1139,"title":{},"body":{"components/HeaderComponent.html":{},"dependencies.html":{}}}],["someone",{"_index":1416,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["something",{"_index":153,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["sometimes",{"_index":418,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["sort",{"_index":1333,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["sorted",{"_index":1407,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["sorting",{"_index":1422,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"components/QuizPresenterComponent.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"license.html":{}}}],["sourcing",{"_index":2035,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["spam",{"_index":772,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["spare",{"_index":2580,"title":{},"body":{"license.html":{}}}],["speak",{"_index":2308,"title":{},"body":{"license.html":{}}}],["special",{"_index":1334,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["specific",{"_index":74,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["specifically",{"_index":799,"title":{},"body":{"components/ChangePasswordComponent.html":{},"license.html":{}}}],["specified",{"_index":2433,"title":{},"body":{"license.html":{}}}],["specifies",{"_index":2822,"title":{},"body":{"license.html":{}}}],["specify",{"_index":2825,"title":{},"body":{"license.html":{}}}],["spinner",{"_index":810,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/QuizListComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SpinnerComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["spinner'},{'name",{"_index":240,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["spinner.component.scss",{"_index":1978,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner.component.svg",{"_index":1977,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinnercomponent",{"_index":48,"title":{"components/SpinnerComponent.html":{}},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"coverage.html":{}}}],["spinners/blob/main/svg",{"_index":1973,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spirit",{"_index":2818,"title":{},"body":{"license.html":{}}}],["src/.../actions.component.ts",{"_index":2936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":2934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":2935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../change",{"_index":2924,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../confirm",{"_index":2938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":2943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../control",{"_index":2940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../delete",{"_index":2926,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../email",{"_index":2942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error",{"_index":2944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../firebase",{"_index":2950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../firebase.validator.ts",{"_index":2948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../forgot",{"_index":2928,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../get",{"_index":2946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../identity",{"_index":2941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../login.component.ts",{"_index":2929,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../match",{"_index":2939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../no",{"_index":2947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../page",{"_index":2951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../photo",{"_index":2927,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../quiz.service.ts",{"_index":2937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../recover",{"_index":2952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../reset",{"_index":2925,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../send",{"_index":2932,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../strength.validator.ts",{"_index":2949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":2931,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.token.ts",{"_index":2930,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../util.ts",{"_index":2945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.config.ts",{"_index":2166,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/app",{"_index":263,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"coverage.html":{}}}],["src/app/core/firebase",{"_index":2171,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":2174,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/email",{"_index":2176,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/no",{"_index":2179,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/user.token.ts",{"_index":2182,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":977,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts:18",{"_index":981,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/identity/actions/actions.component.ts",{"_index":6,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/actions/actions.component.ts:54",{"_index":173,"title":{},"body":{"components/ActionsComponent.html":{}}}],["src/app/identity/actions/actions.component.ts:56",{"_index":174,"title":{},"body":{"components/ActionsComponent.html":{}}}],["src/app/identity/actions/actions.component.ts:58",{"_index":176,"title":{},"body":{"components/ActionsComponent.html":{}}}],["src/app/identity/actions/actions.component.ts:60",{"_index":177,"title":{},"body":{"components/ActionsComponent.html":{}}}],["src/app/identity/actions/actions.component.ts:62",{"_index":178,"title":{},"body":{"components/ActionsComponent.html":{}}}],["src/app/identity/actions/actions.component.ts:63",{"_index":179,"title":{},"body":{"components/ActionsComponent.html":{}}}],["src/app/identity/actions/actions.component.ts:64",{"_index":172,"title":{},"body":{"components/ActionsComponent.html":{}}}],["src/app/identity/actions/get",{"_index":2188,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/auth",{"_index":440,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"coverage.html":{}}}],["src/app/identity/change",{"_index":628,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/identity/confirm",{"_index":898,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/identity/delete",{"_index":987,"title":{},"body":{"components/DeleteAccountComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/identity/error",{"_index":2198,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/forgot",{"_index":1074,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/identity/identity",{"_index":946,"title":{},"body":{"interfaces/ControlStruct.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/login/login.component.ts",{"_index":1152,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/identity/login/login.component.ts:42",{"_index":1158,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:44",{"_index":1159,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:46",{"_index":1160,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:48",{"_index":1161,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:50",{"_index":1162,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:52",{"_index":1163,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:53",{"_index":1164,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:54",{"_index":1166,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:56",{"_index":1167,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:58",{"_index":1168,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:63",{"_index":1169,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:64",{"_index":1171,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:66",{"_index":1157,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:67",{"_index":1155,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:87",{"_index":1156,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/logout/logout.component.ts",{"_index":1178,"title":{},"body":{"components/LogoutComponent.html":{},"coverage.html":{}}}],["src/app/identity/logout/logout.component.ts:24",{"_index":1189,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/identity/logout/logout.component.ts:26",{"_index":1187,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/identity/logout/logout.component.ts:27",{"_index":1188,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/identity/logout/logout.component.ts:32",{"_index":1182,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/identity/recover",{"_index":306,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/reset",{"_index":1261,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/identity/user",{"_index":1329,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/validators/confirm",{"_index":2213,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/validators/passwords/firebase.validator.ts",{"_index":2219,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/validators/passwords/strength.validator.ts",{"_index":2220,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/validators/passwords/util.ts",{"_index":2221,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/verify",{"_index":2143,"title":{},"body":{"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"coverage.html":{}}}],["src/app/layouts/central/central.component.ts",{"_index":607,"title":{},"body":{"components/CentralLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layouts/footer/footer.component.ts",{"_index":1048,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/layouts/footer/footer.component.ts:23",{"_index":1061,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/layouts/header/header.component.ts",{"_index":1101,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/layouts/header/header.component.ts:26",{"_index":1127,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layouts/header/header.component.ts:28",{"_index":1131,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layouts/header/header.component.ts:30",{"_index":1134,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layouts/header/header.component.ts:36",{"_index":1116,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layouts/header/header.component.ts:47",{"_index":1122,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layouts/sidebar/sidebar.component.ts",{"_index":1961,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/layouts/standard/standard.component.ts",{"_index":1980,"title":{},"body":{"components/StandardLayoutComponent.html":{},"coverage.html":{}}}],["src/app/legal/privacy",{"_index":1520,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["src/app/legal/terms",{"_index":1991,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"coverage.html":{}}}],["src/app/page",{"_index":1200,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/quizzes/editor/editor.component.ts",{"_index":1852,"title":{},"body":{"components/QuizEditorComponent.html":{},"coverage.html":{}}}],["src/app/quizzes/list/list.component.ts",{"_index":1856,"title":{},"body":{"components/QuizListComponent.html":{},"interfaces/ViewModel-1.html":{},"coverage.html":{}}}],["src/app/quizzes/list/list.component.ts:39",{"_index":1867,"title":{},"body":{"components/QuizListComponent.html":{}}}],["src/app/quizzes/list/list.component.ts:41",{"_index":1870,"title":{},"body":{"components/QuizListComponent.html":{}}}],["src/app/quizzes/list/list.component.ts:43",{"_index":1866,"title":{},"body":{"components/QuizListComponent.html":{}}}],["src/app/quizzes/list/list.component.ts:44",{"_index":1862,"title":{},"body":{"components/QuizListComponent.html":{}}}],["src/app/quizzes/list/list.component.ts:61",{"_index":1864,"title":{},"body":{"components/QuizListComponent.html":{}}}],["src/app/quizzes/presenter/presenter.component.ts",{"_index":1895,"title":{},"body":{"components/QuizPresenterComponent.html":{},"coverage.html":{}}}],["src/app/quizzes/quiz.service.ts",{"_index":1713,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/quizzes/quiz.service.ts:126",{"_index":1906,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/quizzes/quiz.service.ts:127",{"_index":1900,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/quizzes/quiz.service.ts:139",{"_index":1901,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/quizzes/quiz.service.ts:154",{"_index":1902,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/quizzes/quiz.service.ts:160",{"_index":1903,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/quizzes/quiz.service.ts:170",{"_index":1904,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/quizzes/quiz.service.ts:197",{"_index":1905,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/shared/constants.ts",{"_index":2230,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/control",{"_index":851,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/spinner/spinner.component.ts",{"_index":1968,"title":{},"body":{"components/SpinnerComponent.html":{},"coverage.html":{}}}],["ssr",{"_index":1230,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["stack",{"_index":99,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["stages",{"_index":908,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["stand",{"_index":2361,"title":{},"body":{"license.html":{}}}],["standard",{"_index":242,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["standard.component.html",{"_index":1987,"title":{},"body":{"components/StandardLayoutComponent.html":{}}}],["standard.component.scss",{"_index":1988,"title":{},"body":{"components/StandardLayoutComponent.html":{}}}],["standardlayoutcomponent",{"_index":241,"title":{"components/StandardLayoutComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["standards",{"_index":2431,"title":{},"body":{"license.html":{}}}],["start",{"_index":2875,"title":{},"body":{"license.html":{}}}],["started",{"_index":2258,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":2883,"title":{},"body":{"license.html":{}}}],["startwith",{"_index":1272,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["state",{"_index":73,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["state.mode",{"_index":137,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["state.oobcode",{"_index":138,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["state.ts",{"_index":2189,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stated",{"_index":2471,"title":{},"body":{"license.html":{}}}],["statement",{"_index":2690,"title":{},"body":{"license.html":{}}}],["statements",{"_index":2164,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":2369,"title":{},"body":{"license.html":{}}}],["statically",{"_index":1908,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["stating",{"_index":2533,"title":{},"body":{"license.html":{}}}],["status",{"_index":756,"title":{},"body":{"components/ChangeEmailComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["status.isvalid",{"_index":3074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statuschangeevent",{"_index":915,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["step",{"_index":990,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["steps",{"_index":1655,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["still",{"_index":400,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/UserPhotosService.html":{}}}],["stop",{"_index":889,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["storage",{"_index":601,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["storage.rules",{"_index":1336,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["storagebucket",{"_index":3100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storageref",{"_index":1476,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["storagereferences",{"_index":1405,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["store",{"_index":1313,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["stored",{"_index":1528,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["stores",{"_index":72,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["straightforward",{"_index":1467,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["strategy.service.ts",{"_index":265,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"coverage.html":{}}}],["strategy.service.ts:12",{"_index":285,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["strategy.service.ts:13",{"_index":275,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["strategy.service.ts:26",{"_index":278,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["stream",{"_index":1404,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["strength",{"_index":2247,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["strength.id",{"_index":3086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strength?tab=readme",{"_index":3038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strengthen",{"_index":1639,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["string",{"_index":15,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/DashboardComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"miscellaneous/variables.html":{}}}],["strips",{"_index":69,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["strive",{"_index":1682,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["strong",{"_index":845,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["structure",{"_index":1434,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["styleurl",{"_index":622,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["subdividing",{"_index":2736,"title":{},"body":{"license.html":{}}}],["subject",{"_index":1273,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{}}}],["sublicenses",{"_index":2765,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":2493,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1087,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["submit",{"_index":1034,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["submitted",{"_index":657,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["subprograms",{"_index":2462,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":2897,"title":{},"body":{"license.html":{}}}],["subscribed",{"_index":354,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/UserPhotosService.html":{}}}],["subsection",{"_index":2589,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":2625,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":2359,"title":{},"body":{"license.html":{}}}],["succeeded",{"_index":1300,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["succesful",{"_index":336,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["success",{"_index":402,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoUploadComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["successful",{"_index":311,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["successfully",{"_index":2153,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["such",{"_index":551,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["sue",{"_index":2775,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":2633,"title":{},"body":{"license.html":{}}}],["suffixing",{"_index":279,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["summary",{"_index":2045,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["super",{"_index":291,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["supplement",{"_index":2654,"title":{},"body":{"license.html":{}}}],["supplied",{"_index":515,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["support",{"_index":1259,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["supported",{"_index":476,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["supports",{"_index":2594,"title":{},"body":{"license.html":{}}}],["sure",{"_index":508,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/DeleteAccountComponent.html":{},"license.html":{}}}],["surrender",{"_index":2318,"title":{},"body":{"license.html":{}}}],["survive",{"_index":2689,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":2853,"title":{},"body":{"license.html":{}}}],["svg",{"_index":1140,"title":{},"body":{"components/HeaderComponent.html":{},"dependencies.html":{}}}],["switch",{"_index":467,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["switchmap",{"_index":324,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/QuizListComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["switchmap((newpassword",{"_index":1316,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["switchmap((task",{"_index":1399,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["switchmap((user",{"_index":1879,"title":{},"body":{"components/QuizListComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["switchmap((verifyresults",{"_index":1297,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["switchmap(async",{"_index":372,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{}}}],["symbols",{"_index":767,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["sync",{"_index":3077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":2438,"title":{},"body":{"license.html":{}}}],["systematic",{"_index":2349,"title":{},"body":{"license.html":{}}}],["t",{"_index":951,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":2232,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2231,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":286,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"components/PageNotFoundComponent.html":{}}}],["tags",{"_index":1238,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["take",{"_index":375,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{}}}],["tangible",{"_index":2612,"title":{},"body":{"license.html":{}}}],["tap",{"_index":2093,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["target",{"_index":1142,"title":{},"body":{"components/HeaderComponent.html":{}}}],["task",{"_index":1392,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["tasks",{"_index":1971,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["technological",{"_index":2500,"title":{},"body":{"license.html":{}}}],["tell",{"_index":2126,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["tells",{"_index":2422,"title":{},"body":{"license.html":{}}}],["template",{"_index":81,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["templates",{"_index":465,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["templateurl",{"_index":457,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["term",{"_index":2469,"title":{},"body":{"license.html":{}}}],["terminal",{"_index":2881,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":2696,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":2715,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":2704,"title":{},"body":{"license.html":{}}}],["termination",{"_index":2693,"title":{},"body":{"license.html":{}}}],["terms",{"_index":244,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["termsandconditionscomponent",{"_index":243,"title":{"components/TermsAndConditionsComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["terraform",{"_index":2262,"title":{},"body":{"index.html":{}}}],["terribly",{"_index":1764,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":142,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["tested",{"_index":294,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["testing",{"_index":368,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["tests",{"_index":3105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text",{"_index":443,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["thereby",{"_index":1530,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["therefore",{"_index":2319,"title":{},"body":{"license.html":{}}}],["things",{"_index":1792,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["think",{"_index":1310,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/PhotoUploadComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["third",{"_index":2525,"title":{},"body":{"license.html":{}}}],["this.$blockwindow",{"_index":1875,"title":{},"body":{"components/QuizListComponent.html":{},"interfaces/ViewModel-1.html":{}}}],["this.$blockwindow.set(true",{"_index":1194,"title":{},"body":{"components/LogoutComponent.html":{},"components/QuizListComponent.html":{},"interfaces/ViewModel-1.html":{}}}],["this.$currentpwcntrlerrors",{"_index":821,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.$currentpwcntrlinvalid",{"_index":822,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.$email1cntrlerrors",{"_index":714,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.$email1cntrlinvalid",{"_index":715,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.$email2cntrlerrors",{"_index":718,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.$email2cntrlinvalid",{"_index":719,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.$emailcntrlerrors",{"_index":1095,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.$emailcntrlinvalid",{"_index":1096,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.$errorcode",{"_index":729,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$errorcode.set",{"_index":744,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$errorcode.set(code",{"_index":754,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$filecount",{"_index":1516,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["this.$formemailsinvalid",{"_index":727,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.$formpasswordsinvalid",{"_index":834,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.$namecntrlerrors",{"_index":2098,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$namecntrlinvalid",{"_index":2100,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$password1cntrlerrors",{"_index":824,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.$password1cntrlinvalid",{"_index":825,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.$password2cntrlerrors",{"_index":828,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.$password2cntrlinvalid",{"_index":829,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.$passwordcntrlerrors",{"_index":721,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{}}}],["this.$passwordcntrlinvalid",{"_index":722,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{}}}],["this.$photourlcntrlerrors",{"_index":2104,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$photourlcntrlinvalid",{"_index":2106,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$showform",{"_index":836,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$showform.set(false",{"_index":840,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$showform.set(true",{"_index":842,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$showmenu",{"_index":1146,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.$showmenu.set(!menushown",{"_index":1147,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.$showmenu.set(false",{"_index":1144,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.$showurlinput",{"_index":2109,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$showurlinput.set(false",{"_index":2115,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$showurlinput.update((showurl",{"_index":2124,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$verificationstatus",{"_index":730,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["this.$verificationstatus.set('sending",{"_index":747,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["this.$verificationstatus.set('sent",{"_index":752,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["this.$verificationstatus.set('unsent",{"_index":755,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this._$actionstate",{"_index":107,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this._$confirmdialog",{"_index":1032,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["this._$fileinput",{"_index":1518,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["this._auth",{"_index":1094,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this._basetitle",{"_index":299,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["this._confirmpasswordreset(code",{"_index":1317,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["this._doactioncode(oobcode",{"_index":373,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["this._firestore",{"_index":1814,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["this._metaservice.addtag(robots_meta",{"_index":1252,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["this._metaservice.removetagelement(this._robotstag",{"_index":1251,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["this._modepaths",{"_index":113,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this._modepaths[state.mode",{"_index":140,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this._newpasswordsubject$.next(newpassword",{"_index":1289,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["this._newpasswordsubject$.pipe",{"_index":1315,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["this._quizcollection",{"_index":1816,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["this._refreshfilessubject",{"_index":1394,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["this._refreshfilessubject$.next",{"_index":1406,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["this._refreshfilessubject$.pipe",{"_index":1414,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["this._robotstag",{"_index":1250,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["this._router",{"_index":122,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/DeleteAccountComponent.html":{},"components/QuizListComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel-1.html":{}}}],["this._router.navigate",{"_index":1884,"title":{},"body":{"components/QuizListComponent.html":{},"interfaces/ViewModel-1.html":{}}}],["this._router.navigatebyurl",{"_index":164,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LogoutComponent.html":{}}}],["this._router.navigatebyurl(path",{"_index":146,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this._router.navigatebyurl(this.next",{"_index":1177,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._sendpasswordresetemail(result.restoredemail",{"_index":385,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["this._service",{"_index":1873,"title":{},"body":{"components/QuizListComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel-1.html":{}}}],["this._service.create(userid",{"_index":1883,"title":{},"body":{"components/QuizListComponent.html":{},"interfaces/ViewModel-1.html":{}}}],["this._service.list(user.uid).pipe",{"_index":1880,"title":{},"body":{"components/QuizListComponent.html":{},"interfaces/ViewModel-1.html":{}}}],["this._service.recoveremail$(oobcode",{"_index":1922,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["this._service.replacepassword(password1",{"_index":1949,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this._service.resetpassword$(oobcode",{"_index":1946,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this._service.verifyemail(oobcode",{"_index":2149,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this._tasksubject",{"_index":1396,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["this._tasksubject$.next(task",{"_index":1478,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["this._tasksubject$.pipe",{"_index":1398,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["this._title",{"_index":292,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["this._title.gettitle",{"_index":300,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["this._title.settitle(`${pagetitle",{"_index":304,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["this._title.settitle(this._basetitle",{"_index":303,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["this._userphotoservice",{"_index":2096,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this._userphotoservice.getprofilephotos(uid).pipe",{"_index":2112,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this._userphotoservice.uploadpercentage",{"_index":1515,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["this._verifycode(oobcode",{"_index":1296,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["this.buildtitle(snapshot",{"_index":302,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["this.changeemailform",{"_index":724,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.changeemailform.invalid",{"_index":741,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.changeemailform.value",{"_index":736,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.changepasswordform",{"_index":831,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.changepasswordform.invalid",{"_index":839,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.changepasswordform.value",{"_index":838,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.currentpwcntrl",{"_index":823,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.deleteaccountform",{"_index":1030,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["this.deleteaccountform.invalid",{"_index":1038,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["this.deleteaccountform.value",{"_index":1037,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["this.email1cntrl",{"_index":717,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.email2cntrl",{"_index":720,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.emailcntrl",{"_index":1097,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.forgotform",{"_index":1098,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.forgotform.invalid",{"_index":1100,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.forgotform.value",{"_index":1099,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.lang",{"_index":110,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this.loginform",{"_index":1173,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":1175,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":1174,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.mode",{"_index":111,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this.name",{"_index":982,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.namecntrl",{"_index":2097,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.oobcode",{"_index":112,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this.password1cntrl",{"_index":826,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.password2cntrl",{"_index":830,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.passwordcntrl",{"_index":723,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{}}}],["this.photourlcntrl",{"_index":2102,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.profileform",{"_index":2108,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.profileform.invalid",{"_index":2118,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.profileform.patchvalue(user",{"_index":2110,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.profileform.value",{"_index":2117,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.resetpasswordform",{"_index":1944,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.resetpasswordform.invalid",{"_index":1948,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.resetpasswordform.value",{"_index":1947,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.uploadpercentage",{"_index":1397,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["this.user",{"_index":734,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["this.vm",{"_index":1876,"title":{},"body":{"components/QuizListComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["those",{"_index":1427,"title":{},"body":{"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["though",{"_index":2656,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":2366,"title":{},"body":{"license.html":{}}}],["three",{"_index":2578,"title":{},"body":{"license.html":{}}}],["throttle",{"_index":3080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["through",{"_index":675,"title":{},"body":{"components/ChangeEmailComponent.html":{},"license.html":{}}}],["throw",{"_index":421,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["thrown",{"_index":1762,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["throws",{"_index":404,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["thus",{"_index":2487,"title":{},"body":{"license.html":{}}}],["ticket",{"_index":1765,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":376,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["timed",{"_index":572,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["timeout",{"_index":552,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["timer",{"_index":325,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["timer(result.restoredemail",{"_index":379,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["timestamp",{"_index":1734,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["timestamp.fromdate(date",{"_index":1760,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["timestamp.now",{"_index":1851,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["timestampfromdate",{"_index":1759,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["timestampfromdate(quiz.createdat",{"_index":1795,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["timestampfromdate(quiz.updatedat",{"_index":1796,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["timestamps",{"_index":1775,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":264,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["titlestrategy",{"_index":270,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"miscellaneous/variables.html":{}}}],["tl;dr",{"_index":2022,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["today",{"_index":1059,"title":{},"body":{"components/FooterComponent.html":{}}}],["todo",{"_index":847,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["tofirestore",{"_index":1751,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["toggle",{"_index":808,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["togglemenu",{"_index":1112,"title":{},"body":{"components/HeaderComponent.html":{}}}],["togglephotourl",{"_index":2067,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["toggles",{"_index":1128,"title":{},"body":{"components/HeaderComponent.html":{}}}],["token",{"_index":574,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["tool's",{"_index":1549,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["tool's](https://app.termsfeed.com/download/9bce549e",{"_index":1551,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["tools",{"_index":2458,"title":{},"body":{"license.html":{}}}],["tosignal",{"_index":860,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{}}}],["tosignal(controlerrors",{"_index":897,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["tosignal(controlevents",{"_index":944,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["tosignal(formstatus",{"_index":3025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["total",{"_index":1357,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["touched",{"_index":913,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["touchedchangeevent",{"_index":916,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["track",{"_index":1376,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/QuizListComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{}}}],["tracking",{"_index":1720,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["tracks",{"_index":1509,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["trade",{"_index":2675,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":2674,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":2676,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":2637,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1644,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["transferred",{"_index":1645,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["transferring",{"_index":2734,"title":{},"body":{"license.html":{}}}],["transmission",{"_index":1679,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["transparently",{"_index":1535,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["traverse",{"_index":1466,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["treated",{"_index":1658,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["treaty",{"_index":2506,"title":{},"body":{"license.html":{}}}],["tree",{"_index":168,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["trends",{"_index":1598,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["triggers",{"_index":907,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{}}}],["trips",{"_index":388,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["true",{"_index":148,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["trust",{"_index":1532,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["truthy",{"_index":431,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["try",{"_index":436,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":2253,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":950,"title":{},"body":{"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":18,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type=file",{"_index":1513,"title":{},"body":{"components/PhotoUploadComponent.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":2922,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeerror('control",{"_index":3003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeerror(`invalid",{"_index":3053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeerror(`unknown",{"_index":1769,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":1770,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":414,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":127,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["typescript/linters",{"_index":3045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typical",{"_index":2622,"title":{},"body":{"license.html":{}}}],["ui",{"_index":1382,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["uid",{"_index":1363,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["uid}/${photo_dir",{"_index":1413,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uid}/${photo_dir}/${prefix",{"_index":1474,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["unable",{"_index":560,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["unacceptable",{"_index":2355,"title":{},"body":{"license.html":{}}}],["unclear",{"_index":1459,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["undefined",{"_index":17,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/QuizListComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1692,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["understand",{"_index":1807,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["undone",{"_index":1041,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["unfortunately",{"_index":374,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["unicorn/no",{"_index":962,"title":{},"body":{"interfaces/ControlStruct.html":{},"components/PageNotFoundComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":1721,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["unit",{"_index":2155,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["unknown",{"_index":394,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["unless",{"_index":1170,"title":{},"body":{"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["unlike",{"_index":1462,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["unlikely",{"_index":1758,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["unlimited",{"_index":2475,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":2397,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":2495,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":2652,"title":{},"body":{"license.html":{}}}],["unreachable",{"_index":555,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["unsent",{"_index":757,"title":{},"body":{"components/ChangeEmailComponent.html":{},"miscellaneous/typealiases.html":{}}}],["unsupported",{"_index":475,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["until",{"_index":340,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["unusual",{"_index":580,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["up",{"_index":1290,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["update",{"_index":1667,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"injectables/QuizService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["update(id",{"_index":1847,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["updated",{"_index":1066,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["updatedat",{"_index":1717,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["updatedoc",{"_index":1735,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["updatedoc(reference",{"_index":1850,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["updatepassword",{"_index":818,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["updatepassword(credentials.user",{"_index":841,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["updateprofile",{"_index":2076,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{}}}],["updateprofile(user",{"_index":2123,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["updateprofile](https://firebase.google.com/docs/reference/node/firebase.user#updateprofile",{"_index":2095,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["updates",{"_index":634,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/HeaderComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{}}}],["updatetitle",{"_index":274,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["updatetitle(snapshot",{"_index":276,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["upload",{"_index":1350,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["upload'},{'name",{"_index":226,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["upload.component",{"_index":2094,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["upload.component.html",{"_index":1487,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.scss",{"_index":1488,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts",{"_index":1486,"title":{},"body":{"components/PhotoUploadComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["upload.component.ts:31",{"_index":1496,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts:33",{"_index":1507,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts:35",{"_index":1498,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts:40",{"_index":1508,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts:42",{"_index":1505,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts:43",{"_index":1495,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts:52",{"_index":1500,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts:64",{"_index":1502,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload/photo",{"_index":1485,"title":{},"body":{"components/PhotoUploadComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["uploadbytesresumable",{"_index":1342,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uploadbytesresumable(storageref",{"_index":1477,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uploaded",{"_index":1359,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["uploadfile",{"_index":1494,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["uploading",{"_index":1383,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uploadpercentage",{"_index":1386,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uploadphoto",{"_index":1377,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uploadphoto(files",{"_index":1460,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uploads",{"_index":1451,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["uploadtask",{"_index":1345,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uploadtasksnapshot",{"_index":1346,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["upper",{"_index":764,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["uri",{"_index":511,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["url",{"_index":21,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["url(continueurl",{"_index":61,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"miscellaneous/variables.html":{}}}],["url.pathname}${url.search}${url.hash",{"_index":63,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"miscellaneous/variables.html":{}}}],["urltree",{"_index":2997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usage",{"_index":1567,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":367,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/SpinnerComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":2993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":25,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":1790,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":247,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"components/QuizPresenterComponent.html":{},"injectables/QuizService.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user#photourl",{"_index":2111,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["user$.pipe",{"_index":983,"title":{},"body":{"components/DashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":356,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{}}}],["user(inject(auth",{"_index":3108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.email",{"_index":742,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["userid",{"_index":1865,"title":{},"body":{"components/QuizListComponent.html":{}}}],["userphotosservice",{"_index":1375,"title":{"injectables/UserPhotosService.html":{}},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{}}}],["userprofilecomponent",{"_index":246,"title":{"components/UserProfileComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{}}}],["users",{"_index":494,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/HeaderComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"license.html":{}}}],["usertrackingservice",{"_index":2962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uses",{"_index":1249,"title":{},"body":{"components/PageNotFoundComponent.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":268,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["val",{"_index":920,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["valid",{"_index":401,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["validate",{"_index":3013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatepassword(auth",{"_index":3073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validation",{"_index":670,"title":{},"body":{"components/ChangeEmailComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["validationerror",{"_index":3016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationerrors",{"_index":698,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":3017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatorfn",{"_index":3001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators",{"_index":737,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["validators.email",{"_index":965,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["validators.maxlength(num",{"_index":3015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators.maxlength(passwords.maxlength",{"_index":974,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["validators.minlength(num",{"_index":3014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators.minlength(passwords.minlength",{"_index":973,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["validators.pattern(/\\.(?:avif|gif|jpe?g|png|webp)(?:\\?.*)?$/u",{"_index":2103,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["validators.required",{"_index":964,"title":{},"body":{"interfaces/ControlStruct.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["validators/confirm",{"_index":710,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators/passwords",{"_index":957,"title":{},"body":{"interfaces/ControlStruct.html":{}}}],["value",{"_index":55,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1423,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["var",{"_index":184,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["variable",{"_index":2167,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2933,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbatim",{"_index":2291,"title":{},"body":{"license.html":{}}}],["verfication",{"_index":1275,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/typealiases.html":{}}}],["verfied",{"_index":2152,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["verification",{"_index":473,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["verificationstatus",{"_index":645,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["verificationstatus();@if",{"_index":776,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["verified",{"_index":495,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["verified.guard.ts",{"_index":2177,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["verifiedfailed",{"_index":1277,"title":{"interfaces/VerifiedFailed.html":{}},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["verifiedresult",{"_index":1284,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["verify",{"_index":120,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["verifyandchangeemail",{"_index":119,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["verifybeforeupdateemail",{"_index":695,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["verifybeforeupdateemail(credentials.user",{"_index":751,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["verifyemail",{"_index":121,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/VerifyEmailService.html":{}}}],["verifyemail(oobcode",{"_index":2159,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["verifyemailcomponent",{"_index":249,"title":{"components/VerifyEmailComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizListComponent.html":{},"components/QuizPresenterComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["verifyemailresult",{"_index":2147,"title":{"interfaces/VerifyEmailResult.html":{}},"body":{"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"coverage.html":{}}}],["verifyemailservice",{"_index":2146,"title":{"injectables/VerifyEmailService.html":{}},"body":{"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"coverage.html":{}}}],["verifying",{"_index":22,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["verifypasswordresetcode",{"_index":1270,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["verifypasswordresetcode(this._auth",{"_index":1328,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["verifyresults",{"_index":1298,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["version",{"_index":1705,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{},"properties.html":{}}}],["versions",{"_index":2303,"title":{},"body":{"license.html":{}}}],["vertexai",{"_index":2986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["very",{"_index":844,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["video",{"_index":1578,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vies",{"_index":1963,"title":{},"body":{"components/SidebarComponent.html":{}}}],["view",{"_index":608,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Quiz.html":{},"components/QuizListComponent.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["viewchild",{"_index":1025,"title":{},"body":{"components/DeleteAccountComponent.html":{},"components/PhotoUploadComponent.html":{}}}],["viewchild.required('confirmdialog",{"_index":1012,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["viewchild.required('photoupload",{"_index":1504,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["viewed",{"_index":1613,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["viewmodel",{"_index":1872,"title":{"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}},"body":{"components/QuizListComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{},"coverage.html":{}}}],["views",{"_index":1051,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["violates",{"_index":2648,"title":{},"body":{"license.html":{}}}],["violation",{"_index":2700,"title":{},"body":{"license.html":{}}}],["visible",{"_index":2420,"title":{},"body":{"license.html":{}}}],["visit",{"_index":1568,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["visiting",{"_index":1670,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["visitor",{"_index":610,"title":{},"body":{"components/CentralLayoutComponent.html":{},"miscellaneous/variables.html":{}}}],["visitors",{"_index":1524,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{}}}],["vm",{"_index":1860,"title":{},"body":{"components/QuizListComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["vm.email",{"_index":1951,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["vm.errorcode",{"_index":1952,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["vm.passwordresetsent",{"_index":1925,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["vm.profilephotos",{"_index":2139,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["vm.quizzes",{"_index":1886,"title":{},"body":{"components/QuizListComponent.html":{}}}],["vm.quizzes.length",{"_index":1885,"title":{},"body":{"components/QuizListComponent.html":{}}}],["vm.restoredemail",{"_index":1924,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["vm.showform",{"_index":1950,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["vm.successful",{"_index":1923,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["vm.user.uid",{"_index":1892,"title":{},"body":{"components/QuizListComponent.html":{}}}],["vm.verified",{"_index":2150,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["voice",{"_index":1577,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["void",{"_index":284,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"components/DeleteAccountComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["volume",{"_index":2558,"title":{},"body":{"license.html":{}}}],["vs",{"_index":416,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["w",{"_index":2885,"title":{},"body":{"license.html":{}}}],["wait",{"_index":339,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"miscellaneous/variables.html":{}}}],["waiting",{"_index":1969,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["waive",{"_index":2515,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":2864,"title":{},"body":{"license.html":{}}}],["want",{"_index":2313,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["warranties",{"_index":2018,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["warranty",{"_index":2040,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["wasn't",{"_index":1791,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["way",{"_index":1543,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["ways",{"_index":2569,"title":{},"body":{"license.html":{}}}],["web",{"_index":1233,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["webp",{"_index":2135,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["website",{"_index":1569,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{}}}],["welcome",{"_index":2886,"title":{},"body":{"license.html":{}}}],["well",{"_index":2408,"title":{},"body":{"license.html":{}}}],["whatever",{"_index":2738,"title":{},"body":{"license.html":{}}}],["whenever",{"_index":1387,"title":{},"body":{"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["where('owner",{"_index":1835,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["where('shared",{"_index":1836,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{}}}],["whether",{"_index":2321,"title":{},"body":{"license.html":{}}}],["who's",{"_index":1326,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["whole",{"_index":1370,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["whose",{"_index":2608,"title":{},"body":{"license.html":{}}}],["widely",{"_index":2436,"title":{},"body":{"license.html":{}}}],["width",{"_index":1986,"title":{},"body":{"components/StandardLayoutComponent.html":{}}}],["wildcard",{"_index":1203,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["window",{"_index":1191,"title":{},"body":{"components/LogoutComponent.html":{},"license.html":{}}}],["wipo",{"_index":2505,"title":{},"body":{"license.html":{}}}],["wish",{"_index":1042,"title":{},"body":{"components/DeleteAccountComponent.html":{},"license.html":{}}}],["withcomponentinputbinding",{"_index":2989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withfieldvalue",{"_index":1742,"title":{},"body":{"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["within",{"_index":1666,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["withinmemoryscrolling",{"_index":2990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":428,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/DeleteAccountComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["work",{"_index":1415,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"injectables/UserPhotosService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["work's",{"_index":2457,"title":{},"body":{"license.html":{}}}],["worker",{"_index":2242,"title":{},"body":{"dependencies.html":{}}}],["worker.js",{"_index":2978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["working",{"_index":2437,"title":{},"body":{"license.html":{}}}],["works",{"_index":131,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/PhotoManagerComponent.html":{},"components/QuizEditorComponent.html":{},"components/QuizPresenterComponent.html":{},"license.html":{}}}],["worldwide",{"_index":2768,"title":{},"body":{"license.html":{}}}],["wrapper",{"_index":1913,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["wraps",{"_index":2158,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["writablesignal",{"_index":667,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/QuizListComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"interfaces/ViewModel-1.html":{}}}],["writing",{"_index":2831,"title":{},"body":{"license.html":{}}}],["written",{"_index":528,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["wrong",{"_index":1458,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/Quiz.html":{},"interfaces/QuizModel.html":{},"interfaces/QuizPayload.html":{},"injectables/QuizService.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["year",{"_index":1063,"title":{},"body":{"components/FooterComponent.html":{}}}],["years",{"_index":2579,"title":{},"body":{"license.html":{}}}],["yhe",{"_index":3109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yourself",{"_index":2780,"title":{},"body":{"license.html":{}}}],["yyyy",{"_index":1070,"title":{},"body":{"components/FooterComponent.html":{}}}],["zone.js",{"_index":2255,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionCodeState.html":{"url":"interfaces/ActionCodeState.html","title":"interface - ActionCodeState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionCodeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/actions/actions.component.ts\n        \n\n\n            \n                Description\n            \n            \n                https://firebase.google.com/docs/reference/js/auth.actioncodeurl\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            continueUrl\n                                        \n                                \n                                \n                                        \n                                            lang\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            oobCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        continueUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        continueUrl:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    We may include a next url when verifying email.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lang:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Currently not used, but the language code of the email sent to with the oobCode.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Action to be performed by the oobCode.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oobCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        oobCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Out of Band Code to perform sensitive Authentication action.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  effect,\n  inject,\n  input,\n} from '@angular/core';\nimport type { InputSignal, Signal } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\n/**\n * https://firebase.google.com/docs/reference/js/auth.actioncodeurl\n */\nexport interface ActionCodeState {\n  /** We may include a next url when verifying email. */\n  readonly continueUrl: string | undefined;\n  /** Currently not used, but the language code of the email sent to with the oobCode. */\n  readonly lang: string | undefined;\n  /** Action to be performed by the oobCode. */\n  readonly mode: string | undefined;\n  /** Out of Band Code to perform sensitive Authentication action. */\n  readonly oobCode: string;\n}\n\n/**\n * Firebase Action continueUrl is fully qualified. If it has a value convert it into a relative URL.\n */\nconst cleanUrl = (continueUrl: string | undefined): string | undefined => {\n  if (continueUrl) {\n    const url = new URL(continueUrl);\n    return `${url.pathname}${url.search}${url.hash}`;\n  }\n  return undefined;\n};\n\n/**\n * Self handle Firebase Authentication Actions\n * https://firebase.google.com/docs/auth/custom-email-handler\n *\n * Strips the query string parameters from the URL and stores them in the Router state for the\n * specific Components to handle.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ SpinnerComponent ],\n  selector: 'app-actions',\n  template: '',\n})\nexport class ActionsComponent {\n  /** Query parameter from Firebase Authentication link. */\n  public readonly continueUrl: InputSignal = input();\n  /** Query parameter from Firebase Authentication link. */\n  public readonly lang: InputSignal = input();\n  /** Query parameter from Firebase Authentication link. */\n  public readonly mode: InputSignal = input.required();\n  /** Query parameter from Firebase Authentication link. */\n  public readonly oobCode: InputSignal = input.required();\n\n  private readonly _$actionState: Signal>;\n  private readonly _modePaths: Record;\n  private readonly _router: Router;\n\n  /**\n   * Collects the Firebase action codes from the URL query parameters and stores them in the router\n   * state.\n   * Maps Firebase action mode to our specific Components for handling the sensitive actions.\n   * Replaces this URL in the history stack to prevent reverse navigation from attepting to apply\n   * the code again.\n   */\n  constructor() {\n    this._$actionState = computed((): Partial => ({\n      continueUrl: cleanUrl(this.continueUrl()),\n      lang: this.lang(),\n      mode: this.mode(),\n      oobCode: this.oobCode(),\n    }));\n    this._modePaths = {\n      recoverEmail: '/recover-email',\n      resetPassword: '/reset-password',\n      verifyAndChangeEmail: '/verify-email',\n      verifyEmail: '/verify-email',\n    };\n    this._router = inject(Router);\n\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises -- This works, for now, but perhaps not in the future!\n    effect(async (): Promise => {\n      const state = this._$actionState();\n\n      if (state.mode && state.oobCode) {\n        const path = this._modePaths[state.mode];\n\n        if (path) {\n          // If this promise is not awaited then test cases fail :-(\n          await this._router.navigateByUrl(path, { replaceUrl: true, state });\n        } else {\n          console.error(`Unknown mode '${state.mode}'`);\n        }\n      } else {\n        if (!state.mode) {\n          console.error('Missing ActionCodeSettings#mode');\n        }\n        if (!state.oobCode) {\n          console.error('Missing ActionCodeSettings#oobCode');\n        }\n      }\n\n      // Something about this action is invalid.\n      // Navigate to root to allow default redirectTo Route to decide initial destination.\n      await this._router.navigateByUrl('/', { replaceUrl: true });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionsComponent.html":{"url":"components/ActionsComponent.html","title":"component - ActionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/actions/actions.component.ts\n\n\n\n    \n        Description\n    \n    \n        Self handle Firebase Authentication Actions\nhttps://firebase.google.com/docs/auth/custom-email-handler\nStrips the query string parameters from the URL and stores them in the Router state for the\nspecific Components to handle.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-actions\n            \n\n\n            \n                imports\n                \n                                SpinnerComponent\n                \n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _$actionState\n                            \n                            \n                                    Private\n                                    Readonly\n                                _modePaths\n                            \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Public\n                                    Readonly\n                                continueUrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                lang\n                            \n                            \n                                    Public\n                                    Readonly\n                                mode\n                            \n                            \n                                    Public\n                                    Readonly\n                                oobCode\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                continueUrl\n                            \n                            \n                                lang\n                            \n                            \n                                mode\n                            \n                            \n                                oobCode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/actions/actions.component.ts:64\n                            \n                        \n\n                \n                    \n                            Collects the Firebase action codes from the URL query parameters and stores them in the router\nstate.\nMaps Firebase action mode to our specific Components for handling the sensitive actions.\nReplaces this URL in the history stack to prevent reverse navigation from attepting to apply\nthe code again.\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        continueUrl\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/identity/actions/actions.component.ts:54\n                            \n                        \n                \n                    \n                        Query parameter from Firebase Authentication link.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lang\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/identity/actions/actions.component.ts:56\n                            \n                        \n                \n                    \n                        Query parameter from Firebase Authentication link.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/identity/actions/actions.component.ts:58\n                            \n                        \n                \n                    \n                        Query parameter from Firebase Authentication link.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        oobCode\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/identity/actions/actions.component.ts:60\n                            \n                        \n                \n                    \n                        Query parameter from Firebase Authentication link.\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _$actionState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Signal>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/actions/actions.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _modePaths\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/actions/actions.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/actions/actions.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        continueUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/actions/actions.component.ts:54\n                        \n                    \n\n            \n                \n                    Query parameter from Firebase Authentication link.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/actions/actions.component.ts:56\n                        \n                    \n\n            \n                \n                    Query parameter from Firebase Authentication link.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/actions/actions.component.ts:58\n                        \n                    \n\n            \n                \n                    Query parameter from Firebase Authentication link.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        oobCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/actions/actions.component.ts:60\n                        \n                    \n\n            \n                \n                    Query parameter from Firebase Authentication link.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  effect,\n  inject,\n  input,\n} from '@angular/core';\nimport type { InputSignal, Signal } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\n/**\n * https://firebase.google.com/docs/reference/js/auth.actioncodeurl\n */\nexport interface ActionCodeState {\n  /** We may include a next url when verifying email. */\n  readonly continueUrl: string | undefined;\n  /** Currently not used, but the language code of the email sent to with the oobCode. */\n  readonly lang: string | undefined;\n  /** Action to be performed by the oobCode. */\n  readonly mode: string | undefined;\n  /** Out of Band Code to perform sensitive Authentication action. */\n  readonly oobCode: string;\n}\n\n/**\n * Firebase Action continueUrl is fully qualified. If it has a value convert it into a relative URL.\n */\nconst cleanUrl = (continueUrl: string | undefined): string | undefined => {\n  if (continueUrl) {\n    const url = new URL(continueUrl);\n    return `${url.pathname}${url.search}${url.hash}`;\n  }\n  return undefined;\n};\n\n/**\n * Self handle Firebase Authentication Actions\n * https://firebase.google.com/docs/auth/custom-email-handler\n *\n * Strips the query string parameters from the URL and stores them in the Router state for the\n * specific Components to handle.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ SpinnerComponent ],\n  selector: 'app-actions',\n  template: '',\n})\nexport class ActionsComponent {\n  /** Query parameter from Firebase Authentication link. */\n  public readonly continueUrl: InputSignal = input();\n  /** Query parameter from Firebase Authentication link. */\n  public readonly lang: InputSignal = input();\n  /** Query parameter from Firebase Authentication link. */\n  public readonly mode: InputSignal = input.required();\n  /** Query parameter from Firebase Authentication link. */\n  public readonly oobCode: InputSignal = input.required();\n\n  private readonly _$actionState: Signal>;\n  private readonly _modePaths: Record;\n  private readonly _router: Router;\n\n  /**\n   * Collects the Firebase action codes from the URL query parameters and stores them in the router\n   * state.\n   * Maps Firebase action mode to our specific Components for handling the sensitive actions.\n   * Replaces this URL in the history stack to prevent reverse navigation from attepting to apply\n   * the code again.\n   */\n  constructor() {\n    this._$actionState = computed((): Partial => ({\n      continueUrl: cleanUrl(this.continueUrl()),\n      lang: this.lang(),\n      mode: this.mode(),\n      oobCode: this.oobCode(),\n    }));\n    this._modePaths = {\n      recoverEmail: '/recover-email',\n      resetPassword: '/reset-password',\n      verifyAndChangeEmail: '/verify-email',\n      verifyEmail: '/verify-email',\n    };\n    this._router = inject(Router);\n\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises -- This works, for now, but perhaps not in the future!\n    effect(async (): Promise => {\n      const state = this._$actionState();\n\n      if (state.mode && state.oobCode) {\n        const path = this._modePaths[state.mode];\n\n        if (path) {\n          // If this promise is not awaited then test cases fail :-(\n          await this._router.navigateByUrl(path, { replaceUrl: true, state });\n        } else {\n          console.error(`Unknown mode '${state.mode}'`);\n        }\n      } else {\n        if (!state.mode) {\n          console.error('Missing ActionCodeSettings#mode');\n        }\n        if (!state.oobCode) {\n          console.error('Missing ActionCodeSettings#oobCode');\n        }\n      }\n\n      // Something about this action is invalid.\n      // Navigate to root to allow default redirectTo Route to decide initial destination.\n      await this._router.navigateByUrl('/', { replaceUrl: true });\n    });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Primary router outlet for the entire application, otherwise a dumb Component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n/**\n * Primary router outlet for the entire application, otherwise a dumb Component.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ RouterOutlet ],\n  selector: 'app-root',\n  template: '',\n})\nexport class AppComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppTitleStrategyService.html":{"url":"injectables/AppTitleStrategyService.html","title":"injectable - AppTitleStrategyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppTitleStrategyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/app-title-strategy.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Sets the current HTML page title using the title value from the route.\n\n            \n\n            \n                Extends\n            \n            \n                        TitleStrategy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _baseTitle\n                            \n                            \n                                    Private\n                                    Readonly\n                                _title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                updateTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/app-title-strategy.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateTitle\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTitle(snapshot: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/app-title-strategy.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Sets the current title for the page from the route, suffixing with the value in the title\nelement in index.html.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                snapshot\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _baseTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/app-title-strategy.service.ts:12\n                        \n                    \n\n            \n                \n                    Title tag content from index.html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Title\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/app-title-strategy.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { TitleStrategy } from '@angular/router';\nimport type { RouterStateSnapshot } from '@angular/router';\n\n/**\n * Sets the current HTML page title using the title value from the route.\n */\n@Injectable({ providedIn: 'root' })\nexport class AppTitleStrategyService extends TitleStrategy {\n  /** Title tag content from index.html */\n  private readonly _baseTitle: string;\n  private readonly _title: Title;\n\n  constructor() {\n    super();\n    this._title = inject(Title);\n    // Tested in `ng serve` and `ng build` that this gets the  from index.html\n    this._baseTitle = this._title.getTitle();\n  }\n\n  /**\n   * Sets the current title for the page from the route, suffixing with the value in the title\n   * element in index.html.\n   */\n  public updateTitle(snapshot: RouterStateSnapshot): void {\n    const pageTitle = this.buildTitle(snapshot);\n    if (pageTitle == undefined) {\n      this._title.setTitle(this._baseTitle);\n    } else {\n      this._title.setTitle(`${pageTitle} | ${this._baseTitle}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplyResult.html":{"url":"interfaces/ApplyResult.html","title":"interface - ApplyResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApplyResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/recover-email/recover-email.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Results of email recovery.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            restoredEmail\n                                        \n                                \n                                \n                                        \n                                            successful\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        restoredEmail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        restoredEmail:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User original email address to be recovered, from Firebase oobCode.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        successful\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        successful:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Results of applying the oobCode to recover the account's original email address.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport {\n  applyActionCode,\n  Auth,\n  checkActionCode,\n  sendPasswordResetEmail,\n} from '@angular/fire/auth';\nimport {\n  catchError,\n  delayWhen,\n  of,\n  switchMap,\n  timer,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { getErrorCode } from '../error-code';\n\n/** Combined model of email recovery results and sending password reset. */\nexport interface RecoverEmailResults extends ApplyResult {\n  /** Firebase response error code, if any. */\n  readonly errorCode?: string;\n  /** Indicates if the password reset email was sent on succesful email recovery. */\n  readonly passwordResetSent: boolean;\n}\n\n/** Results of email recovery. */\ninterface ApplyResult {\n  /** User original email address to be recovered, from Firebase oobCode. */\n  readonly restoredEmail: string | undefined;\n  /** Results of applying the oobCode to recover the account's original email address. */\n  readonly successful: boolean;\n}\n\n/** Sending the password reset email needs to wait until Firebase recognizes the email recovery. Milliseconds */\nexport const SEND_EMAIL_DELAY = 500;\n\n/**\n * Handles both recovering email oobCodes and sending the password reset email afterwards.\n */\n@Injectable({ providedIn: 'root' })\nexport class RecoverEmailService {\n  private readonly _auth: Auth = inject(Auth);\n\n  /**\n   * Creates and Observable that when subscribed to will apply the action code to restore the user's\n   * original email address. And if present will automatically send a password reset email to the\n   * restored address in case of account compromise.\n   *\n   * @param delay - Not for production use! Only for use with testing.\n   */\n  public recoverEmail$(code: string | undefined, delay: number = SEND_EMAIL_DELAY): Observable {\n    return of(code).pipe(\n      switchMap(async (oobCode: string | undefined): Promise => this._doActionCode(oobCode)),\n      // Unfortunately it can take time for Firebase to recognize that the email has been restored\n      // so we can send the password reset email.\n      delayWhen((result: ApplyResult): Observable => timer(result.restoredEmail ? delay : 0)),\n      // Give the user the option to reset their password in case the account was compromised:\n      switchMap(async (result: ApplyResult): Promise => {\n        const passwordResetSent = await this._sendPasswordResetEmail(result.restoredEmail);\n        return { ...result, passwordResetSent };\n      }),\n      // Using `err` here trips promise/prefer-await-to-callbacks, but other names don't\n      catchError((problem: unknown): Observable => {\n        console.error('RecoverEmailService', problem);\n\n        return of({\n          errorCode: getErrorCode(problem),\n          passwordResetSent: false,\n          restoredEmail: undefined,\n          successful: false,\n        });\n      }),\n    );\n  }\n\n  /**\n   * Check that the oobCode is still valid, and then apply it.\n   * @returns the restored email address and a success flag.\n   * @throws Error if the oobCode is falsy or the firebase methods fail.\n   */\n  private async _doActionCode(oobCode: string | undefined): Promise {\n    if (oobCode) {\n      const info = await checkActionCode(this._auth, oobCode);\n      const { email: restoredEmail } = info.data;\n\n      await applyActionCode(this._auth, oobCode);\n      // Account email reverted to restoredEmail\n\n      // Problem with being pedantic with all types except undefined vs null is that sometimes you\n      // need to get rid of null from the type.\n      return { restoredEmail: restoredEmail ?? undefined, successful: true };\n    }\n\n    throw new Error('oobCode not found');\n  }\n\n  /**\n   * Firebase types indicate that the email may not always be returned (Accounts without email addresses?)\n   * If the email isn't truthy then just skip the reset.\n   * If the send email fails for some reason, just return false.\n   */\n  private async _sendPasswordResetEmail(restoredEmail: string | undefined): Promise {\n    if (restoredEmail) {\n      try {\n        await sendPasswordResetEmail(this._auth, restoredEmail);\n        return true;\n      } catch (err: unknown) {\n        console.error('RecoverEmailService#_sendPasswordResetEmail', err);\n      }\n    }\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthErrorMessagesComponent.html":{"url":"components/AuthErrorMessagesComponent.html","title":"component - AuthErrorMessagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthErrorMessagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/auth-error-messages/auth-error-messages.component.ts\n\n\n\n    \n        Description\n    \n    \n        Default text for these codes come from:\nhttps://github.com/firebase/firebase-js-sdk/blob/105d248bd4ddf5d38d5fa7b8a3ec57af2abf459a/packages/auth/src/core/errors.ts\nThe links below are not the correct lists for the client errors!\nhttps://firebase.google.com/docs/auth/admin/errors\nhttps://firebase.google.com/docs/reference/node/firebase.auth.Error\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-error-messages\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./auth-error-messages.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                $code\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                $code\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        $code\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/identity/auth-error-messages/auth-error-messages.component.ts:20\n                            \n                        \n                \n                    \n                        Firebase Error code\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $code\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/auth-error-messages/auth-error-messages.component.ts:20\n                        \n                    \n\n            \n                \n                    Firebase Error code\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, input } from '@angular/core';\nimport type { InputSignal } from '@angular/core';\n\n/**\n * Default text for these codes come from:\n * https://github.com/firebase/firebase-js-sdk/blob/105d248bd4ddf5d38d5fa7b8a3ec57af2abf459a/packages/auth/src/core/errors.ts\n *\n * The links below are not the correct lists for the client errors!\n * https://firebase.google.com/docs/auth/admin/errors\n * https://firebase.google.com/docs/reference/node/firebase.auth.Error\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-auth-error-messages',\n  templateUrl: './auth-error-messages.component.html',\n})\nexport class AuthErrorMessagesComponent {\n  /** Firebase Error code */\n  // Linter doesn't like aliasing inputs, but also wants Signals called in templates to be prefixed with $\n  public readonly $code: InputSignal = input.required();\n}\n\n    \n\n    \n        @switch ($code()) {\n  @case ('auth/code-expired') {\n    \n      The SMS code has expired. Please re-send the verification code to try again.\n    \n  }\n\n  @case ('auth/cors-unsupported') {\n    \n      This browser is not supported.\n    \n  }\n\n  @case ('auth/credential-already-in-use') {\n    \n      This credential is already associated with a different user account.\n    \n  }\n\n  @case ('auth/requires-recent-login') {\n    \n      This operation is sensitive and requires recent authentication. Log in again before retrying this request.\n    \n  }\n\n  @case ('auth/email-change-needs-verification') {\n    \n      Multi-factor users must always have a verified email.\n    \n  }\n\n  @case ('auth/email-already-in-use') {\n    \n      The email address is already in use by another account.\n    \n  }\n\n  @case ('auth/expired-action-code') {\n    \n      The action code has expired.\n    \n  }\n\n  @case ('auth/cancelled-popup-request') {\n    \n      This operation has been cancelled due to another conflicting popup being opened.\n    \n  }\n\n  @case ('auth/invalid-verification-code') {\n    \n      The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure to\n      use the verification code provided by the user.\n    \n  }\n\n  @case ('auth/invalid-continue-uri') {\n    \n      The continue URL provided in the request is invalid.\n    \n  }\n\n  @case ('auth/invalid-email') {\n    \n      The email address is badly formatted.\n    \n  }\n\n  @case ('auth/invalid-credential') {\n    \n      The information supplied is incorrect. Please try again.\n    \n  }\n\n  @case ('auth/password-does-not-meet-requirements') {\n    \n      The password does not meet the requirements.\n    \n  }\n\n  @case ('auth/invalid-action-code') {\n    \n      The action code is invalid. This can happen if the code is malformed, expired, or has already been used.\n    \n  }\n\n  @case ('auth/wrong-password') {\n    \n      The password is invalid or the user does not have a password.\n    \n  }\n\n  @case ('auth/invalid-phone-number') {\n    \n      The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format.\n      E.164 phone numbers are written in the format [+][country code][subscriber number including area code].\n    \n  }\n\n  @case ('auth/invalid-recipient-email') {\n    \n      The email corresponding to this action failed to send as the provided recipient email address is invalid.\n    \n  }\n\n  @case ('auth/missing-phone-number') {\n    \n      To send verification codes, provide a phone number for the recipient.\n    \n  }\n  @case ('auth/multi-factor-auth-required') {\n    \n      Proof of ownership of a second factor is required to complete sign-in.\n    \n  }\n\n  @case ('auth/account-exists-with-different-credential') {\n    \n      An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this\n      email address.\n    \n  }\n\n  @case ('auth/network-request-failed') {\n    \n      A network error (such as timeout, interrupted connection or unreachable host) has occurred.\n    \n  }\n\n  @case ('auth/popup-blocked') {\n    \n      Unable to establish a connection with the popup. It may have been blocked by the browser.\n    \n  }\n\n  @case ('auth/popup-closed-by-user') {\n    \n      The popup has been closed by your before finalizing the operation.\n    \n  }\n\n  @case ('auth/quota-exceeded') {\n    \n      The project’s quota for this operation has been exceeded.\n    \n  }\n\n  @case ('auth/redirect-cancelled-by-user') {\n    \n      The redirect operation has been cancelled by you before finalizing.\n    \n  }\n\n  @case ('auth/redirect-operation-pending') {\n    \n      A redirect sign-in operation is already pending.\n    \n  }\n\n  @case ('auth/timeout') {\n    \n      The operation has timed out.\n    \n  }\n\n  @case ('auth/user-token-expired') {\n    \n      Your credentials is no longer valid. You must sign in again.\n    \n  }\n\n  @case ('auth/too-many-requests') {\n    \n      We have blocked all requests from this device due to unusual activity. Try again later.\n    \n  }\n\n  @case ('auth/unverified-email') {\n    \n      The operation requires a verified email.\n    \n  }\n\n  @case ('auth/user-cancelled') {\n    \n      You did not grant your application the permissions it requested.\n    \n  }\n\n  @case ('auth/user-not-found') {\n    \n      There is no user record corresponding to this identifier. The user may have been deleted.\n    \n  }\n\n  @case ('auth/user-disabled') {\n    \n      The user account has been disabled by an administrator.\n    \n  }\n\n  @case ('auth/user-mismatch') {\n    \n      The supplied credentials do not correspond to the previously signed in user.\n    \n  }\n\n  @case ('auth/weak-password') {\n    \n      The password must be 12 characters long or more.\n    \n  }\n\n  @case ('auth/web-storage-unsupported') {\n    \n      This browser is not supported or 3rd party cookies and data may be disabled.\n    \n  }\n\n  @default {\n    \n      A problem occurred. Please refresh and try again.\n    \n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@switch ($code()) {  @case (\\'auth/code-expired\\') {          The SMS code has expired. Please re-send the verification code to try again.      }  @case (\\'auth/cors-unsupported\\') {          This browser is not supported.      }  @case (\\'auth/credential-already-in-use\\') {          This credential is already associated with a different user account.      }  @case (\\'auth/requires-recent-login\\') {          This operation is sensitive and requires recent authentication. Log in again before retrying this request.      }  @case (\\'auth/email-change-needs-verification\\') {          Multi-factor users must always have a verified email.      }  @case (\\'auth/email-already-in-use\\') {          The email address is already in use by another account.      }  @case (\\'auth/expired-action-code\\') {          The action code has expired.      }  @case (\\'auth/cancelled-popup-request\\') {          This operation has been cancelled due to another conflicting popup being opened.      }  @case (\\'auth/invalid-verification-code\\') {          The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure to      use the verification code provided by the user.      }  @case (\\'auth/invalid-continue-uri\\') {          The continue URL provided in the request is invalid.      }  @case (\\'auth/invalid-email\\') {          The email address is badly formatted.      }  @case (\\'auth/invalid-credential\\') {          The information supplied is incorrect. Please try again.      }  @case (\\'auth/password-does-not-meet-requirements\\') {          The password does not meet the requirements.      }  @case (\\'auth/invalid-action-code\\') {          The action code is invalid. This can happen if the code is malformed, expired, or has already been used.      }  @case (\\'auth/wrong-password\\') {          The password is invalid or the user does not have a password.      }  @case (\\'auth/invalid-phone-number\\') {          The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format.      E.164 phone numbers are written in the format [+][country code][subscriber number including area code].      }  @case (\\'auth/invalid-recipient-email\\') {          The email corresponding to this action failed to send as the provided recipient email address is invalid.      }  @case (\\'auth/missing-phone-number\\') {          To send verification codes, provide a phone number for the recipient.      }  @case (\\'auth/multi-factor-auth-required\\') {          Proof of ownership of a second factor is required to complete sign-in.      }  @case (\\'auth/account-exists-with-different-credential\\') {          An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this      email address.      }  @case (\\'auth/network-request-failed\\') {          A network error (such as timeout, interrupted connection or unreachable host) has occurred.      }  @case (\\'auth/popup-blocked\\') {          Unable to establish a connection with the popup. It may have been blocked by the browser.      }  @case (\\'auth/popup-closed-by-user\\') {          The popup has been closed by your before finalizing the operation.      }  @case (\\'auth/quota-exceeded\\') {          The project’s quota for this operation has been exceeded.      }  @case (\\'auth/redirect-cancelled-by-user\\') {          The redirect operation has been cancelled by you before finalizing.      }  @case (\\'auth/redirect-operation-pending\\') {          A redirect sign-in operation is already pending.      }  @case (\\'auth/timeout\\') {          The operation has timed out.      }  @case (\\'auth/user-token-expired\\') {          Your credentials is no longer valid. You must sign in again.      }  @case (\\'auth/too-many-requests\\') {          We have blocked all requests from this device due to unusual activity. Try again later.      }  @case (\\'auth/unverified-email\\') {          The operation requires a verified email.      }  @case (\\'auth/user-cancelled\\') {          You did not grant your application the permissions it requested.      }  @case (\\'auth/user-not-found\\') {          There is no user record corresponding to this identifier. The user may have been deleted.      }  @case (\\'auth/user-disabled\\') {          The user account has been disabled by an administrator.      }  @case (\\'auth/user-mismatch\\') {          The supplied credentials do not correspond to the previously signed in user.      }  @case (\\'auth/weak-password\\') {          The password must be 12 characters long or more.      }  @case (\\'auth/web-storage-unsupported\\') {          This browser is not supported or 3rd party cookies and data may be disabled.      }  @default {          A problem occurred. Please refresh and try again.      }}'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthErrorMessagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CentralLayoutComponent.html":{"url":"components/CentralLayoutComponent.html","title":"component - CentralLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CentralLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/central/central.component.ts\n\n\n\n    \n        Description\n    \n    \n        View for pages where the visitor is not logged in, or where login is not required.\nCenters all content into the middle of the screen. Dhould be used for single purpose pages.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-central-layout\n            \n\n\n            \n                imports\n                \n                                FooterComponent\n                            NgOptimizedImage\n                            RouterLink\n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./central.component.html\n            \n\n\n\n            \n                styleUrl\n                ./central.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { NgOptimizedImage } from '@angular/common';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterLink, RouterOutlet } from '@angular/router';\n\nimport { FooterComponent } from '../footer/footer.component';\n\n/**\n * View for pages where the visitor is not logged in, or where login is not required.\n * Centers all content into the middle of the screen. Dhould be used for single purpose pages.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    FooterComponent,\n    NgOptimizedImage,\n    RouterLink,\n    RouterOutlet,\n  ],\n  selector: 'app-central-layout',\n  styleUrl: './central.component.scss',\n  templateUrl: './central.component.html',\n})\nexport class CentralLayoutComponent {}\n\n    \n\n    \n        \n  \n    \n      \n      Brainfry Quiz\n    \n  \n  \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Brainfry Quiz              '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CentralLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeEmailComponent.html":{"url":"components/ChangeEmailComponent.html","title":"component - ChangeEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangeEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/change-email/change-email.component.ts\n\n\n\n    \n        Description\n    \n    \n        Form for user to change their email address with Firebase Authentication. The new email address\nmust be verified by clicking a link and applying an oobCode before it actually updates.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-email\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                            ReactiveFormsModule\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./change-email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                $email1CntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $email1CntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $email2CntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $email2CntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $errorCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                $formEmailsInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $passwordCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $passwordCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $verificationStatus\n                            \n                            \n                                    Public\n                                    Readonly\n                                changeEmailForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                email1Cntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                email2Cntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                maxPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                minPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                passwordCntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/change-email/change-email.component.ts:74\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/change-email/change-email.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Re-authenticates the current user using the submitted password then sends an email to the new\naddress to confirm ownership. Clicking the link in the email will apply the oobCode using\nVerifyEmailComponent.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $email1CntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:49\n                        \n                    \n\n            \n                \n                    Errors specific to the first new email field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $email1CntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:51\n                        \n                    \n\n            \n                \n                    Aria-invalid attribute for the first new email field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $email2CntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:53\n                        \n                    \n\n            \n                \n                    Errors specific to the second new email field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $email2CntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:55\n                        \n                    \n\n            \n                \n                    Aria-invalid attribute for the second new email field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:57\n                        \n                    \n\n            \n                \n                    Firebase response error code.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $formEmailsInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:59\n                        \n                    \n\n            \n                \n                    Aria-invalid attribute for the form validation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $passwordCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:61\n                        \n                    \n\n            \n                \n                    Errors specific to the current password field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $passwordCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:63\n                        \n                    \n\n            \n                \n                    Aria-invalid attribute for the current password field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $verificationStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:65\n                        \n                    \n\n            \n                \n                    Cycles through the process of sending a verification email to set the new email address for the User.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        changeEmailForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChangeEmailFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email1Cntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email2Cntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        maxPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.maxLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:70\n                        \n                    \n\n            \n                \n                    Used in error message for password maximum length.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        minPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.minLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:72\n                        \n                    \n\n            \n                \n                    Used in error message for password minimum length.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        passwordCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MaybeUser$\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { Signal, WritableSignal } from '@angular/core';\nimport { EmailAuthProvider, reauthenticateWithCredential, verifyBeforeUpdateEmail } from '@angular/fire/auth';\nimport type { User } from '@angular/fire/auth';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport type { FormControl, ValidationErrors } from '@angular/forms';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser$ } from '@app/core/user.token';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport type { SendVerifyEmailStatuses } from '../confirm-email/send-confirm-email';\nimport { getErrorCode } from '../error-code';\nimport { createEmailControl, createPasswordControl, PASSWORDS } from '../identity-forms';\nimport { confirmMatch, confirmMatchFormErrors } from '../validators/confirm-match';\n\n/** Collects the new email with confirmation and the current password. */\ntype ChangeEmailFormGroup = FormGroup;\n  email2: FormControl;\n  password: FormControl;\n}>;\n\n/**\n * Form for user to change their email address with Firebase Authentication. The new email address\n * must be verified by clicking a link and applying an oobCode before it actually updates.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    ReactiveFormsModule,\n    SpinnerComponent,\n  ],\n  selector: 'app-change-email',\n  templateUrl: './change-email.component.html',\n})\nexport class ChangeEmailComponent {\n  /** Errors specific to the first new email field. */\n  public readonly $email1CntrlErrors: Signal;\n  /** Aria-invalid attribute for the first new email field. */\n  public readonly $email1CntrlInvalid: Signal;\n  /** Errors specific to the second new email field. */\n  public readonly $email2CntrlErrors: Signal;\n  /** Aria-invalid attribute for the second new email field. */\n  public readonly $email2CntrlInvalid: Signal;\n  /** Firebase response error code. */\n  public readonly $errorCode: WritableSignal;\n  /** Aria-invalid attribute for the form validation. */\n  public readonly $formEmailsInvalid: Signal;\n  /** Errors specific to the current password field. */\n  public readonly $passwordCntrlErrors: Signal;\n  /** Aria-invalid attribute for the current password field. */\n  public readonly $passwordCntrlInvalid: Signal;\n  /** Cycles through the process of sending a verification email to set the new email address for the User. */\n  public readonly $verificationStatus: WritableSignal;\n  public readonly changeEmailForm: ChangeEmailFormGroup;\n  public readonly email1Cntrl: FormControl;\n  public readonly email2Cntrl: FormControl;\n  /** Used in error message for password maximum length. */\n  public readonly maxPasswordLength: number = PASSWORDS.maxLength;\n  /** Used in error message for password minimum length. */\n  public readonly minPasswordLength: number = PASSWORDS.minLength;\n  public readonly passwordCntrl: FormControl;\n  public readonly user$: MaybeUser$;\n\n  constructor() {\n    ({ $errors: this.$email1CntrlErrors, $invalid: this.$email1CntrlInvalid, control: this.email1Cntrl } = createEmailControl());\n    ({ $errors: this.$email2CntrlErrors, $invalid: this.$email2CntrlInvalid, control: this.email2Cntrl } = createEmailControl());\n    ({ $errors: this.$passwordCntrlErrors, $invalid: this.$passwordCntrlInvalid, control: this.passwordCntrl } = createPasswordControl());\n\n    this.changeEmailForm = new FormGroup(\n      {\n        email1: this.email1Cntrl,\n        email2: this.email2Cntrl,\n        password: this.passwordCntrl,\n      },\n      confirmMatch('email1', 'email2'),\n    );\n\n    this.$formEmailsInvalid = confirmMatchFormErrors(this.changeEmailForm, this.email1Cntrl, this.email2Cntrl);\n\n    this.$errorCode = signal('');\n    this.$verificationStatus = signal('unsent');\n\n    // Not handling non-logged in users because the Route guards should.\n    this.user$ = inject(USER$);\n  }\n\n  /**\n   * Re-authenticates the current user using the submitted password then sends an email to the new\n   * address to confirm ownership. Clicking the link in the email will apply the oobCode using\n   * VerifyEmailComponent.\n   */\n  public async onSubmit(user: User): Promise {\n    const { email1, password } = this.changeEmailForm.value;\n\n    // Validators prevent email1 or password being falsy, but TypeScript doesn't know that.\n    // Additionally, all users are expected to have an email address.\n    if (this.changeEmailForm.invalid || !email1 || !password || !user.email) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this.$errorCode.set(''); // Clear out any existing errors\n    this.$verificationStatus.set('sending');\n\n    try {\n      const emailCreds = EmailAuthProvider.credential(user.email, password);\n      const credentials = await reauthenticateWithCredential(user, emailCreds);\n      await verifyBeforeUpdateEmail(credentials.user, email1);\n      this.$verificationStatus.set('sent');\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n      this.$verificationStatus.set('unsent');\n    }\n  }\n}\n\n    \n\n    \n        @let status = $verificationStatus();\n@if (status !== 'sending') {\n  \n    Change your email\n    @if (status === 'unsent') {\n      @if (user$ | async; as user) {\n        \n          To confirm that your new email address is valid we will send an email to your new address with a verification link.\n        \n        \n          @if (user.email) {\n            \n              Current email:\n              \n            \n          }\n\n          \n            New email:\n            \n            \n              @if ($email1CntrlErrors(); as errors) {\n                \n                  @if (errors['required']) {\n                    \n                      Please enter your new email address.\n                    \n                  }\n                  @if (errors['email']) {\n                    \n                      Please enter a valid email address.\n                    \n                  }\n                \n              }\n            \n          \n\n          \n            Confirm email:\n            \n            \n              @if ($email2CntrlErrors(); as errors) {\n                \n                  @if (errors['required']) {\n                    \n                      Please re-enter your new email address.\n                    \n                  }\n                  @if (errors['email']) {\n                    \n                      Please enter a valid email address.\n                    \n                  }\n                \n              }\n            \n          \n\n          \n            @if ($formEmailsInvalid()) {\n              \n                Emails must match.\n              \n            }\n          \n\n          \n            Password:\n            \n            \n              @if ($passwordCntrlErrors(); as errors) {\n                \n                  @if (errors['required']) {\n                    \n                      Please enter your password.\n                    \n                  }\n                  @if (errors['minlength']) {\n                    \n                      Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase\n                      letters, numbers, and symbols.\n                    \n                  }\n                  @if (errors['maxlength']) {\n                    \n                      Your password may not be longer than {{ maxPasswordLength }} characters.\n                    \n                  }\n                \n              }\n            \n          \n\n          \n            @if ($formEmailsInvalid()) {\n              \n                Emails must match.\n              \n            }\n          \n\n          @if ($errorCode(); as errorCode) {\n            \n              \n            \n          }\n\n          \n            \n              Change email\n            \n          \n        \n      } @else {\n        \n      }\n    } @else {\n      \n        To complete your email address change click the link in the email sent to\n        {{ email1Cntrl.value }}.\n        Please check your email inbox and spam folder in a few minutes.\n      \n    }\n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let status = $verificationStatus();@if (status !== \\'sending\\') {      Change your email    @if (status === \\'unsent\\') {      @if (user$ | async; as user) {                  To confirm that your new email address is valid we will send an email to your new address with a verification link.                          @if (user.email) {                          Current email:                                    }                      New email:                                      @if ($email1CntrlErrors(); as errors) {                                  @if (errors[\\'required\\']) {                                          Please enter your new email address.                                      }                  @if (errors[\\'email\\']) {                                          Please enter a valid email address.                                      }                              }                                            Confirm email:                                      @if ($email2CntrlErrors(); as errors) {                                  @if (errors[\\'required\\']) {                                          Please re-enter your new email address.                                      }                  @if (errors[\\'email\\']) {                                          Please enter a valid email address.                                      }                              }                                            @if ($formEmailsInvalid()) {                              Emails must match.                          }                                Password:                                      @if ($passwordCntrlErrors(); as errors) {                                  @if (errors[\\'required\\']) {                                          Please enter your password.                                      }                  @if (errors[\\'minlength\\']) {                                          Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase                      letters, numbers, and symbols.                                      }                  @if (errors[\\'maxlength\\']) {                                          Your password may not be longer than {{ maxPasswordLength }} characters.                                      }                              }                                            @if ($formEmailsInvalid()) {                              Emails must match.                          }                    @if ($errorCode(); as errorCode) {                                                }                                    Change email                                    } @else {              }    } @else {              To complete your email address change click the link in the email sent to        {{ email1Cntrl.value }}.        Please check your email inbox and spam folder in a few minutes.          }  } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangeEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePasswordComponent.html":{"url":"components/ChangePasswordComponent.html","title":"component - ChangePasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangePasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/change-password/change-password.component.ts\n\n\n\n    \n        Description\n    \n    \n        Form to change User's password using the current password.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-password\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                            ReactiveFormsModule\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./change-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                $currentPwCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $currentPwCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $errorCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                $formPasswordsInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password1CntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password1CntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password2CntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password2CntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $showForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                changePasswordForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                currentPwCntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                maxPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                minPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                password1Cntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                password2Cntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/change-password/change-password.component.ts:73\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/change-password/change-password.component.ts:114\n                        \n                    \n\n\n            \n                \n                        Re-authenticates use using the submitted current password, and then updates the password using\nthe new password from the form.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $currentPwCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:48\n                        \n                    \n\n            \n                \n                    Errors specifically for the current password field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $currentPwCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:50\n                        \n                    \n\n            \n                \n                    Aria-invalid attribute for the current password field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:52\n                        \n                    \n\n            \n                \n                    Firebase response error code.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $formPasswordsInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:54\n                        \n                    \n\n            \n                \n                    Aria-invalid attribute for the form.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password1CntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:56\n                        \n                    \n\n            \n                \n                    Errors specifically for the first new password field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password1CntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:58\n                        \n                    \n\n            \n                \n                    Aria-invalid attribute for the first new password field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password2CntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:60\n                        \n                    \n\n            \n                \n                    Errors specifically for the second new password field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password2CntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:62\n                        \n                    \n\n            \n                \n                    Aria-invalid attribute for the second new password field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $showForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:64\n                        \n                    \n\n            \n                \n                    Toggle showing the form and spinner\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        changePasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChangePasswordFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        currentPwCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        maxPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.maxLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:68\n                        \n                    \n\n            \n                \n                    Used in error message for password maximum length.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        minPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.minLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:70\n                        \n                    \n\n            \n                \n                    Used in error message for password minimum length.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password1Cntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password2Cntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MaybeUser$\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { Signal, WritableSignal } from '@angular/core';\nimport { EmailAuthProvider, reauthenticateWithCredential, updatePassword } from '@angular/fire/auth';\nimport type { User } from '@angular/fire/auth';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport type { FormControl, ValidationErrors } from '@angular/forms';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser$ } from '@app/core/user.token';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\nimport { createPasswordControl, PASSWORDS } from '../identity-forms';\nimport { confirmMatch, confirmMatchFormErrors } from '../validators/confirm-match';\n\n/**\n * Collects the User's current password and their new password with confirmation.\n */\ntype ChangePasswordFormGroup = FormGroup;\n  password1: FormControl;\n  password2: FormControl;\n}>;\n\n/**\n * Form to change User's password using the current password.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    ReactiveFormsModule,\n    SpinnerComponent,\n  ],\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n})\nexport class ChangePasswordComponent {\n  /** Errors specifically for the current password field. */\n  public readonly $currentPwCntrlErrors: Signal;\n  /** Aria-invalid attribute for the current password field. */\n  public readonly $currentPwCntrlInvalid: Signal;\n  /** Firebase response error code. */\n  public readonly $errorCode: WritableSignal;\n  /** Aria-invalid attribute for the form. */\n  public readonly $formPasswordsInvalid: Signal;\n  /** Errors specifically for the first new password field. */\n  public readonly $password1CntrlErrors: Signal;\n  /** Aria-invalid attribute for the first new password field. */\n  public readonly $password1CntrlInvalid: Signal;\n  /** Errors specifically for the second new password field. */\n  public readonly $password2CntrlErrors: Signal;\n  /** Aria-invalid attribute for the second new password field. */\n  public readonly $password2CntrlInvalid: Signal;\n  /** Toggle showing the form and spinner */\n  public readonly $showForm: WritableSignal;\n  public readonly changePasswordForm: ChangePasswordFormGroup;\n  public readonly currentPwCntrl: FormControl;\n  /** Used in error message for password maximum length. */\n  public readonly maxPasswordLength: number = PASSWORDS.maxLength;\n  /** Used in error message for password minimum length. */\n  public readonly minPasswordLength: number = PASSWORDS.minLength;\n  public readonly password1Cntrl: FormControl;\n  public readonly password2Cntrl: FormControl;\n  public readonly user$: MaybeUser$;\n\n  constructor() {\n    ({\n      $errors: this.$currentPwCntrlErrors,\n      $invalid: this.$currentPwCntrlInvalid,\n      control: this.currentPwCntrl,\n    } = createPasswordControl());\n    ({\n      $errors: this.$password1CntrlErrors,\n      $invalid: this.$password1CntrlInvalid,\n      control: this.password1Cntrl,\n    } = createPasswordControl(true));\n    ({\n      $errors: this.$password2CntrlErrors,\n      $invalid: this.$password2CntrlInvalid,\n      control: this.password2Cntrl,\n    } = createPasswordControl());\n\n    this.changePasswordForm = new FormGroup(\n      {\n        currentPw: this.currentPwCntrl,\n        password1: this.password1Cntrl,\n        password2: this.password2Cntrl,\n      },\n      confirmMatch('password1', 'password2'),\n    );\n\n    this.$formPasswordsInvalid = confirmMatchFormErrors(this.changePasswordForm, this.password1Cntrl, this.password2Cntrl);\n\n    this.$errorCode = signal('');\n    this.$showForm = signal(true);\n\n    // Not handling non-logged in users because the Route guards should.\n    this.user$ = inject(USER$);\n  }\n\n  /**\n   * Re-authenticates use using the submitted current password, and then updates the password using\n   * the new password from the form.\n   */\n  public async onSubmit(user: User): Promise {\n    const { currentPw, password1 } = this.changePasswordForm.value;\n\n    // Validators prevent email1 or password being falsy, but TypeScript doesn't know that.\n    // Additionally, all users are expected to have an email address.\n    if (this.changePasswordForm.invalid || !currentPw || !password1 || !user.email) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this.$showForm.set(false);\n    this.$errorCode.set(''); // Clear out any existing errors\n\n    try {\n      const emailCreds = EmailAuthProvider.credential(user.email, currentPw);\n      const credentials = await reauthenticateWithCredential(user, emailCreds);\n      await updatePassword(credentials.user, password1);\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n    }\n\n    this.$showForm.set(true);\n  }\n}\n\n    \n\n    \n        @if ($showForm()) {\n  \n    Change your password\n    @if (user$ | async; as user) {\n      \n        \n          \n            Current password:\n          \n          \n          \n            @if ($currentPwCntrlErrors(); as errors) {\n              \n                @if (errors['required']) {\n                  \n                    Please enter your current password.\n                  \n                }\n                @if (errors['minlength']) {\n                  \n                    Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase\n                    letters, numbers, and symbols.\n                  \n                }\n                @if (errors['maxlength']) {\n                  \n                    Your password may not be longer than {{ maxPasswordLength }} characters.\n                  \n                }\n              \n            }\n          \n        \n\n        \n          New password:\n          \n          \n            @if ($password1CntrlErrors(); as errors) {\n              \n                @if (errors['required']) {\n                  \n                    Please enter a new password.\n                  \n                }\n                @if (errors['minlength']) {\n                  \n                    Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase\n                    letters, numbers, and symbols.\n                  \n                }\n                @if (errors['maxlength']) {\n                  \n                    Your password may not be longer than {{ maxPasswordLength }} characters.\n                  \n                }\n                @if (errors['passwordstrength']) {\n                  \n                    Your password is not very strong. Include a combination of upper and lowercase letters, numbers, and symbols.\n                  \n                }\n                @if (errors['firebasevalidator']) {\n                  \n                    Your password needs to include: TODO\n                  \n                }\n              \n            }\n          \n        \n\n        \n          \n            Confirm password:\n          \n          \n          \n            @if ($password2CntrlErrors(); as errors) {\n              \n                @if (errors['required']) {\n                  \n                    Please re-enter your password.\n                  \n                }\n                @if (errors['minlength']) {\n                  \n                    Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase\n                    letters, numbers, and symbols.\n                  \n                }\n                @if (errors['maxlength']) {\n                  \n                    Your password may not be longer than {{ maxPasswordLength }} characters.\n                  \n                }\n              \n            }\n          \n        \n\n        \n          @if ($formPasswordsInvalid()) {\n            \n              Passwords must match.\n            \n          }\n        \n\n        @if ($errorCode(); as errorCode) {\n          \n            \n          \n        }\n\n        \n          \n            Change password\n          \n        \n      \n    }\n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if ($showForm()) {      Change your password    @if (user$ | async; as user) {                                    Current password:                                          @if ($currentPwCntrlErrors(); as errors) {                              @if (errors[\\'required\\']) {                                      Please enter your current password.                                  }                @if (errors[\\'minlength\\']) {                                      Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase                    letters, numbers, and symbols.                                  }                @if (errors[\\'maxlength\\']) {                                      Your password may not be longer than {{ maxPasswordLength }} characters.                                  }                          }                                    New password:                                @if ($password1CntrlErrors(); as errors) {                              @if (errors[\\'required\\']) {                                      Please enter a new password.                                  }                @if (errors[\\'minlength\\']) {                                      Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase                    letters, numbers, and symbols.                                  }                @if (errors[\\'maxlength\\']) {                                      Your password may not be longer than {{ maxPasswordLength }} characters.                                  }                @if (errors[\\'passwordstrength\\']) {                                      Your password is not very strong. Include a combination of upper and lowercase letters, numbers, and symbols.                                  }                @if (errors[\\'firebasevalidator\\']) {                                      Your password needs to include: TODO                                  }                          }                                                Confirm password:                                          @if ($password2CntrlErrors(); as errors) {                              @if (errors[\\'required\\']) {                                      Please re-enter your password.                                  }                @if (errors[\\'minlength\\']) {                                      Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase                    letters, numbers, and symbols.                                  }                @if (errors[\\'maxlength\\']) {                                      Your password may not be longer than {{ maxPasswordLength }} characters.                                  }                          }                                    @if ($formPasswordsInvalid()) {                          Passwords must match.                      }                @if ($errorCode(); as errorCode) {                                        }                              Change password                            }  } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangePasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CombinedObs.html":{"url":"interfaces/CombinedObs.html","title":"interface - CombinedObs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CombinedObs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/control-errors-signal.util.ts\n        \n\n\n            \n                Description\n            \n            \n                combinedLatest output from inner AbstractControl Observables.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dirty\n                                        \n                                \n                                \n                                        \n                                            errors\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dirty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dirty:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates that the Control value has been modified by the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     ValidationErrors | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ValidationErrors | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the Control is invalid then contains the ValidationErrors, otherwise undefined.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { Signal } from '@angular/core';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { PristineChangeEvent } from '@angular/forms';\nimport type {\n  AbstractControl,\n  ControlEvent,\n  FormControlStatus,\n  ValidationErrors,\n} from '@angular/forms';\nimport {\n  combineLatest,\n  debounceTime,\n  filter,\n  map,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { FORMS } from './constants';\n\n/**\n * `combinedLatest` output from inner AbstractControl Observables.\n */\ninterface CombinedObs {\n  /** Indicates that the Control value has been modified by the user. */\n  readonly dirty: boolean;\n  /** If the Control is invalid then contains the ValidationErrors, otherwise `undefined`. */\n  readonly errors: ValidationErrors | undefined;\n}\n\n/**\n * Creates an Angular Signal that emits the validation errors for a Control only when the Control is\n * also modified (dirty).\n */\nexport const controlErrorsSignal = (control: AbstractControl): Signal => {\n  // Only care about dirty controls for purposes of displaying validation error messages.\n  const controlDirty$: Observable = control.events.pipe(\n    filter((event: ControlEvent): event is PristineChangeEvent => event instanceof PristineChangeEvent),\n    map((event: PristineChangeEvent): boolean => !event.pristine),\n  );\n\n  // When status is INVALID emit control.errors, otherwise undefined\n  const controlStatus$: Observable = control.statusChanges.pipe(\n    // Wait for input to stop before displaying error messages\n    debounceTime(FORMS.inputDebounce),\n    map((status: FormControlStatus): ValidationErrors | undefined => {\n      const { errors } = control;\n      if (status === 'INVALID' && errors) {\n        return errors;\n      }\n      return undefined;\n    }),\n  );\n\n  // Combine the Observables so that ValidationErrors are emitted only when the control is dirty.\n  const controlErrors$: Observable = combineLatest({\n    /* eslint-disable rxjs/finnish */\n    dirty: controlDirty$,\n    errors: controlStatus$,\n  }).pipe(\n    map(({ dirty, errors }: CombinedObs): ValidationErrors | undefined => {\n      if (dirty) {\n        return errors;\n      }\n\n      return undefined;\n    }),\n  );\n\n  return toSignal(controlErrors$);\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmEmailComponent.html":{"url":"components/ConfirmEmailComponent.html","title":"component - ConfirmEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/confirm-email/confirm-email.component.ts\n\n\n\n    \n        Description\n    \n    \n        Sends the user an email to confirm access to the email address.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-email\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./confirm-email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                $errorCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                $verificationStatus\n                            \n                            \n                                    Public\n                                    Readonly\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                sendConfirmEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/confirm-email/confirm-email.component.ts:35\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendConfirmEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendConfirmEmail(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/confirm-email/confirm-email.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Sends email to User's email address in Firebase Authentication to verify control of the address.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/confirm-email/confirm-email.component.ts:31\n                        \n                    \n\n            \n                \n                    Firebase response error code\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $verificationStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/confirm-email/confirm-email.component.ts:33\n                        \n                    \n\n            \n                \n                    Triggers different stages in the view for email verification sending.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MaybeUser$\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/confirm-email/confirm-email.component.ts:35\n                        \n                    \n\n            \n                \n                    Currently logged in Firebase User.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { WritableSignal } from '@angular/core';\nimport { sendEmailVerification } from '@angular/fire/auth';\nimport type { User } from '@angular/fire/auth';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser$ } from '@app/core/user.token';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\nimport type { SendVerifyEmailStatuses } from './send-confirm-email';\n\n/**\n * Sends the user an email to confirm access to the email address.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ AsyncPipe, AuthErrorMessagesComponent, SpinnerComponent ],\n  selector: 'app-confirm-email',\n  templateUrl: './confirm-email.component.html',\n})\nexport class ConfirmEmailComponent {\n  /** Firebase response error code */\n  public readonly $errorCode: WritableSignal;\n  /** Triggers different stages in the view for email verification sending. */\n  public readonly $verificationStatus: WritableSignal;\n  /** Currently logged in Firebase User. */\n  public readonly user$: MaybeUser$;\n\n  constructor() {\n    this.$errorCode = signal('');\n    this.$verificationStatus = signal('unsent');\n\n    // Not handling non-logged in users because the Route guards should.\n    this.user$ = inject(USER$);\n  }\n\n  /**\n   * Sends email to User's email address in Firebase Authentication to verify control of the address.\n   */\n  public async sendConfirmEmail(user: User): Promise {\n    this.$errorCode.set(''); // Clear out any existing errors\n    this.$verificationStatus.set('sending');\n\n    try {\n      await sendEmailVerification(user);\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n    }\n\n    this.$verificationStatus.set('sent');\n  }\n}\n\n    \n\n    \n        @if (user$ | async; as user) {\n  \n    Confirm email address\n    \n      To confirm that your email address is valid we need to send an email to\n      {{ user.email }}\n      with a verification link.\n    \n    @let status = $verificationStatus();\n    @if (status === 'sent') {\n      @if ($errorCode(); as errorCode) {\n        \n          \n        \n      } @else {\n        \n          A verification email has been sent to\n          {{ user.email }}.\n          Please check your email inbox and spam folder in a few minutes.\n        \n      }\n    }\n    \n      \n        @if (status === 'sent') {\n          \n            Resend verification email\n          \n        } @else {\n          \n            Send verification email\n          \n        }\n      \n    \n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (user$ | async; as user) {      Confirm email address          To confirm that your email address is valid we need to send an email to      {{ user.email }}      with a verification link.        @let status = $verificationStatus();    @if (status === \\'sent\\') {      @if ($errorCode(); as errorCode) {                                } @else {                  A verification email has been sent to          {{ user.email }}.          Please check your email inbox and spam folder in a few minutes.              }    }                  @if (status === \\'sent\\') {                      Resend verification email                  } @else {                      Send verification email                  }            } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ControlProperties.html":{"url":"interfaces/ControlProperties.html","title":"interface - ControlProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ControlProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/control-invalid-signal.util.ts\n        \n\n\n            \n                Description\n            \n            \n                Angular AbstractControl properties that are used to determine if the control should signal an\ninvalid state.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dirty\n                                        \n                                \n                                \n                                        \n                                            invalid\n                                        \n                                \n                                \n                                        \n                                            touched\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dirty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dirty:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Control value has been modified.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invalid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invalid:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Control value fails validation.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touched\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        touched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Control has been focused in the view.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { Signal } from '@angular/core';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { PristineChangeEvent, StatusChangeEvent, TouchedChangeEvent } from '@angular/forms';\nimport type { AbstractControl, ControlEvent } from '@angular/forms';\nimport { distinctUntilChanged, map, scan } from 'rxjs';\nimport type { Observable } from 'rxjs';\n\n/**\n * Angular AbstractControl properties that are used to determine if the control should signal an\n * invalid state.\n */\ninterface ControlProperties {\n  /** Control value has been modified. */\n  readonly dirty: boolean;\n  /** Control value fails validation. */\n  readonly invalid: boolean;\n  /** Control has been focused in the view. */\n  readonly touched: boolean;\n}\n\n/**\n * When all the ControlProperties are true then the Control is invalid.\n */\nconst isInvalid = (properties: ControlProperties): boolean => {\n  let invalid = true;\n\n  for (const val of Object.values(properties)) {\n    invalid &&= Boolean(val);\n  }\n\n  return invalid;\n};\n\n/**\n * Create an Angular Signal that flags as modified and invalid based on the Control properties.\n *\n * 1. Invalid - the value fails validation checks.\n * 2. Dirty - the value is different from the initial value.\n * 3. Touched - the Control has been focused during the current view.\n *\n * This ensures that the aria-invalid attribute is only set on Controls that the user has interacted\n * with.\n */\nexport const controlInvalidSignal = (control: AbstractControl): Signal => {\n  const defaultProperties: ControlProperties = {\n    dirty: control.dirty,\n    invalid: control.invalid,\n    touched: control.touched,\n  };\n  const initialValue = isInvalid(defaultProperties);\n\n  const controlEvents$: Observable = control.events.pipe(\n    scan(\n      (current: ControlProperties, event: ControlEvent): ControlProperties => {\n        if (event instanceof PristineChangeEvent) {\n          return { ...current, dirty: !event.pristine };\n        }\n\n        if (event instanceof TouchedChangeEvent) {\n          return { ...current, touched: event.touched };\n        }\n\n        if (event instanceof StatusChangeEvent) {\n          return { ...current, invalid: event.status === 'INVALID' };\n        }\n\n        return current;\n      },\n      defaultProperties,\n    ),\n    map((properties: ControlProperties): boolean => isInvalid(properties)),\n    distinctUntilChanged(),\n  );\n\n  return toSignal(controlEvents$, { initialValue });\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ControlStruct.html":{"url":"interfaces/ControlStruct.html","title":"interface - ControlStruct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ControlStruct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/identity-forms.ts\n        \n\n\n            \n                Description\n            \n            \n                For each Identity Control generate two Signals for error handling.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            $errors\n                                        \n                                \n                                \n                                        \n                                            $invalid\n                                        \n                                \n                                \n                                        \n                                            control\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $errors:     Signal\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Signal\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Returns errors for the control, but only when the control is dirty.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $invalid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $invalid:     Signal\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Signal\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Flag for aria-invalid, but only when the control is modified, invalid, and interacted with.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        control\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        control:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identity control.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { Signal } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport type { AbstractControl, ValidationErrors } from '@angular/forms';\n\nimport { PASSWORDS } from '@app/shared/constants';\nimport { controlErrorsSignal } from '@app/shared/control-errors-signal.util';\nimport { controlInvalidSignal } from '@app/shared/control-invalid-signal.util';\n\nimport { passwordFirebaseValidator, passwordStrengthValidator } from './validators/passwords';\n\n/**\n * Pair control with Angular Signals for handling validation in the template.\n */\nconst getControlStructure = (control: T): ControlStruct => {\n  const $invalid = controlInvalidSignal(control);\n  const $errors = controlErrorsSignal(control);\n\n  return { $errors, $invalid, control };\n};\n\nexport { PASSWORDS };\n\n/**\n * For each Identity Control generate two Signals for error handling.\n */\nexport interface ControlStruct {\n  /** Returns errors for the control, but only when the control is dirty. */\n  readonly $errors: Signal;\n  /** Flag for aria-invalid, but only when the control is modified, invalid, and interacted with. */\n  readonly $invalid: Signal;\n  /** Identity control. */\n  readonly control: T;\n}\n\n/**\n * Emails are required and must be a valid email address.\n */\nexport const createEmailControl = (): ControlStruct => {\n  // eslint-disable-next-line unicorn/no-null -- DOM forms use null\n  const control = new FormControl(null, [ Validators.required, Validators.email ]);\n  return getControlStructure(control);\n};\n\n/**\n * Passwords are required and have length requirements. Complexity is required for new password fields.\n * @param isNewPassword - Adds extra validators to control when being used to create a new password.\n *                      Note: this should only be used on the first password field, not the confirm\n *                      field.\n */\nexport const createPasswordControl = (isNewPassword: boolean = false): ControlStruct => {\n  const control = new FormControl(\n    null, // eslint-disable-line unicorn/no-null -- DOM forms use null\n    [\n      Validators.required,\n      Validators.minLength(PASSWORDS.minLength),\n      Validators.maxLength(PASSWORDS.maxLength),\n    ],\n  );\n\n  if (isNewPassword) {\n    control.addValidators(passwordStrengthValidator);\n    control.addAsyncValidators(passwordFirebaseValidator());\n  }\n\n  return getControlStructure(control);\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dashboard.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                name$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard.component.ts:18\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { map } from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser } from '@app/core/user.token';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ AsyncPipe, SpinnerComponent ],\n  selector: 'app-dashboard',\n  styleUrl: './dashboard.component.scss',\n  templateUrl: './dashboard.component.html',\n})\nexport class DashboardComponent {\n  public readonly name$: Observable;\n\n  constructor() {\n    const user$ = inject(USER$);\n\n    this.name$ = user$.pipe(\n      map((maybeUser: MaybeUser): string => maybeUser?.displayName ?? 'You'),\n    );\n  }\n}\n\n    \n\n    \n        @if (name$ | async; as name) {\n  Hello {{ name }}!\n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (name$ | async; as name) {  Hello {{ name }}!} @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeleteAccountComponent.html":{"url":"components/DeleteAccountComponent.html","title":"component - DeleteAccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeleteAccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/delete-account/delete-account.component.ts\n\n\n\n    \n        Description\n    \n    \n        Two step process to delete a User's account in Firebase Authentication. First button opens a\ndialog where the User enters their password and confirms account deletion.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-delete-account\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                            ReactiveFormsModule\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./delete-account.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _$confirmDialog\n                            \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Public\n                                    Readonly\n                                $errorCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                $passwordCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $passwordCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $showForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                deleteAccountForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                maxPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                minPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                passwordCntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeDialog\n                            \n                            \n                                    Public\n                                    Async\n                                deleteAcount\n                            \n                            \n                                    Public\n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:65\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        closeDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/delete-account/delete-account.component.ts:90\n                        \n                    \n\n\n            \n                \n                        Closes the HTML Dialog element without deleting the account.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteAcount\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAcount(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/delete-account/delete-account.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Re-authenticates the User using their password from the form, and then deletes the User in\nFirebase Authentication.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    openDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/delete-account/delete-account.component.ts:128\n                        \n                    \n\n\n            \n                \n                        Opens the HTML Dialog containing the delete account form.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _$confirmDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Signal\n\n                    \n                \n                \n                    \n                        Default value : viewChild.required('confirmDialog')\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:49\n                        \n                    \n\n            \n                \n                    Errors from Firebase, displayed after the dialog is closed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $passwordCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:51\n                        \n                    \n\n            \n                \n                    Errors specific to the password field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $passwordCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:53\n                        \n                    \n\n            \n                \n                    Aria-invalid attribute for the password field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $showForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:55\n                        \n                    \n\n            \n                \n                    Toggle showing view and the spinner.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        deleteAccountForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeleteAccountFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        maxPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.maxLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:58\n                        \n                    \n\n            \n                \n                    Used in error message for password maximum length.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        minPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.minLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:60\n                        \n                    \n\n            \n                \n                    Used in error message for password minimum length.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        passwordCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MaybeUser$\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n  viewChild,\n} from '@angular/core';\nimport type { ElementRef, Signal, WritableSignal } from '@angular/core';\nimport { deleteUser, EmailAuthProvider, reauthenticateWithCredential } from '@angular/fire/auth';\nimport type { User } from '@angular/fire/auth';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport type { FormControl, ValidationErrors } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser$ } from '@app/core/user.token';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\nimport { createPasswordControl, PASSWORDS } from '../identity-forms';\n\n/** Deleting a Firebase User requires a recent authentication. */\ntype DeleteAccountFormGroup = FormGroup;\n}>;\n\n/** Template reference to HTML dialog element. */\ntype DialogRef = ElementRef;\n\n/**\n * Two step process to delete a User's account in Firebase Authentication. First button opens a\n * dialog where the User enters their password and confirms account deletion.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    ReactiveFormsModule,\n    SpinnerComponent,\n  ],\n  selector: 'app-delete-account',\n  templateUrl: './delete-account.component.html',\n})\nexport class DeleteAccountComponent {\n  /** Errors from Firebase, displayed after the dialog is closed. */\n  public readonly $errorCode: WritableSignal;\n  /** Errors specific to the password field. */\n  public readonly $passwordCntrlErrors: Signal;\n  /** Aria-invalid attribute for the password field. */\n  public readonly $passwordCntrlInvalid: Signal;\n  /** Toggle showing view and the spinner. */\n  public readonly $showForm: WritableSignal;\n  public readonly deleteAccountForm: DeleteAccountFormGroup;\n  /** Used in error message for password maximum length. */\n  public readonly maxPasswordLength: number = PASSWORDS.maxLength;\n  /** Used in error message for password minimum length. */\n  public readonly minPasswordLength: number = PASSWORDS.minLength;\n  public readonly passwordCntrl: FormControl;\n  public readonly user$: MaybeUser$;\n\n  private readonly _$confirmDialog: Signal = viewChild.required('confirmDialog');\n  private readonly _router: Router;\n\n  constructor() {\n    this._router = inject(Router);\n\n    ({\n      $errors: this.$passwordCntrlErrors,\n      $invalid: this.$passwordCntrlInvalid,\n      control: this.passwordCntrl,\n    } = createPasswordControl());\n\n    this.deleteAccountForm = new FormGroup({\n      password: this.passwordCntrl,\n    });\n\n    this.$errorCode = signal('');\n    this.$showForm = signal(true);\n\n    // Not handling non-logged in users because the Route guards should.\n    this.user$ = inject(USER$);\n  }\n\n  /**\n   * Closes the HTML Dialog element without deleting the account.\n   */\n  public closeDialog(): void {\n    const dialogEl = this._$confirmDialog();\n    dialogEl.nativeElement.close();\n  }\n\n  /**\n   * Re-authenticates the User using their password from the form, and then deletes the User in\n   * Firebase Authentication.\n   */\n  public async deleteAcount(user: User): Promise {\n    // The dialog automatically closes on submit. event.preventDefault() and event.stopPropagation() do not prevent that.\n    const { password } = this.deleteAccountForm.value;\n\n    // Validators prevent email1 or password being falsy, but TypeScript doesn't know that.\n    // Additionally, all users are expected to have an email address.\n    if (this.deleteAccountForm.invalid || !password || !user.email) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this.$showForm.set(false);\n    this.$errorCode.set(''); // Clear out any existing errors\n\n    try {\n      const emailCreds = EmailAuthProvider.credential(user.email, password);\n      const credentials = await reauthenticateWithCredential(user, emailCreds);\n      await deleteUser(credentials.user);\n      await this._router.navigateByUrl('/');\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n    }\n\n    this.$showForm.set(true);\n  }\n\n  /**\n   * Opens the HTML Dialog containing the delete account form.\n   */\n  public openDialog(): void {\n    const dialogEl = this._$confirmDialog();\n    this.$errorCode.set(''); // Clear out any existing errors\n    dialogEl.nativeElement.showModal();\n  }\n}\n\n    \n\n    \n        @if ($showForm()) {\n  \n    Delete your account\n    \n      Deleting your account cannot be undone. This is a two step process. Are you sure you wish to proceed?\n    \n    @if ($errorCode(); as errorCode) {\n      \n        \n      \n    }\n    \n      \n        Begin account deletion\n      \n    \n  \n  \n    \n      Enter your password to proceed. Clicking the complete button will immediately and irrecoverably delete your account.\n    \n    @if (user$ | async; as user) {\n      \n        \n          Password:\n          \n          \n            @if ($passwordCntrlErrors(); as errors) {\n              \n                @if (errors['required']) {\n                  \n                    Please enter your password.\n                  \n                }\n                @if (errors['minlength']) {\n                  \n                    Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and\n                    lowercase letters, numbers, and symbols.\n                  \n                }\n                @if (errors['maxlength']) {\n                  \n                    Your password may not be longer than {{ maxPasswordLength }} characters.\n                  \n                }\n              \n            }\n          \n        \n\n        \n          \n            Complete account deletion\n          \n          \n            Cancel\n          \n        \n      \n    }\n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if ($showForm()) {      Delete your account          Deleting your account cannot be undone. This is a two step process. Are you sure you wish to proceed?        @if ($errorCode(); as errorCode) {                        }                  Begin account deletion                        Enter your password to proceed. Clicking the complete button will immediately and irrecoverably delete your account.        @if (user$ | async; as user) {                        Password:                                @if ($passwordCntrlErrors(); as errors) {                              @if (errors[\\'required\\']) {                                      Please enter your password.                                  }                @if (errors[\\'minlength\\']) {                                      Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and                    lowercase letters, numbers, and symbols.                                  }                @if (errors[\\'maxlength\\']) {                                      Your password may not be longer than {{ maxPasswordLength }} characters.                                  }                          }                                                Complete account deletion                                Cancel                            }  } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeleteAccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/footer/footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Global footer for both logged in and out views used by Standard & Central layout components.\nLinks to the legal pages for the application and displays the copyright notice.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n            \n                imports\n                \n                            DatePipe\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                today\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/footer/footer.component.ts:23\n                        \n                    \n\n            \n                \n                    Used to display the current year for copyright.\nNote that if the view remains open across a year change then this will not be updated. However,\nthat isn't a real concern.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { DatePipe } from '@angular/common';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n/**\n * Global footer for both logged in and out views used by Standard & Central layout components.\n * Links to the legal pages for the application and displays the copyright notice.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ DatePipe, RouterLink ],\n  selector: 'app-footer',\n  styleUrl: './footer.component.scss',\n  templateUrl: './footer.component.html',\n})\nexport class FooterComponent {\n  /**\n   * Used to display the current year for copyright.\n   *\n   * Note that if the view remains open across a year change then this will not be updated. However,\n   * that isn't a real concern.\n   */\n  public readonly today: Date = new Date();\n}\n\n    \n\n    \n        \n  \n    &copy; Copyright\n    {{ today | date: 'yyyy' }}\n    Privacy Policy\n    Terms &amp; Conditions\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      © Copyright    {{ today | date: \\'yyyy\\' }}    Privacy Policy    Terms & Conditions  '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/forgot-password/forgot-password.component.ts\n\n\n\n    \n        Description\n    \n    \n        Sends email to reset password for a user's account.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n\n            \n                imports\n                \n                                AuthErrorMessagesComponent\n                            ReactiveFormsModule\n                            RouterLink\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _auth\n                            \n                            \n                                    Public\n                                    Readonly\n                                $emailCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $emailCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $errorCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                $showForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                emailCntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                forgotForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:48\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/forgot-password/forgot-password.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Sends password reset email to submitted email address, if it exists in Firebase Authentication.\nEmail enumeration protection is enabled in production, so errors should not indicate if an\naccount exists with the submitted email address.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Auth\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $emailCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:38\n                        \n                    \n\n            \n                \n                    Errors specific to the email field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $emailCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:40\n                        \n                    \n\n            \n                \n                    Aria-invalid attribute for the email field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:42\n                        \n                    \n\n            \n                \n                    Form submission errors from Firebase Authentication response.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $showForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:44\n                        \n                    \n\n            \n                \n                    Toggle the HTML form and spinner.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        emailCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        forgotForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ForgotFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { Signal, WritableSignal } from '@angular/core';\nimport { Auth, sendPasswordResetEmail } from '@angular/fire/auth';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport type { FormControl, ValidationErrors } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\nimport { createEmailControl } from '../identity-forms';\n\n/** FormGroup allows the use of (ngSubmit) on the Form element. */\ntype ForgotFormGroup = FormGroup }>;\n\n/**\n * Sends email to reset password for a user's account.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AuthErrorMessagesComponent,\n    ReactiveFormsModule,\n    RouterLink,\n    SpinnerComponent,\n  ],\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n})\nexport class ForgotPasswordComponent {\n  /** Errors specific to the email field. */\n  public readonly $emailCntrlErrors: Signal;\n  /** Aria-invalid attribute for the email field. */\n  public readonly $emailCntrlInvalid: Signal;\n  /** Form submission errors from Firebase Authentication response. */\n  public readonly $errorCode: WritableSignal;\n  /** Toggle the HTML form and spinner. */\n  public readonly $showForm: WritableSignal;\n  public readonly emailCntrl: FormControl;\n  public readonly forgotForm: ForgotFormGroup;\n\n  private readonly _auth: Auth;\n\n  constructor() {\n    this._auth = inject(Auth);\n\n    ({ $errors: this.$emailCntrlErrors, $invalid: this.$emailCntrlInvalid, control: this.emailCntrl } = createEmailControl());\n\n    this.forgotForm = new FormGroup({ email: this.emailCntrl });\n\n    this.$errorCode = signal('');\n    this.$showForm = signal(true);\n  }\n\n  /**\n   * Sends password reset email to submitted email address, if it exists in Firebase Authentication.\n   *\n   * Email enumeration protection is enabled in production, so errors should not indicate if an\n   * account exists with the submitted email address.\n   */\n  public async onSubmit(): Promise {\n    const { email } = this.forgotForm.value;\n\n    // Validators prevent email being falsy, but TypeScript doesn't know that.\n    if (this.forgotForm.invalid || !email) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this.$showForm.set(false);\n    this.$errorCode.set(''); // Clear out any existing errors\n\n    try {\n      await sendPasswordResetEmail(this._auth, email);\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n    }\n\n    this.$showForm.set(true);\n  }\n}\n\n    \n\n    \n        @if ($showForm()) {\n  \n    Recover your password\n    \n      \n        Email:\n        \n        \n          @if ($emailCntrlErrors(); as errors) {\n            \n              @if (errors['required']) {\n                \n                  Please enter your email address.\n                \n              }\n              @if (errors['email']) {\n                \n                  Please enter a valid email address.\n                \n              }\n            \n          }\n        \n      \n\n      @if ($errorCode(); as errorCode) {\n        \n          \n        \n      }\n\n      \n        \n          Send password reset email\n        \n      \n    \n    \n      Return to login\n    \n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if ($showForm()) {      Recover your password                  Email:                          @if ($emailCntrlErrors(); as errors) {                          @if (errors[\\'required\\']) {                                  Please enter your email address.                              }              @if (errors[\\'email\\']) {                                  Please enter a valid email address.                              }                      }                    @if ($errorCode(); as errorCode) {                                }                        Send password reset email                            Return to login      } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Primary header for standard views of logged in users. Contains the user account menu and logo.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n            \n                imports\n                \n                            FaIconComponent\n                            NgOptimizedImage\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                $showMenu\n                            \n                            \n                                    Public\n                                    Readonly\n                                faBars\n                            \n                            \n                                    Public\n                                    Readonly\n                                faX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nclick(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/header/header.component.ts:36\n                        \n                    \n\n\n            \n                \n                        Close the menu if the user clicks on a link.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onClick(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/layouts/header/header.component.ts:36\n                        \n                    \n\n\n            \n                \n                        Close the menu if the user clicks on a link.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/header/header.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Sets the expanded class on the .menu list, and updates aria-expanded and the icon.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $showMenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/header/header.component.ts:26\n                        \n                    \n\n            \n                \n                    Toggles the collapsible User Account menu.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        faBars\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IconDefinition\n\n                    \n                \n                \n                    \n                        Default value : faBars\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/header/header.component.ts:28\n                        \n                    \n\n            \n                \n                    Hamburger icon for the User Accounts menu in mobile view.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        faX\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IconDefinition\n\n                    \n                \n                \n                    \n                        Default value : faX\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/header/header.component.ts:30\n                        \n                    \n\n            \n                \n                    Close icon for User Accounts menu.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { NgOptimizedImage } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  HostListener,\n  signal,\n} from '@angular/core';\nimport type { WritableSignal } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\nimport type { IconDefinition } from '@fortawesome/angular-fontawesome';\nimport { faBars, faX } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * Primary header for standard views of logged in users. Contains the user account menu and logo.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ FaIconComponent, NgOptimizedImage, RouterLink ],\n  selector: 'app-header',\n  styleUrl: './header.component.scss',\n  templateUrl: './header.component.html',\n})\nexport class HeaderComponent {\n  /** Toggles the collapsible User Account menu. */\n  public readonly $showMenu: WritableSignal = signal(false);\n  /** Hamburger icon for the User Accounts menu in mobile view. */\n  public readonly faBars: IconDefinition = faBars;\n  /** Close icon for User Accounts menu. */\n  public readonly faX: IconDefinition = faX;\n\n  /**\n   * Close the menu if the user clicks on a link.\n   */\n  @HostListener('click', [ '$event' ])\n  public onClick(event: Event): void {\n    const { target } = event;\n\n    if (target instanceof HTMLAnchorElement) {\n      this.$showMenu.set(false);\n    }\n  }\n\n  /**\n   * Sets the expanded class on the .menu list, and updates aria-expanded and the icon.\n   */\n  public toggleMenu(): void {\n    const menuShown = this.$showMenu();\n    this.$showMenu.set(!menuShown);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    Brainfry Quiz\n  \n\n\n\n  \n    \n    Your account\n  \n\n  \n    Your profile\n    Manage your photos\n    Change email\n    Change password\n    Delete account\n    Logout\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Brainfry Quiz            Your account        Your profile    Manage your photos    Change email    Change password    Delete account    Logout  '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Email and password login form.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n            \n                imports\n                \n                                AuthErrorMessagesComponent\n                            ReactiveFormsModule\n                            RouterLink\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _auth\n                            \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Public\n                                    Readonly\n                                $emailCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $emailCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $errorCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                $passwordCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $passwordCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $showForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                emailCntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                loginForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                maxPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                minPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                next\n                            \n                            \n                                    Public\n                                    Readonly\n                                passwordCntrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/login/login.component.ts:67\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/login/login.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Login using credentials and then redirect to next view.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Auth\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $emailCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:42\n                        \n                    \n\n            \n                \n                    Errors specific to the email field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $emailCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:44\n                        \n                    \n\n            \n                \n                    Aria-invalid attribute for email field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:46\n                        \n                    \n\n            \n                \n                    Login form error response code.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $passwordCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:48\n                        \n                    \n\n            \n                \n                    Errors specific to the password field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $passwordCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:50\n                        \n                    \n\n            \n                \n                    Aria-invalid attribute for password field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $showForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:52\n                        \n                    \n\n            \n                \n                    Toggle Login form and spinner.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        emailCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoginFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        maxPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.maxLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:56\n                        \n                    \n\n            \n                \n                    Used in error message for password maximum length.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        minPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.minLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:58\n                        \n                    \n\n            \n                \n                    Used in error message for password minimum length.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        next\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Default value : input('/')\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:63\n                        \n                    \n\n            \n                \n                    Navigate to root to allow default redirectTo Route to decide initial destination unless the\nnext query parameter is set.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        passwordCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  input,\n  signal,\n} from '@angular/core';\nimport type { InputSignal, Signal, WritableSignal } from '@angular/core';\nimport { Auth, signInWithEmailAndPassword } from '@angular/fire/auth';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport type { FormControl, ValidationErrors } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\nimport { createEmailControl, createPasswordControl, PASSWORDS } from '../identity-forms';\n\n/** Email & password credentials for Authentication */\ntype LoginFormGroup = FormGroup;\n  password: FormControl;\n}>;\n\n/**\n * Email and password login form.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AuthErrorMessagesComponent,\n    ReactiveFormsModule,\n    RouterLink,\n    SpinnerComponent,\n  ],\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent {\n  /** Errors specific to the email field. */\n  public readonly $emailCntrlErrors: Signal;\n  /** Aria-invalid attribute for email field. */\n  public readonly $emailCntrlInvalid: Signal;\n  /** Login form error response code. */\n  public readonly $errorCode: WritableSignal;\n  /** Errors specific to the password field. */\n  public readonly $passwordCntrlErrors: Signal;\n  /** Aria-invalid attribute for password field. */\n  public readonly $passwordCntrlInvalid: Signal;\n  /** Toggle Login form and spinner. */\n  public readonly $showForm: WritableSignal;\n  public readonly emailCntrl: FormControl;\n  public readonly loginForm: LoginFormGroup;\n  /** Used in error message for password maximum length. */\n  public readonly maxPasswordLength: number = PASSWORDS.maxLength;\n  /** Used in error message for password minimum length. */\n  public readonly minPasswordLength: number = PASSWORDS.minLength;\n  /**\n   * Navigate to root to allow default redirectTo Route to decide initial destination unless the\n   * `next` query parameter is set.\n   */\n  public readonly next: InputSignal = input('/');\n  public readonly passwordCntrl: FormControl;\n\n  private readonly _auth: Auth;\n  private readonly _router: Router = inject(Router);\n\n  constructor() {\n    this._auth = inject(Auth);\n\n    ({ $errors: this.$emailCntrlErrors, $invalid: this.$emailCntrlInvalid, control: this.emailCntrl } = createEmailControl());\n    ({ $errors: this.$passwordCntrlErrors, $invalid: this.$passwordCntrlInvalid, control: this.passwordCntrl } = createPasswordControl());\n    this.$showForm = signal(true);\n\n    this.loginForm = new FormGroup({\n      email: this.emailCntrl,\n      password: this.passwordCntrl,\n    });\n\n    this.$errorCode = signal('');\n  }\n\n  /**\n   * Login using credentials and then redirect to next view.\n   */\n  public async onSubmit(): Promise {\n    const { email, password } = this.loginForm.value;\n\n    // Validators prevent email or password being falsy, but TypeScript doesn't know that.\n    if (this.loginForm.invalid || !email || !password) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this.$errorCode.set(''); // Clear out any existing errors\n    this.$showForm.set(false);\n\n    try {\n      await signInWithEmailAndPassword(this._auth, email, password);\n      await this._router.navigateByUrl(this.next());\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n      this.$showForm.set(true);\n    }\n  }\n}\n\n    \n\n    \n        @if ($showForm()) {\n  \n    Login\n    \n      \n        Email:\n        \n        \n          @if ($emailCntrlErrors(); as errors) {\n            \n              @if (errors['required']) {\n                \n                  Please enter your email address.\n                \n              }\n              @if (errors['email']) {\n                \n                  Please enter a valid email address.\n                \n              }\n            \n          }\n        \n      \n\n      \n        Password:\n        \n        \n          @if ($passwordCntrlErrors(); as errors) {\n            \n              @if (errors['required']) {\n                \n                  Please enter your password.\n                \n              }\n              @if (errors['minlength']) {\n                \n                  Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase\n                  letters, numbers, and symbols.\n                \n              }\n              @if (errors['maxlength']) {\n                \n                  Your password may not be longer than {{ maxPasswordLength }} characters.\n                \n              }\n            \n          }\n        \n      \n\n      @if ($errorCode(); as errorCode) {\n        \n          \n        \n      }\n\n      \n        \n          Login\n        \n      \n    \n    \n      \n        Forgot your password?\n      \n    \n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if ($showForm()) {      Login                  Email:                          @if ($emailCntrlErrors(); as errors) {                          @if (errors[\\'required\\']) {                                  Please enter your email address.                              }              @if (errors[\\'email\\']) {                                  Please enter a valid email address.                              }                      }                            Password:                          @if ($passwordCntrlErrors(); as errors) {                          @if (errors[\\'required\\']) {                                  Please enter your password.                              }              @if (errors[\\'minlength\\']) {                                  Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase                  letters, numbers, and symbols.                              }              @if (errors[\\'maxlength\\']) {                                  Your password may not be longer than {{ maxPasswordLength }} characters.                              }                      }                    @if ($errorCode(); as errorCode) {                                }                        Login                                    Forgot your password?            } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutComponent.html":{"url":"components/LogoutComponent.html","title":"component - LogoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/logout/logout.component.ts\n\n\n\n    \n        Description\n    \n    \n        Form to logout current user's session with Firebase Authentication.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./logout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _auth\n                            \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Public\n                                    Readonly\n                                $blockWindow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/logout/logout.component.ts:32\n                        \n                    \n\n\n            \n                \n                        Show blocking spinner, logout the current user, navigates back to the default route.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Auth\n\n                    \n                \n                \n                    \n                        Default value : inject(Auth)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/logout/logout.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/logout/logout.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $blockWindow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/logout/logout.component.ts:24\n                        \n                    \n\n            \n                \n                    During logout block the entire window to prevent User interaction with the application.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { WritableSignal } from '@angular/core';\nimport { Auth, signOut } from '@angular/fire/auth';\nimport { Router, RouterLink } from '@angular/router';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\n/**\n * Form to logout current user's session with Firebase Authentication.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ RouterLink, SpinnerComponent ],\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n})\nexport class LogoutComponent {\n  /** During logout block the entire window to prevent User interaction with the application. */\n  public readonly $blockWindow: WritableSignal = signal(false);\n\n  private readonly _auth: Auth = inject(Auth);\n  private readonly _router: Router = inject(Router);\n\n  /**\n   * Show blocking spinner, logout the current user, navigates back to the default route.\n   */\n  public async logout(): Promise {\n    this.$blockWindow.set(true);\n    await signOut(this._auth);\n    await this._router.navigateByUrl('/'); // Navigate to root to allow Guards to handle final redirecting.\n  }\n}\n\n    \n\n    \n        \n  Logout\n  Click here to logout:\n  \n    \n      Complete logout\n    \n  \n  Go back to dashboard\n\n@if ($blockWindow()) {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Logout  Click here to logout:            Complete logout        Go back to dashboard@if ($blockWindow()) {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/page-not-found/page-not-found.component.ts\n\n\n\n    \n        Description\n    \n    \n        Wildcard catchall route component for paths that do not match configured routes.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n            \n                imports\n                \n                            NgOptimizedImage\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./page-not-found.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _metaService\n                            \n                            \n                                    Private\n                                _robotsTag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/page-not-found/page-not-found.component.ts:36\n                        \n                    \n\n\n            \n                \n                        Remove the robot blocking meta tag from the HTML Head when this Component is no longer the\nrouted Component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/page-not-found/page-not-found.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Prevent robots from indexing this soft 404 page. Note that this probably is only necessary\nwith SSR or JavaScript executing web crawlers.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _metaService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Meta\n\n                    \n                \n                \n                    \n                        Default value : inject(Meta)\n                    \n                \n                    \n                        \n                                Defined in src/app/page-not-found/page-not-found.component.ts:28\n                        \n                    \n\n            \n                \n                    Angular service to manage Meta tags. https://angular.dev/api/platform-browser/Meta\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _robotsTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLMetaElement | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/page-not-found/page-not-found.component.ts:30\n                        \n                    \n\n            \n                \n                    Reference to the meta tag created OnInit to be removed OnDestroy.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { NgOptimizedImage } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport type { OnDestroy, OnInit } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport type { MetaDefinition } from '@angular/platform-browser';\nimport { RouterLink } from '@angular/router';\n\n/**\n * Block robots from indexing the 404 page.\n */\nexport const ROBOTS_META: MetaDefinition = {\n  content: 'noindex, nofollow',\n  name: 'robots',\n} as const;\n\n/**\n * Wildcard catchall route component for paths that do not match configured routes.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ NgOptimizedImage, RouterLink ],\n  selector: 'app-page-not-found',\n  styleUrl: './page-not-found.component.scss',\n  templateUrl: './page-not-found.component.html',\n})\nexport class PageNotFoundComponent implements OnDestroy, OnInit {\n  /** Angular service to manage Meta tags. https://angular.dev/api/platform-browser/Meta */\n  private readonly _metaService: Meta = inject(Meta);\n  /** Reference to the meta tag created OnInit to be removed OnDestroy. */\n  private _robotsTag: HTMLMetaElement | null = null; // eslint-disable-line unicorn/no-null -- DOM uses null\n\n  /**\n   * Remove the robot blocking meta tag from the HTML Head when this Component is no longer the\n   * routed Component.\n   */\n  public ngOnDestroy(): void {\n    if (this._robotsTag) {\n      this._metaService.removeTagElement(this._robotsTag);\n    }\n  }\n\n  /**\n   * Prevent robots from indexing this soft 404 page. Note that this probably is only necessary\n   * with SSR or JavaScript executing web crawlers.\n   */\n  public ngOnInit(): void {\n    this._robotsTag = this._metaService.addTag(ROBOTS_META);\n  }\n}\n\n    \n\n    \n        Game Over\n\n  Oops, we lost (this page)!\n  \n    How did you get here anyway?\n    Contact Support\n  \n  Go back to dashboard\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Game Over  Oops, we lost (this page)!      How did you get here anyway?    Contact Support    Go back to dashboard  '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PasswordResetSuccess.html":{"url":"interfaces/PasswordResetSuccess.html","title":"interface - PasswordResetSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PasswordResetSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/reset-password/reset-password.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Final state after resetting password.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                        \n                                            showForm\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:     undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This makes the template type checker happy.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showForm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showForm:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    On success hide the form and show the success message.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Auth, confirmPasswordReset, verifyPasswordResetCode } from '@angular/fire/auth';\nimport {\n  from,\n  merge,\n  of,\n  startWith,\n  Subject,\n  switchMap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { getErrorCode } from '../error-code';\n\n/** Combined results of all possible password verfication and confirmation paths. */\nexport type ResetPasswordResults = PasswordResetSuccess | ShowForm | VerifiedFailed | undefined;\n\n/** Combined end results of password confirmation */\ntype ConfirmResult = PasswordResetSuccess | ShowForm;\n\n/** Final state after resetting password. */\ninterface PasswordResetSuccess {\n  /** This makes the template type checker happy. */\n  readonly errorCode: undefined;\n  /** On success hide the form and show the success message. */\n  readonly showForm: false;\n}\n\n/** Verified success & password reset failure. */\ninterface ShowForm {\n  /** User email address to reset password for, from Firebase oobCode. */\n  readonly email: string;\n  /** Firebase response error code, if any. */\n  readonly errorCode?: string;\n  /** Display the reset password form to collect and confirm the new password. */\n  readonly showForm: true;\n}\n\n/** Code verification failed. */\ninterface VerifiedFailed {\n  /** This makes the type checker happy during destructuring. */\n  readonly email: undefined;\n  /** Firebase response error code. */\n  readonly errorCode: string;\n  /** On Firebase error hide the form and show the error message. */\n  readonly showForm: false;\n}\n\n/** Combined end results of possword verification. */\ntype VerifiedResult = ShowForm | VerifiedFailed;\n\n/**\n * Handles both password reset oobCode verification, and password reset confirmation.\n */\n@Injectable({ providedIn: 'root' })\nexport class ResetPasswordService {\n  private readonly _auth: Auth = inject(Auth);\n  private readonly _newPasswordSubject$: Subject = new Subject();\n\n  /**\n   * Triggers the confirmPasswordReset promise to apply the action code and replace the user's password.\n   */\n  public replacePassword(newPassword: string): void {\n    this._newPasswordSubject$.next(newPassword);\n  }\n\n  /**\n   * Sets up an Observable that will first verify the oobCode is valid for password resetting, and\n   * then show the password reset form and the user's email address.\n   * This is followed by setting up a subject to emit a new password that will then be confirmed as\n   * the new password for the user. While that action is pending it emits `undefined` to show the\n   * spinner again. In the event of an error it shows the form again with an error message.\n   */\n  public resetPassword$(code: string | undefined): Observable {\n    return of(code).pipe(\n      switchMap(async (oobCode: string | undefined): Promise => this._verifyCode(oobCode)),\n      switchMap((verifyResults: VerifiedResult): Observable => {\n        const verifyResults$ = of(verifyResults);\n        const { email } = verifyResults;\n\n        // Verified succeeded\n        if (email) {\n          // This design with an inner `merge` after `_verifyCode` settles is to accomodate passing\n          // the email to _confirmPasswordReset in case the new password is rejected.\n          // However, it does make testing this path more complicated I think. Would it be better to\n          // move the merge to the return of resetPassword$ and store the email as a private property?\n          const confirmPasswordReset$ = this._newPasswordSubject$.pipe(\n            switchMap((newPassword: string): Observable => {\n              const promise = this._confirmPasswordReset(code, email, newPassword);\n              return from(promise)\n                // Show the spinner while applying the action code.\n                .pipe(startWith(undefined));\n            }),\n          );\n\n          return merge(\n            // This will emit first after code verification.\n            verifyResults$,\n            // This will emit after form submission.\n            confirmPasswordReset$,\n          );\n        }\n\n        // Verified failed\n        return verifyResults$;\n      }),\n    );\n  }\n\n  /**\n   * Applies the new password to the user's account using the oobCode.\n   * @param email - Is necessary only in the case that `confirmPasswordReset` fails, and we need to\n   *              redisplay the form.\n   * @throws If the oobCode is falsy\n   */\n  private async _confirmPasswordReset(code: string | undefined, email: string, newPassword: string): Promise {\n    if (code) {\n      try {\n        await confirmPasswordReset(this._auth, code, newPassword);\n        return { errorCode: undefined, showForm: false };\n      } catch (err: unknown) {\n        return { email, errorCode: getErrorCode(err), showForm: true };\n      }\n    }\n    throw new Error('oobCode not found');\n  }\n\n  /**\n   * This identifies the email for the User who's password would be reset by the oobCode.\n   */\n  private async _verifyCode(code: string | undefined): Promise {\n    if (code) {\n      try {\n        const email = await verifyPasswordResetCode(this._auth, code);\n        return { email, showForm: true };\n      } catch (err: unknown) {\n        return { email: undefined, errorCode: getErrorCode(err), showForm: false };\n      }\n    }\n\n    return { email: undefined, errorCode: 'oobCode not found', showForm: false };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Photo.html":{"url":"interfaces/Photo.html","title":"interface - Photo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Photo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/user-photos/user-photos.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Firebase storage file\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:     FullMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FullMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Need the file metadata to sort by time.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Special download URL for file based on storage.rules.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport {\n  getDownloadURL,\n  getMetadata,\n  listAll,\n  percentage,\n  ref,\n  Storage,\n  uploadBytesResumable,\n} from '@angular/fire/storage';\nimport type {\n  FullMetadata,\n  ListResult,\n  UploadTask,\n  UploadTaskSnapshot,\n} from '@angular/fire/storage';\nimport {\n  BehaviorSubject,\n  endWith,\n  finalize,\n  Subject,\n  switchMap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\n/**\n * Firebase storage file\n */\nexport interface Photo {\n  /** Need the file metadata to sort by time. */\n  readonly metadata: FullMetadata;\n  /** Special download URL for file based on storage.rules. */\n  readonly url: string;\n}\n\n/**\n * Upload progress to Firebase Storage\n */\nexport interface Progress {\n  /** Upload precentage between 0% and 100% */\n  readonly progress: number;\n  /** Not used, but part of the rxfire interface */\n  readonly snapshot: UploadTaskSnapshot;\n}\n\n/** Total allowed uploaded profile photos. */\nexport const MAXIMUM_PHOTOS = 6;\n/** Directory below UID directory for files. */\nconst PHOTO_DIR = 'profile-photos';\n/** Represent random number using letters and numbers. */\nconst RADIX = 36;\n/** Remove the whole number and decimal point from Math.random */\nconst SKIP_WHOLE_NUM = 2;\n\n/**\n * Specific handling for Firebase storage of user profile photos.\n */\n@Injectable({ providedIn: 'root' })\nexport class UserPhotosService {\n  /**\n   * Track the percentage uploaded of `uploadPhoto`.\n   * Idea here is that while falsy (before first emit, when emitting undefined) then the template\n   * will show an `@else` branch for file picker UI. But while uploading it will emit progress for\n   * use in a progress meter.\n   * To automatically refresh the uploaded profile photos from `getProfilePhotos` this must be\n   * subscribed to.\n   */\n  public readonly uploadPercentage$: Observable;\n\n  /** Emits whenever a new profile photo is uploaded to re-fetch the list of all photos for the User. */\n  private readonly _refreshFilesSubject$: BehaviorSubject;\n  private readonly _storage: Storage = inject(Storage);\n  /** Triggers `uploadPercentage$` to track a new upload task. */\n  private readonly _taskSubject$: Subject;\n\n  constructor() {\n    this._refreshFilesSubject$ = new BehaviorSubject(undefined);\n    this._taskSubject$ = new Subject();\n\n    this.uploadPercentage$ = this._taskSubject$.pipe(\n      switchMap((task: UploadTask): Observable =>\n        // First emit the upload progress as a percentage.\n        // https://github.com/FirebaseExtended/rxfire/blob/b91f358e2c13c6bf33fb4a540e3963c3902a62b1/storage/index.ts#L115\n        percentage(task).pipe(\n          // Then when complete (100% progress), emit undefined to reset the Observable to falsy.\n          endWith(undefined),\n          // Inform `getProfilePhotos` that there are new files to fetch since storage doesn't stream StorageReferences.\n          finalize((): void => { this._refreshFilesSubject$.next(); }),\n        )),\n    );\n  }\n\n  /**\n   * Gets a list of profile photos from Firebase Storage for the UID. Sorted by most recently uploaded.\n   * So long as something is subscribed to `uploadPercentage$` then this will be refreshed on each upload.\n   */\n  public getProfilePhotos(uid: string): Observable {\n    const profilePhotosRef = ref(this._storage, `${uid}/${PHOTO_DIR}`);\n\n    return this._refreshFilesSubject$.pipe(\n      // Using an inner Observable here to allow us to refresh the files list after each upload.\n      // But this will only work if someone is subscribed to `uploadPercentage$`!\n      switchMap(async (): Promise => {\n        const profilePhotos: Photo[] = [];\n        const profilePhotosList: ListResult = await listAll(profilePhotosRef);\n        const promises: Array, PromiseSettledResult]>> = [];\n\n        // Need the metadata for sorting and the download URL for displaying & form values.\n        // Note this does not handle nested folders, but we aren't using those.\n        for (const item of profilePhotosList.items) {\n          const promise = Promise.allSettled([ getDownloadURL(item), getMetadata(item) ]);\n          promises.push(promise);\n        }\n\n        // Build the data structure for the Photos.\n        for (const result of await Promise.all(promises)) {\n          const [ settledUrl, settledMetadata ] = result;\n          if (settledUrl.status === 'rejected') {\n            console.error(settledUrl.reason);\n          } else if (settledMetadata.status === 'rejected') {\n            console.error(settledMetadata.reason);\n          } else {\n            profilePhotos.push({\n              metadata: settledMetadata.value,\n              url: settledUrl.value,\n            });\n          }\n        }\n\n        // Organize the photos by most recently uploaded.\n        profilePhotos.sort((a: Photo, b: Photo): number => Number(new Date(b.metadata.updated)) - Number(new Date(a.metadata.updated)));\n\n        return profilePhotos;\n      }),\n    );\n  }\n\n  /**\n   * Uploads files to the user's profile photos directory. `uploadPercentage$` will track progress.\n   *\n   * Note that `files` is expected to be a list of one File. However the code is nominally designed\n   * to handle multiple uploads. In that case the `uploadPercentage$` will only be for the final file\n   * uploaded, which if the previous files are still going might be wrong. Unclear how to handle that\n   * case at this time.\n   */\n  public uploadPhoto(files: FileList, uid: string): void {\n    for (const file of files) {\n      // Unlike AWS S3, Firebase storage knows what folders are, and requires you to traverse into them.\n      // So for more straightforward access prefix the filename with a random value to avoid collisions\n      // instead of using a folder.\n      const prefix = Math.random().toString(RADIX).slice(SKIP_WHOLE_NUM);\n      const path = `${uid}/${PHOTO_DIR}/${prefix}-${file.name}`;\n      const storageRef = ref(this._storage, path);\n      const task = uploadBytesResumable(storageRef, file);\n      this._taskSubject$.next(task);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhotoManagerComponent.html":{"url":"components/PhotoManagerComponent.html","title":"component - PhotoManagerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhotoManagerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/user-photos/photo-manager/photo-manager.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-photo-manager\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./photo-manager.component.html\n            \n\n\n\n            \n                styleUrl\n                ./photo-manager.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [],\n  selector: 'app-photo-manager',\n  styleUrl: './photo-manager.component.scss',\n  templateUrl: './photo-manager.component.html',\n})\nexport class PhotoManagerComponent {\n\n}\n\n    \n\n    \n        photo-manager works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'photo-manager works!'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhotoManagerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhotoUploadComponent.html":{"url":"components/PhotoUploadComponent.html","title":"component - PhotoUploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhotoUploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/user-photos/photo-upload/photo-upload.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles Firebase User profile photo upload to Firebase Storage.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-photo-upload\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./photo-upload.component.html\n            \n\n\n\n            \n                styleUrl\n                ./photo-upload.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _$fileInput\n                            \n                            \n                                    Private\n                                    Readonly\n                                _userPhotoService\n                            \n                            \n                                    Public\n                                    Readonly\n                                $fileCount\n                            \n                            \n                                    Public\n                                    Readonly\n                                maximumFiles\n                            \n                            \n                                    Public\n                                    Readonly\n                                uid\n                            \n                            \n                                    Public\n                                    Readonly\n                                uploadPercentage$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                openFilePicker\n                            \n                            \n                                    Public\n                                uploadFile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                $fileCount\n                            \n                            \n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:43\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        $fileCount\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:31\n                            \n                        \n                \n                    \n                        Current number of files uploaded, from parent Component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        uid\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:35\n                            \n                        \n                \n                    \n                        Current user ID, from parent Component.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openFilePicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFilePicker()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Open the browser file picker UI if we think there are fewer than maximum uploads.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Upload the file(s) from the file picker automatically on success\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _$fileInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Signal\n\n                    \n                \n                \n                    \n                        Default value : viewChild.required('photoUpload')\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _userPhotoService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserPhotosService\n\n                    \n                \n                \n                    \n                        Default value : inject(UserPhotosService)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $fileCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:31\n                        \n                    \n\n            \n                \n                    Current number of files uploaded, from parent Component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        maximumFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : MAXIMUM_PHOTOS\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:33\n                        \n                    \n\n            \n                \n                    Global maximum number of photos allowed for User.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:35\n                        \n                    \n\n            \n                \n                    Current user ID, from parent Component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        uploadPercentage$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:40\n                        \n                    \n\n            \n                \n                    Tracks the upload progress. Once complete emits a falsy value to clear progress bar and\nre-display upload button.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  input,\n  viewChild,\n} from '@angular/core';\nimport type { ElementRef, InputSignal, Signal } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport type { Observable } from 'rxjs';\n\nimport { MAXIMUM_PHOTOS, UserPhotosService } from '../user-photos.service';\nimport type { Progress } from '../user-photos.service';\n\n/** Template reference to HTML input type=file */\ntype FileInputRef = ElementRef;\n\n/**\n * Handles Firebase User profile photo upload to Firebase Storage.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ AsyncPipe, RouterLink ],\n  selector: 'app-photo-upload',\n  styleUrl: './photo-upload.component.scss',\n  templateUrl: './photo-upload.component.html',\n})\nexport class PhotoUploadComponent {\n  /** Current number of files uploaded, from parent Component. */\n  public readonly $fileCount: InputSignal = input.required();\n  /** Global maximum number of photos allowed for User. */\n  public readonly maximumFiles: number = MAXIMUM_PHOTOS;\n  /** Current user ID, from parent Component. */\n  public readonly uid: InputSignal = input.required();\n  /**\n   * Tracks the upload progress. Once complete emits a falsy value to clear progress bar and\n   * re-display upload button.\n   */\n  public readonly uploadPercentage$: Observable;\n\n  private readonly _$fileInput: Signal = viewChild.required('photoUpload');\n  private readonly _userPhotoService: UserPhotosService = inject(UserPhotosService);\n\n  constructor() {\n    this.uploadPercentage$ = this._userPhotoService.uploadPercentage$;\n  }\n\n  /**\n   * Open the browser file picker UI if we think there are fewer than maximum uploads.\n   */\n  public openFilePicker(): void {\n    const fileCount = this.$fileCount();\n    const fileInpt = this._$fileInput();\n\n    if (fileCount \n    \n\n    \n        \n@if (uploadPercentage$ | async; as percentage) {\n  {{ percentage.progress }}%\n} @else if ($fileCount() >= maximumFiles) {\n  Manage your photos\n} @else {\n  \n    Upload a photo\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (uploadPercentage$ | async; as percentage) {  {{ percentage.progress }}%} @else if ($fileCount() >= maximumFiles) {  Manage your photos} @else {      Upload a photo  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhotoUploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrivacyPolicyComponent.html":{"url":"components/PrivacyPolicyComponent.html","title":"component - PrivacyPolicyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PrivacyPolicyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/legal/privacy-policy/privacy-policy.component.ts\n\n\n\n    \n        Description\n    \n    \n        View accessible to all visitors that informs users how their personal data is collected, stored,\nused, and shared, thereby building trust with visitors and complying with data privacy laws by\ntransparently disclosing their practices regarding user information, which is often required by\nlaw in many jurisdictions; essentially, it's a way to let users know what information is being\ngathered and how it will be used, allowing them to make informed decisions about their online\nactivity.\nBased off this online tool's output.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-privacy-policy\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./privacy-policy.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n/**\n * View accessible to all visitors that informs users how their personal data is collected, stored,\n * used, and shared, thereby building trust with visitors and complying with data privacy laws by\n * transparently disclosing their practices regarding user information, which is often required by\n * law in many jurisdictions; essentially, it's a way to let users know what information is being\n * gathered and how it will be used, allowing them to make informed decisions about their online\n * activity.\n *\n * Based off this [online tool's](https://app.termsfeed.com/download/9bce549e-b5ec-4e05-acd7-8fa53c7fa497) output.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ RouterLink ],\n  selector: 'app-privacy-policy',\n  templateUrl: './privacy-policy.component.html',\n})\nexport class PrivacyPolicyComponent {}\n\n    \n\n    \n        \n  Privacy Policy\n\n  \n    Types of data we collect\n    \n      \n        We use your personal data to provide the Brainfry service. By using Brainfry, you agree to the collection and use of information in\n        accordance with this Privacy Policy.\n      \n      \n        While using Brainfry, we may ask you to provide us with certain personally identifiable information that can be used to contact or\n        identify you. Personally identifiable information may include, but is not limited to:\n      \n      \n        Email address\n        Your name\n        Links to your social media accounts\n        Usage Data\n      \n      We may also collect information that your browser sends whenever you visit this website.\n    \n  \n\n  \n    Use of your personal data\n    \n      Brainfry may use personal data for the following purposes:\n      \n        To provide and maintain our application, including to monitor the usage of our application.\n        \n          To manage your Account: to manage your registration as a user of Brainfry. The personal data you provide can give\n          you access to different functionalities that are available to you as a registered user.\n        \n        \n          To contact you: To contact you by email, voice or video calls, text communication, or other equivalent forms of\n          electronic communication, such as a mobile application’s push notifications regarding updates or informative communications\n          related to the functionalities, products or contracted services, including the security updates, when necessary or reasonable for\n          their implementation.\n        \n        To manage your requests: To attend and manage your requests.\n        \n          For other purposes: We may use your information for other purposes, such as data analysis, identifying usage\n          trends, determining the effectiveness of our promotional campaigns and to evaluate and improve Brainfry, products, services,\n          marketing and your experience.\n        \n      \n      We may share your personal information in the following situations:\n      \n        \n          With service providers: We may share your personal information with service providers to monitor and analyze the\n          use of Brainfry.\n        \n        \n          With other users: when you share personal information or otherwise interact in the public areas with other users,\n          such information may be viewed by all users and may be publicly distributed outside. Similarly, other users will be able to view\n          descriptions of your activity, communicate with you and view your profile.\n        \n        With your consent: We may disclose your personal information for any other purpose with your consent.\n      \n    \n  \n\n  \n    \n      Retention of your personal data\n    \n    \n      \n        Brainfry will retain your personal data only for as long as is necessary for the purposes set out in this Privacy Policy. We will\n        retain and use your personal data to the extent necessary to comply with our legal obligations (for example, if we are required to\n        retain your data to comply with applicable laws), resolve disputes, and enforce our legal agreements and policies.\n      \n      \n        Brainfry will also retain usage data for internal analysis purposes. Usage data is generally retained for a shorter period of time,\n        except when this data is used to strengthen the security or to improve the functionality, or we are legally obligated to retain this\n        data for longer time periods.\n      \n    \n  \n\n  \n    Transfer of your personal data\n    \n      \n        Your information, including personal data, may be transferred to — and maintained on — computers located outside of your state,\n        province, country or other governmental jurisdiction where the data protection laws may differ than those from your jurisdiction.\n      \n      Your consent to this Privacy Policy followed by your submission of such information represents your agreement to that transfer.\n      \n        Brainfry will take all steps reasonably necessary to ensure that your data is treated securely and in accordance with this Privacy\n        Policy and no transfer of your personal data will take place to an organization or a country unless there are adequate controls in\n        place including the security of your data and other personal information.\n      \n    \n  \n\n  \n    Delete your personal data\n    \n      You have the right to delete the personal data that you have provided.\n      \n        Brainfry gives you the ability to delete certain information about you from within the\n        application.\n      \n      \n        You may update, amend, or delete your information at any time by signing in to your account, if you have one, and visiting the\n        account settings section that allows you to manage your personal information.\n      \n      Please note, however, that we may need to retain certain information when we have a legal obligation or lawful basis to do so.\n    \n  \n\n  \n    Security of your personal data\n    \n      \n        The security of your personal data is important to us, but remember that no method of transmission over the Internet, or method of\n        electronic storage is 100% secure. While we strive to use commercially acceptable means to protect your personal data, we cannot\n        guarantee its absolute security.\n      \n    \n  \n\n  \n    Children’s privacy\n    \n      \n        Brainfry does not permit access for anyone under the age of 13. We do not knowingly collect personally identifiable information from\n        anyone under the age of 13. If you are a parent or guardian and you are aware that your child has provided us with personal data,\n        take the actions indicated in the Delete your personal data section to remove that data. If we become\n        aware that we have collected personal data from anyone under the age of 13 without verification of parental consent, we may take\n        steps to remove that information from our servers.\n      \n    \n  \n\n  \n    Changes to this privacy policy\n    \n      \n        We may update our privacy policy from time to time. All changes to this policy are publicly recorded in the version controlled\n        source code repository for this application.\n      \n      \n        You are advised to review this Privacy Policy periodically for any changes. Changes to this Privacy Policy are effective when they\n        are posted on this page.\n      \n    \n  \n\n  Return to Brainfry\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Privacy Policy      Types of data we collect                  We use your personal data to provide the Brainfry service. By using Brainfry, you agree to the collection and use of information in        accordance with this Privacy Policy.                    While using Brainfry, we may ask you to provide us with certain personally identifiable information that can be used to contact or        identify you. Personally identifiable information may include, but is not limited to:                    Email address        Your name        Links to your social media accounts        Usage Data            We may also collect information that your browser sends whenever you visit this website.            Use of your personal data          Brainfry may use personal data for the following purposes:              To provide and maintain our application, including to monitor the usage of our application.                  To manage your Account: to manage your registration as a user of Brainfry. The personal data you provide can give          you access to different functionalities that are available to you as a registered user.                          To contact you: To contact you by email, voice or video calls, text communication, or other equivalent forms of          electronic communication, such as a mobile application’s push notifications regarding updates or informative communications          related to the functionalities, products or contracted services, including the security updates, when necessary or reasonable for          their implementation.                To manage your requests: To attend and manage your requests.                  For other purposes: We may use your information for other purposes, such as data analysis, identifying usage          trends, determining the effectiveness of our promotional campaigns and to evaluate and improve Brainfry, products, services,          marketing and your experience.                    We may share your personal information in the following situations:                        With service providers: We may share your personal information with service providers to monitor and analyze the          use of Brainfry.                          With other users: when you share personal information or otherwise interact in the public areas with other users,          such information may be viewed by all users and may be publicly distributed outside. Similarly, other users will be able to view          descriptions of your activity, communicate with you and view your profile.                With your consent: We may disclose your personal information for any other purpose with your consent.                        Retention of your personal data                      Brainfry will retain your personal data only for as long as is necessary for the purposes set out in this Privacy Policy. We will        retain and use your personal data to the extent necessary to comply with our legal obligations (for example, if we are required to        retain your data to comply with applicable laws), resolve disputes, and enforce our legal agreements and policies.                    Brainfry will also retain usage data for internal analysis purposes. Usage data is generally retained for a shorter period of time,        except when this data is used to strengthen the security or to improve the functionality, or we are legally obligated to retain this        data for longer time periods.                  Transfer of your personal data                  Your information, including personal data, may be transferred to — and maintained on — computers located outside of your state,        province, country or other governmental jurisdiction where the data protection laws may differ than those from your jurisdiction.            Your consent to this Privacy Policy followed by your submission of such information represents your agreement to that transfer.              Brainfry will take all steps reasonably necessary to ensure that your data is treated securely and in accordance with this Privacy        Policy and no transfer of your personal data will take place to an organization or a country unless there are adequate controls in        place including the security of your data and other personal information.                  Delete your personal data          You have the right to delete the personal data that you have provided.              Brainfry gives you the ability to delete certain information about you from within the        application.                    You may update, amend, or delete your information at any time by signing in to your account, if you have one, and visiting the        account settings section that allows you to manage your personal information.            Please note, however, that we may need to retain certain information when we have a legal obligation or lawful basis to do so.            Security of your personal data                  The security of your personal data is important to us, but remember that no method of transmission over the Internet, or method of        electronic storage is 100% secure. While we strive to use commercially acceptable means to protect your personal data, we cannot        guarantee its absolute security.                  Children’s privacy                  Brainfry does not permit access for anyone under the age of 13. We do not knowingly collect personally identifiable information from        anyone under the age of 13. If you are a parent or guardian and you are aware that your child has provided us with personal data,        take the actions indicated in the Delete your personal data section to remove that data. If we become        aware that we have collected personal data from anyone under the age of 13 without verification of parental consent, we may take        steps to remove that information from our servers.                  Changes to this privacy policy                  We may update our privacy policy from time to time. All changes to this policy are publicly recorded in the version controlled        source code repository for this application.                    You are advised to review this Privacy Policy periodically for any changes. Changes to this Privacy Policy are effective when they        are posted on this page.              Return to Brainfry'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrivacyPolicyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Progress.html":{"url":"interfaces/Progress.html","title":"interface - Progress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Progress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/user-photos/user-photos.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Upload progress to Firebase Storage\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            progress\n                                        \n                                \n                                \n                                        \n                                            snapshot\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        progress:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Upload precentage between 0% and 100%\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        snapshot\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        snapshot:     UploadTaskSnapshot\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UploadTaskSnapshot\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Not used, but part of the rxfire interface\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport {\n  getDownloadURL,\n  getMetadata,\n  listAll,\n  percentage,\n  ref,\n  Storage,\n  uploadBytesResumable,\n} from '@angular/fire/storage';\nimport type {\n  FullMetadata,\n  ListResult,\n  UploadTask,\n  UploadTaskSnapshot,\n} from '@angular/fire/storage';\nimport {\n  BehaviorSubject,\n  endWith,\n  finalize,\n  Subject,\n  switchMap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\n/**\n * Firebase storage file\n */\nexport interface Photo {\n  /** Need the file metadata to sort by time. */\n  readonly metadata: FullMetadata;\n  /** Special download URL for file based on storage.rules. */\n  readonly url: string;\n}\n\n/**\n * Upload progress to Firebase Storage\n */\nexport interface Progress {\n  /** Upload precentage between 0% and 100% */\n  readonly progress: number;\n  /** Not used, but part of the rxfire interface */\n  readonly snapshot: UploadTaskSnapshot;\n}\n\n/** Total allowed uploaded profile photos. */\nexport const MAXIMUM_PHOTOS = 6;\n/** Directory below UID directory for files. */\nconst PHOTO_DIR = 'profile-photos';\n/** Represent random number using letters and numbers. */\nconst RADIX = 36;\n/** Remove the whole number and decimal point from Math.random */\nconst SKIP_WHOLE_NUM = 2;\n\n/**\n * Specific handling for Firebase storage of user profile photos.\n */\n@Injectable({ providedIn: 'root' })\nexport class UserPhotosService {\n  /**\n   * Track the percentage uploaded of `uploadPhoto`.\n   * Idea here is that while falsy (before first emit, when emitting undefined) then the template\n   * will show an `@else` branch for file picker UI. But while uploading it will emit progress for\n   * use in a progress meter.\n   * To automatically refresh the uploaded profile photos from `getProfilePhotos` this must be\n   * subscribed to.\n   */\n  public readonly uploadPercentage$: Observable;\n\n  /** Emits whenever a new profile photo is uploaded to re-fetch the list of all photos for the User. */\n  private readonly _refreshFilesSubject$: BehaviorSubject;\n  private readonly _storage: Storage = inject(Storage);\n  /** Triggers `uploadPercentage$` to track a new upload task. */\n  private readonly _taskSubject$: Subject;\n\n  constructor() {\n    this._refreshFilesSubject$ = new BehaviorSubject(undefined);\n    this._taskSubject$ = new Subject();\n\n    this.uploadPercentage$ = this._taskSubject$.pipe(\n      switchMap((task: UploadTask): Observable =>\n        // First emit the upload progress as a percentage.\n        // https://github.com/FirebaseExtended/rxfire/blob/b91f358e2c13c6bf33fb4a540e3963c3902a62b1/storage/index.ts#L115\n        percentage(task).pipe(\n          // Then when complete (100% progress), emit undefined to reset the Observable to falsy.\n          endWith(undefined),\n          // Inform `getProfilePhotos` that there are new files to fetch since storage doesn't stream StorageReferences.\n          finalize((): void => { this._refreshFilesSubject$.next(); }),\n        )),\n    );\n  }\n\n  /**\n   * Gets a list of profile photos from Firebase Storage for the UID. Sorted by most recently uploaded.\n   * So long as something is subscribed to `uploadPercentage$` then this will be refreshed on each upload.\n   */\n  public getProfilePhotos(uid: string): Observable {\n    const profilePhotosRef = ref(this._storage, `${uid}/${PHOTO_DIR}`);\n\n    return this._refreshFilesSubject$.pipe(\n      // Using an inner Observable here to allow us to refresh the files list after each upload.\n      // But this will only work if someone is subscribed to `uploadPercentage$`!\n      switchMap(async (): Promise => {\n        const profilePhotos: Photo[] = [];\n        const profilePhotosList: ListResult = await listAll(profilePhotosRef);\n        const promises: Array, PromiseSettledResult]>> = [];\n\n        // Need the metadata for sorting and the download URL for displaying & form values.\n        // Note this does not handle nested folders, but we aren't using those.\n        for (const item of profilePhotosList.items) {\n          const promise = Promise.allSettled([ getDownloadURL(item), getMetadata(item) ]);\n          promises.push(promise);\n        }\n\n        // Build the data structure for the Photos.\n        for (const result of await Promise.all(promises)) {\n          const [ settledUrl, settledMetadata ] = result;\n          if (settledUrl.status === 'rejected') {\n            console.error(settledUrl.reason);\n          } else if (settledMetadata.status === 'rejected') {\n            console.error(settledMetadata.reason);\n          } else {\n            profilePhotos.push({\n              metadata: settledMetadata.value,\n              url: settledUrl.value,\n            });\n          }\n        }\n\n        // Organize the photos by most recently uploaded.\n        profilePhotos.sort((a: Photo, b: Photo): number => Number(new Date(b.metadata.updated)) - Number(new Date(a.metadata.updated)));\n\n        return profilePhotos;\n      }),\n    );\n  }\n\n  /**\n   * Uploads files to the user's profile photos directory. `uploadPercentage$` will track progress.\n   *\n   * Note that `files` is expected to be a list of one File. However the code is nominally designed\n   * to handle multiple uploads. In that case the `uploadPercentage$` will only be for the final file\n   * uploaded, which if the previous files are still going might be wrong. Unclear how to handle that\n   * case at this time.\n   */\n  public uploadPhoto(files: FileList, uid: string): void {\n    for (const file of files) {\n      // Unlike AWS S3, Firebase storage knows what folders are, and requires you to traverse into them.\n      // So for more straightforward access prefix the filename with a random value to avoid collisions\n      // instead of using a folder.\n      const prefix = Math.random().toString(RADIX).slice(SKIP_WHOLE_NUM);\n      const path = `${uid}/${PHOTO_DIR}/${prefix}-${file.name}`;\n      const storageRef = ref(this._storage, path);\n      const task = uploadBytesResumable(storageRef, file);\n      this._taskSubject$.next(task);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Quiz.html":{"url":"interfaces/Quiz.html","title":"interface - Quiz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Quiz\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/quizzes/quiz.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Public interface for Quiz objects outside of this Service.\n\n            \n\n            \n                Extends\n            \n            \n                            QuizPayload\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Original creation date, not to be modified.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    DocumentReference id for tracking unique objects.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Modification date, updated automatically by the converter.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FirebaseError } from '@angular/fire/app';\nimport {\n  addDoc,\n  collection,\n  collectionData,\n  deleteDoc,\n  doc,\n  docData,\n  FieldValue,\n  Firestore,\n  or,\n  orderBy,\n  query,\n  Timestamp,\n  updateDoc,\n  where,\n} from '@angular/fire/firestore';\nimport type {\n  CollectionReference,\n  FirestoreDataConverter,\n  QueryDocumentSnapshot,\n  SetOptions,\n  SnapshotOptions,\n  WithFieldValue,\n} from '@angular/fire/firestore';\nimport { catchError, of } from 'rxjs';\nimport type { Observable } from 'rxjs';\n\n/** Public interface for Quiz objects outside of this Service. */\nexport interface Quiz extends QuizPayload {\n  /** DocumentReference id for tracking unique objects. */\n  readonly id: string;\n  /** Original creation date, not to be modified. */\n  readonly createdAt: Date;\n  /** Modification date, updated automatically by the converter. */\n  readonly updatedAt: Date;\n}\n\n/** Firestore DocumentData compatible model for the database. */\ninterface QuizModel extends QuizPayload {\n  /** Original creation date, not to be modified. */\n  readonly createdAt: Timestamp;\n  /** Modification date, updated automatically by the converter. */\n  readonly updatedAt: Timestamp;\n}\n\n/** Quiz fields that can be altered by Users. */\ninterface QuizPayload {\n  /** User ID of Quiz creator. */\n  readonly owner: string;\n  /** Quizzes that are shared with other users. */\n  readonly shared: boolean;\n  /** Display title, automatically set for new  Quiz, but can be modified. */\n  readonly title: string;\n}\n\n/**\n * FirestoreDataConverter uses WithFieldValue for toFirestore, which climbs inside of the Date object\n * and messes with all of the type signatures. So this method is over engineered to try and handle\n * that unlikely case that the date is neither a FieldValue nor a Date.\n */\nconst timestampFromDate = (date: FieldValue | WithFieldValue): FieldValue | WithFieldValue => {\n  if (date instanceof FieldValue) {\n    return date;\n  }\n  if (date instanceof Date) {\n    return Timestamp.fromDate(date);\n  }\n  // This will never be thrown since the `date` value is either a Date or a FieldValue (unless\n  // something goes terribly wrong). I opened a ticket about how `WithFieldValue` mangles inner class\n  // types: https://github.com/googleapis/nodejs-firestore/issues/2291\n  throw new TypeError(`Unknown type ${typeof date}`);\n};\n\n/**\n * In order to set the types correctly on the CollectionReference we need to use a FirestoreDataConverter\n * to manipulate the types.\n *\n * At the same time we can perform other actions like converting Timestamps to Dates and adding the\n * document id.\n */\nconst converter: FirestoreDataConverter = {\n  /**\n   * Convert the model from the database into the type expected by consumers.\n   * Timestamps should all be converted into Dates.\n   * Add the Document ID.\n   */\n  fromFirestore: (snapshot: QueryDocumentSnapshot, options: SnapshotOptions): Quiz => {\n    const data = snapshot.data(options);\n    return {\n      ...data,\n      id: snapshot.id,\n      createdAt: data.createdAt.toDate(),\n      updatedAt: data.updatedAt.toDate(),\n    };\n  },\n\n  /**\n   * This is a much less useful converter as it doesn't apply to updateDoc.\n   * It's only purpose is to change the Type, if it wasn't here then things would work better but\n   */\n  toFirestore: (quiz: WithFieldValue, _options?: SetOptions): WithFieldValue => {\n    const payload: WithFieldValue = {\n      ...quiz,\n      createdAt: timestampFromDate(quiz.createdAt),\n      updatedAt: timestampFromDate(quiz.updatedAt),\n    };\n    return payload;\n  },\n};\n\n// Only exported for testing.\nexport const COLLECTION_NAME = 'quizzes';\n\n/**\n * Manage Quizes owned by a user. Users can edit Quizzes owned by their ID, and can view Quizzes that\n * they own or are shared.\n *\n * Note: I could have injected `USER$` here to automatically get the correct owner ID, however I've\n * done that in the past in another project and it got complicated to understand, especially for\n * some of the newer developers.\n */\n@Injectable({ providedIn: 'root' })\nexport class QuizService {\n  private readonly _firestore: Firestore;\n  private readonly _quizCollection: CollectionReference;\n\n  constructor() {\n    this._firestore = inject(Firestore);\n    this._quizCollection = collection(this._firestore, COLLECTION_NAME).withConverter(converter);\n  }\n\n  /**\n   * Creates a new quiz with default data including a title based on the current date, and the\n   * creation timestamp.\n   * @returns the new document id\n   */\n  public async create(owner: string): Promise {\n    const now = new Date();\n    const newQuizData: QuizPayload & Pick = {\n      createdAt: now,\n      owner,\n      shared: false,\n      title: `New Quiz ${now.toDateString()}`,\n      updatedAt: now,\n    };\n\n    const reference = await addDoc(this._quizCollection, newQuizData);\n    return reference.id;\n  }\n\n  /** Deletes the quiz by document id */\n  public async delete(id: string): Promise {\n    const reference = doc(this._quizCollection, id);\n    return deleteDoc(reference);\n  }\n\n  /** Fetches the quiz by document id */\n  public getById(id: string): Observable {\n    const reference = doc(this._quizCollection, id);\n    // Not using { idField: 'id' } because the converter already handles that.\n    return docData(reference);\n  }\n\n  /**\n   * List of all Quizzes accessible to the owner.\n   * Includes both those owned by the current user id (owner parameter), and those that are shared.\n   */\n  public list(owner: string): Observable {\n    const listQuery = query(\n      this._quizCollection,\n      or(\n        where('owner', '==', owner),\n        where('shared', '==', true),\n      ),\n      orderBy('updatedAt', 'desc'),\n    );\n    // Not using { idField: 'id' } because the converter already handles that.\n    return collectionData(listQuery).pipe(\n      // If the user has no accessable quizzes, then that appears as a permission-denied error.\n      // Instead return an empty array so the Observble emits instead of errors.\n      catchError((problem: unknown): Observable => {\n        if (problem instanceof FirebaseError && problem.code === 'permission-denied') {\n          return of([]);\n        }\n\n        throw problem;\n      }),\n    );\n  }\n\n  /**\n   * Updates the quiz by document id.\n   * Only Quizes owned by the owner can be updated.\n   */\n  public async update(id: string, payload: Partial): Promise {\n    const reference = doc(this._quizCollection, id);\n    // converter.toFirestore is not applied to this payload automatically!\n    return updateDoc(reference, { ...payload, updatedAt: Timestamp.now() });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizEditorComponent.html":{"url":"components/QuizEditorComponent.html","title":"component - QuizEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuizEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quizzes/editor/editor.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editor\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./editor.component.html\n            \n\n\n\n            \n                styleUrl\n                ./editor.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [],\n  selector: 'app-editor',\n  styleUrl: './editor.component.scss',\n  templateUrl: './editor.component.html',\n})\nexport class QuizEditorComponent {\n\n}\n\n    \n\n    \n        editor works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'editor works!'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizListComponent.html":{"url":"components/QuizListComponent.html","title":"component - QuizListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuizListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quizzes/list/list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                            DatePipe\n                                SpinnerComponent\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./list.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Private\n                                    Readonly\n                                _service\n                            \n                            \n                                    Public\n                                    Readonly\n                                $blockWindow\n                            \n                            \n                                    Public\n                                    Readonly\n                                vm$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createNewQuiz\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/quizzes/list/list.component.ts:44\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createNewQuiz\n                        \n                    \n                \n            \n            \n                \n                        \n                    createNewQuiz(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/quizzes/list/list.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quizzes/list/list.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QuizService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quizzes/list/list.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $blockWindow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quizzes/list/list.component.ts:39\n                        \n                    \n\n            \n                \n                    Displays a modal spinner while creating a new Quiz.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        vm$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quizzes/list/list.component.ts:41\n                        \n                    \n\n            \n                \n                    List of all Quizzes accessible to the user, and the user.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe, DatePipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { WritableSignal } from '@angular/core';\nimport { Router, RouterLink } from '@angular/router';\nimport { filter, map, switchMap } from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser, User } from '@app/core/user.token';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { QuizService } from '../quiz.service';\nimport type { Quiz } from '../quiz.service';\n\ninterface ViewModel {\n  quizzes: Quiz[];\n  user: User;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    DatePipe,\n    SpinnerComponent,\n    RouterLink,\n  ],\n  selector: 'app-list',\n  styleUrl: './list.component.scss',\n  templateUrl: './list.component.html',\n})\nexport class QuizListComponent {\n  /** Displays a modal spinner while creating a new Quiz. */\n  public readonly $blockWindow: WritableSignal;\n  /** List of all Quizzes accessible to the user, and the user. */\n  public readonly vm$: Observable;\n\n  private readonly _router: Router;\n  private readonly _service: QuizService;\n\n  constructor() {\n    this._router = inject(Router);\n    this._service = inject(QuizService);\n\n    this.$blockWindow = signal(false);\n\n    // Not handling non-logged in users because the Route guards should.\n    this.vm$ = inject(USER$).pipe(\n      filter((user: MaybeUser): user is User => user != undefined),\n      switchMap((user: User): Observable => this._service.list(user.uid).pipe(\n        map((quizzes: Quiz[]): ViewModel => ({ quizzes, user })),\n      )),\n    );\n  }\n\n  public async createNewQuiz(userId: string): Promise {\n    this.$blockWindow.set(true);\n    const quizId = await this._service.create(userId);\n    await this._router.navigate([ 'quizzes', quizId, 'edit' ]);\n  }\n}\n\n    \n\n    \n        @if (vm$ | async; as vm) {\n  Your Quizzes\n\n  \n    Create a new quiz\n  \n\n  @if (vm.quizzes.length > 0) {\n    \n      @for (quiz of vm.quizzes; track quiz.id) {\n        \n          {{ quiz.title }}\n          \n            (Updated {{ quiz.updatedAt | date:'short' }})\n          \n          @if (quiz.owner === vm.user.uid) {\n            Edit\n          } @else {\n            (shared with you)\n            &ngsp;\n            View\n          }\n        \n      }\n    \n  } @else {\n    \n      You have no quizzes available currently\n    \n  }\n} @else {\n  \n}\n\n@if ($blockWindow()) {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (vm$ | async; as vm) {  Your Quizzes      Create a new quiz    @if (vm.quizzes.length > 0) {          @for (quiz of vm.quizzes; track quiz.id) {                  {{ quiz.title }}                      (Updated {{ quiz.updatedAt | date:\\'short\\' }})                    @if (quiz.owner === vm.user.uid) {            Edit          } @else {            (shared with you)            &ngsp;            View          }              }      } @else {          You have no quizzes available currently      }} @else {  }@if ($blockWindow()) {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuizModel.html":{"url":"interfaces/QuizModel.html","title":"interface - QuizModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QuizModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/quizzes/quiz.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Firestore DocumentData compatible model for the database.\n\n            \n\n            \n                Extends\n            \n            \n                            QuizPayload\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:     Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Original creation date, not to be modified.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:     Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Modification date, updated automatically by the converter.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FirebaseError } from '@angular/fire/app';\nimport {\n  addDoc,\n  collection,\n  collectionData,\n  deleteDoc,\n  doc,\n  docData,\n  FieldValue,\n  Firestore,\n  or,\n  orderBy,\n  query,\n  Timestamp,\n  updateDoc,\n  where,\n} from '@angular/fire/firestore';\nimport type {\n  CollectionReference,\n  FirestoreDataConverter,\n  QueryDocumentSnapshot,\n  SetOptions,\n  SnapshotOptions,\n  WithFieldValue,\n} from '@angular/fire/firestore';\nimport { catchError, of } from 'rxjs';\nimport type { Observable } from 'rxjs';\n\n/** Public interface for Quiz objects outside of this Service. */\nexport interface Quiz extends QuizPayload {\n  /** DocumentReference id for tracking unique objects. */\n  readonly id: string;\n  /** Original creation date, not to be modified. */\n  readonly createdAt: Date;\n  /** Modification date, updated automatically by the converter. */\n  readonly updatedAt: Date;\n}\n\n/** Firestore DocumentData compatible model for the database. */\ninterface QuizModel extends QuizPayload {\n  /** Original creation date, not to be modified. */\n  readonly createdAt: Timestamp;\n  /** Modification date, updated automatically by the converter. */\n  readonly updatedAt: Timestamp;\n}\n\n/** Quiz fields that can be altered by Users. */\ninterface QuizPayload {\n  /** User ID of Quiz creator. */\n  readonly owner: string;\n  /** Quizzes that are shared with other users. */\n  readonly shared: boolean;\n  /** Display title, automatically set for new  Quiz, but can be modified. */\n  readonly title: string;\n}\n\n/**\n * FirestoreDataConverter uses WithFieldValue for toFirestore, which climbs inside of the Date object\n * and messes with all of the type signatures. So this method is over engineered to try and handle\n * that unlikely case that the date is neither a FieldValue nor a Date.\n */\nconst timestampFromDate = (date: FieldValue | WithFieldValue): FieldValue | WithFieldValue => {\n  if (date instanceof FieldValue) {\n    return date;\n  }\n  if (date instanceof Date) {\n    return Timestamp.fromDate(date);\n  }\n  // This will never be thrown since the `date` value is either a Date or a FieldValue (unless\n  // something goes terribly wrong). I opened a ticket about how `WithFieldValue` mangles inner class\n  // types: https://github.com/googleapis/nodejs-firestore/issues/2291\n  throw new TypeError(`Unknown type ${typeof date}`);\n};\n\n/**\n * In order to set the types correctly on the CollectionReference we need to use a FirestoreDataConverter\n * to manipulate the types.\n *\n * At the same time we can perform other actions like converting Timestamps to Dates and adding the\n * document id.\n */\nconst converter: FirestoreDataConverter = {\n  /**\n   * Convert the model from the database into the type expected by consumers.\n   * Timestamps should all be converted into Dates.\n   * Add the Document ID.\n   */\n  fromFirestore: (snapshot: QueryDocumentSnapshot, options: SnapshotOptions): Quiz => {\n    const data = snapshot.data(options);\n    return {\n      ...data,\n      id: snapshot.id,\n      createdAt: data.createdAt.toDate(),\n      updatedAt: data.updatedAt.toDate(),\n    };\n  },\n\n  /**\n   * This is a much less useful converter as it doesn't apply to updateDoc.\n   * It's only purpose is to change the Type, if it wasn't here then things would work better but\n   */\n  toFirestore: (quiz: WithFieldValue, _options?: SetOptions): WithFieldValue => {\n    const payload: WithFieldValue = {\n      ...quiz,\n      createdAt: timestampFromDate(quiz.createdAt),\n      updatedAt: timestampFromDate(quiz.updatedAt),\n    };\n    return payload;\n  },\n};\n\n// Only exported for testing.\nexport const COLLECTION_NAME = 'quizzes';\n\n/**\n * Manage Quizes owned by a user. Users can edit Quizzes owned by their ID, and can view Quizzes that\n * they own or are shared.\n *\n * Note: I could have injected `USER$` here to automatically get the correct owner ID, however I've\n * done that in the past in another project and it got complicated to understand, especially for\n * some of the newer developers.\n */\n@Injectable({ providedIn: 'root' })\nexport class QuizService {\n  private readonly _firestore: Firestore;\n  private readonly _quizCollection: CollectionReference;\n\n  constructor() {\n    this._firestore = inject(Firestore);\n    this._quizCollection = collection(this._firestore, COLLECTION_NAME).withConverter(converter);\n  }\n\n  /**\n   * Creates a new quiz with default data including a title based on the current date, and the\n   * creation timestamp.\n   * @returns the new document id\n   */\n  public async create(owner: string): Promise {\n    const now = new Date();\n    const newQuizData: QuizPayload & Pick = {\n      createdAt: now,\n      owner,\n      shared: false,\n      title: `New Quiz ${now.toDateString()}`,\n      updatedAt: now,\n    };\n\n    const reference = await addDoc(this._quizCollection, newQuizData);\n    return reference.id;\n  }\n\n  /** Deletes the quiz by document id */\n  public async delete(id: string): Promise {\n    const reference = doc(this._quizCollection, id);\n    return deleteDoc(reference);\n  }\n\n  /** Fetches the quiz by document id */\n  public getById(id: string): Observable {\n    const reference = doc(this._quizCollection, id);\n    // Not using { idField: 'id' } because the converter already handles that.\n    return docData(reference);\n  }\n\n  /**\n   * List of all Quizzes accessible to the owner.\n   * Includes both those owned by the current user id (owner parameter), and those that are shared.\n   */\n  public list(owner: string): Observable {\n    const listQuery = query(\n      this._quizCollection,\n      or(\n        where('owner', '==', owner),\n        where('shared', '==', true),\n      ),\n      orderBy('updatedAt', 'desc'),\n    );\n    // Not using { idField: 'id' } because the converter already handles that.\n    return collectionData(listQuery).pipe(\n      // If the user has no accessable quizzes, then that appears as a permission-denied error.\n      // Instead return an empty array so the Observble emits instead of errors.\n      catchError((problem: unknown): Observable => {\n        if (problem instanceof FirebaseError && problem.code === 'permission-denied') {\n          return of([]);\n        }\n\n        throw problem;\n      }),\n    );\n  }\n\n  /**\n   * Updates the quiz by document id.\n   * Only Quizes owned by the owner can be updated.\n   */\n  public async update(id: string, payload: Partial): Promise {\n    const reference = doc(this._quizCollection, id);\n    // converter.toFirestore is not applied to this payload automatically!\n    return updateDoc(reference, { ...payload, updatedAt: Timestamp.now() });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuizPayload.html":{"url":"interfaces/QuizPayload.html","title":"interface - QuizPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QuizPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/quizzes/quiz.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Quiz fields that can be altered by Users.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            owner\n                                        \n                                \n                                \n                                        \n                                            shared\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User ID of Quiz creator.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shared\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shared:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Quizzes that are shared with other users.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Display title, automatically set for new  Quiz, but can be modified.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FirebaseError } from '@angular/fire/app';\nimport {\n  addDoc,\n  collection,\n  collectionData,\n  deleteDoc,\n  doc,\n  docData,\n  FieldValue,\n  Firestore,\n  or,\n  orderBy,\n  query,\n  Timestamp,\n  updateDoc,\n  where,\n} from '@angular/fire/firestore';\nimport type {\n  CollectionReference,\n  FirestoreDataConverter,\n  QueryDocumentSnapshot,\n  SetOptions,\n  SnapshotOptions,\n  WithFieldValue,\n} from '@angular/fire/firestore';\nimport { catchError, of } from 'rxjs';\nimport type { Observable } from 'rxjs';\n\n/** Public interface for Quiz objects outside of this Service. */\nexport interface Quiz extends QuizPayload {\n  /** DocumentReference id for tracking unique objects. */\n  readonly id: string;\n  /** Original creation date, not to be modified. */\n  readonly createdAt: Date;\n  /** Modification date, updated automatically by the converter. */\n  readonly updatedAt: Date;\n}\n\n/** Firestore DocumentData compatible model for the database. */\ninterface QuizModel extends QuizPayload {\n  /** Original creation date, not to be modified. */\n  readonly createdAt: Timestamp;\n  /** Modification date, updated automatically by the converter. */\n  readonly updatedAt: Timestamp;\n}\n\n/** Quiz fields that can be altered by Users. */\ninterface QuizPayload {\n  /** User ID of Quiz creator. */\n  readonly owner: string;\n  /** Quizzes that are shared with other users. */\n  readonly shared: boolean;\n  /** Display title, automatically set for new  Quiz, but can be modified. */\n  readonly title: string;\n}\n\n/**\n * FirestoreDataConverter uses WithFieldValue for toFirestore, which climbs inside of the Date object\n * and messes with all of the type signatures. So this method is over engineered to try and handle\n * that unlikely case that the date is neither a FieldValue nor a Date.\n */\nconst timestampFromDate = (date: FieldValue | WithFieldValue): FieldValue | WithFieldValue => {\n  if (date instanceof FieldValue) {\n    return date;\n  }\n  if (date instanceof Date) {\n    return Timestamp.fromDate(date);\n  }\n  // This will never be thrown since the `date` value is either a Date or a FieldValue (unless\n  // something goes terribly wrong). I opened a ticket about how `WithFieldValue` mangles inner class\n  // types: https://github.com/googleapis/nodejs-firestore/issues/2291\n  throw new TypeError(`Unknown type ${typeof date}`);\n};\n\n/**\n * In order to set the types correctly on the CollectionReference we need to use a FirestoreDataConverter\n * to manipulate the types.\n *\n * At the same time we can perform other actions like converting Timestamps to Dates and adding the\n * document id.\n */\nconst converter: FirestoreDataConverter = {\n  /**\n   * Convert the model from the database into the type expected by consumers.\n   * Timestamps should all be converted into Dates.\n   * Add the Document ID.\n   */\n  fromFirestore: (snapshot: QueryDocumentSnapshot, options: SnapshotOptions): Quiz => {\n    const data = snapshot.data(options);\n    return {\n      ...data,\n      id: snapshot.id,\n      createdAt: data.createdAt.toDate(),\n      updatedAt: data.updatedAt.toDate(),\n    };\n  },\n\n  /**\n   * This is a much less useful converter as it doesn't apply to updateDoc.\n   * It's only purpose is to change the Type, if it wasn't here then things would work better but\n   */\n  toFirestore: (quiz: WithFieldValue, _options?: SetOptions): WithFieldValue => {\n    const payload: WithFieldValue = {\n      ...quiz,\n      createdAt: timestampFromDate(quiz.createdAt),\n      updatedAt: timestampFromDate(quiz.updatedAt),\n    };\n    return payload;\n  },\n};\n\n// Only exported for testing.\nexport const COLLECTION_NAME = 'quizzes';\n\n/**\n * Manage Quizes owned by a user. Users can edit Quizzes owned by their ID, and can view Quizzes that\n * they own or are shared.\n *\n * Note: I could have injected `USER$` here to automatically get the correct owner ID, however I've\n * done that in the past in another project and it got complicated to understand, especially for\n * some of the newer developers.\n */\n@Injectable({ providedIn: 'root' })\nexport class QuizService {\n  private readonly _firestore: Firestore;\n  private readonly _quizCollection: CollectionReference;\n\n  constructor() {\n    this._firestore = inject(Firestore);\n    this._quizCollection = collection(this._firestore, COLLECTION_NAME).withConverter(converter);\n  }\n\n  /**\n   * Creates a new quiz with default data including a title based on the current date, and the\n   * creation timestamp.\n   * @returns the new document id\n   */\n  public async create(owner: string): Promise {\n    const now = new Date();\n    const newQuizData: QuizPayload & Pick = {\n      createdAt: now,\n      owner,\n      shared: false,\n      title: `New Quiz ${now.toDateString()}`,\n      updatedAt: now,\n    };\n\n    const reference = await addDoc(this._quizCollection, newQuizData);\n    return reference.id;\n  }\n\n  /** Deletes the quiz by document id */\n  public async delete(id: string): Promise {\n    const reference = doc(this._quizCollection, id);\n    return deleteDoc(reference);\n  }\n\n  /** Fetches the quiz by document id */\n  public getById(id: string): Observable {\n    const reference = doc(this._quizCollection, id);\n    // Not using { idField: 'id' } because the converter already handles that.\n    return docData(reference);\n  }\n\n  /**\n   * List of all Quizzes accessible to the owner.\n   * Includes both those owned by the current user id (owner parameter), and those that are shared.\n   */\n  public list(owner: string): Observable {\n    const listQuery = query(\n      this._quizCollection,\n      or(\n        where('owner', '==', owner),\n        where('shared', '==', true),\n      ),\n      orderBy('updatedAt', 'desc'),\n    );\n    // Not using { idField: 'id' } because the converter already handles that.\n    return collectionData(listQuery).pipe(\n      // If the user has no accessable quizzes, then that appears as a permission-denied error.\n      // Instead return an empty array so the Observble emits instead of errors.\n      catchError((problem: unknown): Observable => {\n        if (problem instanceof FirebaseError && problem.code === 'permission-denied') {\n          return of([]);\n        }\n\n        throw problem;\n      }),\n    );\n  }\n\n  /**\n   * Updates the quiz by document id.\n   * Only Quizes owned by the owner can be updated.\n   */\n  public async update(id: string, payload: Partial): Promise {\n    const reference = doc(this._quizCollection, id);\n    // converter.toFirestore is not applied to this payload automatically!\n    return updateDoc(reference, { ...payload, updatedAt: Timestamp.now() });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizPresenterComponent.html":{"url":"components/QuizPresenterComponent.html","title":"component - QuizPresenterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuizPresenterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quizzes/presenter/presenter.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-presenter\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./presenter.component.html\n            \n\n\n\n            \n                styleUrl\n                ./presenter.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [],\n  selector: 'app-presenter',\n  styleUrl: './presenter.component.scss',\n  templateUrl: './presenter.component.html',\n})\nexport class QuizPresenterComponent {\n\n}\n\n    \n\n    \n        presenter works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'presenter works!'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizPresenterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizService.html":{"url":"injectables/QuizService.html","title":"injectable - QuizService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/quizzes/quiz.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Manage Quizes owned by a user. Users can edit Quizzes owned by their ID, and can view Quizzes that\nthey own or are shared.\nNote: I could have injected USER$ here to automatically get the correct owner ID, however I've\ndone that in the past in another project and it got complicated to understand, especially for\nsome of the newer developers.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _firestore\n                            \n                            \n                                    Private\n                                    Readonly\n                                _quizCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                getById\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/quizzes/quiz.service.ts:127\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(owner: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/quizzes/quiz.service.ts:139\n                        \n                    \n\n\n            \n                \n                        Creates a new quiz with default data including a title based on the current date, and the\ncreation timestamp.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                owner\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                the new document id\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/quizzes/quiz.service.ts:154\n                        \n                    \n\n\n            \n                \n                        Deletes the quiz by document id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/quizzes/quiz.service.ts:160\n                        \n                    \n\n\n            \n                \n                        Fetches the quiz by document id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                        \n                    list(owner: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/quizzes/quiz.service.ts:170\n                        \n                    \n\n\n            \n                \n                        List of all Quizzes accessible to the owner.\nIncludes both those owned by the current user id (owner parameter), and those that are shared.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                owner\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/quizzes/quiz.service.ts:197\n                        \n                    \n\n\n            \n                \n                        Updates the quiz by document id.\nOnly Quizes owned by the owner can be updated.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quizzes/quiz.service.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _quizCollection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CollectionReference\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quizzes/quiz.service.ts:127\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FirebaseError } from '@angular/fire/app';\nimport {\n  addDoc,\n  collection,\n  collectionData,\n  deleteDoc,\n  doc,\n  docData,\n  FieldValue,\n  Firestore,\n  or,\n  orderBy,\n  query,\n  Timestamp,\n  updateDoc,\n  where,\n} from '@angular/fire/firestore';\nimport type {\n  CollectionReference,\n  FirestoreDataConverter,\n  QueryDocumentSnapshot,\n  SetOptions,\n  SnapshotOptions,\n  WithFieldValue,\n} from '@angular/fire/firestore';\nimport { catchError, of } from 'rxjs';\nimport type { Observable } from 'rxjs';\n\n/** Public interface for Quiz objects outside of this Service. */\nexport interface Quiz extends QuizPayload {\n  /** DocumentReference id for tracking unique objects. */\n  readonly id: string;\n  /** Original creation date, not to be modified. */\n  readonly createdAt: Date;\n  /** Modification date, updated automatically by the converter. */\n  readonly updatedAt: Date;\n}\n\n/** Firestore DocumentData compatible model for the database. */\ninterface QuizModel extends QuizPayload {\n  /** Original creation date, not to be modified. */\n  readonly createdAt: Timestamp;\n  /** Modification date, updated automatically by the converter. */\n  readonly updatedAt: Timestamp;\n}\n\n/** Quiz fields that can be altered by Users. */\ninterface QuizPayload {\n  /** User ID of Quiz creator. */\n  readonly owner: string;\n  /** Quizzes that are shared with other users. */\n  readonly shared: boolean;\n  /** Display title, automatically set for new  Quiz, but can be modified. */\n  readonly title: string;\n}\n\n/**\n * FirestoreDataConverter uses WithFieldValue for toFirestore, which climbs inside of the Date object\n * and messes with all of the type signatures. So this method is over engineered to try and handle\n * that unlikely case that the date is neither a FieldValue nor a Date.\n */\nconst timestampFromDate = (date: FieldValue | WithFieldValue): FieldValue | WithFieldValue => {\n  if (date instanceof FieldValue) {\n    return date;\n  }\n  if (date instanceof Date) {\n    return Timestamp.fromDate(date);\n  }\n  // This will never be thrown since the `date` value is either a Date or a FieldValue (unless\n  // something goes terribly wrong). I opened a ticket about how `WithFieldValue` mangles inner class\n  // types: https://github.com/googleapis/nodejs-firestore/issues/2291\n  throw new TypeError(`Unknown type ${typeof date}`);\n};\n\n/**\n * In order to set the types correctly on the CollectionReference we need to use a FirestoreDataConverter\n * to manipulate the types.\n *\n * At the same time we can perform other actions like converting Timestamps to Dates and adding the\n * document id.\n */\nconst converter: FirestoreDataConverter = {\n  /**\n   * Convert the model from the database into the type expected by consumers.\n   * Timestamps should all be converted into Dates.\n   * Add the Document ID.\n   */\n  fromFirestore: (snapshot: QueryDocumentSnapshot, options: SnapshotOptions): Quiz => {\n    const data = snapshot.data(options);\n    return {\n      ...data,\n      id: snapshot.id,\n      createdAt: data.createdAt.toDate(),\n      updatedAt: data.updatedAt.toDate(),\n    };\n  },\n\n  /**\n   * This is a much less useful converter as it doesn't apply to updateDoc.\n   * It's only purpose is to change the Type, if it wasn't here then things would work better but\n   */\n  toFirestore: (quiz: WithFieldValue, _options?: SetOptions): WithFieldValue => {\n    const payload: WithFieldValue = {\n      ...quiz,\n      createdAt: timestampFromDate(quiz.createdAt),\n      updatedAt: timestampFromDate(quiz.updatedAt),\n    };\n    return payload;\n  },\n};\n\n// Only exported for testing.\nexport const COLLECTION_NAME = 'quizzes';\n\n/**\n * Manage Quizes owned by a user. Users can edit Quizzes owned by their ID, and can view Quizzes that\n * they own or are shared.\n *\n * Note: I could have injected `USER$` here to automatically get the correct owner ID, however I've\n * done that in the past in another project and it got complicated to understand, especially for\n * some of the newer developers.\n */\n@Injectable({ providedIn: 'root' })\nexport class QuizService {\n  private readonly _firestore: Firestore;\n  private readonly _quizCollection: CollectionReference;\n\n  constructor() {\n    this._firestore = inject(Firestore);\n    this._quizCollection = collection(this._firestore, COLLECTION_NAME).withConverter(converter);\n  }\n\n  /**\n   * Creates a new quiz with default data including a title based on the current date, and the\n   * creation timestamp.\n   * @returns the new document id\n   */\n  public async create(owner: string): Promise {\n    const now = new Date();\n    const newQuizData: QuizPayload & Pick = {\n      createdAt: now,\n      owner,\n      shared: false,\n      title: `New Quiz ${now.toDateString()}`,\n      updatedAt: now,\n    };\n\n    const reference = await addDoc(this._quizCollection, newQuizData);\n    return reference.id;\n  }\n\n  /** Deletes the quiz by document id */\n  public async delete(id: string): Promise {\n    const reference = doc(this._quizCollection, id);\n    return deleteDoc(reference);\n  }\n\n  /** Fetches the quiz by document id */\n  public getById(id: string): Observable {\n    const reference = doc(this._quizCollection, id);\n    // Not using { idField: 'id' } because the converter already handles that.\n    return docData(reference);\n  }\n\n  /**\n   * List of all Quizzes accessible to the owner.\n   * Includes both those owned by the current user id (owner parameter), and those that are shared.\n   */\n  public list(owner: string): Observable {\n    const listQuery = query(\n      this._quizCollection,\n      or(\n        where('owner', '==', owner),\n        where('shared', '==', true),\n      ),\n      orderBy('updatedAt', 'desc'),\n    );\n    // Not using { idField: 'id' } because the converter already handles that.\n    return collectionData(listQuery).pipe(\n      // If the user has no accessable quizzes, then that appears as a permission-denied error.\n      // Instead return an empty array so the Observble emits instead of errors.\n      catchError((problem: unknown): Observable => {\n        if (problem instanceof FirebaseError && problem.code === 'permission-denied') {\n          return of([]);\n        }\n\n        throw problem;\n      }),\n    );\n  }\n\n  /**\n   * Updates the quiz by document id.\n   * Only Quizes owned by the owner can be updated.\n   */\n  public async update(id: string, payload: Partial): Promise {\n    const reference = doc(this._quizCollection, id);\n    // converter.toFirestore is not applied to this payload automatically!\n    return updateDoc(reference, { ...payload, updatedAt: Timestamp.now() });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecoverEmailComponent.html":{"url":"components/RecoverEmailComponent.html","title":"component - RecoverEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RecoverEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/recover-email/recover-email.component.ts\n\n\n\n    \n        Description\n    \n    \n        Reverts Firebase User email change.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recover-email\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                            RouterLink\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./recover-email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Private\n                                    Readonly\n                                _service\n                            \n                            \n                                    Public\n                                    Readonly\n                                vm$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/recover-email/recover-email.component.ts:35\n                            \n                        \n\n                \n                    \n                            Gets the current navigation statically to obtain the oobCode from Firebase needed to recover\nthe previous email address for the User.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/recover-email/recover-email.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RecoverEmailService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/recover-email/recover-email.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        vm$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/recover-email/recover-email.component.ts:32\n                        \n                    \n\n            \n                \n                    Observable wrapper around the template that performs the actual email recovery and displays the\nresults.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { Router, RouterLink } from '@angular/router';\nimport type { Observable } from 'rxjs';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { getState } from '../actions/get-state';\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { RecoverEmailService } from './recover-email.service';\nimport type { RecoverEmailResults } from './recover-email.service';\n\n/**\n * Reverts Firebase User email change.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    RouterLink,\n    SpinnerComponent,\n  ],\n  selector: 'app-recover-email',\n  templateUrl: './recover-email.component.html',\n})\nexport class RecoverEmailComponent {\n  /**\n   * Observable wrapper around the template that performs the actual email recovery and displays the\n   * results.\n   */\n  public readonly vm$: Observable;\n\n  private readonly _router: Router;\n  private readonly _service: RecoverEmailService;\n\n  /**\n   * Gets the current navigation statically to obtain the oobCode from Firebase needed to recover\n   * the previous email address for the User.\n   */\n  constructor() {\n    this._router = inject(Router);\n    this._service = inject(RecoverEmailService);\n\n    const { oobCode } = getState(this._router.getCurrentNavigation());\n    this.vm$ = this._service.recoverEmail$(oobCode);\n  }\n}\n\n    \n\n    \n        @if (vm$ | async; as vm) {\n  \n    @if (vm.successful) {\n      \n        Your email has been restored!\n      \n      @if (vm.restoredEmail) {\n        \n          Your email has been restored to {{ vm.restoredEmail }}.\n        \n      }\n      @if (vm.passwordResetSent) {\n        \n          Additionally we have sent you a link to reset your password in the event your account was compromised.\n        \n      } @else {\n        \n          In the event your account was compromised, please\n          reset your password.\n        \n      }\n      \n        Continue\n      \n    } @else {\n      \n        There was a problem with your restoration link\n      \n      \n        \n      \n      \n        Please\n        contact support\n        for assistance.\n      \n    }\n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (vm$ | async; as vm) {      @if (vm.successful) {              Your email has been restored!            @if (vm.restoredEmail) {                  Your email has been restored to {{ vm.restoredEmail }}.              }      @if (vm.passwordResetSent) {                  Additionally we have sent you a link to reset your password in the event your account was compromised.              } @else {                  In the event your account was compromised, please          reset your password.              }              Continue          } @else {              There was a problem with your restoration link                                        Please        contact support        for assistance.          }  } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecoverEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RecoverEmailResults.html":{"url":"interfaces/RecoverEmailResults.html","title":"interface - RecoverEmailResults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RecoverEmailResults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/recover-email/recover-email.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Combined model of email recovery results and sending password reset.\n\n            \n\n            \n                Extends\n            \n            \n                            ApplyResult\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                        \n                                            passwordResetSent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Firebase response error code, if any.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passwordResetSent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passwordResetSent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates if the password reset email was sent on succesful email recovery.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport {\n  applyActionCode,\n  Auth,\n  checkActionCode,\n  sendPasswordResetEmail,\n} from '@angular/fire/auth';\nimport {\n  catchError,\n  delayWhen,\n  of,\n  switchMap,\n  timer,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { getErrorCode } from '../error-code';\n\n/** Combined model of email recovery results and sending password reset. */\nexport interface RecoverEmailResults extends ApplyResult {\n  /** Firebase response error code, if any. */\n  readonly errorCode?: string;\n  /** Indicates if the password reset email was sent on succesful email recovery. */\n  readonly passwordResetSent: boolean;\n}\n\n/** Results of email recovery. */\ninterface ApplyResult {\n  /** User original email address to be recovered, from Firebase oobCode. */\n  readonly restoredEmail: string | undefined;\n  /** Results of applying the oobCode to recover the account's original email address. */\n  readonly successful: boolean;\n}\n\n/** Sending the password reset email needs to wait until Firebase recognizes the email recovery. Milliseconds */\nexport const SEND_EMAIL_DELAY = 500;\n\n/**\n * Handles both recovering email oobCodes and sending the password reset email afterwards.\n */\n@Injectable({ providedIn: 'root' })\nexport class RecoverEmailService {\n  private readonly _auth: Auth = inject(Auth);\n\n  /**\n   * Creates and Observable that when subscribed to will apply the action code to restore the user's\n   * original email address. And if present will automatically send a password reset email to the\n   * restored address in case of account compromise.\n   *\n   * @param delay - Not for production use! Only for use with testing.\n   */\n  public recoverEmail$(code: string | undefined, delay: number = SEND_EMAIL_DELAY): Observable {\n    return of(code).pipe(\n      switchMap(async (oobCode: string | undefined): Promise => this._doActionCode(oobCode)),\n      // Unfortunately it can take time for Firebase to recognize that the email has been restored\n      // so we can send the password reset email.\n      delayWhen((result: ApplyResult): Observable => timer(result.restoredEmail ? delay : 0)),\n      // Give the user the option to reset their password in case the account was compromised:\n      switchMap(async (result: ApplyResult): Promise => {\n        const passwordResetSent = await this._sendPasswordResetEmail(result.restoredEmail);\n        return { ...result, passwordResetSent };\n      }),\n      // Using `err` here trips promise/prefer-await-to-callbacks, but other names don't\n      catchError((problem: unknown): Observable => {\n        console.error('RecoverEmailService', problem);\n\n        return of({\n          errorCode: getErrorCode(problem),\n          passwordResetSent: false,\n          restoredEmail: undefined,\n          successful: false,\n        });\n      }),\n    );\n  }\n\n  /**\n   * Check that the oobCode is still valid, and then apply it.\n   * @returns the restored email address and a success flag.\n   * @throws Error if the oobCode is falsy or the firebase methods fail.\n   */\n  private async _doActionCode(oobCode: string | undefined): Promise {\n    if (oobCode) {\n      const info = await checkActionCode(this._auth, oobCode);\n      const { email: restoredEmail } = info.data;\n\n      await applyActionCode(this._auth, oobCode);\n      // Account email reverted to restoredEmail\n\n      // Problem with being pedantic with all types except undefined vs null is that sometimes you\n      // need to get rid of null from the type.\n      return { restoredEmail: restoredEmail ?? undefined, successful: true };\n    }\n\n    throw new Error('oobCode not found');\n  }\n\n  /**\n   * Firebase types indicate that the email may not always be returned (Accounts without email addresses?)\n   * If the email isn't truthy then just skip the reset.\n   * If the send email fails for some reason, just return false.\n   */\n  private async _sendPasswordResetEmail(restoredEmail: string | undefined): Promise {\n    if (restoredEmail) {\n      try {\n        await sendPasswordResetEmail(this._auth, restoredEmail);\n        return true;\n      } catch (err: unknown) {\n        console.error('RecoverEmailService#_sendPasswordResetEmail', err);\n      }\n    }\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RecoverEmailService.html":{"url":"injectables/RecoverEmailService.html","title":"injectable - RecoverEmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RecoverEmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/recover-email/recover-email.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles both recovering email oobCodes and sending the password reset email afterwards.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _auth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                _doActionCode\n                            \n                            \n                                    Private\n                                    Async\n                                _sendPasswordResetEmail\n                            \n                            \n                                    Public\n                                recoverEmail$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _doActionCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    _doActionCode(oobCode: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/recover-email/recover-email.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Check that the oobCode is still valid, and then apply it.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oobCode\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                the restored email address and a success flag.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _sendPasswordResetEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    _sendPasswordResetEmail(restoredEmail: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/recover-email/recover-email.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Firebase types indicate that the email may not always be returned (Accounts without email addresses?)\nIf the email isn't truthy then just skip the reset.\nIf the send email fails for some reason, just return false.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                restoredEmail\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        recoverEmail$\n                        \n                    \n                \n            \n            \n                \n                        \n                    recoverEmail$(code: string | undefined, delay: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/recover-email/recover-email.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Creates and Observable that when subscribed to will apply the action code to restore the user's\noriginal email address. And if present will automatically send a password reset email to the\nrestored address in case of account compromise.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                delay\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    SEND_EMAIL_DELAY\n                                            \n\n                                            \n                                                    \nNot for production use! Only for use with testing.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Auth\n\n                    \n                \n                \n                    \n                        Default value : inject(Auth)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/recover-email/recover-email.service.ts:43\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport {\n  applyActionCode,\n  Auth,\n  checkActionCode,\n  sendPasswordResetEmail,\n} from '@angular/fire/auth';\nimport {\n  catchError,\n  delayWhen,\n  of,\n  switchMap,\n  timer,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { getErrorCode } from '../error-code';\n\n/** Combined model of email recovery results and sending password reset. */\nexport interface RecoverEmailResults extends ApplyResult {\n  /** Firebase response error code, if any. */\n  readonly errorCode?: string;\n  /** Indicates if the password reset email was sent on succesful email recovery. */\n  readonly passwordResetSent: boolean;\n}\n\n/** Results of email recovery. */\ninterface ApplyResult {\n  /** User original email address to be recovered, from Firebase oobCode. */\n  readonly restoredEmail: string | undefined;\n  /** Results of applying the oobCode to recover the account's original email address. */\n  readonly successful: boolean;\n}\n\n/** Sending the password reset email needs to wait until Firebase recognizes the email recovery. Milliseconds */\nexport const SEND_EMAIL_DELAY = 500;\n\n/**\n * Handles both recovering email oobCodes and sending the password reset email afterwards.\n */\n@Injectable({ providedIn: 'root' })\nexport class RecoverEmailService {\n  private readonly _auth: Auth = inject(Auth);\n\n  /**\n   * Creates and Observable that when subscribed to will apply the action code to restore the user's\n   * original email address. And if present will automatically send a password reset email to the\n   * restored address in case of account compromise.\n   *\n   * @param delay - Not for production use! Only for use with testing.\n   */\n  public recoverEmail$(code: string | undefined, delay: number = SEND_EMAIL_DELAY): Observable {\n    return of(code).pipe(\n      switchMap(async (oobCode: string | undefined): Promise => this._doActionCode(oobCode)),\n      // Unfortunately it can take time for Firebase to recognize that the email has been restored\n      // so we can send the password reset email.\n      delayWhen((result: ApplyResult): Observable => timer(result.restoredEmail ? delay : 0)),\n      // Give the user the option to reset their password in case the account was compromised:\n      switchMap(async (result: ApplyResult): Promise => {\n        const passwordResetSent = await this._sendPasswordResetEmail(result.restoredEmail);\n        return { ...result, passwordResetSent };\n      }),\n      // Using `err` here trips promise/prefer-await-to-callbacks, but other names don't\n      catchError((problem: unknown): Observable => {\n        console.error('RecoverEmailService', problem);\n\n        return of({\n          errorCode: getErrorCode(problem),\n          passwordResetSent: false,\n          restoredEmail: undefined,\n          successful: false,\n        });\n      }),\n    );\n  }\n\n  /**\n   * Check that the oobCode is still valid, and then apply it.\n   * @returns the restored email address and a success flag.\n   * @throws Error if the oobCode is falsy or the firebase methods fail.\n   */\n  private async _doActionCode(oobCode: string | undefined): Promise {\n    if (oobCode) {\n      const info = await checkActionCode(this._auth, oobCode);\n      const { email: restoredEmail } = info.data;\n\n      await applyActionCode(this._auth, oobCode);\n      // Account email reverted to restoredEmail\n\n      // Problem with being pedantic with all types except undefined vs null is that sometimes you\n      // need to get rid of null from the type.\n      return { restoredEmail: restoredEmail ?? undefined, successful: true };\n    }\n\n    throw new Error('oobCode not found');\n  }\n\n  /**\n   * Firebase types indicate that the email may not always be returned (Accounts without email addresses?)\n   * If the email isn't truthy then just skip the reset.\n   * If the send email fails for some reason, just return false.\n   */\n  private async _sendPasswordResetEmail(restoredEmail: string | undefined): Promise {\n    if (restoredEmail) {\n      try {\n        await sendPasswordResetEmail(this._auth, restoredEmail);\n        return true;\n      } catch (err: unknown) {\n        console.error('RecoverEmailService#_sendPasswordResetEmail', err);\n      }\n    }\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/reset-password/reset-password.component.ts\n\n\n\n    \n        Description\n    \n    \n        Collects and confirm new password to recover user's account with Firebase Authentication.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                            ReactiveFormsModule\n                            RouterLink\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Private\n                                    Readonly\n                                _service\n                            \n                            \n                                    Public\n                                    Readonly\n                                $formPasswordsInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password1CntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password1CntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password2CntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password2CntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                maxPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                minPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                password1Cntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                password2Cntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                resetPasswordForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                vm$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:62\n                            \n                        \n\n                \n                    \n                            Gets the current navigation statically to obtain the oobCode from Firebase needed to reset the\nUser's password.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/reset-password/reset-password.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Replace the user's password with the new password from the form.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResetPasswordService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $formPasswordsInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:42\n                        \n                    \n\n            \n                \n                    Form level aria-invalid.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password1CntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:44\n                        \n                    \n\n            \n                \n                    Errors specific to first password field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password1CntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:46\n                        \n                    \n\n            \n                \n                    Aria-invalid attribute for first password field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password2CntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:48\n                        \n                    \n\n            \n                \n                    Errors specific to second password field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password2CntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:50\n                        \n                    \n\n            \n                \n                    Aria-invalid attribute for second password field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        maxPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.maxLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:52\n                        \n                    \n\n            \n                \n                    Used in error message for password maximum length.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        minPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.minLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:54\n                        \n                    \n\n            \n                \n                    Used in error message for password minimum length.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password1Cntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password2Cntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        resetPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResetPasswordFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        vm$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:59\n                        \n                    \n\n            \n                \n                    Verification of password reset oobCode.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport type { Signal } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport type { FormControl, ValidationErrors } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport type { Observable } from 'rxjs';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { getState } from '../actions/get-state';\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { createPasswordControl, PASSWORDS } from '../identity-forms';\nimport { confirmMatch, confirmMatchFormErrors } from '../validators/confirm-match';\nimport { ResetPasswordService } from './reset-password.service';\nimport type { ResetPasswordResults } from './reset-password.service';\n\n/** Collect and confirm a new password for user's account. */\ntype ResetPasswordFormGroup = FormGroup;\n  password2: FormControl;\n}>;\n\n/**\n * Collects and confirm new password to recover user's account with Firebase Authentication.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    ReactiveFormsModule,\n    RouterLink,\n    SpinnerComponent,\n  ],\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n})\nexport class ResetPasswordComponent {\n  /** Form level aria-invalid. */\n  public readonly $formPasswordsInvalid: Signal;\n  /** Errors specific to first password field. */\n  public readonly $password1CntrlErrors: Signal;\n  /** Aria-invalid attribute for first password field. */\n  public readonly $password1CntrlInvalid: Signal;\n  /** Errors specific to second password field. */\n  public readonly $password2CntrlErrors: Signal;\n  /** Aria-invalid attribute for second password field */\n  public readonly $password2CntrlInvalid: Signal;\n  /** Used in error message for password maximum length. */\n  public readonly maxPasswordLength: number = PASSWORDS.maxLength;\n  /** Used in error message for password minimum length. */\n  public readonly minPasswordLength: number = PASSWORDS.minLength;\n  public readonly password1Cntrl: FormControl;\n  public readonly password2Cntrl: FormControl;\n  public readonly resetPasswordForm: ResetPasswordFormGroup;\n  /** Verification of password reset oobCode. */\n  public readonly vm$: Observable;\n\n  private readonly _router: Router;\n  private readonly _service: ResetPasswordService;\n\n  /**\n   * Gets the current navigation statically to obtain the oobCode from Firebase needed to reset the\n   * User's password.\n   */\n  constructor() {\n    this._router = inject(Router);\n    this._service = inject(ResetPasswordService);\n\n    ({\n      $errors: this.$password1CntrlErrors,\n      $invalid: this.$password1CntrlInvalid,\n      control: this.password1Cntrl,\n    } = createPasswordControl(true));\n    ({\n      $errors: this.$password2CntrlErrors,\n      $invalid: this.$password2CntrlInvalid,\n      control: this.password2Cntrl,\n    } = createPasswordControl());\n\n    this.resetPasswordForm = new FormGroup(\n      {\n        password1: this.password1Cntrl,\n        password2: this.password2Cntrl,\n      },\n      confirmMatch('password1', 'password2'),\n    );\n\n    this.$formPasswordsInvalid = confirmMatchFormErrors(this.resetPasswordForm, this.password1Cntrl, this.password2Cntrl);\n\n    const { oobCode } = getState(this._router.getCurrentNavigation());\n    this.vm$ = this._service.resetPassword$(oobCode);\n  }\n\n  /**\n   * Replace the user's password with the new password from the form.\n   */\n  public onSubmit(): void {\n    const { password1 } = this.resetPasswordForm.value;\n\n    if (this.resetPasswordForm.invalid || !password1) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this._service.replacePassword(password1);\n  }\n}\n\n    \n\n    \n        @if (vm$ | async; as vm) {\n  \n    @if (vm.showForm) {\n      \n        \n          Replace the password for {{ vm.email }} account.\n        \n\n        \n          New password:\n          \n          \n            @if ($password1CntrlErrors(); as errors) {\n              \n                @if (errors['required']) {\n                  \n                    Please enter a new password.\n                  \n                }\n                @if (errors['minlength']) {\n                  \n                    Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and\n                    lowercase letters, numbers, and symbols.\n                  \n                }\n                @if (errors['maxlength']) {\n                  \n                    Your password may not be longer than {{ maxPasswordLength }} characters.\n                  \n                }\n                @if (errors['passwordstrength']) {\n                  \n                    Your password is not very strong. Include a combination of upper and lowercase letters, numbers, and symbols.\n                  \n                }\n                @if (errors['firebasevalidator']) {\n                  \n                    Your password needs to include: TODO\n                  \n                }\n              \n            }\n          \n        \n\n        \n          \n            Confirm password:\n          \n          \n          \n            @if ($password2CntrlErrors(); as errors) {\n              \n                @if (errors['required']) {\n                  \n                    Please re-enter your password.\n                  \n                }\n                @if (errors['minlength']) {\n                  \n                    Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and\n                    lowercase letters, numbers, and symbols.\n                  \n                }\n                @if (errors['maxlength']) {\n                  \n                    Your password may not be longer than {{ maxPasswordLength }} characters.\n                  \n                }\n              \n            }\n          \n        \n\n        \n          @if ($formPasswordsInvalid()) {\n            \n              Passwords must match.\n            \n          }\n        \n\n        @if (vm.errorCode) {\n          \n            \n          \n        }\n\n        \n          \n            Replace password\n          \n        \n      \n    } @else if (vm.errorCode) {\n      There was a problem with your reset link\n      \n        \n      \n      \n        Please\n        contact support\n        for assistance.\n      \n    } @else {\n      Your password has been replaced!\n      \n        Return to login\n      \n    }\n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (vm$ | async; as vm) {      @if (vm.showForm) {                        Replace the password for {{ vm.email }} account.                          New password:                                @if ($password1CntrlErrors(); as errors) {                              @if (errors[\\'required\\']) {                                      Please enter a new password.                                  }                @if (errors[\\'minlength\\']) {                                      Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and                    lowercase letters, numbers, and symbols.                                  }                @if (errors[\\'maxlength\\']) {                                      Your password may not be longer than {{ maxPasswordLength }} characters.                                  }                @if (errors[\\'passwordstrength\\']) {                                      Your password is not very strong. Include a combination of upper and lowercase letters, numbers, and symbols.                                  }                @if (errors[\\'firebasevalidator\\']) {                                      Your password needs to include: TODO                                  }                          }                                                Confirm password:                                          @if ($password2CntrlErrors(); as errors) {                              @if (errors[\\'required\\']) {                                      Please re-enter your password.                                  }                @if (errors[\\'minlength\\']) {                                      Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and                    lowercase letters, numbers, and symbols.                                  }                @if (errors[\\'maxlength\\']) {                                      Your password may not be longer than {{ maxPasswordLength }} characters.                                  }                          }                                    @if ($formPasswordsInvalid()) {                          Passwords must match.                      }                @if (vm.errorCode) {                                        }                              Replace password                            } @else if (vm.errorCode) {      There was a problem with your reset link                                  Please        contact support        for assistance.          } @else {      Your password has been replaced!              Return to login          }  } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResetPasswordService.html":{"url":"injectables/ResetPasswordService.html","title":"injectable - ResetPasswordService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResetPasswordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/reset-password/reset-password.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles both password reset oobCode verification, and password reset confirmation.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _auth\n                            \n                            \n                                    Private\n                                    Readonly\n                                _newPasswordSubject$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                _confirmPasswordReset\n                            \n                            \n                                    Private\n                                    Async\n                                _verifyCode\n                            \n                            \n                                    Public\n                                replacePassword\n                            \n                            \n                                    Public\n                                resetPassword$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _confirmPasswordReset\n                        \n                    \n                \n            \n            \n                \n                        \n                    _confirmPasswordReset(code: string | undefined, email: string, newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/reset-password/reset-password.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Applies the new password to the user's account using the oobCode.\n             redisplay the form.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nIs necessary only in the case that confirmPasswordReset fails, and we need to\nredisplay the form.\n\n\n                                            \n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _verifyCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    _verifyCode(code: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/reset-password/reset-password.service.ts:131\n                        \n                    \n\n\n            \n                \n                        This identifies the email for the User who's password would be reset by the oobCode.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        replacePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    replacePassword(newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/reset-password/reset-password.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Triggers the confirmPasswordReset promise to apply the action code and replace the user's password.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resetPassword$\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetPassword$(code: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/reset-password/reset-password.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Sets up an Observable that will first verify the oobCode is valid for password resetting, and\nthen show the password reset form and the user's email address.\nThis is followed by setting up a subject to emit a new password that will then be confirmed as\nthe new password for the user. While that action is pending it emits undefined to show the\nspinner again. In the event of an error it shows the form again with an error message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Auth\n\n                    \n                \n                \n                    \n                        Default value : inject(Auth)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.service.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _newPasswordSubject$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.service.ts:58\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Auth, confirmPasswordReset, verifyPasswordResetCode } from '@angular/fire/auth';\nimport {\n  from,\n  merge,\n  of,\n  startWith,\n  Subject,\n  switchMap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { getErrorCode } from '../error-code';\n\n/** Combined results of all possible password verfication and confirmation paths. */\nexport type ResetPasswordResults = PasswordResetSuccess | ShowForm | VerifiedFailed | undefined;\n\n/** Combined end results of password confirmation */\ntype ConfirmResult = PasswordResetSuccess | ShowForm;\n\n/** Final state after resetting password. */\ninterface PasswordResetSuccess {\n  /** This makes the template type checker happy. */\n  readonly errorCode: undefined;\n  /** On success hide the form and show the success message. */\n  readonly showForm: false;\n}\n\n/** Verified success & password reset failure. */\ninterface ShowForm {\n  /** User email address to reset password for, from Firebase oobCode. */\n  readonly email: string;\n  /** Firebase response error code, if any. */\n  readonly errorCode?: string;\n  /** Display the reset password form to collect and confirm the new password. */\n  readonly showForm: true;\n}\n\n/** Code verification failed. */\ninterface VerifiedFailed {\n  /** This makes the type checker happy during destructuring. */\n  readonly email: undefined;\n  /** Firebase response error code. */\n  readonly errorCode: string;\n  /** On Firebase error hide the form and show the error message. */\n  readonly showForm: false;\n}\n\n/** Combined end results of possword verification. */\ntype VerifiedResult = ShowForm | VerifiedFailed;\n\n/**\n * Handles both password reset oobCode verification, and password reset confirmation.\n */\n@Injectable({ providedIn: 'root' })\nexport class ResetPasswordService {\n  private readonly _auth: Auth = inject(Auth);\n  private readonly _newPasswordSubject$: Subject = new Subject();\n\n  /**\n   * Triggers the confirmPasswordReset promise to apply the action code and replace the user's password.\n   */\n  public replacePassword(newPassword: string): void {\n    this._newPasswordSubject$.next(newPassword);\n  }\n\n  /**\n   * Sets up an Observable that will first verify the oobCode is valid for password resetting, and\n   * then show the password reset form and the user's email address.\n   * This is followed by setting up a subject to emit a new password that will then be confirmed as\n   * the new password for the user. While that action is pending it emits `undefined` to show the\n   * spinner again. In the event of an error it shows the form again with an error message.\n   */\n  public resetPassword$(code: string | undefined): Observable {\n    return of(code).pipe(\n      switchMap(async (oobCode: string | undefined): Promise => this._verifyCode(oobCode)),\n      switchMap((verifyResults: VerifiedResult): Observable => {\n        const verifyResults$ = of(verifyResults);\n        const { email } = verifyResults;\n\n        // Verified succeeded\n        if (email) {\n          // This design with an inner `merge` after `_verifyCode` settles is to accomodate passing\n          // the email to _confirmPasswordReset in case the new password is rejected.\n          // However, it does make testing this path more complicated I think. Would it be better to\n          // move the merge to the return of resetPassword$ and store the email as a private property?\n          const confirmPasswordReset$ = this._newPasswordSubject$.pipe(\n            switchMap((newPassword: string): Observable => {\n              const promise = this._confirmPasswordReset(code, email, newPassword);\n              return from(promise)\n                // Show the spinner while applying the action code.\n                .pipe(startWith(undefined));\n            }),\n          );\n\n          return merge(\n            // This will emit first after code verification.\n            verifyResults$,\n            // This will emit after form submission.\n            confirmPasswordReset$,\n          );\n        }\n\n        // Verified failed\n        return verifyResults$;\n      }),\n    );\n  }\n\n  /**\n   * Applies the new password to the user's account using the oobCode.\n   * @param email - Is necessary only in the case that `confirmPasswordReset` fails, and we need to\n   *              redisplay the form.\n   * @throws If the oobCode is falsy\n   */\n  private async _confirmPasswordReset(code: string | undefined, email: string, newPassword: string): Promise {\n    if (code) {\n      try {\n        await confirmPasswordReset(this._auth, code, newPassword);\n        return { errorCode: undefined, showForm: false };\n      } catch (err: unknown) {\n        return { email, errorCode: getErrorCode(err), showForm: true };\n      }\n    }\n    throw new Error('oobCode not found');\n  }\n\n  /**\n   * This identifies the email for the User who's password would be reset by the oobCode.\n   */\n  private async _verifyCode(code: string | undefined): Promise {\n    if (code) {\n      try {\n        const email = await verifyPasswordResetCode(this._auth, code);\n        return { email, showForm: true };\n      } catch (err: unknown) {\n        return { email: undefined, errorCode: getErrorCode(err), showForm: false };\n      }\n    }\n\n    return { email: undefined, errorCode: 'oobCode not found', showForm: false };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShowForm.html":{"url":"interfaces/ShowForm.html","title":"interface - ShowForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShowForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/reset-password/reset-password.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Verified success & password reset failure.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                        \n                                            showForm\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User email address to reset password for, from Firebase oobCode.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Firebase response error code, if any.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showForm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showForm:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Display the reset password form to collect and confirm the new password.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Auth, confirmPasswordReset, verifyPasswordResetCode } from '@angular/fire/auth';\nimport {\n  from,\n  merge,\n  of,\n  startWith,\n  Subject,\n  switchMap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { getErrorCode } from '../error-code';\n\n/** Combined results of all possible password verfication and confirmation paths. */\nexport type ResetPasswordResults = PasswordResetSuccess | ShowForm | VerifiedFailed | undefined;\n\n/** Combined end results of password confirmation */\ntype ConfirmResult = PasswordResetSuccess | ShowForm;\n\n/** Final state after resetting password. */\ninterface PasswordResetSuccess {\n  /** This makes the template type checker happy. */\n  readonly errorCode: undefined;\n  /** On success hide the form and show the success message. */\n  readonly showForm: false;\n}\n\n/** Verified success & password reset failure. */\ninterface ShowForm {\n  /** User email address to reset password for, from Firebase oobCode. */\n  readonly email: string;\n  /** Firebase response error code, if any. */\n  readonly errorCode?: string;\n  /** Display the reset password form to collect and confirm the new password. */\n  readonly showForm: true;\n}\n\n/** Code verification failed. */\ninterface VerifiedFailed {\n  /** This makes the type checker happy during destructuring. */\n  readonly email: undefined;\n  /** Firebase response error code. */\n  readonly errorCode: string;\n  /** On Firebase error hide the form and show the error message. */\n  readonly showForm: false;\n}\n\n/** Combined end results of possword verification. */\ntype VerifiedResult = ShowForm | VerifiedFailed;\n\n/**\n * Handles both password reset oobCode verification, and password reset confirmation.\n */\n@Injectable({ providedIn: 'root' })\nexport class ResetPasswordService {\n  private readonly _auth: Auth = inject(Auth);\n  private readonly _newPasswordSubject$: Subject = new Subject();\n\n  /**\n   * Triggers the confirmPasswordReset promise to apply the action code and replace the user's password.\n   */\n  public replacePassword(newPassword: string): void {\n    this._newPasswordSubject$.next(newPassword);\n  }\n\n  /**\n   * Sets up an Observable that will first verify the oobCode is valid for password resetting, and\n   * then show the password reset form and the user's email address.\n   * This is followed by setting up a subject to emit a new password that will then be confirmed as\n   * the new password for the user. While that action is pending it emits `undefined` to show the\n   * spinner again. In the event of an error it shows the form again with an error message.\n   */\n  public resetPassword$(code: string | undefined): Observable {\n    return of(code).pipe(\n      switchMap(async (oobCode: string | undefined): Promise => this._verifyCode(oobCode)),\n      switchMap((verifyResults: VerifiedResult): Observable => {\n        const verifyResults$ = of(verifyResults);\n        const { email } = verifyResults;\n\n        // Verified succeeded\n        if (email) {\n          // This design with an inner `merge` after `_verifyCode` settles is to accomodate passing\n          // the email to _confirmPasswordReset in case the new password is rejected.\n          // However, it does make testing this path more complicated I think. Would it be better to\n          // move the merge to the return of resetPassword$ and store the email as a private property?\n          const confirmPasswordReset$ = this._newPasswordSubject$.pipe(\n            switchMap((newPassword: string): Observable => {\n              const promise = this._confirmPasswordReset(code, email, newPassword);\n              return from(promise)\n                // Show the spinner while applying the action code.\n                .pipe(startWith(undefined));\n            }),\n          );\n\n          return merge(\n            // This will emit first after code verification.\n            verifyResults$,\n            // This will emit after form submission.\n            confirmPasswordReset$,\n          );\n        }\n\n        // Verified failed\n        return verifyResults$;\n      }),\n    );\n  }\n\n  /**\n   * Applies the new password to the user's account using the oobCode.\n   * @param email - Is necessary only in the case that `confirmPasswordReset` fails, and we need to\n   *              redisplay the form.\n   * @throws If the oobCode is falsy\n   */\n  private async _confirmPasswordReset(code: string | undefined, email: string, newPassword: string): Promise {\n    if (code) {\n      try {\n        await confirmPasswordReset(this._auth, code, newPassword);\n        return { errorCode: undefined, showForm: false };\n      } catch (err: unknown) {\n        return { email, errorCode: getErrorCode(err), showForm: true };\n      }\n    }\n    throw new Error('oobCode not found');\n  }\n\n  /**\n   * This identifies the email for the User who's password would be reset by the oobCode.\n   */\n  private async _verifyCode(code: string | undefined): Promise {\n    if (code) {\n      try {\n        const email = await verifyPasswordResetCode(this._auth, code);\n        return { email, showForm: true };\n      } catch (err: unknown) {\n        return { email: undefined, errorCode: getErrorCode(err), showForm: false };\n      }\n    }\n\n    return { email: undefined, errorCode: 'oobCode not found', showForm: false };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/sidebar/sidebar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Application menu sidebar for logged in vies. Contains links to primary application features, user\naccount features should be linked from the accounts menu in the header.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sidebar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n/**\n * Application menu sidebar for logged in vies. Contains links to primary application features, user\n * account features should be linked from the accounts menu in the header.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ RouterLink ],\n  selector: 'app-sidebar',\n  styleUrl: './sidebar.component.scss',\n  templateUrl: './sidebar.component.html',\n})\nexport class SidebarComponent {}\n\n    \n\n    \n        \n  \n    \n      Quizzes\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Quizzes      '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/spinner/spinner.component.ts\n\n\n\n    \n        Description\n    \n    \n        Use while waiting for asynchronous tasks to complete.\nSource: https://github.com/n3r4zzurr0/svg-spinners/blob/main/svg-css/blocks-shuffle-3.svg\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spinner\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./spinner.component.svg\n            \n\n\n\n            \n                styleUrl\n                ./spinner.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n/**\n * Use while waiting for asynchronous tasks to complete.\n *\n * Source: https://github.com/n3r4zzurr0/svg-spinners/blob/main/svg-css/blocks-shuffle-3.svg\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-spinner',\n  styleUrl: './spinner.component.scss',\n  templateUrl: './spinner.component.svg',\n})\nexport class SpinnerComponent {}\n\n    \n\n    \n        \n  Loading…\n  \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Loading…      '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StandardLayoutComponent.html":{"url":"components/StandardLayoutComponent.html","title":"component - StandardLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StandardLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/standard/standard.component.ts\n\n\n\n    \n        Description\n    \n    \n        Full screen layout for logged in views. Design is mobile first with header, main content, sidebar,\nand footer on smaller screens. Larger screens layout with full width header and footer, and middle\ncontent containing a sidebar and the main content area.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-standard-layout\n            \n\n\n            \n                imports\n                \n                                FooterComponent\n                                HeaderComponent\n                            RouterOutlet\n                                SidebarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./standard.component.html\n            \n\n\n\n            \n                styleUrl\n                ./standard.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\nimport { FooterComponent } from '../footer/footer.component';\nimport { HeaderComponent } from '../header/header.component';\nimport { SidebarComponent } from '../sidebar/sidebar.component';\n\n/**\n * Full screen layout for logged in views. Design is mobile first with header, main content, sidebar,\n * and footer on smaller screens. Larger screens layout with full width header and footer, and middle\n * content containing a sidebar and the main content area.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    FooterComponent,\n    HeaderComponent,\n    RouterOutlet,\n    SidebarComponent,\n  ],\n  selector: 'app-standard-layout',\n  styleUrl: './standard.component.scss',\n  templateUrl: './standard.component.html',\n})\nexport class StandardLayoutComponent {}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StandardLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TermsAndConditionsComponent.html":{"url":"components/TermsAndConditionsComponent.html","title":"component - TermsAndConditionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TermsAndConditionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/legal/terms-and-conditions/terms-and-conditions.component.ts\n\n\n\n    \n        Description\n    \n    \n        View accessible to all visitors that establishes rules for user interaction, protects the website\nowner's legal interests by limiting liability, clarifies ownership of content, and sets\nexpectations for how users can engage with the site, essentially acting as a legal contract\noutlining the rights and responsibilities of both the website owner and the user.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-terms-and-conditions\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./terms-and-conditions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n/**\n * View accessible to all visitors that establishes rules for user interaction, protects the website\n * owner's legal interests by limiting liability, clarifies ownership of content, and sets\n * expectations for how users can engage with the site, essentially acting as a legal contract\n * outlining the rights and responsibilities of both the website owner and the user.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ RouterLink ],\n  selector: 'app-terms-and-conditions',\n  templateUrl: './terms-and-conditions.component.html',\n})\nexport class TermsAndConditionsComponent {}\n\n    \n\n    \n        \n  Terms &amp; Conditions\n  \n    The application\n    \n      This application is presented for demonstration purposes only. Access may be granted and revoked by the author or designated\n      representatives at any time. There are no warranties express or implied. Use at your own risk.\n    \n  \n  \n    The code\n    \n      TL;DR\n      Here’s what the license entails:\n    \n    \n      \n        Anyone can copy, modify and distribute this software.\n      \n      \n        You have to include the license and copyright notice with each and every distribution.\n      \n      \n        You can use this software privately.\n      \n      \n        You can use this software for commercial purposes.\n      \n      \n        If you dare build your business solely from this code, you risk open-sourcing the whole code base.\n      \n      \n        If you modify it, you have to indicate changes made to the code.\n      \n      \n        Any modifications of this code base MUST be distributed with the same license, GPLv3.\n      \n      \n        This software is provided without warranty.\n      \n      \n        The software author or license can not be held liable for any damages inflicted by the software.\n      \n    \n    \n      \n        Summary provided by kn9ts.\n      \n    \n    See full license for details.\n    Return to Brainfry\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Terms & Conditions      The application          This application is presented for demonstration purposes only. Access may be granted and revoked by the author or designated      representatives at any time. There are no warranties express or implied. Use at your own risk.            The code          TL;DR      Here’s what the license entails:                      Anyone can copy, modify and distribute this software.                    You have to include the license and copyright notice with each and every distribution.                    You can use this software privately.                    You can use this software for commercial purposes.                    If you dare build your business solely from this code, you risk open-sourcing the whole code base.                    If you modify it, you have to indicate changes made to the code.                    Any modifications of this code base MUST be distributed with the same license, GPLv3.                    This software is provided without warranty.                    The software author or license can not be held liable for any damages inflicted by the software.                            Summary provided by kn9ts.              See full license for details.    Return to Brainfry  '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TermsAndConditionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserPhotosService.html":{"url":"injectables/UserPhotosService.html","title":"injectable - UserPhotosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserPhotosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/user-photos/user-photos.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Specific handling for Firebase storage of user profile photos.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _refreshFilesSubject$\n                            \n                            \n                                    Private\n                                    Readonly\n                                _storage\n                            \n                            \n                                    Private\n                                    Readonly\n                                _taskSubject$\n                            \n                            \n                                    Public\n                                    Readonly\n                                uploadPercentage$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getProfilePhotos\n                            \n                            \n                                    Public\n                                uploadPhoto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/user-photos/user-photos.service.ts:74\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getProfilePhotos\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfilePhotos(uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/user-photos/user-photos.service.ts:97\n                        \n                    \n\n\n            \n                \n                        Gets a list of profile photos from Firebase Storage for the UID. Sorted by most recently uploaded.\nSo long as something is subscribed to uploadPercentage$ then this will be refreshed on each upload.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        uploadPhoto\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadPhoto(files: FileList, uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/user-photos/user-photos.service.ts:146\n                        \n                    \n\n\n            \n                \n                        Uploads files to the user's profile photos directory. uploadPercentage$ will track progress.\nNote that files is expected to be a list of one File. However the code is nominally designed\nto handle multiple uploads. In that case the uploadPercentage$ will only be for the final file\nuploaded, which if the previous files are still going might be wrong. Unclear how to handle that\ncase at this time.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        FileList\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _refreshFilesSubject$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/user-photos.service.ts:71\n                        \n                    \n\n            \n                \n                    Emits whenever a new profile photo is uploaded to re-fetch the list of all photos for the User.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                \n                    \n                        Default value : inject(Storage)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/user-photos.service.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _taskSubject$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/user-photos.service.ts:74\n                        \n                    \n\n            \n                \n                    Triggers uploadPercentage$ to track a new upload task.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        uploadPercentage$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/user-photos.service.ts:68\n                        \n                    \n\n            \n                \n                    Track the percentage uploaded of uploadPhoto.\nIdea here is that while falsy (before first emit, when emitting undefined) then the template\nwill show an @else branch for file picker UI. But while uploading it will emit progress for\nuse in a progress meter.\nTo automatically refresh the uploaded profile photos from getProfilePhotos this must be\nsubscribed to.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport {\n  getDownloadURL,\n  getMetadata,\n  listAll,\n  percentage,\n  ref,\n  Storage,\n  uploadBytesResumable,\n} from '@angular/fire/storage';\nimport type {\n  FullMetadata,\n  ListResult,\n  UploadTask,\n  UploadTaskSnapshot,\n} from '@angular/fire/storage';\nimport {\n  BehaviorSubject,\n  endWith,\n  finalize,\n  Subject,\n  switchMap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\n/**\n * Firebase storage file\n */\nexport interface Photo {\n  /** Need the file metadata to sort by time. */\n  readonly metadata: FullMetadata;\n  /** Special download URL for file based on storage.rules. */\n  readonly url: string;\n}\n\n/**\n * Upload progress to Firebase Storage\n */\nexport interface Progress {\n  /** Upload precentage between 0% and 100% */\n  readonly progress: number;\n  /** Not used, but part of the rxfire interface */\n  readonly snapshot: UploadTaskSnapshot;\n}\n\n/** Total allowed uploaded profile photos. */\nexport const MAXIMUM_PHOTOS = 6;\n/** Directory below UID directory for files. */\nconst PHOTO_DIR = 'profile-photos';\n/** Represent random number using letters and numbers. */\nconst RADIX = 36;\n/** Remove the whole number and decimal point from Math.random */\nconst SKIP_WHOLE_NUM = 2;\n\n/**\n * Specific handling for Firebase storage of user profile photos.\n */\n@Injectable({ providedIn: 'root' })\nexport class UserPhotosService {\n  /**\n   * Track the percentage uploaded of `uploadPhoto`.\n   * Idea here is that while falsy (before first emit, when emitting undefined) then the template\n   * will show an `@else` branch for file picker UI. But while uploading it will emit progress for\n   * use in a progress meter.\n   * To automatically refresh the uploaded profile photos from `getProfilePhotos` this must be\n   * subscribed to.\n   */\n  public readonly uploadPercentage$: Observable;\n\n  /** Emits whenever a new profile photo is uploaded to re-fetch the list of all photos for the User. */\n  private readonly _refreshFilesSubject$: BehaviorSubject;\n  private readonly _storage: Storage = inject(Storage);\n  /** Triggers `uploadPercentage$` to track a new upload task. */\n  private readonly _taskSubject$: Subject;\n\n  constructor() {\n    this._refreshFilesSubject$ = new BehaviorSubject(undefined);\n    this._taskSubject$ = new Subject();\n\n    this.uploadPercentage$ = this._taskSubject$.pipe(\n      switchMap((task: UploadTask): Observable =>\n        // First emit the upload progress as a percentage.\n        // https://github.com/FirebaseExtended/rxfire/blob/b91f358e2c13c6bf33fb4a540e3963c3902a62b1/storage/index.ts#L115\n        percentage(task).pipe(\n          // Then when complete (100% progress), emit undefined to reset the Observable to falsy.\n          endWith(undefined),\n          // Inform `getProfilePhotos` that there are new files to fetch since storage doesn't stream StorageReferences.\n          finalize((): void => { this._refreshFilesSubject$.next(); }),\n        )),\n    );\n  }\n\n  /**\n   * Gets a list of profile photos from Firebase Storage for the UID. Sorted by most recently uploaded.\n   * So long as something is subscribed to `uploadPercentage$` then this will be refreshed on each upload.\n   */\n  public getProfilePhotos(uid: string): Observable {\n    const profilePhotosRef = ref(this._storage, `${uid}/${PHOTO_DIR}`);\n\n    return this._refreshFilesSubject$.pipe(\n      // Using an inner Observable here to allow us to refresh the files list after each upload.\n      // But this will only work if someone is subscribed to `uploadPercentage$`!\n      switchMap(async (): Promise => {\n        const profilePhotos: Photo[] = [];\n        const profilePhotosList: ListResult = await listAll(profilePhotosRef);\n        const promises: Array, PromiseSettledResult]>> = [];\n\n        // Need the metadata for sorting and the download URL for displaying & form values.\n        // Note this does not handle nested folders, but we aren't using those.\n        for (const item of profilePhotosList.items) {\n          const promise = Promise.allSettled([ getDownloadURL(item), getMetadata(item) ]);\n          promises.push(promise);\n        }\n\n        // Build the data structure for the Photos.\n        for (const result of await Promise.all(promises)) {\n          const [ settledUrl, settledMetadata ] = result;\n          if (settledUrl.status === 'rejected') {\n            console.error(settledUrl.reason);\n          } else if (settledMetadata.status === 'rejected') {\n            console.error(settledMetadata.reason);\n          } else {\n            profilePhotos.push({\n              metadata: settledMetadata.value,\n              url: settledUrl.value,\n            });\n          }\n        }\n\n        // Organize the photos by most recently uploaded.\n        profilePhotos.sort((a: Photo, b: Photo): number => Number(new Date(b.metadata.updated)) - Number(new Date(a.metadata.updated)));\n\n        return profilePhotos;\n      }),\n    );\n  }\n\n  /**\n   * Uploads files to the user's profile photos directory. `uploadPercentage$` will track progress.\n   *\n   * Note that `files` is expected to be a list of one File. However the code is nominally designed\n   * to handle multiple uploads. In that case the `uploadPercentage$` will only be for the final file\n   * uploaded, which if the previous files are still going might be wrong. Unclear how to handle that\n   * case at this time.\n   */\n  public uploadPhoto(files: FileList, uid: string): void {\n    for (const file of files) {\n      // Unlike AWS S3, Firebase storage knows what folders are, and requires you to traverse into them.\n      // So for more straightforward access prefix the filename with a random value to avoid collisions\n      // instead of using a folder.\n      const prefix = Math.random().toString(RADIX).slice(SKIP_WHOLE_NUM);\n      const path = `${uid}/${PHOTO_DIR}/${prefix}-${file.name}`;\n      const storageRef = ref(this._storage, path);\n      const task = uploadBytesResumable(storageRef, file);\n      this._taskSubject$.next(task);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/user-profile/user-profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Form to manage Firebase User profile.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                            NgOptimizedImage\n                                PhotoUploadComponent\n                            ReactiveFormsModule\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-profile.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _userPhotoService\n                            \n                            \n                                    Public\n                                    Readonly\n                                $errorCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                $nameCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $nameCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $photoUrlCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $photoUrlCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $showForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                $showUrlInput\n                            \n                            \n                                    Public\n                                    Readonly\n                                nameCntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                photoUrlCntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                vm$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onSubmit\n                            \n                            \n                                    Public\n                                togglePhotoUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:105\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/user-profile/user-profile.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Update the Firebase User profile data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        togglePhotoUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    togglePhotoUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/user-profile/user-profile.component.ts:190\n                        \n                    \n\n\n            \n                \n                        Toggle the UI to set the photoURL manually to a remote URL or to picking from a list of uploaded\nprofile photos in Firebase Storage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _userPhotoService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserPhotosService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:82\n                        \n                    \n\n            \n                \n                    Error codes from updateProfile when form is submitted.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $nameCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:84\n                        \n                    \n\n            \n                \n                    Error messages specific for the displayName field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $nameCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:86\n                        \n                    \n\n            \n                \n                    Aria-invalid attribute for displayName field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $photoUrlCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:88\n                        \n                    \n\n            \n                \n                    Error messages specific for the photoURL field (custom URL entry).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $photoUrlCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:90\n                        \n                    \n\n            \n                \n                    Aria-invalid attribute for photoURL field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $showForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:92\n                        \n                    \n\n            \n                \n                    Toggle spinner and HTML Form display.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $showUrlInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:94\n                        \n                    \n\n            \n                \n                    Toggle photoURL URL input and upload file interface.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        nameCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        photoUrlCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        vm$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:103\n                        \n                    \n\n            \n                \n                    Collect the current User and profile photos uploaded to Firebase storage. Initalize profileForm\nwith data from Firebase User, and determine if photoURL is an uploaded file. If so, default the\ninterace to uploads instead of the URL.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe, NgOptimizedImage } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { Signal, WritableSignal } from '@angular/core';\nimport { updateProfile } from '@angular/fire/auth';\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport type { ValidationErrors } from '@angular/forms';\nimport {\n  filter,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser, User } from '@app/core/user.token';\nimport { controlErrorsSignal } from '@app/shared/control-errors-signal.util';\nimport { controlInvalidSignal } from '@app/shared/control-invalid-signal.util';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\nimport { PhotoUploadComponent } from '../user-photos/photo-upload/photo-upload.component';\nimport { UserPhotosService } from '../user-photos/user-photos.service';\nimport type { Photo } from '../user-photos/user-photos.service';\n\n/**\n * Angular FormGroup for Firebase [updateProfile](https://firebase.google.com/docs/reference/node/firebase.User#updateprofile)\n * parameters.\n */\ntype ProfileFormGroup = FormGroup;\n  photoURL: FormControl;\n}>;\n\n/**\n * Template model data\n */\ninterface ViewModel {\n  /** List of photos uploaded to Firebase storage for the user's profile */\n  readonly profilePhotos: readonly Photo[];\n  /** Firebase User object */\n  readonly user: User;\n}\n\n/**\n * Form to manage Firebase User profile.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    NgOptimizedImage,\n    PhotoUploadComponent,\n    ReactiveFormsModule,\n    SpinnerComponent,\n  ],\n  selector: 'app-user-profile',\n  styleUrl: './user-profile.component.scss',\n  templateUrl: './user-profile.component.html',\n})\nexport class UserProfileComponent {\n  /** Error codes from `updateProfile` when form is submitted. */\n  public readonly $errorCode: WritableSignal;\n  /** Error messages specific for the displayName field. */\n  public readonly $nameCntrlErrors: Signal;\n  /** Aria-invalid attribute for displayName field. */\n  public readonly $nameCntrlInvalid: Signal;\n  /** Error messages specific for the photoURL field (custom URL entry). */\n  public readonly $photoUrlCntrlErrors: Signal;\n  /** Aria-invalid attribute for photoURL field. */\n  public readonly $photoUrlCntrlInvalid: Signal;\n  /** Toggle spinner and HTML Form display. */\n  public readonly $showForm: WritableSignal;\n  /** Toggle photoURL URL input and upload file interface. */\n  public readonly $showUrlInput: WritableSignal;\n  public readonly nameCntrl: FormControl;\n  public readonly photoUrlCntrl: FormControl;\n  public readonly profileForm: ProfileFormGroup;\n  /**\n   * Collect the current User and profile photos uploaded to Firebase storage. Initalize `profileForm`\n   * with data from Firebase User, and determine if photoURL is an uploaded file. If so, default the\n   * interace to uploads instead of the URL.\n   */\n  public readonly vm$: Observable;\n\n  private readonly _userPhotoService: UserPhotosService;\n\n  constructor() {\n    this._userPhotoService = inject(UserPhotosService);\n\n    this.nameCntrl = new FormControl(null, Validators.required); // eslint-disable-line unicorn/no-null -- Forms use null\n    this.$nameCntrlErrors = controlErrorsSignal(this.nameCntrl);\n    this.$nameCntrlInvalid = controlInvalidSignal(this.nameCntrl);\n\n    // eslint-disable-next-line unicorn/no-null -- Forms use null\n    this.photoUrlCntrl = new FormControl(null, Validators.pattern(/\\.(?:avif|gif|jpe?g|png|webp)(?:\\?.*)?$/u));\n    this.$photoUrlCntrlErrors = controlErrorsSignal(this.photoUrlCntrl);\n    this.$photoUrlCntrlInvalid = controlInvalidSignal(this.photoUrlCntrl);\n\n    this.profileForm = new FormGroup({\n      displayName: this.nameCntrl,\n      photoURL: this.photoUrlCntrl,\n    });\n\n    this.$errorCode = signal('');\n    this.$showForm = signal(false);\n    this.$showUrlInput = signal(true);\n\n    // Not handling non-logged in users because the Route guards should.\n    this.vm$ = inject(USER$).pipe(\n      filter((user: MaybeUser): user is User => user != undefined),\n      tap({\n        next: (user: User): void => {\n          this.profileForm.patchValue(user);\n          this.$showForm.set(true);\n        },\n      }),\n      switchMap((user: User): Observable => {\n        const { photoURL, uid } = user;\n        // Get uploads for this user, and then identify if the User#photoURL is one of the uploaded\n        // files.\n        return this._userPhotoService.getProfilePhotos(uid).pipe(\n          map((profilePhotos: Photo[]): ViewModel => {\n            for (const photo of profilePhotos) {\n              if (photo.url === photoURL) {\n                // Show the upload photo UI instead since that is what was used.\n                this.$showUrlInput.set(false);\n                break;\n              }\n            }\n\n            return { profilePhotos, user };\n          }),\n        );\n      }),\n    );\n  }\n\n  /**\n   * Update the Firebase User profile data.\n   */\n  public async onSubmit(user: User): Promise {\n    const { displayName, photoURL } = this.profileForm.value;\n\n    // Validators prevent email1 or password being falsy, but TypeScript doesn't know that.\n    if (this.profileForm.invalid || !displayName) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this.$showForm.set(false);\n    this.$errorCode.set(''); // Clear out any existing errors\n\n    try {\n      // It appears that the types for photoURL are incorrect and you must use an empty string\n      // instead of null to clear the value. https://stackoverflow.com/questions/71047275/setting-a-firebase-user-photourl-value-to-null\n      // auth/invalid-json-payload-received.-/photourl-must-be-string\n      const safePhotoURL = photoURL ?? '';\n      await updateProfile(user, { displayName, photoURL: safePhotoURL });\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n    }\n\n    this.$showForm.set(true);\n  }\n\n  /**\n   * Toggle the UI to set the photoURL manually to a remote URL or to picking from a list of uploaded\n   * profile photos in Firebase Storage.\n   */\n  public togglePhotoUrl(): void {\n    this.$showUrlInput.update((showUrl: boolean): boolean => !showUrl);\n  }\n}\n\n    \n\n    \n        @if (vm$ | async; as vm) {\n  \n    Your Profile\n    @if ($showForm()) {\n      \n        \n          Your name:\n          \n          \n            @if ($nameCntrlErrors(); as errors) {\n              \n                @if (errors['required']) {\n                  \n                    Tell use how you would like to be addressed.\n                  \n                }\n              \n            }\n          \n        \n\n        \n          Your photo:\n\n          @if ($showUrlInput()) {\n            \n              Link to your photo:\n              \n              \n                @if ($photoUrlCntrlErrors(); as errors) {\n                  \n                    @if (errors['pattern']) {\n                      \n                        Photo URL must link to a file with an image file extension like jpeg, jpg, png, avif, webp, or gif.\n                      \n                    }\n                  \n                }\n              \n            \n\n            @if (photoUrlCntrl.value && photoUrlCntrl.valid) {\n              \n                \n              \n            }\n\n            \n              Upload a photo\n            \n          } @else {\n            \n              @for (item of vm.profilePhotos; track item.url; let indx = $index) {\n                \n                \n                  \n                \n              }\n\n              \n\n              \n                Use a link to a photo\n              \n            \n          }\n        \n\n        @if ($errorCode(); as errorCode) {\n          \n            \n          \n        }\n\n        \n          \n            Update profile\n          \n        \n      \n    } @else {\n      \n    }\n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (vm$ | async; as vm) {      Your Profile    @if ($showForm()) {                        Your name:                                @if ($nameCntrlErrors(); as errors) {                              @if (errors[\\'required\\']) {                                      Tell use how you would like to be addressed.                                  }                          }                                    Your photo:          @if ($showUrlInput()) {                          Link to your photo:                                            @if ($photoUrlCntrlErrors(); as errors) {                                      @if (errors[\\'pattern\\']) {                                              Photo URL must link to a file with an image file extension like jpeg, jpg, png, avif, webp, or gif.                                          }                                  }                                      @if (photoUrlCntrl.value && photoUrlCntrl.valid) {                                                        }                          Upload a photo                      } @else {                          @for (item of vm.profilePhotos; track item.url; let indx = $index) {                                                                                }                                            Use a link to a photo                                    }                @if ($errorCode(); as errorCode) {                                        }                              Update profile                            } @else {          }  } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VerifiedFailed.html":{"url":"interfaces/VerifiedFailed.html","title":"interface - VerifiedFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VerifiedFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/reset-password/reset-password.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Code verification failed.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                        \n                                            showForm\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This makes the type checker happy during destructuring.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Firebase response error code.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showForm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showForm:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    On Firebase error hide the form and show the error message.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Auth, confirmPasswordReset, verifyPasswordResetCode } from '@angular/fire/auth';\nimport {\n  from,\n  merge,\n  of,\n  startWith,\n  Subject,\n  switchMap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { getErrorCode } from '../error-code';\n\n/** Combined results of all possible password verfication and confirmation paths. */\nexport type ResetPasswordResults = PasswordResetSuccess | ShowForm | VerifiedFailed | undefined;\n\n/** Combined end results of password confirmation */\ntype ConfirmResult = PasswordResetSuccess | ShowForm;\n\n/** Final state after resetting password. */\ninterface PasswordResetSuccess {\n  /** This makes the template type checker happy. */\n  readonly errorCode: undefined;\n  /** On success hide the form and show the success message. */\n  readonly showForm: false;\n}\n\n/** Verified success & password reset failure. */\ninterface ShowForm {\n  /** User email address to reset password for, from Firebase oobCode. */\n  readonly email: string;\n  /** Firebase response error code, if any. */\n  readonly errorCode?: string;\n  /** Display the reset password form to collect and confirm the new password. */\n  readonly showForm: true;\n}\n\n/** Code verification failed. */\ninterface VerifiedFailed {\n  /** This makes the type checker happy during destructuring. */\n  readonly email: undefined;\n  /** Firebase response error code. */\n  readonly errorCode: string;\n  /** On Firebase error hide the form and show the error message. */\n  readonly showForm: false;\n}\n\n/** Combined end results of possword verification. */\ntype VerifiedResult = ShowForm | VerifiedFailed;\n\n/**\n * Handles both password reset oobCode verification, and password reset confirmation.\n */\n@Injectable({ providedIn: 'root' })\nexport class ResetPasswordService {\n  private readonly _auth: Auth = inject(Auth);\n  private readonly _newPasswordSubject$: Subject = new Subject();\n\n  /**\n   * Triggers the confirmPasswordReset promise to apply the action code and replace the user's password.\n   */\n  public replacePassword(newPassword: string): void {\n    this._newPasswordSubject$.next(newPassword);\n  }\n\n  /**\n   * Sets up an Observable that will first verify the oobCode is valid for password resetting, and\n   * then show the password reset form and the user's email address.\n   * This is followed by setting up a subject to emit a new password that will then be confirmed as\n   * the new password for the user. While that action is pending it emits `undefined` to show the\n   * spinner again. In the event of an error it shows the form again with an error message.\n   */\n  public resetPassword$(code: string | undefined): Observable {\n    return of(code).pipe(\n      switchMap(async (oobCode: string | undefined): Promise => this._verifyCode(oobCode)),\n      switchMap((verifyResults: VerifiedResult): Observable => {\n        const verifyResults$ = of(verifyResults);\n        const { email } = verifyResults;\n\n        // Verified succeeded\n        if (email) {\n          // This design with an inner `merge` after `_verifyCode` settles is to accomodate passing\n          // the email to _confirmPasswordReset in case the new password is rejected.\n          // However, it does make testing this path more complicated I think. Would it be better to\n          // move the merge to the return of resetPassword$ and store the email as a private property?\n          const confirmPasswordReset$ = this._newPasswordSubject$.pipe(\n            switchMap((newPassword: string): Observable => {\n              const promise = this._confirmPasswordReset(code, email, newPassword);\n              return from(promise)\n                // Show the spinner while applying the action code.\n                .pipe(startWith(undefined));\n            }),\n          );\n\n          return merge(\n            // This will emit first after code verification.\n            verifyResults$,\n            // This will emit after form submission.\n            confirmPasswordReset$,\n          );\n        }\n\n        // Verified failed\n        return verifyResults$;\n      }),\n    );\n  }\n\n  /**\n   * Applies the new password to the user's account using the oobCode.\n   * @param email - Is necessary only in the case that `confirmPasswordReset` fails, and we need to\n   *              redisplay the form.\n   * @throws If the oobCode is falsy\n   */\n  private async _confirmPasswordReset(code: string | undefined, email: string, newPassword: string): Promise {\n    if (code) {\n      try {\n        await confirmPasswordReset(this._auth, code, newPassword);\n        return { errorCode: undefined, showForm: false };\n      } catch (err: unknown) {\n        return { email, errorCode: getErrorCode(err), showForm: true };\n      }\n    }\n    throw new Error('oobCode not found');\n  }\n\n  /**\n   * This identifies the email for the User who's password would be reset by the oobCode.\n   */\n  private async _verifyCode(code: string | undefined): Promise {\n    if (code) {\n      try {\n        const email = await verifyPasswordResetCode(this._auth, code);\n        return { email, showForm: true };\n      } catch (err: unknown) {\n        return { email: undefined, errorCode: getErrorCode(err), showForm: false };\n      }\n    }\n\n    return { email: undefined, errorCode: 'oobCode not found', showForm: false };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VerifyEmailComponent.html":{"url":"components/VerifyEmailComponent.html","title":"component - VerifyEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VerifyEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/verify-email/verify-email.component.ts\n\n\n\n    \n        Description\n    \n    \n        Marks the user's email as verified.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-verify-email\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                                SpinnerComponent\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./verify-email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Private\n                                    Readonly\n                                _service\n                            \n                            \n                                    Public\n                                    Readonly\n                                vm\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/verify-email/verify-email.component.ts:34\n                            \n                        \n\n                \n                    \n                            Gets the current navigation statically to obtain the oobCode from Firebase needed to verify the\nemail address of the User.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/verify-email/verify-email.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerifyEmailService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/verify-email/verify-email.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        vm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Promise\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/verify-email/verify-email.component.ts:31\n                        \n                    \n\n            \n                \n                    Observable wrapper around the template that performs the actual verification and displays the\nresults of the verification.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { Router, RouterLink } from '@angular/router';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { getState } from '../actions/get-state';\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { VerifyEmailService } from './verify-email.service';\nimport type { VerifyEmailResult } from './verify-email.service';\n\n/**\n * Marks the user's email as verified.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    SpinnerComponent,\n    RouterLink,\n  ],\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n})\nexport class VerifyEmailComponent {\n  /**\n   * Observable wrapper around the template that performs the actual verification and displays the\n   * results of the verification.\n   */\n  public readonly vm: Promise;\n\n  private readonly _router: Router;\n  private readonly _service: VerifyEmailService;\n\n  /**\n   * Gets the current navigation statically to obtain the oobCode from Firebase needed to verify the\n   * email address of the User.\n   */\n  constructor() {\n    this._router = inject(Router);\n    this._service = inject(VerifyEmailService);\n\n    const { continueUrl, oobCode } = getState(this._router.getCurrentNavigation());\n    this.vm = this._service.verifyEmail(oobCode, continueUrl);\n  }\n}\n\n    \n\n    \n        @if (vm | async; as vm) {\n  \n    @if (vm.verified) {\n      \n        Your email has been verified!\n      \n      \n        Continue\n      \n    } @else {\n      \n        There was a problem with your verification link\n      \n      \n        \n      \n      \n        Please\n        contact support\n        for assistance.\n      \n    }\n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (vm | async; as vm) {      @if (vm.verified) {              Your email has been verified!                    Continue          } @else {              There was a problem with your verification link                                        Please        contact support        for assistance.          }  } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'QuizEditorComponent', 'selector': 'app-editor'},{'name': 'QuizListComponent', 'selector': 'app-list'},{'name': 'QuizPresenterComponent', 'selector': 'app-presenter'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VerifyEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VerifyEmailResult.html":{"url":"interfaces/VerifyEmailResult.html","title":"interface - VerifyEmailResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VerifyEmailResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/verify-email/verify-email.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Results of verifying an email address with Firebase.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            continueUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                        \n                                            verified\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        continueUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        continueUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Destination after verifying email.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Error that prevented verification, if verfied is false.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        verified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Was the email verified successfully.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { applyActionCode, Auth } from '@angular/fire/auth';\n\nimport { getErrorCode } from '../error-code';\n\n/**\n * Results of verifying an email address with Firebase.\n */\nexport interface VerifyEmailResult {\n  /** Destination after verifying email. */\n  readonly continueUrl: string;\n  /** Error that prevented verification, if verfied is false. */\n  readonly errorCode?: string;\n  /** Was the email verified successfully. */\n  readonly verified: boolean;\n}\n\n/**\n * Wrapper for verifying an email with Firebase. This is mostly just to make unit testing easier.\n */\n@Injectable({ providedIn: 'root' })\nexport class VerifyEmailService {\n  private readonly _auth: Auth = inject(Auth);\n\n  /**\n   * Apply the oobCode to verify the user account's email address.\n   * Catches errors and wraps in the results interface for use in the template.\n   */\n  public async verifyEmail(oobCode: string | undefined, continueUrl: string = '/'): Promise {\n    if (oobCode) {\n      try {\n        await applyActionCode(this._auth, oobCode);\n        return { continueUrl, verified: true };\n      } catch (err: unknown) {\n        const errorCode = getErrorCode(err);\n        return { continueUrl, errorCode, verified: false };\n      }\n    }\n\n    return { continueUrl, errorCode: 'oobCode not found', verified: false };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VerifyEmailService.html":{"url":"injectables/VerifyEmailService.html","title":"injectable - VerifyEmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VerifyEmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/verify-email/verify-email.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Wrapper for verifying an email with Firebase. This is mostly just to make unit testing easier.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _auth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyEmail(oobCode: string | undefined, continueUrl: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/verify-email/verify-email.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Apply the oobCode to verify the user account's email address.\nCatches errors and wraps in the results interface for use in the template.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                oobCode\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                continueUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '/'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Auth\n\n                    \n                \n                \n                    \n                        Default value : inject(Auth)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/verify-email/verify-email.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { applyActionCode, Auth } from '@angular/fire/auth';\n\nimport { getErrorCode } from '../error-code';\n\n/**\n * Results of verifying an email address with Firebase.\n */\nexport interface VerifyEmailResult {\n  /** Destination after verifying email. */\n  readonly continueUrl: string;\n  /** Error that prevented verification, if verfied is false. */\n  readonly errorCode?: string;\n  /** Was the email verified successfully. */\n  readonly verified: boolean;\n}\n\n/**\n * Wrapper for verifying an email with Firebase. This is mostly just to make unit testing easier.\n */\n@Injectable({ providedIn: 'root' })\nexport class VerifyEmailService {\n  private readonly _auth: Auth = inject(Auth);\n\n  /**\n   * Apply the oobCode to verify the user account's email address.\n   * Catches errors and wraps in the results interface for use in the template.\n   */\n  public async verifyEmail(oobCode: string | undefined, continueUrl: string = '/'): Promise {\n    if (oobCode) {\n      try {\n        await applyActionCode(this._auth, oobCode);\n        return { continueUrl, verified: true };\n      } catch (err: unknown) {\n        const errorCode = getErrorCode(err);\n        return { continueUrl, errorCode, verified: false };\n      }\n    }\n\n    return { continueUrl, errorCode: 'oobCode not found', verified: false };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ViewModel.html":{"url":"interfaces/ViewModel.html","title":"interface - ViewModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ViewModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/user-profile/user-profile.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Template model data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            profilePhotos\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        profilePhotos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profilePhotos:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    List of photos uploaded to Firebase storage for the user's profile\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Firebase User object\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AsyncPipe, NgOptimizedImage } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { Signal, WritableSignal } from '@angular/core';\nimport { updateProfile } from '@angular/fire/auth';\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport type { ValidationErrors } from '@angular/forms';\nimport {\n  filter,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser, User } from '@app/core/user.token';\nimport { controlErrorsSignal } from '@app/shared/control-errors-signal.util';\nimport { controlInvalidSignal } from '@app/shared/control-invalid-signal.util';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\nimport { PhotoUploadComponent } from '../user-photos/photo-upload/photo-upload.component';\nimport { UserPhotosService } from '../user-photos/user-photos.service';\nimport type { Photo } from '../user-photos/user-photos.service';\n\n/**\n * Angular FormGroup for Firebase [updateProfile](https://firebase.google.com/docs/reference/node/firebase.User#updateprofile)\n * parameters.\n */\ntype ProfileFormGroup = FormGroup;\n  photoURL: FormControl;\n}>;\n\n/**\n * Template model data\n */\ninterface ViewModel {\n  /** List of photos uploaded to Firebase storage for the user's profile */\n  readonly profilePhotos: readonly Photo[];\n  /** Firebase User object */\n  readonly user: User;\n}\n\n/**\n * Form to manage Firebase User profile.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    NgOptimizedImage,\n    PhotoUploadComponent,\n    ReactiveFormsModule,\n    SpinnerComponent,\n  ],\n  selector: 'app-user-profile',\n  styleUrl: './user-profile.component.scss',\n  templateUrl: './user-profile.component.html',\n})\nexport class UserProfileComponent {\n  /** Error codes from `updateProfile` when form is submitted. */\n  public readonly $errorCode: WritableSignal;\n  /** Error messages specific for the displayName field. */\n  public readonly $nameCntrlErrors: Signal;\n  /** Aria-invalid attribute for displayName field. */\n  public readonly $nameCntrlInvalid: Signal;\n  /** Error messages specific for the photoURL field (custom URL entry). */\n  public readonly $photoUrlCntrlErrors: Signal;\n  /** Aria-invalid attribute for photoURL field. */\n  public readonly $photoUrlCntrlInvalid: Signal;\n  /** Toggle spinner and HTML Form display. */\n  public readonly $showForm: WritableSignal;\n  /** Toggle photoURL URL input and upload file interface. */\n  public readonly $showUrlInput: WritableSignal;\n  public readonly nameCntrl: FormControl;\n  public readonly photoUrlCntrl: FormControl;\n  public readonly profileForm: ProfileFormGroup;\n  /**\n   * Collect the current User and profile photos uploaded to Firebase storage. Initalize `profileForm`\n   * with data from Firebase User, and determine if photoURL is an uploaded file. If so, default the\n   * interace to uploads instead of the URL.\n   */\n  public readonly vm$: Observable;\n\n  private readonly _userPhotoService: UserPhotosService;\n\n  constructor() {\n    this._userPhotoService = inject(UserPhotosService);\n\n    this.nameCntrl = new FormControl(null, Validators.required); // eslint-disable-line unicorn/no-null -- Forms use null\n    this.$nameCntrlErrors = controlErrorsSignal(this.nameCntrl);\n    this.$nameCntrlInvalid = controlInvalidSignal(this.nameCntrl);\n\n    // eslint-disable-next-line unicorn/no-null -- Forms use null\n    this.photoUrlCntrl = new FormControl(null, Validators.pattern(/\\.(?:avif|gif|jpe?g|png|webp)(?:\\?.*)?$/u));\n    this.$photoUrlCntrlErrors = controlErrorsSignal(this.photoUrlCntrl);\n    this.$photoUrlCntrlInvalid = controlInvalidSignal(this.photoUrlCntrl);\n\n    this.profileForm = new FormGroup({\n      displayName: this.nameCntrl,\n      photoURL: this.photoUrlCntrl,\n    });\n\n    this.$errorCode = signal('');\n    this.$showForm = signal(false);\n    this.$showUrlInput = signal(true);\n\n    // Not handling non-logged in users because the Route guards should.\n    this.vm$ = inject(USER$).pipe(\n      filter((user: MaybeUser): user is User => user != undefined),\n      tap({\n        next: (user: User): void => {\n          this.profileForm.patchValue(user);\n          this.$showForm.set(true);\n        },\n      }),\n      switchMap((user: User): Observable => {\n        const { photoURL, uid } = user;\n        // Get uploads for this user, and then identify if the User#photoURL is one of the uploaded\n        // files.\n        return this._userPhotoService.getProfilePhotos(uid).pipe(\n          map((profilePhotos: Photo[]): ViewModel => {\n            for (const photo of profilePhotos) {\n              if (photo.url === photoURL) {\n                // Show the upload photo UI instead since that is what was used.\n                this.$showUrlInput.set(false);\n                break;\n              }\n            }\n\n            return { profilePhotos, user };\n          }),\n        );\n      }),\n    );\n  }\n\n  /**\n   * Update the Firebase User profile data.\n   */\n  public async onSubmit(user: User): Promise {\n    const { displayName, photoURL } = this.profileForm.value;\n\n    // Validators prevent email1 or password being falsy, but TypeScript doesn't know that.\n    if (this.profileForm.invalid || !displayName) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this.$showForm.set(false);\n    this.$errorCode.set(''); // Clear out any existing errors\n\n    try {\n      // It appears that the types for photoURL are incorrect and you must use an empty string\n      // instead of null to clear the value. https://stackoverflow.com/questions/71047275/setting-a-firebase-user-photourl-value-to-null\n      // auth/invalid-json-payload-received.-/photourl-must-be-string\n      const safePhotoURL = photoURL ?? '';\n      await updateProfile(user, { displayName, photoURL: safePhotoURL });\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n    }\n\n    this.$showForm.set(true);\n  }\n\n  /**\n   * Toggle the UI to set the photoURL manually to a remote URL or to picking from a list of uploaded\n   * profile photos in Firebase Storage.\n   */\n  public togglePhotoUrl(): void {\n    this.$showUrlInput.update((showUrl: boolean): boolean => !showUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ViewModel-1.html":{"url":"interfaces/ViewModel-1.html","title":"interface - ViewModel-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ViewModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/quizzes/list/list.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            quizzes\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        quizzes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quizzes:         Quiz[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Quiz[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AsyncPipe, DatePipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { WritableSignal } from '@angular/core';\nimport { Router, RouterLink } from '@angular/router';\nimport { filter, map, switchMap } from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser, User } from '@app/core/user.token';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { QuizService } from '../quiz.service';\nimport type { Quiz } from '../quiz.service';\n\ninterface ViewModel {\n  quizzes: Quiz[];\n  user: User;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    DatePipe,\n    SpinnerComponent,\n    RouterLink,\n  ],\n  selector: 'app-list',\n  styleUrl: './list.component.scss',\n  templateUrl: './list.component.html',\n})\nexport class QuizListComponent {\n  /** Displays a modal spinner while creating a new Quiz. */\n  public readonly $blockWindow: WritableSignal;\n  /** List of all Quizzes accessible to the user, and the user. */\n  public readonly vm$: Observable;\n\n  private readonly _router: Router;\n  private readonly _service: QuizService;\n\n  constructor() {\n    this._router = inject(Router);\n    this._service = inject(QuizService);\n\n    this.$blockWindow = signal(false);\n\n    // Not handling non-logged in users because the Route guards should.\n    this.vm$ = inject(USER$).pipe(\n      filter((user: MaybeUser): user is User => user != undefined),\n      switchMap((user: User): Observable => this._service.list(user.uid).pipe(\n        map((quizzes: Quiz[]): ViewModel => ({ quizzes, user })),\n      )),\n    );\n  }\n\n  public async createNewQuiz(userId: string): Promise {\n    this.$blockWindow.set(true);\n    const quizId = await this._service.create(userId);\n    await this._router.navigate([ 'quizzes', quizId, 'edit' ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/app-title-strategy.service.ts\n            \n            injectable\n            AppTitleStrategyService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                        src/app/core/firebase-app.provider.ts\n            \n            variable\n            provideOurFirebaseApp\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/email-verified.guard.ts\n            \n            variable\n            emailVerifiedGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/no-auth.guard.ts\n            \n            variable\n            noAuthGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/core/user.token.ts\n            \n            variable\n            USER$\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/core/user.token.ts\n            \n            type alias\n            MaybeUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/core/user.token.ts\n            \n            type alias\n            MaybeUser$\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/identity/actions/actions.component.ts\n            \n            component\n            ActionsComponent\n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                src/app/identity/actions/actions.component.ts\n            \n            interface\n            ActionCodeState\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/identity/actions/actions.component.ts\n            \n            variable\n            cleanUrl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/actions/get-state.ts\n            \n            variable\n            getState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/identity/auth-error-messages/auth-error-messages.component.ts\n            \n            component\n            AuthErrorMessagesComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/identity/change-email/change-email.component.ts\n            \n            component\n            ChangeEmailComponent\n            \n                68 %\n                (13/19)\n            \n        \n        \n            \n                \n                        src/app/identity/change-email/change-email.component.ts\n            \n            type alias\n            ChangeEmailFormGroup\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/identity/change-password/change-password.component.ts\n            \n            component\n            ChangePasswordComponent\n            \n                68 %\n                (13/19)\n            \n        \n        \n            \n                \n                        src/app/identity/change-password/change-password.component.ts\n            \n            type alias\n            ChangePasswordFormGroup\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/identity/confirm-email/confirm-email.component.ts\n            \n            component\n            ConfirmEmailComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                        src/app/identity/confirm-email/send-confirm-email.ts\n            \n            type alias\n            SendVerifyEmailStatuses\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/identity/delete-account/delete-account.component.ts\n            \n            component\n            DeleteAccountComponent\n            \n                62 %\n                (10/16)\n            \n        \n        \n            \n                \n                        src/app/identity/delete-account/delete-account.component.ts\n            \n            type alias\n            DeleteAccountFormGroup\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/delete-account/delete-account.component.ts\n            \n            type alias\n            DialogRef\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/error-code.ts\n            \n            variable\n            getErrorCode\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/identity/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                        src/app/identity/forgot-password/forgot-password.component.ts\n            \n            type alias\n            ForgotFormGroup\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/identity/identity-forms.ts\n            \n            interface\n            ControlStruct\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/identity/identity-forms.ts\n            \n            variable\n            createEmailControl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/identity-forms.ts\n            \n            variable\n            createPasswordControl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/identity-forms.ts\n            \n            variable\n            getControlStructure\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/identity/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                64 %\n                (11/17)\n            \n        \n        \n            \n                \n                        src/app/identity/login/login.component.ts\n            \n            type alias\n            LoginFormGroup\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/identity/logout/logout.component.ts\n            \n            component\n            LogoutComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/identity/recover-email/recover-email.component.ts\n            \n            component\n            RecoverEmailComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/identity/recover-email/recover-email.service.ts\n            \n            injectable\n            RecoverEmailService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/identity/recover-email/recover-email.service.ts\n            \n            interface\n            ApplyResult\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/identity/recover-email/recover-email.service.ts\n            \n            interface\n            RecoverEmailResults\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/identity/recover-email/recover-email.service.ts\n            \n            variable\n            SEND_EMAIL_DELAY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/identity/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                68 %\n                (11/16)\n            \n        \n        \n            \n                \n                        src/app/identity/reset-password/reset-password.component.ts\n            \n            type alias\n            ResetPasswordFormGroup\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/identity/reset-password/reset-password.service.ts\n            \n            injectable\n            ResetPasswordService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/identity/reset-password/reset-password.service.ts\n            \n            interface\n            PasswordResetSuccess\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/identity/reset-password/reset-password.service.ts\n            \n            interface\n            ShowForm\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/identity/reset-password/reset-password.service.ts\n            \n            interface\n            VerifiedFailed\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/identity/reset-password/reset-password.service.ts\n            \n            type alias\n            ConfirmResult\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/reset-password/reset-password.service.ts\n            \n            type alias\n            ResetPasswordResults\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/reset-password/reset-password.service.ts\n            \n            type alias\n            VerifiedResult\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/identity/user-photos/photo-manager/photo-manager.component.ts\n            \n            component\n            PhotoManagerComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/user-photos/photo-upload/photo-upload.component.ts\n            \n            component\n            PhotoUploadComponent\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                        src/app/identity/user-photos/photo-upload/photo-upload.component.ts\n            \n            type alias\n            FileInputRef\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/identity/user-photos/user-photos.service.ts\n            \n            injectable\n            UserPhotosService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/identity/user-photos/user-photos.service.ts\n            \n            interface\n            Photo\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/identity/user-photos/user-photos.service.ts\n            \n            interface\n            Progress\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/identity/user-photos/user-photos.service.ts\n            \n            variable\n            MAXIMUM_PHOTOS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/user-photos/user-photos.service.ts\n            \n            variable\n            PHOTO_DIR\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/user-photos/user-photos.service.ts\n            \n            variable\n            RADIX\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/user-photos/user-photos.service.ts\n            \n            variable\n            SKIP_WHOLE_NUM\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/identity/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                68 %\n                (11/16)\n            \n        \n        \n            \n                \n                src/app/identity/user-profile/user-profile.component.ts\n            \n            interface\n            ViewModel\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/identity/user-profile/user-profile.component.ts\n            \n            type alias\n            ProfileFormGroup\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/validators/confirm-match/confirm-match.validator.ts\n            \n            variable\n            confirmMatch\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/validators/confirm-match/confirm-match.validator.ts\n            \n            variable\n            ERROR_NAME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/validators/confirm-match/match-error.signal.ts\n            \n            variable\n            confirmMatchFormErrors\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/validators/passwords/firebase.validator.ts\n            \n            variable\n            passwordFirebaseValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/validators/passwords/strength.validator.ts\n            \n            variable\n            passwordStrengthValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/validators/passwords/util.ts\n            \n            variable\n            getPasswordControlValue\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/identity/verify-email/verify-email.component.ts\n            \n            component\n            VerifyEmailComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/identity/verify-email/verify-email.service.ts\n            \n            injectable\n            VerifyEmailService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/identity/verify-email/verify-email.service.ts\n            \n            interface\n            VerifyEmailResult\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/layouts/central/central.component.ts\n            \n            component\n            CentralLayoutComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/layouts/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/layouts/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/layouts/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/layouts/standard/standard.component.ts\n            \n            component\n            StandardLayoutComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/legal/privacy-policy/privacy-policy.component.ts\n            \n            component\n            PrivacyPolicyComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/legal/terms-and-conditions/terms-and-conditions.component.ts\n            \n            component\n            TermsAndConditionsComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/page-not-found/page-not-found.component.ts\n            \n            variable\n            ROBOTS_META\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/quizzes/editor/editor.component.ts\n            \n            component\n            QuizEditorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/quizzes/list/list.component.ts\n            \n            component\n            QuizListComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/quizzes/list/list.component.ts\n            \n            interface\n            ViewModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/quizzes/presenter/presenter.component.ts\n            \n            component\n            QuizPresenterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/quizzes/quiz.service.ts\n            \n            injectable\n            QuizService\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/quizzes/quiz.service.ts\n            \n            interface\n            Quiz\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/quizzes/quiz.service.ts\n            \n            interface\n            QuizModel\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/quizzes/quiz.service.ts\n            \n            interface\n            QuizPayload\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/quizzes/quiz.service.ts\n            \n            variable\n            COLLECTION_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/quizzes/quiz.service.ts\n            \n            variable\n            converter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/quizzes/quiz.service.ts\n            \n            variable\n            timestampFromDate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/shared/constants.ts\n            \n            variable\n            FORMS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/shared/constants.ts\n            \n            variable\n            PASSWORDS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/control-errors-signal.util.ts\n            \n            interface\n            CombinedObs\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/shared/control-errors-signal.util.ts\n            \n            variable\n            controlErrorsSignal\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/control-invalid-signal.util.ts\n            \n            interface\n            ControlProperties\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/shared/control-invalid-signal.util.ts\n            \n            variable\n            controlInvalidSignal\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/shared/control-invalid-signal.util.ts\n            \n            variable\n            isInvalid\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/spinner/spinner.component.ts\n            \n            component\n            SpinnerComponent\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^19.1.6\n        \n            @angular/common : ^19.1.6\n        \n            @angular/compiler : ^19.1.6\n        \n            @angular/core : ^19.1.6\n        \n            @angular/fire : ^19.0.0\n        \n            @angular/forms : ^19.1.6\n        \n            @angular/platform-browser : ^19.1.6\n        \n            @angular/platform-browser-dynamic : ^19.1.6\n        \n            @angular/router : ^19.1.6\n        \n            @angular/service-worker : ^19.1.6\n        \n            @fortawesome/angular-fontawesome : ^1.0.0\n        \n            @fortawesome/free-brands-svg-icons : ^6.7.1\n        \n            @fortawesome/free-regular-svg-icons : ^6.7.1\n        \n            @fortawesome/free-solid-svg-icons : ^6.7.1\n        \n            check-password-strength : ^3.0.0\n        \n            modern-normalize : ^3.0.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBrainFry Pub Quiz App\n\nDeveloper Setup\nThere are two primary areas of this code:\n\nTerraform Infrastructure as Code used to create the GCP Firebase project.\nAngular Single Page Application\n\nInstall general dependencies:\nExample :brew install dprint git git-absorb git-machete\nnpm --global install markdownlint-cli prettier-plugin-multiline-arrays prettierTo manage the application infrastructure see Developer Setup Terraform Doc\nTo work on the Angular application see Developer Setup Angular Doc\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\nExample :                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\nExample :                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\nExample :a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\nExample :a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\nExample :a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\nExample :                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\nExample :\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\nExample :  Copyright (C)   \nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' and show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttps://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttps://www.gnu.org/licenses/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    29 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    17 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n        \n            Description : Angular application for creating and presenting pub quizzes.\n        \n            Homepage : https://brainfry-app.web.app/\n        \n            Bugs : https://github.com/rgant/brainfry/issues/new\n        \n            License : AGPL-3.0-or-later\n        \n            Repository : git+https://github.com/rgant/brainfry.git\n        \n            Author : J Rob Gant\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ChangeEmailFormGroup   (src/.../change-email.component.ts)\n                        \n                        \n                            ChangePasswordFormGroup   (src/.../change-password.component.ts)\n                        \n                        \n                            ConfirmResult   (src/.../reset-password.service.ts)\n                        \n                        \n                            DeleteAccountFormGroup   (src/.../delete-account.component.ts)\n                        \n                        \n                            DialogRef   (src/.../delete-account.component.ts)\n                        \n                        \n                            FileInputRef   (src/.../photo-upload.component.ts)\n                        \n                        \n                            ForgotFormGroup   (src/.../forgot-password.component.ts)\n                        \n                        \n                            LoginFormGroup   (src/.../login.component.ts)\n                        \n                        \n                            MaybeUser   (src/.../user.token.ts)\n                        \n                        \n                            MaybeUser$   (src/.../user.token.ts)\n                        \n                        \n                            ProfileFormGroup   (src/.../user-profile.component.ts)\n                        \n                        \n                            ResetPasswordFormGroup   (src/.../reset-password.component.ts)\n                        \n                        \n                            ResetPasswordResults   (src/.../reset-password.service.ts)\n                        \n                        \n                            SendVerifyEmailStatuses   (src/.../send-confirm-email.ts)\n                        \n                        \n                            VerifiedResult   (src/.../reset-password.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/identity/change-email/change-email.component.ts\n    \n    \n        \n            \n                \n                    \n                    ChangeEmailFormGroup\n                \n            \n            \n                \n                    Collects the new email with confirmation and the current password.\n\n                \n            \n            \n                \n                        FormGroup\n\n                \n            \n        \n    \n    src/app/identity/change-password/change-password.component.ts\n    \n    \n        \n            \n                \n                    \n                    ChangePasswordFormGroup\n                \n            \n            \n                \n                    Collects the User's current password and their new password with confirmation.\n\n                \n            \n            \n                \n                        FormGroup\n\n                \n            \n        \n    \n    src/app/identity/reset-password/reset-password.service.ts\n    \n    \n        \n            \n                \n                    \n                    ConfirmResult\n                \n            \n            \n                \n                    Combined end results of password confirmation\n\n                \n            \n            \n                \n                        PasswordResetSuccess | ShowForm\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResetPasswordResults\n                \n            \n            \n                \n                    Combined results of all possible password verfication and confirmation paths.\n\n                \n            \n            \n                \n                        PasswordResetSuccess | ShowForm | VerifiedFailed | undefined\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VerifiedResult\n                \n            \n            \n                \n                    Combined end results of possword verification.\n\n                \n            \n            \n                \n                        ShowForm | VerifiedFailed\n\n                \n            \n        \n    \n    src/app/identity/delete-account/delete-account.component.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteAccountFormGroup\n                \n            \n            \n                \n                    Deleting a Firebase User requires a recent authentication.\n\n                \n            \n            \n                \n                        FormGroup\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DialogRef\n                \n            \n            \n                \n                    Template reference to HTML dialog element.\n\n                \n            \n            \n                \n                        ElementRef\n\n                \n            \n        \n    \n    src/app/identity/user-photos/photo-upload/photo-upload.component.ts\n    \n    \n        \n            \n                \n                    \n                    FileInputRef\n                \n            \n            \n                \n                    Template reference to HTML input type=file\n\n                \n            \n            \n                \n                        ElementRef\n\n                \n            \n        \n    \n    src/app/identity/forgot-password/forgot-password.component.ts\n    \n    \n        \n            \n                \n                    \n                    ForgotFormGroup\n                \n            \n            \n                \n                    FormGroup allows the use of (ngSubmit) on the Form element.\n\n                \n            \n            \n                \n                        FormGroup\n\n                \n            \n        \n    \n    src/app/identity/login/login.component.ts\n    \n    \n        \n            \n                \n                    \n                    LoginFormGroup\n                \n            \n            \n                \n                    Email & password credentials for Authentication\n\n                \n            \n            \n                \n                        FormGroup\n\n                \n            \n        \n    \n    src/app/core/user.token.ts\n    \n    \n        \n            \n                \n                    \n                    MaybeUser\n                \n            \n            \n                \n                    The Firebase User object of the currently logged in account, otherwise null.\n\n                \n            \n            \n                \n                        User | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MaybeUser$\n                \n            \n            \n                \n                    Observable of MaybeUser\n\n                \n            \n            \n                \n                            Observable\n\n                \n            \n        \n    \n    src/app/identity/user-profile/user-profile.component.ts\n    \n    \n        \n            \n                \n                    \n                    ProfileFormGroup\n                \n            \n            \n                \n                    Angular FormGroup for Firebase updateProfile\nparameters.\n\n                \n            \n            \n                \n                        FormGroup\n\n                \n            \n        \n    \n    src/app/identity/reset-password/reset-password.component.ts\n    \n    \n        \n            \n                \n                    \n                    ResetPasswordFormGroup\n                \n            \n            \n                \n                    Collect and confirm a new password for user's account.\n\n                \n            \n            \n                \n                        FormGroup\n\n                \n            \n        \n    \n    src/app/identity/confirm-email/send-confirm-email.ts\n    \n    \n        \n            \n                \n                    \n                    SendVerifyEmailStatuses\n                \n            \n            \n                \n                    Before sending: 'unsent'\nWhile send email promise is pending: 'sending'\nAfter email is sent: 'sent'\n\n                \n            \n            \n                \n                        \"sending\" | \"sent\" | \"unsent\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            cleanUrl   (src/.../actions.component.ts)\n                        \n                        \n                            COLLECTION_NAME   (src/.../quiz.service.ts)\n                        \n                        \n                            confirmMatch   (src/.../confirm-match.validator.ts)\n                        \n                        \n                            confirmMatchFormErrors   (src/.../match-error.signal.ts)\n                        \n                        \n                            controlErrorsSignal   (src/.../control-errors-signal.util.ts)\n                        \n                        \n                            controlInvalidSignal   (src/.../control-invalid-signal.util.ts)\n                        \n                        \n                            converter   (src/.../quiz.service.ts)\n                        \n                        \n                            createEmailControl   (src/.../identity-forms.ts)\n                        \n                        \n                            createPasswordControl   (src/.../identity-forms.ts)\n                        \n                        \n                            emailVerifiedGuard   (src/.../email-verified.guard.ts)\n                        \n                        \n                            ERROR_NAME   (src/.../confirm-match.validator.ts)\n                        \n                        \n                            FORMS   (src/.../constants.ts)\n                        \n                        \n                            getControlStructure   (src/.../identity-forms.ts)\n                        \n                        \n                            getErrorCode   (src/.../error-code.ts)\n                        \n                        \n                            getPasswordControlValue   (src/.../util.ts)\n                        \n                        \n                            getState   (src/.../get-state.ts)\n                        \n                        \n                            isInvalid   (src/.../control-invalid-signal.util.ts)\n                        \n                        \n                            MAXIMUM_PHOTOS   (src/.../user-photos.service.ts)\n                        \n                        \n                            noAuthGuard   (src/.../no-auth.guard.ts)\n                        \n                        \n                            passwordFirebaseValidator   (src/.../firebase.validator.ts)\n                        \n                        \n                            PASSWORDS   (src/.../constants.ts)\n                        \n                        \n                            passwordStrengthValidator   (src/.../strength.validator.ts)\n                        \n                        \n                            PHOTO_DIR   (src/.../user-photos.service.ts)\n                        \n                        \n                            provideOurFirebaseApp   (src/.../firebase-app.provider.ts)\n                        \n                        \n                            RADIX   (src/.../user-photos.service.ts)\n                        \n                        \n                            ROBOTS_META   (src/.../page-not-found.component.ts)\n                        \n                        \n                            SEND_EMAIL_DELAY   (src/.../recover-email.service.ts)\n                        \n                        \n                            SKIP_WHOLE_NUM   (src/.../user-photos.service.ts)\n                        \n                        \n                            timestampFromDate   (src/.../quiz.service.ts)\n                        \n                        \n                            USER$   (src/.../user.token.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideOurFirebaseApp(),\n    provideAuth((): Auth => getAuth()),\n    // provideAnalytics((): Analytics => getAnalytics()),\n    // ScreenTrackingService,\n    // UserTrackingService,\n    // provideAppCheck((): AppCheck => {\n    //   const provider = new ReCaptchaEnterpriseProvider('6LfG3rEqAAAAAK18S9UyMuK8wd3JSWjVnmDzmlrT');\n    //   return initializeAppCheck(undefined, { isTokenAutoRefreshEnabled: true, provider });\n    // }),\n    provideFirestore((): Firestore => getFirestore()),\n    // provideFunctions((): Functions => getFunctions()),\n    providePerformance((): FirebasePerformance => getPerformance()),\n    provideServiceWorker(\n      'ngsw-worker.js',\n      {\n        enabled: !isDevMode(),\n        registrationStrategy: 'registerWhenStable:30000',\n      },\n    ),\n    provideStorage((): FirebaseStorage => getStorage()),\n    // provideVertexAI((): VertexAI => getVertexAI()),\n    provideRouter(\n      routes,\n      withComponentInputBinding(),\n      withInMemoryScrolling({ anchorScrolling: 'enabled', scrollPositionRestoration: 'enabled' }),\n    ),\n    { provide: TitleStrategy, useClass: AppTitleStrategyService },\n  ],\n}\n                    \n                \n\n            \n                \n                    Setup global dependencies for the application.\n\n                \n            \n\n        \n    \n\n    src/app/core/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateChildFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  _childRoute: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n): Observable => {\n  const router = inject(Router);\n  const user$ = inject(USER$);\n  const { url } = state;\n\n  return user$.pipe(\n    map((maybeUser: User | null): UrlTree | true => {\n      if (!maybeUser) {\n        return router.parseUrl(`/login?next=${url}`);\n      }\n\n      return true;\n    }),\n  );\n}\n                    \n                \n\n            \n                \n                    Requires that there be a currently logged in user to navigate to certain routes.\nCan be used for both CanActivate and CanActivateChild guards.\n\n                \n            \n\n        \n    \n\n    src/app/identity/actions/actions.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cleanUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (continueUrl: string | undefined): string | undefined => {\n  if (continueUrl) {\n    const url = new URL(continueUrl);\n    return `${url.pathname}${url.search}${url.hash}`;\n  }\n  return undefined;\n}\n                    \n                \n\n            \n                \n                    Firebase Action continueUrl is fully qualified. If it has a value convert it into a relative URL.\n\n                \n            \n\n        \n    \n\n    src/app/quizzes/quiz.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        COLLECTION_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'quizzes'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        converter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FirestoreDataConverter\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Convert the model from the database into the type expected by consumers.\n   * Timestamps should all be converted into Dates.\n   * Add the Document ID.\n   */\n  fromFirestore: (snapshot: QueryDocumentSnapshot, options: SnapshotOptions): Quiz => {\n    const data = snapshot.data(options);\n    return {\n      ...data,\n      id: snapshot.id,\n      createdAt: data.createdAt.toDate(),\n      updatedAt: data.updatedAt.toDate(),\n    };\n  },\n\n  /**\n   * This is a much less useful converter as it doesn't apply to updateDoc.\n   * It's only purpose is to change the Type, if it wasn't here then things would work better but\n   */\n  toFirestore: (quiz: WithFieldValue, _options?: SetOptions): WithFieldValue => {\n    const payload: WithFieldValue = {\n      ...quiz,\n      createdAt: timestampFromDate(quiz.createdAt),\n      updatedAt: timestampFromDate(quiz.updatedAt),\n    };\n    return payload;\n  },\n}\n                    \n                \n\n            \n                \n                    In order to set the types correctly on the CollectionReference we need to use a FirestoreDataConverter\nto manipulate the types.\nAt the same time we can perform other actions like converting Timestamps to Dates and adding the\ndocument id.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timestampFromDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (date: FieldValue | WithFieldValue): FieldValue | WithFieldValue => {\n  if (date instanceof FieldValue) {\n    return date;\n  }\n  if (date instanceof Date) {\n    return Timestamp.fromDate(date);\n  }\n  // This will never be thrown since the `date` value is either a Date or a FieldValue (unless\n  // something goes terribly wrong). I opened a ticket about how `WithFieldValue` mangles inner class\n  // types: https://github.com/googleapis/nodejs-firestore/issues/2291\n  throw new TypeError(`Unknown type ${typeof date}`);\n}\n                    \n                \n\n            \n                \n                    FirestoreDataConverter uses WithFieldValue for toFirestore, which climbs inside of the Date object\nand messes with all of the type signatures. So this method is over engineered to try and handle\nthat unlikely case that the date is neither a FieldValue nor a Date.\n\n                \n            \n\n        \n    \n\n    src/app/identity/validators/confirm-match/confirm-match.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        confirmMatch\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (password1: string, password2: string): ValidatorFn =>\n  // control: AbstractControl is required by the type ValidatorFn, but the actual expected type is FormGroup.\n  (formGrp: AbstractControl): ValidationErrors | null => {\n    if (!(formGrp instanceof FormGroup)) {\n      throw new TypeError('Control must be an instance of FormGroup.');\n    }\n\n    const control1 = formGrp.get(password1);\n    const control2 = formGrp.get(password2);\n\n    if (!control1) {\n      throw new Error(`Cannot find FormControl named '${password1}'.`);\n    }\n    if (!control2) {\n      throw new Error(`Cannot find FormControl named '${password2}'.`);\n    }\n\n    // eslint-disable-next-line unicorn/no-null -- ValidatorFn returns null\n    return control1.value === control2.value ? null : { [ERROR_NAME]: true };\n  }\n                    \n                \n\n            \n                \n                    Requires that two controls have the same value to validate the FormGroup.\nUsage:\nExample :  new FormGroup(\n   {\n     password1: new FormControl(null, [ Validators.required, Validators.minLength(num), Validators.maxLength(num) ]),\n     password2: new FormControl(null, [ Validators.required, Validators.minLength(num), Validators.maxLength(num) ]),\n   },\n   { validators: confirmMatch('password1', 'password2') },\n );\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ERROR_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'confirmmatch'\n                    \n                \n\n            \n                \n                    ValidationError property name for confirmMatch Validator.\n\n                \n            \n\n        \n    \n\n    src/app/identity/validators/confirm-match/match-error.signal.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        confirmMatchFormErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (form: FormGroup, control1: FormControl, control2: FormControl): Signal => {\n  const initialValue: boolean = form.invalid && control1.valid && control2.valid && form.errors?.[ERROR_NAME] != undefined;\n\n  const formStatus$: Observable = form.statusChanges.pipe(\n    // Wait for input to stop before displaying error messages\n    debounceTime(FORMS.inputDebounce),\n    map((status: FormControlStatus): boolean => {\n      const { errors } = form;\n      if (status === 'INVALID' && control1.valid && control2.valid && errors) {\n        return errors[ERROR_NAME] != undefined;\n      }\n      return false;\n    }),\n  );\n\n  return toSignal(formStatus$, { initialValue });\n}\n                    \n                \n\n            \n                \n                    Only display the confirmmatch error if the two controls are valid, and the form has the error.\n\n                \n            \n\n        \n    \n\n    src/app/shared/control-errors-signal.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        controlErrorsSignal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (control: AbstractControl): Signal => {\n  // Only care about dirty controls for purposes of displaying validation error messages.\n  const controlDirty$: Observable = control.events.pipe(\n    filter((event: ControlEvent): event is PristineChangeEvent => event instanceof PristineChangeEvent),\n    map((event: PristineChangeEvent): boolean => !event.pristine),\n  );\n\n  // When status is INVALID emit control.errors, otherwise undefined\n  const controlStatus$: Observable = control.statusChanges.pipe(\n    // Wait for input to stop before displaying error messages\n    debounceTime(FORMS.inputDebounce),\n    map((status: FormControlStatus): ValidationErrors | undefined => {\n      const { errors } = control;\n      if (status === 'INVALID' && errors) {\n        return errors;\n      }\n      return undefined;\n    }),\n  );\n\n  // Combine the Observables so that ValidationErrors are emitted only when the control is dirty.\n  const controlErrors$: Observable = combineLatest({\n    /* eslint-disable rxjs/finnish */\n    dirty: controlDirty$,\n    errors: controlStatus$,\n  }).pipe(\n    map(({ dirty, errors }: CombinedObs): ValidationErrors | undefined => {\n      if (dirty) {\n        return errors;\n      }\n\n      return undefined;\n    }),\n  );\n\n  return toSignal(controlErrors$);\n}\n                    \n                \n\n            \n                \n                    Creates an Angular Signal that emits the validation errors for a Control only when the Control is\nalso modified (dirty).\n\n                \n            \n\n        \n    \n\n    src/app/shared/control-invalid-signal.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        controlInvalidSignal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (control: AbstractControl): Signal => {\n  const defaultProperties: ControlProperties = {\n    dirty: control.dirty,\n    invalid: control.invalid,\n    touched: control.touched,\n  };\n  const initialValue = isInvalid(defaultProperties);\n\n  const controlEvents$: Observable = control.events.pipe(\n    scan(\n      (current: ControlProperties, event: ControlEvent): ControlProperties => {\n        if (event instanceof PristineChangeEvent) {\n          return { ...current, dirty: !event.pristine };\n        }\n\n        if (event instanceof TouchedChangeEvent) {\n          return { ...current, touched: event.touched };\n        }\n\n        if (event instanceof StatusChangeEvent) {\n          return { ...current, invalid: event.status === 'INVALID' };\n        }\n\n        return current;\n      },\n      defaultProperties,\n    ),\n    map((properties: ControlProperties): boolean => isInvalid(properties)),\n    distinctUntilChanged(),\n  );\n\n  return toSignal(controlEvents$, { initialValue });\n}\n                    \n                \n\n            \n                \n                    Create an Angular Signal that flags as modified and invalid based on the Control properties.\n\nInvalid - the value fails validation checks.\nDirty - the value is different from the initial value.\nTouched - the Control has been focused during the current view.\n\nThis ensures that the aria-invalid attribute is only set on Controls that the user has interacted\nwith.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (properties: ControlProperties): boolean => {\n  let invalid = true;\n\n  for (const val of Object.values(properties)) {\n    invalid &&= Boolean(val);\n  }\n\n  return invalid;\n}\n                    \n                \n\n            \n                \n                    When all the ControlProperties are true then the Control is invalid.\n\n                \n            \n\n        \n    \n\n    src/app/identity/identity-forms.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createEmailControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): ControlStruct => {\n  // eslint-disable-next-line unicorn/no-null -- DOM forms use null\n  const control = new FormControl(null, [ Validators.required, Validators.email ]);\n  return getControlStructure(control);\n}\n                    \n                \n\n            \n                \n                    Emails are required and must be a valid email address.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createPasswordControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (isNewPassword: boolean = false): ControlStruct => {\n  const control = new FormControl(\n    null, // eslint-disable-line unicorn/no-null -- DOM forms use null\n    [\n      Validators.required,\n      Validators.minLength(PASSWORDS.minLength),\n      Validators.maxLength(PASSWORDS.maxLength),\n    ],\n  );\n\n  if (isNewPassword) {\n    control.addValidators(passwordStrengthValidator);\n    control.addAsyncValidators(passwordFirebaseValidator());\n  }\n\n  return getControlStructure(control);\n}\n                    \n                \n\n            \n                \n                    Passwords are required and have length requirements. Complexity is required for new password fields.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getControlStructure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (control: T): ControlStruct => {\n  const $invalid = controlInvalidSignal(control);\n  const $errors = controlErrorsSignal(control);\n\n  return { $errors, $invalid, control };\n}\n                    \n                \n\n            \n                \n                    Pair control with Angular Signals for handling validation in the template.\n\n                \n            \n\n        \n    \n\n    src/app/core/guards/email-verified.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emailVerifiedGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateChildFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  _childRoute: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n): Observable => {\n  const router = inject(Router);\n  const user$ = inject(USER$);\n  const { url } = state;\n\n  return user$.pipe(\n    map((maybeUser: User | null): UrlTree | boolean => {\n      if (!maybeUser) {\n        return false;\n      }\n\n      if (!maybeUser.emailVerified) {\n        return router.parseUrl(`/confirm-email?next=${url}`);\n      }\n\n      return true;\n    }),\n  );\n}\n                    \n                \n\n            \n                \n                    Requires that there be a currently logged in user with a verified email to navigate to certain\nroutes. Otherwise redirects the visitor to the ConfirmEmailComponent to send a verification email.\nCan be used for both CanActivate and CanActivateChild guards.\n\n                \n            \n\n        \n    \n\n    src/app/shared/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FORMS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  /** Input event delay for form fields to prevent an event on every keystroke. Milliseconds */\n  inputDebounce: 1000,\n} as const\n                    \n                \n\n            \n                \n                    Common settings for forms.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PASSWORDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  /** Glyphs, Firebase default maximum */\n  maxLength: 4096,\n\n  /** Glyphs, nominally secure length */\n  minLength: 12,\n\n  /**\n   * Password strength as computed by check-password-strength library.\n   * https://github.com/deanilvincent/check-password-strength?tab=readme-ov-file#result\n   */\n  minStrength: 2,\n} as const\n                    \n                \n\n            \n                \n                    This should match Password Policy\n\n                \n            \n\n        \n    \n\n    src/app/identity/error-code.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getErrorCode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (err: unknown): string => {\n  if (err instanceof FirebaseError) {\n    return err.code;\n  }\n  if (err instanceof Error) {\n    return err.message;\n  }\n\n  console.error('Unknown Error', err);\n  return 'unknown';\n}\n                    \n                \n\n            \n                \n                    TypeScript/linters want caught errors to be of type unknown. So this function handles checking\nfor FirebaseError and extracting the code, or the message from plain Errors.\n\n                \n            \n\n        \n    \n\n    src/app/identity/validators/passwords/util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getPasswordControlValue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (control: AbstractControl): string | null => {\n  const { value } = control;\n\n  // Like Validators.email, rely on Validators.required to check for blank passwords.\n  if (value == undefined || value === '') {\n    return null; // eslint-disable-line unicorn/no-null -- ValidatorFn returns null\n  }\n\n  if (typeof value !== 'string') {\n    throw new TypeError(`Invalid Control Value Type: '${typeof value}'`);\n  }\n\n  return value;\n}\n                    \n                \n\n            \n                \n                    Safely extract the value from a control, expecting it to be a string or nullish.\n\n                \n            \n\n        \n    \n\n    src/app/identity/actions/get-state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (maybeNavigation: Navigation | null): Partial =>\n  maybeNavigation?.extras.state ?? {}\n                    \n                \n\n            \n                \n                    Get the ActionCodeState from the Navigation extras state, if we can.\n\n                \n            \n\n        \n    \n\n    src/app/identity/user-photos/user-photos.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MAXIMUM_PHOTOS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n\n            \n                \n                    Total allowed uploaded profile photos.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PHOTO_DIR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile-photos'\n                    \n                \n\n            \n                \n                    Directory below UID directory for files.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RADIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 36\n                    \n                \n\n            \n                \n                    Represent random number using letters and numbers.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SKIP_WHOLE_NUM\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n\n            \n                \n                    Remove the whole number and decimal point from Math.random\n\n                \n            \n\n        \n    \n\n    src/app/core/guards/no-auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        noAuthGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateChildFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  childRoute: ActivatedRouteSnapshot,\n  _state: RouterStateSnapshot,\n): Observable => {\n  const router = inject(Router);\n  // Navigate to the `next` query parameter if set, else to the root and allow default redirectTo Route to decide initial destination.\n  const nextUrl = childRoute.queryParamMap.get('next') ?? '/';\n  const user$ = inject(USER$);\n\n  return user$.pipe(\n    map((maybeUser: User | null): UrlTree | true => {\n      if (maybeUser) {\n        return router.parseUrl(nextUrl);\n      }\n\n      return true;\n    }),\n  );\n}\n                    \n                \n\n            \n                \n                    Requires that there not be a currently logged in user to navigate to certain routes.\nFor example, routes that are for logging in and recovering accounts.\nCan be used for both CanActivate and CanActivateChild guards.\n\n                \n            \n\n        \n    \n\n    src/app/identity/validators/passwords/firebase.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordFirebaseValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): AsyncValidatorFn => {\n  const auth: Auth = inject(Auth);\n\n  return async (control: AbstractControl): Promise => {\n    const value = getPasswordControlValue(control);\n\n    // Like Validators.email, rely on Validators.required to check for blank passwords.\n    if (value == undefined) {\n      return null; // eslint-disable-line unicorn/no-null -- ValidatorFn returns null\n    }\n\n    // Opened an issue about this being necessary: https://github.com/angular/angularfire/issues/3614\n    const { passwordPolicy: _, ...status } = await validatePassword(auth, value);\n\n    return status.isValid ? null : { firebasevalidator: status }; // eslint-disable-line unicorn/no-null -- ValidatorFn returns null\n  };\n}\n                    \n                \n\n            \n                \n                    Validate against the Firebase Project Authentication Password Policy.\nNote: This validator will be called on every InputEvent/Control.valueChange event after the sync\nvalidators pass. But Firebase Auth caches the password policy fetch request so the first time is\nthe only remote request and so it is safe to not throttle this validator. Not that there is a\nclean way to throttle AsyncValidatorFns :-(\nNote: at this time there is no actual need for this because the policy only enforces length and\nother Validators already check for that. However it is nice to know how to do this.\n\n                \n            \n\n        \n    \n\n    src/app/identity/validators/passwords/strength.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordStrengthValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : (control: AbstractControl): ValidationErrors | null => {\n  const value = getPasswordControlValue(control);\n\n  // Like Validators.email, rely on Validators.required to check for blank passwords.\n  if (value == undefined) {\n    return null; // eslint-disable-line unicorn/no-null -- ValidatorFn returns null\n  }\n\n  const strength = passwordStrength(value);\n  return strength.id \n                    \n                \n\n            \n                \n                    Validator for new password complexity based on check-password-strength\n\n                \n            \n\n        \n    \n\n    src/app/core/firebase-app.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        provideOurFirebaseApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): EnvironmentProviders =>\n  provideFirebaseApp(\n    (): FirebaseApp =>\n      initializeApp({\n        apiKey: 'AIzaSyB75fqz0szrfVCLvpil9_t9UPQlLYplNcI',\n        appId: '1:207926801743:web:e1402f665312fb7ab0813a',\n        authDomain: 'brainfry-app.firebaseapp.com',\n        messagingSenderId: '207926801743',\n        projectId: 'brainfry-app',\n        storageBucket: 'brainfry-app.appspot.com',\n      }),\n  )\n                    \n                \n\n            \n                \n                    Initializes the Firebase App using our configuration for the project.\nBoth app.config.ts and the tests need to provide the FirebaseApp.\n\n                \n            \n\n        \n    \n\n    src/app/page-not-found/page-not-found.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROBOTS_META\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MetaDefinition\n\n                    \n                \n                \n                    \n                        Default value : {\n  content: 'noindex, nofollow',\n  name: 'robots',\n} as const\n                    \n                \n\n            \n                \n                    Block robots from indexing the 404 page.\n\n                \n            \n\n        \n    \n\n    src/app/identity/recover-email/recover-email.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SEND_EMAIL_DELAY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n\n            \n                \n                    Sending the password reset email needs to wait until Firebase recognizes the email recovery. Milliseconds\n\n                \n            \n\n        \n    \n\n    src/app/core/user.token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'USER$',\n  { factory: (): MaybeUser$ => user(inject(Auth)) },\n)\n                    \n                \n\n            \n                \n                    Observable of yhe currently logged in Firebase User, or else null.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
