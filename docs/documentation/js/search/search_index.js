var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionCodeState.html",[0,0.497,1,2.379]],["body/interfaces/ActionCodeState.html",[0,0.59,1,3.64,2,1.566,3,0.253,4,0.227,5,0.201,6,3.38,7,3.073,8,4.877,9,0.395,10,0.548,11,2.238,12,4.501,13,6.031,14,5.471,15,2.621,16,2.175,17,0.614,18,0.02,19,0.34,20,0.823,21,0.066,22,4.349,23,3.38,24,0.741,25,3.81,26,0.292,27,4.397,28,1.737,29,2.783,30,1.225,31,0.903,32,1.566,33,0.326,34,0.823,35,0.823,36,0.867,37,0.781,38,0.701,39,3.073,40,0.556,41,0.308,42,0.741,43,0.835,44,1.014,45,1.172,46,3.79,47,3.79,48,3.38,49,2.298,50,1.286,51,4.877,52,3.38,53,3.79,54,3.79,55,3.79,56,3.79,57,3.79,58,3.38,59,0.823,60,0.742,61,2.625,62,0.425,63,0.959,64,3.79,65,0.854,66,3.38,67,2.625,68,2.162,69,2.298,70,2.298,71,2.298,72,2.298,73,2.04,74,3.38,75,3.79,76,2.625,77,2.829,78,3.79,79,3.79,80,3.38,81,3.79,82,1.234,83,0.84,84,2.352,85,4.877,86,2.162,87,0.959,88,3.79,89,3.79,90,5.393,91,4.877,92,2.783,93,3.79,94,3.79,95,3.073,96,3.38,97,2.829,98,1.297,99,3.79,100,4.877,101,2.015,102,3.79,103,4.877,104,3.79,105,3.79,106,2.829,107,2.04,108,1.49,109,2.829,110,1.286,111,2.162,112,1.35,113,3.073,114,2.04,115,2.829,116,3.073,117,3.073,118,3.073,119,0.014,120,0.014]],["title/components/ActionsComponent.html",[21,0.043,42,0.623]],["body/components/ActionsComponent.html",[0,0.478,1,2.29,3,0.205,4,0.183,5,0.162,6,2.736,8,3.068,9,0.32,10,0.476,12,4.343,13,5.818,14,5.287,15,2.529,16,1.775,17,0.647,18,0.019,19,0.313,20,0.667,21,0.065,22,3.778,23,2.736,24,0.6,25,3.55,26,0.253,27,4.664,28,1.728,29,2.769,30,0.992,31,0.968,32,1.268,33,0.283,34,0.92,35,0.92,36,0.969,37,1.353,38,1.213,39,3.435,40,0.621,41,0.249,42,1.023,43,0.91,44,1.068,45,1.307,46,4.852,47,4.852,48,3.778,49,2.942,50,1.646,51,4.236,52,2.736,53,3.068,54,3.068,55,3.068,56,3.068,57,3.068,58,2.736,59,0.92,60,0.72,61,2.125,62,0.476,63,0.776,64,3.068,65,0.849,66,2.736,67,2.125,68,1.751,69,1.861,70,1.861,71,1.861,72,1.861,73,1.652,74,2.736,75,3.068,76,2.125,77,2.29,78,3.068,79,3.068,80,2.736,81,3.068,82,1.072,83,0.756,84,2.043,85,4.236,86,1.751,87,0.776,88,3.068,89,3.068,90,4.852,91,4.236,92,2.417,93,3.068,94,3.068,95,2.488,96,2.736,97,2.29,98,1.126,99,3.068,100,4.236,101,1.75,102,3.068,103,4.236,104,3.068,105,3.068,106,2.29,107,1.652,108,1.206,109,2.29,110,1.041,111,1.751,112,1.093,113,2.488,114,1.652,115,2.29,116,2.488,117,2.488,118,2.488,119,0.012,120,0.012,121,0.92,122,0.633,123,0.702,124,0.6,125,3.778,126,1.65,127,4.932,128,4.932,129,4.932,130,4.932,131,4.932,132,3.573,133,3.573,134,0.702,135,0.969,136,0.92,137,0.702,138,1.197,139,0.702,140,0.802,141,0.702,142,0.633,143,0.702,144,0.6,145,0.37,146,0.32,147,0.702,148,0.633,149,0.702,150,0.969,151,0.633,152,0.92,153,1.11,154,0.633,155,1.11,156,0.633,157,0.667,158,0.633,159,0.702,160,0.633,161,0.702,162,0.702,163,0.633,164,0.702,165,0.633,166,0.702,167,0.633,168,0.702,169,0.633,170,0.702,171,0.633,172,0.702,173,0.633,174,0.667,175,0.702,176,0.633,177,0.7,178,0.702,179,0.6,180,0.702,181,0.633,182,0.702,183,0.702,184,0.633,185,0.633,186,0.633,187,0.702,188,0.702,189,0.633,190,0.667,191,0.633,192,0.667,193,0.702,194,0.633,195,0.6,196,0.344,197,0.702,198,0.633,199,0.702,200,0.702]],["title/components/AppComponent.html",[21,0.043,142,0.657]],["body/components/AppComponent.html",[3,0.275,4,0.246,5,0.218,18,0.019,19,0.307,20,0.894,21,0.075,26,0.246,30,1.331,31,0.762,33,0.275,34,1.117,35,1.117,36,1.176,37,1.379,38,1.237,40,0.604,41,0.334,42,0.804,59,0.894,60,0.567,62,0.462,65,0.72,110,1.744,119,0.015,120,0.015,121,1.117,122,0.849,123,0.942,124,0.804,134,0.942,135,1.176,136,1.117,137,0.942,138,1.343,139,0.942,140,0.926,141,0.942,142,1.21,143,0.942,144,0.804,145,0.496,146,0.429,147,0.942,148,0.849,149,0.942,150,1.176,151,0.849,152,1.117,153,1.282,154,0.849,155,1.282,156,0.849,157,0.894,158,0.849,159,0.942,160,0.849,161,0.942,162,0.942,163,0.849,164,0.942,165,0.849,166,0.942,167,0.849,168,0.942,169,0.849,170,0.942,171,0.849,172,0.942,173,0.849,174,0.894,175,0.942,176,0.849,177,0.849,178,0.942,179,0.804,180,0.942,181,0.849,182,0.942,183,0.942,184,0.849,185,0.849,186,0.849,187,0.942,188,0.942,189,0.849,190,0.894,191,0.849,192,0.894,193,0.942,194,0.849,195,0.804,196,0.462,197,0.942,198,0.849,199,0.942,200,0.942,201,4.116,202,4.998,203,1.237,204,5.984]],["title/injectables/AppTitleStrategyService.html",[205,1.081,206,2.585]],["body/injectables/AppTitleStrategyService.html",[3,0.288,4,0.258,5,0.229,9,0.45,10,0.594,11,1.697,16,1.796,17,0.622,18,0.019,19,0.357,24,0.844,26,0.258,30,1.711,33,0.288,41,0.351,43,0.839,44,1.03,45,1.354,50,1.942,83,0.672,110,1.465,119,0.015,120,0.015,126,1.587,140,0.713,205,1.796,206,4.292,207,2.99,208,6.124,209,6.423,210,4.316,211,4.292,212,5.724,213,6.665,214,6.665,215,1.711,216,6.162,217,6.162,218,6.162,219,5.968,220,5.026,221,2.198,222,3.5,223,1.395,224,1.98,225,5.026,226,3.849,227,2.99,228,1.975,229,5.026,230,3.5,231,6.162,232,5.026,233,5.026,234,5.026,235,5.026,236,6.162,237,5.026,238,3.222,239,3.5,240,6.162,241,5.026,242,6.162,243,5.026,244,1.538,245,5.026,246,5.026]],["title/interfaces/ApplyResult.html",[0,0.497,247,2.379]],["body/interfaces/ApplyResult.html",[0,0.72,2,1.441,3,0.309,4,0.209,5,0.185,9,0.364,10,0.519,11,1.816,15,2.562,16,2.072,17,0.575,18,0.02,19,0.343,24,0.682,26,0.209,33,0.346,41,0.283,43,0.511,44,0.577,45,1.126,60,0.866,62,0.619,63,1.311,82,1.396,83,0.859,87,0.883,97,2.604,98,1.467,101,1.909,107,1.878,110,1.184,119,0.013,120,0.013,145,0.557,146,0.482,196,0.392,205,1.568,211,2.829,215,1.128,223,1.128,228,1.596,244,2.1,247,4.283,248,2.416,249,2.416,250,2.256,251,5.565,252,5.258,253,2.808,254,2.604,255,3.111,256,2.829,257,1.243,258,3.111,259,3.111,260,1.683,261,3.111,262,1.568,263,1.855,264,1.184,265,1.112,266,2.416,267,1.729,268,4.918,269,3.449,270,2.829,271,2.829,272,2.416,273,1.683,274,1.596,275,3.111,276,2.416,277,2.802,278,3.111,279,1.878,280,2.829,281,2.036,282,2.829,283,1.991,284,3.35,285,4.201,286,2.229,287,2.371,288,3.111,289,2.115,290,4.201,291,3.111,292,2.008,293,1.878,294,3.111,295,1.441,296,1.68,297,2.256,298,2.488,299,3.111,300,3.111,301,2.604,302,1.878,303,2.79,304,3.111,305,3.111,306,3.111,307,2.829,308,2.604,309,2.829,310,2.829,311,2.988,312,3.111,313,3.111,314,1.646,315,3.111,316,2.988,317,3.111,318,2.808,319,2.256,320,2.416,321,1.516,322,2.115,323,3.111,324,2.256,325,2.256,326,1.229,327,3.111,328,3.111,329,3.111,330,2.604,331,3.111,332,1.516,333,3.111,334,3.201,335,2.604,336,3.111,337,2.637,338,3.111,339,1.516,340,3.111,341,1.371,342,2.256,343,1.683,344,2.604,345,2.829,346,2.829,347,2.829,348,2.416,349,3.111,350,3.111,351,3.111,352,3.111,353,2.115,354,2.829,355,3.111,356,1.243,357,2.829,358,1.305,359,1.646,360,3.111]],["title/components/AuthErrorMessagesComponent.html",[21,0.043,144,0.623]],["body/components/AuthErrorMessagesComponent.html",[3,0.133,4,0.119,5,0.105,9,0.207,10,0.346,17,0.393,18,0.019,19,0.184,20,0.432,21,0.051,25,1.285,26,0.184,27,3.17,31,0.368,33,0.133,34,0.669,35,0.669,37,1.301,38,1.164,40,0.291,41,0.161,42,0.388,43,0.553,44,0.623,48,2.746,59,0.432,60,0.851,62,0.223,63,1.438,65,0.348,86,1.757,101,0.821,107,2.96,108,2.161,112,1.097,119,0.009,120,0.009,121,0.669,122,0.41,123,0.454,124,0.388,125,3.362,126,0.819,134,0.454,135,0.704,136,0.669,137,0.454,138,0.971,139,0.454,140,0.623,141,0.454,142,0.41,143,0.454,144,0.83,145,0.648,146,0.6,147,0.454,148,0.41,149,0.454,150,0.704,151,0.41,152,0.923,153,0.862,154,0.41,155,0.862,156,0.41,157,0.432,158,0.41,159,0.454,160,0.41,161,0.454,162,0.454,163,0.41,164,0.454,165,0.41,166,0.454,167,0.41,168,0.454,169,0.41,170,0.454,171,0.41,172,0.454,173,0.41,174,0.432,175,0.454,176,0.41,177,0.509,178,0.454,179,0.388,180,0.454,181,0.41,182,0.454,183,0.454,184,0.41,185,0.41,186,0.41,187,0.454,188,0.454,189,0.41,190,0.432,191,0.41,192,0.432,193,0.454,194,0.41,195,0.388,196,0.68,197,0.454,198,0.41,199,0.454,200,0.454,203,0.741,227,3.367,265,1.526,281,2.161,284,3.143,286,3.191,287,2.398,292,2.277,295,2.348,316,1.991,321,1.338,332,1.338,343,1.485,345,2.497,356,1.867,361,3.77,362,1.725,363,1.987,364,2.746,365,3.585,366,3.43,367,3.585,368,2.313,369,1.012,370,2.313,371,2.313,372,1.772,373,2.313,374,2.313,375,1.987,376,3.585,377,3.585,378,6.4,379,5.659,380,2.651,381,2.497,382,3.323,383,4.242,384,3.585,385,4.944,386,4.944,387,3.585,388,5.193,389,6.101,390,4.246,391,4.335,392,3.585,393,4.944,394,2.497,395,6.023,396,3.585,397,3.17,398,3.079,399,3.585,400,3.367,401,3.585,402,5.24,403,4.944,404,2.497,405,3.585,406,5.659,407,1.757,408,2.575,409,4.944,410,3.585,411,3.585,412,6.101,413,6.101,414,4.944,415,3.585,416,3.079,417,5.193,418,2.746,419,2.746,420,6.781,421,3.079,422,2.746,423,4.249,424,3.444,425,3.585,426,3.585,427,3.585,428,2.746,429,4.944,430,3.787,431,3.585,432,4.246,433,4.246,434,3.585,435,3.585,436,3.585,437,5.24,438,1.991,439,3.585,440,4.944,441,1.757,442,3.079,443,2.746,444,3.585,445,2.746,446,3.079,447,4.861,448,4.246,449,2.941,450,3.585,451,3.585,452,2.497,453,3.585,454,3.585,455,3.585,456,3.585,457,1.991,458,5.497,459,3.585,460,4.944,461,2.746,462,3.942,463,1.568,464,3.079,465,3.585,466,3.079,467,2.746,468,3.585,469,3.585,470,4.246,471,3.585,472,3.585,473,4.944,474,4.944,475,5.659,476,3.585,477,3.585,478,4.944,479,4.944,480,3.585,481,4.944,482,3.585,483,3.585,484,4.944,485,4.944,486,3.17,487,3.585,488,3.585,489,1.568,490,6.4,491,3.585,492,1.991,493,3.585,494,3.585,495,4.246,496,3.585,497,3.585,498,2.746,499,2.746,500,3.585,501,3.079,502,2.298,503,3.079,504,3.585,505,3.079,506,3.585,507,5.659,508,3.585,509,3.585,510,3.585,511,3.585,512,3.585,513,3.585,514,2.746,515,2.133,516,2.133,517,1.757,518,3.585,519,1.757,520,3.585,521,3.079,522,3.585,523,1.867,524,2.497]],["title/components/CentralLayoutComponent.html",[21,0.043,148,0.657]],["body/components/CentralLayoutComponent.html",[3,0.267,4,0.239,5,0.212,18,0.019,19,0.347,20,0.868,21,0.074,26,0.239,30,1.292,31,0.739,33,0.267,34,1.096,35,1.096,36,1.154,37,1.376,38,1.234,40,0.586,41,0.325,42,0.781,59,0.868,60,0.55,62,0.449,65,0.699,119,0.015,120,0.015,121,1.096,122,0.824,123,0.914,124,0.781,134,0.914,135,1.154,136,1.096,137,0.914,138,1.328,139,0.914,140,0.914,141,0.914,142,0.824,143,0.914,144,0.781,145,0.482,146,0.416,147,0.914,148,1.197,149,1.265,150,1.154,151,0.824,152,1.096,153,1.265,154,0.824,155,1.265,156,0.824,157,0.868,158,0.824,159,0.914,160,0.824,161,0.914,162,0.914,163,1.197,164,0.914,165,0.824,166,0.914,167,0.824,168,0.914,169,0.824,170,0.914,171,0.824,172,0.914,173,0.824,174,0.868,175,0.914,176,0.824,177,0.834,178,0.914,179,0.781,180,0.914,181,0.824,182,0.914,183,0.914,184,0.824,185,0.824,186,0.824,187,0.914,188,0.914,189,0.824,190,0.868,191,0.824,192,0.868,193,0.914,194,0.824,195,0.781,196,0.449,197,0.914,198,0.824,199,0.914,200,0.914,202,4.93,203,1.214,525,3.996,526,5.045,527,4.126,528,2.53,529,5.873,530,2.433,531,5.873,532,1.571,533,3.996,534,3.494,535,4.499]],["title/components/ChangeEmailComponent.html",[21,0.043,151,0.657]],["body/components/ChangeEmailComponent.html",[3,0.14,4,0.125,5,0.111,9,0.218,10,0.36,11,0.823,17,0.649,18,0.02,19,0.352,20,0.455,21,0.052,24,0.409,26,0.192,28,2.15,31,0.808,32,0.865,33,0.14,34,0.697,35,0.697,36,0.734,37,1.308,38,1.171,40,0.307,41,0.17,42,0.409,43,0.96,44,1.079,50,1.322,59,0.455,60,0.879,62,0.235,63,1.49,65,0.367,73,1.128,82,0.811,83,0.68,87,1.456,98,0.853,108,1.532,112,1.142,114,1.128,119,0.009,120,0.009,121,0.697,122,0.432,123,0.479,124,0.409,126,1.615,134,0.479,135,0.734,136,0.697,137,0.479,138,0.999,139,0.479,140,0.722,141,0.479,142,0.432,143,0.479,144,0.853,145,0.386,146,0.455,147,0.479,148,0.432,149,0.479,150,0.734,151,0.9,152,1.25,153,0.891,154,0.432,155,0.891,156,0.432,157,1.023,158,0.432,159,0.479,160,0.432,161,0.479,162,0.479,163,0.432,164,0.479,165,0.432,166,0.479,167,0.432,168,0.479,169,0.432,170,0.479,171,0.432,172,0.479,173,0.432,174,0.455,175,0.479,176,0.432,177,0.53,178,0.479,179,0.409,180,0.479,181,0.432,182,0.479,183,0.479,184,0.432,185,0.432,186,0.432,187,0.479,188,0.479,189,0.432,190,0.455,191,0.432,192,0.455,193,0.479,194,0.432,195,0.409,196,0.661,197,0.479,198,0.432,199,0.479,200,0.479,203,0.772,215,1.037,221,1.066,223,0.677,257,1.142,264,0.711,265,0.772,267,1.933,281,2.336,284,2.074,295,1.804,314,0.746,319,2.074,321,2.158,326,1.252,332,0.91,341,0.823,356,0.746,358,0.784,359,0.746,362,0.958,369,1.066,380,2.84,381,2.601,382,1.83,407,1.83,438,3.721,441,1.83,457,2.074,462,1.698,489,1.066,492,2.074,515,3.025,532,0.823,536,4.956,537,5.45,538,1.451,539,1.984,540,2.363,541,2.601,542,5.48,543,4.537,544,5.48,545,4.537,546,6.016,547,4.198,548,3.475,549,4.367,550,4.537,551,4.537,552,4.537,553,3.513,554,3.513,555,3.475,556,2.221,557,3.734,558,2.601,559,2.439,560,2.094,561,2.439,562,2.439,563,2.439,564,2.534,565,2.439,566,2.439,567,2.439,568,2.439,569,2.439,570,3.475,571,2.439,572,2.942,573,2.439,574,2.439,575,1.037,576,2.394,577,2.439,578,2.394,579,2.439,580,2.439,581,2.098,582,1.868,583,1.868,584,2.439,585,2.098,586,1.547,587,1.066,588,2.074,589,1.066,590,2.699,591,1.945,592,1.27,593,1.451,594,0.91,595,1.563,596,1.563,597,1.868,598,3.817,599,4.537,600,1.698,601,3.475,602,3.16,603,3.475,604,2.552,605,2.439,606,2.439,607,1.984,608,4.537,609,2.439,610,2.439,611,4.537,612,1.868,613,1.868,614,2.86,615,2.439,616,3.513,617,2.439,618,2.439,619,2.439,620,1.27,621,2.094,622,2.094,623,1.354,624,1.354,625,1.451,626,1.354,627,1.698,628,1.451,629,2.439,630,1.195,631,1.128,632,1.128,633,1.195,634,1.698,635,1.27,636,2.439,637,3.16,638,1.27,639,0.784,640,1.27,641,1.27,642,1.195,643,1.27,644,2.094,645,2.86,646,1.868,647,1.868,648,2.439,649,2.094,650,0.91,651,1.27,652,2.439,653,3.706,654,2.648,655,2.601,656,2.52,657,2.86,658,5.084,659,1.563,660,2.221,661,2.221,662,2.394,663,2.394,664,1.945,665,2.394,666,1.563,667,2.86,668,3.734,669,3.207,670,3.207,671,2.394,672,3.207,673,3.207,674,2.439,675,2.52,676,2.86,677,1.563,678,1.563]],["title/components/ChangePasswordComponent.html",[21,0.043,154,0.657]],["body/components/ChangePasswordComponent.html",[3,0.14,4,0.126,5,0.111,9,0.219,10,0.361,11,0.827,17,0.647,18,0.02,19,0.352,20,0.457,21,0.053,24,0.411,26,0.192,28,2.152,31,0.81,32,0.869,33,0.14,34,0.699,35,0.699,36,0.736,37,1.309,38,1.172,40,0.308,41,0.171,42,0.411,43,0.96,44,1.08,50,1.326,59,0.457,60,0.443,62,0.236,63,1.626,65,0.368,73,1.133,82,0.814,83,0.682,87,1.258,98,0.856,108,1.536,112,1.146,114,1.133,119,0.009,120,0.009,121,0.699,122,0.434,123,0.481,124,0.411,126,1.617,134,0.481,135,0.736,136,0.699,137,0.481,138,1.001,139,0.481,140,0.723,141,0.481,142,0.434,143,0.481,144,0.855,145,0.388,146,0.456,147,0.481,148,0.434,149,0.481,150,0.736,151,0.434,152,1.213,153,0.894,154,0.902,155,0.894,156,0.434,157,0.849,158,0.434,159,0.481,160,0.434,161,0.481,162,0.481,163,0.434,164,0.481,165,0.434,166,0.481,167,0.434,168,0.481,169,0.434,170,0.481,171,0.434,172,0.481,173,0.434,174,0.457,175,0.481,176,0.434,177,0.532,178,0.481,179,0.411,180,0.481,181,0.434,182,0.481,183,0.481,184,0.434,185,0.434,186,0.434,187,0.481,188,0.481,189,0.434,190,0.457,191,0.434,192,0.457,193,0.481,194,0.434,195,0.411,196,0.662,197,0.481,198,0.434,199,0.481,200,0.481,203,0.774,215,1.04,221,1.071,223,0.68,257,1.146,264,0.714,265,0.774,267,1.936,281,0.827,295,1.808,314,0.749,326,1.254,332,0.914,341,0.827,356,0.749,358,0.787,359,0.749,362,0.963,369,1.071,380,2.778,381,2.609,404,2.609,407,1.836,438,3.724,441,3.046,462,1.706,489,1.071,492,3.216,515,3.989,532,0.827,536,4.959,539,1.99,540,2.369,553,4.084,554,4.084,556,2.229,558,2.609,564,2.539,572,2.946,575,1.04,576,2.402,578,2.402,581,2.104,582,1.876,583,1.876,585,2.104,586,1.552,587,1.071,588,2.081,589,1.071,591,2.369,592,2.369,593,1.457,594,0.914,595,1.57,596,1.57,597,1.876,598,3.169,604,2.555,607,1.99,616,1.57,620,1.276,623,1.36,624,1.36,625,1.457,626,1.36,627,1.706,628,1.457,630,1.2,631,1.133,632,1.133,633,1.2,634,1.706,635,1.276,637,1.706,638,1.276,639,0.787,640,1.276,641,1.276,642,1.2,643,1.276,645,2.869,646,1.876,647,1.876,650,0.914,651,1.276,655,3.549,656,2.527,659,2.917,660,3.445,661,3.697,662,3.984,663,3.984,664,3.237,665,3.984,666,2.917,675,2.527,677,2.917,678,2.917,679,5.453,680,1.57,681,2.869,682,5.491,683,4.549,684,4.716,685,4.716,686,3.907,687,4.716,688,3.907,689,2.158,690,4.549,691,4.549,692,3.907,693,3.907,694,3.746,695,2.449,696,2.104,697,2.104,698,2.104,699,2.104,700,2.104,701,2.104,702,2.104,703,2.449,704,2.104,705,3.485,706,2.104,707,2.449,708,2.449,709,2.104,710,2.449,711,2.449,712,2.449,713,4.206,714,3.485,715,2.449,716,2.449,717,3.746,718,2.104,719,2.104,720,3.907,721,2.104,722,2.104,723,2.104,724,3.907,725,2.449,726,5.096,727,1.876,728,2.104,729,2.449,730,1.457,731,1.457,732,2.449,733,2.449,734,1.457,735,2.449,736,1.457,737,2.104,738,3.218,739,3.218,740,3.267,741,2.104,742,3.218,743,2.104,744,2.104]],["title/interfaces/CombinedObs.html",[0,0.497,745,2.585]],["body/interfaces/CombinedObs.html",[0,0.63,2,1.672,3,0.27,4,0.242,5,0.214,9,0.422,10,0.571,17,0.626,18,0.02,19,0.372,25,2.617,26,0.242,28,1.811,33,0.27,69,2.454,70,2.454,83,0.936,108,1.999,119,0.015,120,0.015,146,0.53,244,2.243,253,2.97,262,1.725,263,1.885,296,1.679,364,4.535,400,2.803,586,2.453,587,3.17,594,1.759,604,2.945,607,2.831,653,3.795,745,4.509,746,3.282,747,3.282,748,5.665,749,4.047,750,4.047,751,4.047,752,5.202,753,4.124,754,4.535,755,5.085,756,5.085,757,4.711,758,3.609,759,3.522,760,4.711,761,2.803,762,4.047,763,3.609,764,3.02,765,3.795,766,4.047,767,5.085,768,3.609,769,4.047,770,2.738,771,3.282,772,4.047,773,3.609,774,2.309,775,4.047,776,3.282,777,5.085,778,4.047,779,4.047,780,4.047,781,4.047,782,4.047,783,3.609,784,4.047,785,4.047,786,4.047,787,4.047,788,4.047,789,4.047]],["title/components/ConfirmEmailComponent.html",[21,0.043,156,0.657]],["body/components/ConfirmEmailComponent.html",[3,0.203,4,0.182,5,0.161,9,0.317,10,0.472,11,1.194,17,0.617,18,0.019,19,0.364,20,0.66,21,0.065,24,0.594,26,0.252,28,1.499,31,0.964,32,1.256,33,0.203,34,0.914,35,0.914,36,0.963,37,1.352,38,1.212,40,0.446,41,0.247,42,0.594,43,0.908,44,0.992,50,1.638,59,0.66,60,0.877,62,0.341,65,0.532,82,1.065,83,0.473,98,0.808,114,1.636,119,0.012,120,0.012,121,0.914,122,0.627,123,0.695,124,0.594,126,1.455,134,0.695,135,0.963,136,0.914,137,0.695,138,1.192,139,0.695,140,0.861,141,0.695,142,0.627,143,0.695,144,1.018,145,0.507,146,0.543,147,0.695,148,0.627,149,0.695,150,0.963,151,0.627,152,0.914,153,1.104,154,0.627,155,1.104,156,1.074,157,1.305,158,0.627,159,0.695,160,0.627,161,0.695,162,0.695,163,0.627,164,0.695,165,0.627,166,0.695,167,0.627,168,0.695,169,0.627,170,0.695,171,0.627,172,0.695,173,0.627,174,0.66,175,0.695,176,0.627,177,0.695,178,0.695,179,0.594,180,0.695,181,0.627,182,0.695,183,0.695,184,0.627,185,0.627,186,0.627,187,0.695,188,0.695,189,0.627,190,0.66,191,0.627,192,0.66,193,0.695,194,0.627,195,0.594,196,0.705,197,0.695,198,0.627,199,0.695,200,0.695,203,1.013,215,1.36,221,1.547,223,0.982,257,1.499,264,1.031,265,1.013,267,2.171,281,2.048,284,3.369,314,1.083,319,2.721,321,1.829,326,1.455,339,1.829,356,1.083,358,1.137,359,1.083,362,1.391,380,2.03,382,3.375,407,1.734,421,4.208,489,1.547,532,1.194,538,2.105,539,2.458,541,3.413,549,5.471,560,3.039,564,2.946,581,2.599,588,2.721,589,1.547,600,2.465,601,2.71,602,4.706,603,2.71,604,1.391,620,1.843,621,3.039,622,3.039,623,1.965,624,1.965,625,2.105,626,1.965,627,2.465,628,2.105,637,4.226,641,1.843,642,1.734,643,1.843,644,3.039,649,3.039,650,1.321,651,1.843,653,4.225,654,2.552,669,4.208,670,4.208,671,3.141,672,4.208,673,4.208,790,5.048,791,5.048,792,4.9,793,4.9,794,4.9,795,3.538,796,3.538,797,3.538,798,3.538]],["title/interfaces/ControlProperties.html",[0,0.497,799,2.585]],["body/interfaces/ControlProperties.html",[0,0.643,2,1.704,3,0.276,4,0.247,5,0.218,9,0.43,10,0.63,17,0.642,18,0.02,19,0.369,26,0.247,28,1.833,33,0.276,83,0.96,101,1.704,108,2.537,119,0.015,120,0.015,253,3.286,262,1.746,263,1.663,296,1.722,586,2.482,607,2.1,655,4.902,746,3.345,747,3.345,748,5.497,749,4.125,750,4.125,751,4.125,752,4.59,753,4.174,754,4.59,759,2.857,768,3.679,770,3.162,771,4.549,773,3.679,799,5.07,800,6.164,801,5.147,802,5.147,803,5.147,804,5.147,805,3.679,806,4.125,807,4.125,808,4.125,809,2.857,810,5.147,811,4.125,812,4.125,813,4.125,814,5.147,815,4.125,816,4.125,817,4.125,818,4.125,819,4.125,820,4.125,821,4.125]],["title/interfaces/ControlStruct.html",[0,0.497,822,2.585]],["body/interfaces/ControlStruct.html",[0,0.633,2,1.679,3,0.271,4,0.243,5,0.215,9,0.424,10,0.572,17,0.627,18,0.019,19,0.373,26,0.243,28,2.22,33,0.39,63,1.29,69,3.092,70,3.092,71,2.464,72,3.092,83,0.971,87,1.41,108,2.449,119,0.015,120,0.015,122,1.051,157,0.883,253,2.069,289,2.464,292,2.216,296,1.556,318,2.069,332,1.766,337,3.434,418,3.297,419,3.624,572,2.745,586,2.459,587,2.069,590,2.815,591,2.464,592,3.092,594,2.216,604,2.852,607,3.237,630,2.909,753,3.296,761,2.815,809,2.815,822,4.88,823,3.624,824,3.624,825,5.842,826,4.732,827,4.547,828,4.547,829,3.624,830,3.624,831,4.732,832,3.624,833,4.064,834,4.064,835,3.806,836,3.296,837,4.135,838,4.064,839,5.098,840,5.571,841,4.732,842,4.732,843,2.628,844,2.188,845,5.098,846,4.064,847,4.064,848,4.064,849,4.064]],["title/components/DashboardComponent.html",[21,0.043,158,0.657]],["body/components/DashboardComponent.html",[3,0.249,4,0.223,5,0.198,9,0.389,10,0.542,16,1.266,17,0.558,18,0.019,19,0.365,20,0.81,21,0.072,24,0.729,26,0.223,31,1.048,32,1.541,33,0.249,34,1.049,35,1.049,36,1.104,37,1.371,38,1.229,40,0.547,41,0.303,42,0.729,43,0.785,44,0.885,50,1.816,59,0.81,60,0.514,62,0.419,65,0.653,83,0.581,119,0.014,120,0.014,121,1.049,122,0.769,123,0.853,124,0.729,126,1.284,134,0.853,135,1.104,136,1.049,137,0.853,138,1.295,139,0.853,140,1.057,141,0.853,142,0.769,143,0.853,144,0.729,145,0.45,146,0.389,147,0.853,148,0.769,149,0.853,150,1.104,151,0.769,152,1.049,153,1.224,154,0.769,155,1.224,156,0.769,157,0.81,158,1.167,159,0.853,160,0.769,161,0.853,162,0.853,163,0.769,164,0.853,165,0.769,166,0.853,167,0.769,168,0.853,169,0.769,170,0.853,171,0.769,172,0.853,173,0.769,174,0.81,175,0.853,176,0.769,177,0.798,178,0.853,179,0.729,180,0.853,181,0.769,182,0.853,183,0.853,184,0.769,185,0.769,186,0.769,187,0.853,188,0.853,189,0.769,190,0.81,191,0.769,192,0.81,193,0.853,194,0.769,195,0.729,196,0.601,197,0.853,198,0.769,199,0.853,200,0.853,203,1.162,262,1.638,263,1.73,326,1.284,530,2.329,532,1.466,539,2.725,581,2.599,588,3.122,628,2.584,759,2.584,850,3.731,851,4.305,852,5.621,853,5.621,854,5.621,855,4.343,856,3.731,857,3.731,858,4.343,859,5.621]],["title/components/DeleteAccountComponent.html",[21,0.043,160,0.657]],["body/components/DeleteAccountComponent.html",[3,0.159,4,0.143,5,0.126,9,0.249,10,0.397,11,0.938,17,0.646,18,0.019,19,0.361,20,0.518,21,0.057,24,0.466,26,0.212,28,2.018,29,2.406,30,0.771,31,0.863,32,0.986,33,0.159,34,0.769,35,0.769,36,0.809,37,1.325,38,1.187,40,0.35,41,0.194,42,0.466,43,0.953,44,1.07,45,1.133,49,2.557,50,1.431,59,0.518,60,0.487,62,0.268,63,1.539,65,0.418,67,1.653,68,1.362,73,1.285,82,0.895,83,0.813,87,0.895,98,1.121,108,0.938,112,1.502,114,1.285,118,1.935,119,0.01,120,0.01,121,0.769,122,0.492,123,0.546,124,0.466,126,1.617,134,0.546,135,0.809,136,0.769,137,0.546,138,1.067,139,0.546,140,0.771,141,0.546,142,0.492,143,0.546,144,0.911,145,0.426,146,0.486,147,0.546,148,0.492,149,0.546,150,0.809,151,0.492,152,0.769,153,0.964,154,0.492,155,0.964,156,0.492,157,0.518,158,0.492,159,0.546,160,0.961,161,1.296,162,0.546,163,0.492,164,0.546,165,0.492,166,0.546,167,0.492,168,0.546,169,0.492,170,0.546,171,0.492,172,0.546,173,0.492,174,0.518,175,0.546,176,0.492,177,0.585,178,0.546,179,0.466,180,0.546,181,0.492,182,0.546,183,0.546,184,0.492,185,0.492,186,0.492,187,0.546,188,0.546,189,0.492,190,0.518,191,0.492,192,0.518,193,0.546,194,0.492,195,0.466,196,0.678,197,0.546,198,0.492,199,0.546,200,0.546,203,0.851,215,1.144,221,1.215,223,1.363,224,1.745,257,1.26,264,0.81,265,0.851,267,2.02,281,0.938,283,1.362,287,2.709,295,1.927,314,0.85,326,1.324,332,1.037,341,0.938,356,0.85,358,0.893,359,0.85,362,1.092,369,1.215,380,2.249,407,2.019,422,3.155,438,3.374,441,2.019,457,3.016,462,1.935,489,1.801,492,2.288,515,3.23,532,0.938,539,2.147,540,2.557,547,4.442,548,3.76,553,3.718,554,3.718,555,3.76,564,2.682,572,2.27,575,1.363,576,2.641,578,2.641,581,2.27,582,2.128,583,2.128,585,2.27,586,1.707,587,1.215,588,2.288,589,1.215,591,2.145,592,1.447,593,1.653,594,1.037,604,2.279,607,1.215,612,2.128,613,2.128,614,3.155,616,1.781,620,1.447,623,1.543,624,1.543,625,1.653,626,1.543,627,1.935,628,1.653,630,1.362,631,1.905,632,1.285,633,1.362,634,1.935,635,1.447,637,1.935,638,1.447,639,0.893,640,1.447,641,2.145,642,2.019,643,2.145,645,3.155,646,2.128,647,2.128,650,1.037,651,1.447,656,1.543,659,1.781,660,2.451,661,2.451,662,2.641,663,2.641,664,2.145,665,2.641,666,1.781,675,1.543,677,1.781,678,1.781,689,2.279,730,1.653,731,1.653,734,1.653,736,1.653,860,5.462,861,5.462,862,2.128,863,4.119,864,4.909,865,4.909,866,5.43,867,4.119,868,5.43,869,4.119,870,2.778,871,4.119,872,2.778,873,2.778,874,4.119,875,2.778,876,2.778,877,2.778,878,2.778,879,2.778,880,3.76,881,2.778,882,2.778,883,2.778,884,2.778,885,2.778,886,2.386,887,3.155,888,2.778,889,2.128,890,2.778,891,4.119,892,4.119,893,2.778,894,2.778,895,2.778,896,2.778,897,2.778,898,2.778,899,2.778,900,2.778,901,2.778,902,2.778,903,4.119,904,4.119,905,2.869,906,4.119,907,4.119,908,3.538,909,5.43,910,4.119,911,5.43,912,4.119,913,4.119,914,4.119,915,4.119,916,4.119]],["title/components/FooterComponent.html",[21,0.043,163,0.657]],["body/components/FooterComponent.html",[3,0.257,4,0.23,5,0.204,9,0.401,10,0.553,17,0.401,18,0.019,19,0.325,20,0.836,21,0.073,26,0.23,30,1.243,31,0.712,33,0.257,34,1.07,35,1.07,36,1.126,37,1.373,38,1.232,40,0.564,41,0.313,42,0.752,43,0.796,44,0.898,59,0.836,60,0.53,62,0.432,65,0.673,87,1.246,112,1.37,119,0.014,120,0.014,121,1.07,122,0.793,123,0.88,124,0.752,126,1.023,134,0.88,135,1.126,136,1.07,137,0.88,138,1.31,139,0.88,140,0.898,141,0.88,142,0.793,143,0.88,144,0.752,145,0.464,146,0.401,147,0.88,148,0.793,149,0.88,150,1.126,151,0.793,152,1.07,153,1.242,154,0.793,155,1.242,156,0.793,157,0.836,158,0.793,159,0.88,160,0.793,161,0.88,162,0.88,163,1.181,164,0.88,165,0.793,166,0.88,167,0.793,168,0.88,169,0.793,170,0.88,171,0.793,172,0.88,173,0.793,174,0.836,175,0.88,176,0.793,177,0.814,178,0.88,179,0.752,180,0.88,181,0.793,182,1.242,183,0.88,184,0.793,185,0.793,186,0.793,187,0.88,188,0.88,189,0.793,190,0.836,191,0.793,192,1.18,193,0.88,194,0.793,195,0.752,196,0.432,197,0.88,198,0.793,199,0.88,200,0.88,203,1.185,528,2.485,530,2.375,532,1.512,575,1.243,917,3.847,918,5.733,919,6.324,920,5.733,921,5.733,922,6.891,923,6.055,924,4.479,925,3.431,926,4.391,927,5.733,928,4.391,929,3.847,930,4.391]],["title/components/ForgotPasswordComponent.html",[21,0.043,165,0.657]],["body/components/ForgotPasswordComponent.html",[3,0.196,4,0.176,5,0.155,9,0.306,10,0.461,17,0.629,18,0.019,19,0.361,20,0.638,21,0.064,24,0.574,26,0.246,28,2.048,30,0.949,31,0.95,32,1.213,33,0.196,34,0.893,35,0.893,36,0.94,37,1.348,38,1.208,40,0.43,41,0.239,42,0.574,43,0.943,44,1.063,45,1.03,50,1.608,59,1.03,60,0.86,62,0.532,63,1.417,65,0.514,73,1.581,82,1.04,83,0.64,87,1.04,98,0.781,108,1.154,119,0.012,120,0.012,121,0.893,122,0.605,123,0.672,124,0.574,126,1.585,134,0.672,135,0.94,136,0.893,137,0.672,138,1.174,139,0.672,140,0.783,141,0.672,142,0.605,143,0.672,144,1.003,145,0.651,146,0.535,147,0.672,148,0.605,149,0.672,150,0.94,151,0.605,152,0.893,153,1.084,154,0.605,155,1.084,156,0.605,157,0.638,158,0.605,159,0.672,160,0.605,161,0.672,162,0.672,163,0.605,164,0.672,165,1.058,166,1.236,167,0.605,168,0.672,169,0.605,170,0.672,171,0.605,172,0.672,173,0.605,174,0.638,175,0.672,176,0.605,177,0.679,178,0.672,179,0.574,180,0.672,181,0.605,182,0.672,183,0.672,184,0.605,185,0.605,186,0.605,187,0.672,188,0.672,189,0.605,190,0.638,191,0.605,192,0.638,193,0.672,194,0.605,195,0.574,196,0.33,197,0.672,198,0.605,199,0.672,200,0.672,203,0.989,215,1.328,223,0.949,256,2.381,257,1.046,264,0.996,265,0.989,267,2.151,273,2.286,274,1.344,281,2.018,284,2.657,296,1.148,314,1.046,321,1.786,326,1.26,332,1.276,341,1.154,356,1.046,357,2.381,358,1.099,359,1.046,362,1.344,369,1.495,380,2.476,394,3.332,438,3.32,489,1.495,528,2.169,540,2.874,556,3.556,564,2.909,572,2.552,585,2.552,586,1.982,587,1.495,589,1.495,590,2.846,593,2.034,594,1.276,604,2.349,607,1.495,620,1.781,630,1.675,631,1.581,632,1.581,633,1.675,638,1.781,639,1.099,640,1.781,641,1.781,642,1.675,643,1.781,650,1.276,651,1.781,656,1.899,657,2.619,675,1.899,676,2.619,680,2.192,681,3.664,689,2.472,709,2.936,730,2.034,731,2.034,734,2.034,736,2.034,931,5.384,932,5.384,933,5.403,934,4.74,935,4.74,936,5.518,937,4.109,938,3.419,939,3.419,940,3.419,941,3.419,942,2.936,943,4.227,944,2.936,945,2.936,946,2.936,947,2.936,948,4.109,949,3.419,950,3.419,951,3.419]],["title/components/HeaderComponent.html",[21,0.043,167,0.657]],["body/components/HeaderComponent.html",[3,0.216,4,0.193,5,0.171,9,0.337,10,0.493,11,1.271,17,0.601,18,0.019,19,0.353,20,0.703,21,0.067,26,0.263,28,1.152,30,1.046,31,0.599,33,0.216,34,0.954,35,0.954,36,1.005,37,1.358,38,1.217,40,0.474,41,0.405,42,0.632,43,0.933,44,1.006,59,0.703,60,0.687,62,0.363,63,1.111,65,0.566,83,0.684,112,1.777,119,0.013,120,0.013,121,0.954,122,0.667,123,0.74,124,0.632,126,1.534,134,0.74,135,1.005,136,0.954,137,0.74,138,1.224,139,0.74,140,0.884,141,0.74,142,0.667,143,0.74,144,0.632,145,0.39,146,0.337,147,0.74,148,0.667,149,0.74,150,1.005,151,0.667,152,1.253,153,1.141,154,0.667,155,1.141,156,0.667,157,0.703,158,0.667,159,0.74,160,0.667,161,1.141,162,0.74,163,0.667,164,0.74,165,0.667,166,0.74,167,1.103,168,0.74,169,0.667,170,0.74,171,0.667,172,0.74,173,0.667,174,0.703,175,0.74,176,0.667,177,0.726,178,0.74,179,0.632,180,0.74,181,0.667,182,0.74,183,0.74,184,0.667,185,0.667,186,0.667,187,0.74,188,0.74,189,0.667,190,0.703,191,0.667,192,0.703,193,0.74,194,0.667,195,0.632,196,0.601,197,0.74,198,0.667,199,0.74,200,0.74,203,1.057,215,1.42,221,1.647,223,1.42,224,2.001,287,2.448,527,3.722,528,2.282,530,2.119,532,1.271,534,3.042,535,3.917,564,2.685,575,1.612,654,3.024,667,3.917,770,3.277,771,2.623,952,3.235,953,5.114,954,5.806,955,5.114,956,5.114,957,5.806,958,6.716,959,6.716,960,5.114,961,6.228,962,5.114,963,3.766,964,3.766,965,5.114,966,5.806,967,5.593,968,5.806,969,5.114,970,3.766,971,5.114,972,3.766,973,3.042,974,6.228,975,2.84,976,3.917,977,5.114,978,5.114,979,3.562,980,3.766,981,6.512,982,3.766,983,3.766,984,3.766,985,4.392,986,4.392,987,3.235,988,3.235,989,3.235,990,3.235,991,5.114,992,3.766,993,3.766,994,3.766,995,3.766,996,3.766,997,2.663,998,3.562,999,2.663,1000,4.392]],["title/components/LoginComponent.html",[21,0.043,169,0.657]],["body/components/LoginComponent.html",[3,0.169,4,0.151,5,0.134,9,0.263,10,0.414,17,0.648,18,0.019,19,0.349,20,0.549,21,0.059,24,0.493,25,2.818,26,0.221,27,3.253,28,2.109,29,2.486,30,0.816,31,0.887,32,1.043,33,0.169,34,0.801,35,0.801,36,0.844,37,1.332,38,1.193,40,0.37,41,0.205,42,0.493,43,0.961,44,1.086,45,1.157,49,2.642,50,1.479,59,0.549,60,0.824,62,0.283,63,1.564,65,0.442,68,2.105,71,2.906,73,1.359,82,0.933,83,0.575,87,0.933,98,0.981,108,1.45,109,1.885,110,0.857,111,1.441,112,1.816,113,2.048,114,1.359,115,1.885,116,2.048,117,2.048,119,0.011,120,0.011,121,0.801,122,0.521,123,0.578,124,0.493,126,1.643,134,0.578,135,0.844,136,0.801,137,0.578,138,1.096,139,0.578,140,0.72,141,0.578,142,0.521,143,0.578,144,0.937,145,0.614,146,0.5,147,0.578,148,0.521,149,0.578,150,0.844,151,0.521,152,0.801,153,0.997,154,0.521,155,0.997,156,0.521,157,0.549,158,0.521,159,0.578,160,0.521,161,0.578,162,0.578,163,0.521,164,0.578,165,0.521,166,0.997,167,0.521,168,0.578,169,0.988,170,0.578,171,0.521,172,0.578,173,0.521,174,0.549,175,0.578,176,0.521,177,0.61,178,0.578,179,0.493,180,0.578,181,0.521,182,0.578,183,0.578,184,0.521,185,0.521,186,0.521,187,0.578,188,0.578,189,0.521,190,0.549,191,0.521,192,0.549,193,0.578,194,0.521,195,0.493,196,0.283,197,0.578,198,0.521,199,0.578,200,0.578,203,0.888,215,1.192,223,0.816,257,0.899,264,0.857,265,0.888,267,2.057,273,2.102,274,1.155,281,1.884,295,1.98,314,0.899,321,1.603,326,1.159,332,1.097,341,0.992,356,0.899,358,0.945,359,0.899,362,1.155,369,1.286,380,2.718,394,4.317,438,3.644,441,2.105,489,1.286,492,2.385,515,3.32,528,1.994,540,2.642,547,4.546,548,3.886,553,3.805,554,3.805,555,3.886,556,3.32,564,2.745,572,2.866,575,1.549,576,2.753,578,2.753,585,2.346,586,1.779,587,1.286,589,1.286,590,2.555,591,2.237,592,1.531,593,1.749,594,1.097,604,2.516,607,1.878,612,2.252,613,2.252,614,3.289,620,1.531,630,1.441,631,1.359,632,1.359,633,1.441,638,1.531,639,0.945,640,1.531,641,1.531,642,1.441,643,1.531,650,1.097,651,1.531,656,2.385,657,2.252,659,1.885,660,2.555,661,2.555,662,2.753,663,2.753,664,2.237,665,2.753,666,1.885,675,2.385,676,2.252,677,1.885,678,1.885,689,2.333,730,1.749,731,1.749,734,1.749,736,1.749,933,5.098,934,4.358,935,4.358,945,2.525,946,2.525,947,2.525,948,3.688,1001,2.252,1002,4.294,1003,5.074,1004,4.294,1005,2.94,1006,2.94,1007,2.94,1008,2.94,1009,2.94,1010,2.94,1011,2.94,1012,2.94,1013,2.94,1014,3.886,1015,2.94,1016,2.94,1017,2.94,1018,2.94,1019,2.94,1020,2.94,1021,2.252,1022,2.525,1023,2.525,1024,1.885,1025,2.94,1026,2.94,1027,2.94,1028,2.94,1029,2.94]],["title/components/LogoutComponent.html",[21,0.043,171,0.657]],["body/components/LogoutComponent.html",[3,0.238,4,0.213,5,0.188,9,0.371,10,0.525,17,0.579,18,0.019,19,0.345,20,0.773,21,0.07,24,0.695,26,0.28,28,1.267,29,2.985,30,1.15,31,1.028,32,1.47,33,0.238,34,1.017,35,1.017,36,1.071,37,1.367,38,1.225,40,0.521,41,0.289,42,0.695,43,0.869,44,1.025,45,1.288,49,3.172,59,0.773,60,0.49,62,0.399,65,0.622,68,2.67,82,1.184,98,1.244,109,2.655,110,1.207,111,2.03,112,1.863,118,2.884,119,0.014,120,0.014,121,1.017,122,0.733,123,0.814,124,0.695,126,1.478,134,0.814,135,1.071,136,1.017,137,0.814,138,1.271,139,0.814,140,0.864,141,0.814,142,0.733,143,0.814,144,0.695,145,0.67,146,0.371,147,0.814,148,0.733,149,0.814,150,1.071,151,0.733,152,1.017,153,1.196,154,0.733,155,1.196,156,0.733,157,0.773,158,0.733,159,0.814,160,0.733,161,0.814,162,0.814,163,0.733,164,0.814,165,0.733,166,0.814,167,0.733,168,0.814,169,0.733,170,0.814,171,1.146,172,0.814,173,0.733,174,0.773,175,0.814,176,0.733,177,0.773,178,0.814,179,0.695,180,0.814,181,0.733,182,0.814,183,0.814,184,0.733,185,0.733,186,0.733,187,0.814,188,0.814,189,0.733,190,0.773,191,0.733,192,0.773,193,0.814,194,0.733,195,0.695,196,0.399,197,0.814,198,0.733,199,0.814,200,0.814,203,1.126,215,1.513,223,1.15,257,1.267,273,2.523,274,2.142,326,1.391,457,3.026,528,2.393,564,2.816,575,1.691,626,2.3,667,4.174,851,3.172,979,3.795,1000,6.351,1030,3.557,1031,5.449,1032,6.723,1033,4.141,1034,4.141,1035,4.141,1036,4.141,1037,4.141,1038,4.141,1039,4.141,1040,2.655,1041,2.157,1042,4.141,1043,3.493,1044,4.68,1045,4.68,1046,4.141]],["title/components/PageNotFoundComponent.html",[21,0.043,173,0.657]],["body/components/PageNotFoundComponent.html",[3,0.226,4,0.202,5,0.179,9,0.353,10,0.508,17,0.568,18,0.019,19,0.349,20,0.735,21,0.069,24,0.661,26,0.271,30,1.094,31,0.626,33,0.302,34,0.984,35,0.984,36,1.036,37,1.362,38,1.221,40,0.496,41,0.275,42,0.661,43,0.857,44,0.843,45,1.27,59,0.735,60,0.466,62,0.38,65,0.592,69,2.052,70,2.052,72,2.052,83,0.527,112,1.613,119,0.013,120,0.013,121,0.984,122,0.933,123,0.774,124,0.661,126,1.449,134,0.774,135,1.036,136,0.984,137,0.774,138,1.246,139,0.774,140,0.9,141,0.774,142,0.698,143,0.774,144,0.661,145,0.408,146,0.353,147,0.774,148,0.698,149,0.774,150,1.036,151,0.698,152,0.984,153,1.167,154,0.698,155,1.167,156,0.698,157,0.735,158,0.698,159,0.774,160,0.698,161,0.774,162,0.774,163,0.698,164,0.774,165,0.698,166,0.774,167,0.698,168,0.774,169,0.698,170,0.774,171,0.698,172,0.774,173,1.123,174,1.348,175,0.774,176,0.698,177,0.748,178,0.774,179,0.661,180,0.774,181,0.698,182,0.774,183,0.774,184,0.698,185,0.698,186,0.698,187,0.774,188,0.774,189,0.698,190,0.735,191,0.698,192,0.735,193,0.774,194,0.698,195,0.661,196,0.38,197,0.774,198,0.698,199,0.774,200,0.774,203,1.09,215,1.463,223,1.463,224,2.038,226,4.038,227,3.136,230,2.744,337,3.335,343,2.184,527,3.809,528,2.335,530,2.184,532,1.33,575,1.463,631,1.822,835,2.526,843,2.188,851,4.038,1043,3.379,1044,4.528,1045,4.528,1047,5.065,1048,5.065,1049,3.017,1050,5.271,1051,5.941,1052,5.941,1053,5.271,1054,5.271,1055,5.941,1056,5.941,1057,6.344,1058,6.344,1059,3.94,1060,3.94,1061,5.941,1062,5.271,1063,3.94,1064,5.271,1065,3.94,1066,4.528,1067,3.017,1068,3.384,1069,3.384,1070,4.528,1071,3.384,1072,5.271,1073,3.94,1074,3.94,1075,3.94,1076,3.94,1077,3.94,1078,2.052,1079,3.94,1080,3.94,1081,3.384,1082,3.94,1083,3.94,1084,3.94,1085,5.271,1086,4.528,1087,5.271,1088,5.271,1089,5.271,1090,3.136,1091,3.136]],["title/interfaces/PasswordResetSuccess.html",[0,0.497,1092,2.061]],["body/interfaces/PasswordResetSuccess.html",[0,0.769,2,1.31,3,0.212,4,0.19,5,0.168,9,0.33,10,0.486,15,2.492,16,2.1,17,0.612,18,0.02,19,0.332,24,0.62,26,0.19,33,0.289,40,0.465,41,0.258,43,0.635,44,0.716,45,1.207,60,0.878,61,2.196,62,0.554,63,1.551,65,0.555,82,1.405,83,0.865,84,1.529,87,1.451,92,1.809,98,1.152,101,2.039,107,2.657,110,1.076,119,0.012,120,0.012,145,0.522,146,0.514,196,0.486,205,1.47,224,1.186,228,1.451,244,2.237,257,1.129,260,1.529,262,1.47,263,1.795,264,1.076,265,1.458,267,2.293,273,1.529,274,1.451,277,1.922,279,2.657,281,1.246,286,2.09,287,1.451,289,1.922,293,1.707,296,1.712,297,2.05,298,1.707,314,1.543,318,2.828,321,1.378,322,1.922,324,2.05,325,2.05,326,1.152,339,1.378,341,1.246,342,2.05,343,2.09,353,1.922,356,1.543,358,1.621,359,1.543,382,2.472,383,3.234,408,2.993,449,3.001,463,1.614,486,2.366,517,1.809,639,1.985,650,1.883,689,2.906,770,1.707,774,2.816,844,2.333,973,2.196,1041,1.922,1078,1.922,1092,3.43,1093,2.05,1094,2.05,1095,2.196,1096,4.504,1097,2.571,1098,4.302,1099,2.571,1100,3.217,1101,2.05,1102,3.192,1103,2.196,1104,3.513,1105,3.234,1106,3.513,1107,3.513,1108,2.366,1109,2.571,1110,3.001,1111,2.05,1112,2.571,1113,2.571,1114,2.366,1115,2.571,1116,2.571,1117,3.513,1118,2.657,1119,2.366,1120,2.571,1121,2.571,1122,2.571,1123,3.234,1124,2.366,1125,2.366,1126,2.571,1127,2.571,1128,2.571,1129,4.302,1130,2.571,1131,2.571,1132,2.366,1133,2.05,1134,2.571,1135,2.571,1136,2.571,1137,2.571,1138,2.571,1139,2.05,1140,1.922,1141,2.571,1142,2.366,1143,2.366,1144,2.571,1145,2.571,1146,2.366,1147,2.571,1148,2.571,1149,2.571,1150,4.002,1151,2.571,1152,2.571,1153,2.571,1154,2.366,1155,2.366,1156,2.571,1157,2.571,1158,2.571,1159,2.571,1160,2.571,1161,2.571,1162,2.571]],["title/interfaces/Photo.html",[0,0.497,177,0.527]],["body/interfaces/Photo.html",[0,0.668,2,1.289,3,0.208,4,0.187,5,0.302,9,0.325,10,0.481,16,1.874,17,0.549,18,0.02,19,0.33,24,0.61,26,0.187,33,0.352,40,0.458,41,0.254,43,0.718,44,0.871,45,1.064,50,1.059,62,0.35,76,2.162,82,1.085,83,0.996,86,3.256,87,1.239,92,2.446,98,1.14,106,2.33,110,1.059,111,1.781,119,0.012,120,0.012,124,1.115,177,0.913,205,1.454,222,2.531,224,1.604,228,1.428,238,2.33,239,2.531,244,1.527,260,1.505,262,1.454,263,1.845,265,0.751,276,3.391,279,1.68,283,1.781,286,2.067,292,1.356,295,1.771,296,1.197,298,1.68,302,1.68,303,2.308,311,2.772,320,2.162,339,1.356,369,1.589,397,2.33,400,2.162,441,1.781,457,2.018,463,2.493,516,2.162,517,1.781,519,3.152,523,1.893,524,3.476,575,1.009,632,2.308,635,1.893,639,1.168,664,1.893,671,2.33,765,2.33,774,3.007,843,2.772,844,2.308,975,3.166,997,3.349,999,3.544,1040,3.654,1041,1.893,1043,3.199,1100,2.969,1118,1.68,1133,2.018,1139,2.772,1163,1.68,1164,2.018,1165,2.33,1166,4.7,1167,2.783,1168,2.783,1169,2.783,1170,3.97,1171,2.783,1172,2.783,1173,3.822,1174,3.822,1175,3.822,1176,3.822,1177,3.822,1178,2.783,1179,3.822,1180,4.049,1181,2.162,1182,2.531,1183,2.783,1184,2.531,1185,4.259,1186,2.33,1187,2.33,1188,2.531,1189,2.33,1190,2.33,1191,1.893,1192,3.476,1193,2.783,1194,2.783,1195,2.783,1196,2.783,1197,2.531,1198,2.162,1199,2.783,1200,2.783,1201,3.822,1202,4.479,1203,2.783,1204,2.783,1205,2.783,1206,2.783,1207,2.783,1208,2.783,1209,2.783,1210,2.531,1211,2.783,1212,2.783,1213,3.391,1214,2.783,1215,2.783,1216,2.33,1217,2.783,1218,2.531,1219,4.628,1220,2.531,1221,2.783,1222,2.783,1223,2.783,1224,2.969,1225,2.783,1226,3.822,1227,2.783,1228,2.969,1229,2.783,1230,2.783,1231,3.822,1232,2.783,1233,2.783,1234,2.33,1235,2.783,1236,3.199,1237,2.783,1238,2.783,1239,2.783,1240,2.783,1241,2.783,1242,2.783,1243,2.783,1244,2.783,1245,3.822,1246,2.783,1247,2.33,1248,2.33,1249,2.783,1250,2.783,1251,2.783,1252,2.783,1253,2.783,1254,2.783,1255,2.783,1256,2.783,1257,2.783,1258,2.783,1259,2.783,1260,2.783,1261,2.783,1262,2.783,1263,2.783,1264,2.783,1265,2.783,1266,2.783,1267,2.531,1268,3.822,1269,2.783,1270,2.783,1271,3.476,1272,2.783,1273,2.33,1274,2.531,1275,2.531,1276,2.531,1277,2.531,1278,2.783,1279,2.783,1280,2.783,1281,2.783,1282,2.783,1283,2.783,1284,2.783,1285,2.783,1286,2.783,1287,2.783,1288,2.783,1289,2.162,1290,3.822,1291,2.783,1292,2.783,1293,2.531,1294,2.783,1295,2.162,1296,2.783,1297,2.783,1298,2.783,1299,2.783,1300,2.783,1301,2.783,1302,2.783]],["title/components/PhotoManagerComponent.html",[21,0.043,176,0.657]],["body/components/PhotoManagerComponent.html",[3,0.272,4,0.244,5,0.216,18,0.019,19,0.244,20,0.885,21,0.075,26,0.244,31,0.754,33,0.272,34,1.109,35,1.109,36,0.932,37,1.378,38,1.236,40,0.597,41,0.331,42,0.796,59,0.885,60,0.561,62,0.457,65,0.713,77,3.811,119,0.015,120,0.015,121,1.109,122,0.84,123,0.932,124,0.796,134,0.932,135,1.168,136,1.109,137,0.932,138,1.337,139,0.932,140,0.922,141,0.932,142,0.84,143,0.932,144,0.796,145,0.491,146,0.424,147,0.932,148,0.84,149,0.932,150,1.168,151,0.84,152,1.109,153,1.276,154,0.84,155,1.276,156,0.84,157,0.885,158,0.84,159,0.932,160,0.84,161,0.932,162,0.932,163,0.84,164,0.932,165,0.84,166,0.932,167,0.84,168,0.932,169,0.84,170,0.932,171,0.84,172,0.932,173,0.84,174,0.885,175,0.932,176,1.205,177,1.058,178,0.932,179,0.796,180,0.932,181,0.84,182,0.932,183,0.932,184,0.84,185,0.84,186,0.84,187,0.932,188,0.932,189,0.84,190,0.885,191,0.84,192,0.885,193,0.932,194,0.84,195,0.796,196,0.457,197,0.932,198,0.84,199,0.932,200,0.932,203,1.229,530,2.462,1163,2.193,1303,2.821,1304,4.072,1305,4.072,1306,6.807,1307,5.944,1308,5.944]],["title/components/PhotoUploadComponent.html",[21,0.043,179,0.623]],["body/components/PhotoUploadComponent.html",[3,0.202,4,0.181,5,0.275,9,0.316,10,0.471,17,0.645,18,0.019,19,0.347,20,0.658,21,0.065,24,0.592,25,1.957,26,0.251,27,4.327,28,1.716,30,0.978,31,0.56,33,0.202,34,0.912,35,0.912,36,0.96,37,1.351,38,1.211,40,0.444,41,0.246,42,0.592,43,0.934,44,1.056,45,1.228,50,1.635,59,0.658,60,0.417,62,0.34,65,0.53,83,0.654,101,1.734,112,1.716,119,0.012,120,0.012,121,0.912,122,0.624,123,0.692,124,0.592,125,3.743,126,1.632,134,0.692,135,0.96,136,0.912,137,0.692,138,1.19,139,0.692,140,0.796,141,0.692,142,0.624,143,0.692,144,0.592,145,0.365,146,0.316,147,0.692,148,0.624,149,0.692,150,0.96,151,0.624,152,0.912,153,1.102,154,0.624,155,1.102,156,0.624,157,0.658,158,0.624,159,0.692,160,0.624,161,0.692,162,0.692,163,0.624,164,0.692,165,0.624,166,0.692,167,0.624,168,0.692,169,0.624,170,0.692,171,0.624,172,0.692,173,0.624,174,0.658,175,0.692,176,0.624,177,1.004,178,0.692,179,1.017,180,0.692,181,0.624,182,0.692,183,0.692,184,0.624,185,0.624,186,0.624,187,0.692,188,0.692,189,0.624,190,0.658,191,0.624,192,0.658,193,0.692,194,0.624,195,0.592,196,0.541,197,0.692,198,0.624,199,0.692,200,0.692,203,1.01,215,1.357,223,1.357,224,1.802,227,2.907,262,1.027,263,1.557,283,1.727,295,1.734,322,1.836,326,1.116,366,3.132,375,4.197,528,2.204,530,2.024,532,1.19,539,2.453,575,1.557,886,3.027,887,3.743,998,3.403,999,2.545,1142,3.132,1163,3.333,1170,3.403,1180,2.097,1181,3.337,1191,2.921,1197,3.907,1198,2.907,1202,4.431,1210,2.455,1213,3.784,1224,3.784,1271,3.403,1303,4.288,1309,4.62,1310,2.699,1311,4.886,1312,4.886,1313,5.609,1314,4.296,1315,6.986,1316,6.361,1317,6.057,1318,5.609,1319,4.886,1320,4.886,1321,4.886,1322,3.524,1323,4.197,1324,4.886,1325,4.197,1326,3.524,1327,3.524,1328,4.886,1329,3.524,1330,3.743,1331,3.524,1332,3.524,1333,3.743,1334,2.699,1335,3.524,1336,3.524,1337,3.524,1338,3.524,1339,4.886]],["title/components/PrivacyPolicyComponent.html",[21,0.043,181,0.657]],["body/components/PrivacyPolicyComponent.html",[3,0.136,4,0.229,5,0.108,18,0.018,19,0.188,20,0.443,21,0.052,26,0.122,30,0.66,31,0.378,33,0.136,34,0.683,35,0.683,36,0.719,37,1.304,38,1.168,39,2.549,40,0.299,41,0.166,42,0.399,43,0.461,59,0.443,60,0.64,62,0.229,65,0.357,84,1.516,119,0.009,120,0.009,121,0.683,122,0.421,123,0.467,124,0.399,134,0.467,135,0.719,136,0.683,137,0.467,138,0.985,139,0.467,140,0.769,141,0.467,142,0.421,143,0.467,144,0.399,145,0.246,146,0.213,147,0.467,148,0.421,149,0.467,150,0.719,151,0.421,152,0.683,153,0.877,154,0.421,155,0.877,156,0.421,157,0.443,158,0.421,159,0.467,160,0.421,161,1.289,162,0.467,163,0.421,164,0.467,165,0.421,166,0.467,167,0.421,168,0.467,169,0.421,170,0.467,171,0.421,172,0.467,173,0.421,174,0.833,175,0.467,176,0.421,177,0.52,178,0.467,179,0.399,180,0.467,181,0.888,182,1.43,183,0.467,184,0.421,185,0.421,186,0.421,187,0.467,188,0.467,189,0.421,190,0.443,191,0.421,192,0.443,193,0.467,194,0.421,195,0.399,196,0.522,197,0.467,198,0.421,199,0.467,200,0.467,203,0.757,227,2.177,265,0.757,281,1.236,287,2.249,292,2.592,296,0.878,301,3.946,302,2.982,308,2.346,334,2.177,335,2.346,339,1.366,347,2.549,348,2.177,366,2.346,380,1.516,382,1.794,391,2.803,407,3.016,418,2.785,423,3.493,428,5.744,443,3.841,445,4.714,452,4.287,463,2.193,467,4.714,489,1.601,492,2.033,495,4.307,498,2.803,502,3.946,516,2.177,519,1.794,523,3.991,528,1.755,534,4.345,594,1.366,740,2.346,763,2.803,764,4.133,776,2.549,843,2.033,928,5.511,976,3.841,997,1.906,998,4.491,1021,2.803,1024,2.346,1078,3.205,1086,3.144,1090,3.404,1119,2.346,1154,2.346,1216,2.346,1247,2.346,1273,2.346,1289,2.984,1340,2.041,1341,2.041,1342,2.041,1343,3.66,1344,4.914,1345,6.52,1346,4.914,1347,3.144,1348,3.66,1349,5.015,1350,3.66,1351,4.914,1352,5.721,1353,4.914,1354,3.66,1355,3.144,1356,3.66,1357,3.66,1358,3.66,1359,5.538,1360,3.66,1361,3.66,1362,3.66,1363,3.66,1364,4.307,1365,3.144,1366,5.015,1367,3.66,1368,5.015,1369,3.144,1370,3.66,1371,3.66,1372,3.66,1373,3.144,1374,3.66,1375,4.307,1376,3.144,1377,4.307,1378,3.66,1379,3.66,1380,3.66,1381,3.66,1382,3.66,1383,3.66,1384,3.66,1385,3.66,1386,4.307,1387,3.66,1388,5.015,1389,6.659,1390,3.144,1391,3.144,1392,3.66,1393,5.015,1394,3.66,1395,3.66,1396,3.144,1397,3.66,1398,3.66,1399,3.66,1400,3.66,1401,5.015,1402,3.66,1403,3.66,1404,4.914,1405,3.66,1406,4.307,1407,3.66,1408,3.66,1409,3.144,1410,3.66,1411,4.307,1412,2.803,1413,4.307,1414,3.66,1415,4.307,1416,3.66,1417,3.66,1418,6.155,1419,3.66,1420,3.144,1421,3.66,1422,6.659,1423,3.144,1424,4.307,1425,4.914,1426,3.144,1427,2.549,1428,3.144,1429,4.307,1430,3.66,1431,3.66,1432,3.144,1433,3.66,1434,3.66,1435,3.66,1436,3.144,1437,3.66,1438,3.66,1439,3.66,1440,3.66,1441,3.66,1442,3.66,1443,3.144,1444,3.66,1445,4.914,1446,3.144,1447,3.66,1448,3.144,1449,3.66,1450,3.66,1451,3.66,1452,5.015,1453,3.144,1454,3.144,1455,3.66,1456,3.144,1457,4.307,1458,3.66,1459,3.144,1460,3.144,1461,3.66,1462,4.307,1463,3.144,1464,3.66,1465,3.144,1466,3.144,1467,3.144,1468,3.144,1469,3.841,1470,3.66,1471,3.66,1472,3.66,1473,3.66,1474,4.307,1475,3.66,1476,3.66,1477,3.66,1478,3.66,1479,3.66,1480,3.66,1481,4.307,1482,3.144,1483,3.66,1484,3.144,1485,3.66,1486,3.66,1487,3.66,1488,3.144,1489,3.144,1490,3.144,1491,3.144,1492,3.66,1493,3.144,1494,4.382,1495,4.914,1496,5.721,1497,4.382,1498,3.144,1499,3.66,1500,3.66,1501,5.015,1502,3.66,1503,3.66,1504,4.307,1505,3.66,1506,3.66,1507,3.66,1508,3.66,1509,5.286,1510,3.66,1511,2.803,1512,3.144,1513,3.144,1514,3.144,1515,3.144,1516,3.66,1517,3.144,1518,3.66]],["title/interfaces/Progress.html",[0,0.497,1180,2.208]],["body/interfaces/Progress.html",[0,0.668,2,1.289,3,0.208,4,0.187,5,0.302,9,0.325,10,0.481,16,1.661,17,0.549,18,0.02,19,0.33,24,0.61,26,0.187,33,0.352,40,0.458,41,0.254,43,0.718,44,0.871,45,1.064,50,1.059,62,0.35,76,2.162,82,1.085,83,0.996,86,2.793,87,1.239,92,2.446,98,1.14,106,2.33,110,1.059,111,1.781,119,0.012,120,0.012,124,0.957,177,0.871,205,1.454,222,4.274,224,1.604,228,1.428,238,2.33,239,2.531,244,1.527,260,1.505,262,1.454,263,1.845,265,0.751,276,3.391,279,1.68,283,1.781,286,2.067,292,1.356,295,2.177,296,1.197,298,1.68,302,1.68,303,2.308,311,2.772,320,2.162,339,1.356,369,1.589,397,2.33,400,2.162,441,1.781,457,2.018,463,2.493,516,2.162,517,1.781,519,3.152,523,1.893,524,3.476,575,1.009,632,2.308,635,1.893,639,1.168,664,1.893,671,2.33,765,2.33,774,3.007,843,2.772,844,2.308,975,3.166,997,3.349,999,3.544,1040,3.654,1041,1.893,1043,3.199,1100,2.969,1118,1.68,1133,2.018,1139,2.772,1163,1.68,1164,2.018,1165,2.33,1166,3.822,1167,2.783,1168,2.783,1169,2.783,1170,3.97,1171,2.783,1172,2.783,1173,3.822,1174,3.822,1175,3.822,1176,4.7,1177,3.822,1178,2.783,1179,3.822,1180,4.275,1181,2.162,1182,2.531,1183,2.783,1184,2.531,1185,4.259,1186,2.33,1187,2.33,1188,2.531,1189,2.33,1190,2.33,1191,1.893,1192,3.476,1193,2.783,1194,2.783,1195,2.783,1196,2.783,1197,2.531,1198,2.162,1199,2.783,1200,2.783,1201,3.822,1202,4.479,1203,2.783,1204,2.783,1205,2.783,1206,2.783,1207,2.783,1208,2.783,1209,2.783,1210,2.531,1211,2.783,1212,2.783,1213,3.391,1214,2.783,1215,2.783,1216,2.33,1217,2.783,1218,2.531,1219,4.628,1220,2.531,1221,2.783,1222,2.783,1223,2.783,1224,2.969,1225,2.783,1226,3.822,1227,2.783,1228,2.969,1229,2.783,1230,2.783,1231,3.822,1232,2.783,1233,2.783,1234,2.33,1235,2.783,1236,3.199,1237,2.783,1238,2.783,1239,2.783,1240,2.783,1241,2.783,1242,2.783,1243,2.783,1244,2.783,1245,3.822,1246,2.783,1247,2.33,1248,2.33,1249,2.783,1250,2.783,1251,2.783,1252,2.783,1253,2.783,1254,2.783,1255,2.783,1256,2.783,1257,2.783,1258,2.783,1259,2.783,1260,2.783,1261,2.783,1262,2.783,1263,2.783,1264,2.783,1265,2.783,1266,2.783,1267,2.531,1268,3.822,1269,2.783,1270,2.783,1271,3.476,1272,2.783,1273,2.33,1274,2.531,1275,2.531,1276,2.531,1277,2.531,1278,2.783,1279,2.783,1280,2.783,1281,2.783,1282,2.783,1283,2.783,1284,2.783,1285,2.783,1286,2.783,1287,2.783,1288,2.783,1289,2.162,1290,3.822,1291,2.783,1292,2.783,1293,2.531,1294,2.783,1295,2.162,1296,2.783,1297,2.783,1298,2.783,1299,2.783,1300,2.783,1301,2.783,1302,2.783]],["title/components/RecoverEmailComponent.html",[21,0.043,184,0.657]],["body/components/RecoverEmailComponent.html",[3,0.219,4,0.196,5,0.174,9,0.342,10,0.498,15,1.426,17,0.586,18,0.019,19,0.365,20,0.713,21,0.068,24,0.641,26,0.196,29,2.867,30,1.061,31,0.996,32,1.356,33,0.219,34,0.964,35,0.964,36,1.015,37,1.359,38,1.219,40,0.481,41,0.267,42,0.641,43,0.737,44,1.009,45,1.259,49,3.047,50,1.705,59,1.287,60,0.815,62,0.631,63,1.362,65,0.574,67,2.273,68,1.873,83,0.511,84,1.583,119,0.013,120,0.013,121,0.964,122,0.677,123,0.751,124,0.641,126,1.431,134,0.751,135,1.015,136,0.964,137,0.751,138,1.231,139,0.751,140,0.83,141,0.751,142,0.677,143,0.751,144,1.052,145,0.535,146,0.524,147,0.751,148,0.677,149,0.751,150,1.015,151,0.677,152,0.964,153,1.149,154,0.677,155,1.149,156,0.677,157,0.713,158,0.677,159,0.751,160,0.677,161,0.751,162,0.751,163,0.677,164,0.751,165,0.677,166,0.751,167,0.677,168,0.751,169,0.677,170,0.751,171,0.677,172,0.751,173,0.677,174,0.713,175,0.751,176,0.677,177,0.733,178,0.751,179,0.641,180,0.751,181,0.677,182,0.751,183,0.751,184,1.109,185,0.677,186,0.677,187,0.751,188,0.751,189,0.677,190,0.713,191,0.677,192,0.713,193,0.751,194,0.677,195,0.641,196,0.368,197,0.751,198,0.677,199,0.751,200,0.751,203,1.067,248,3.894,249,3.894,262,1.114,263,1.624,266,2.273,272,3.48,285,4.364,287,2.462,310,4.364,316,2.868,326,1.179,362,1.502,380,2.596,424,3.597,528,2.299,532,1.29,538,2.273,539,2.558,541,3.597,589,1.671,602,3.597,634,3.597,654,3.263,770,2.897,1090,3.072,1091,3.072,1519,4.481,1520,4.421,1521,5.164,1522,3.282,1523,3.821,1524,2.45,1525,2.927,1526,4.436,1527,2.927,1528,3.821,1529,2.927,1530,2.45,1531,3.821,1532,5.164,1533,6.266,1534,5.164,1535,5.164,1536,3.956]],["title/interfaces/RecoverEmailResults.html",[0,0.497,266,2.208]],["body/interfaces/RecoverEmailResults.html",[0,0.719,2,1.439,3,0.308,4,0.208,5,0.184,9,0.363,10,0.518,11,1.814,15,2.561,16,2.071,17,0.574,18,0.02,19,0.343,24,0.681,26,0.208,33,0.346,41,0.283,43,0.511,44,0.575,45,1.125,60,0.866,62,0.619,63,1.31,82,1.395,83,0.859,87,0.881,97,2.599,98,1.465,101,1.907,107,1.875,110,1.182,119,0.013,120,0.013,145,0.556,146,0.481,196,0.391,205,1.566,211,3.743,215,1.126,223,1.126,228,1.593,244,2.099,247,4.28,248,2.412,249,2.412,250,2.252,251,5.361,252,4.616,253,2.806,254,2.599,255,3.105,256,2.824,257,1.241,258,3.105,259,3.105,260,1.68,261,3.105,262,1.566,263,1.853,264,1.182,265,1.111,266,3.197,267,2.145,268,5.361,269,3.445,270,2.824,271,2.824,272,2.412,273,1.68,274,1.593,275,3.105,276,2.412,277,2.798,278,3.105,279,1.875,280,2.824,281,2.034,282,2.824,283,1.987,284,3.347,285,4.198,286,2.226,287,2.369,288,3.105,289,2.112,290,4.198,291,3.105,292,2.006,293,1.875,294,3.105,295,1.439,296,1.679,297,2.252,298,2.485,299,3.105,300,3.105,301,2.599,302,1.875,303,2.787,304,3.105,305,3.105,306,3.105,307,2.824,308,2.599,309,2.824,310,2.824,311,2.984,312,3.105,313,3.105,314,1.644,315,3.105,316,2.984,317,3.105,318,2.806,319,2.252,320,2.412,321,1.513,322,2.112,323,3.105,324,2.252,325,2.252,326,1.227,327,3.105,328,3.105,329,3.105,330,2.599,331,3.105,332,1.513,333,3.105,334,3.197,335,2.599,336,3.105,337,2.633,338,3.105,339,1.513,340,3.105,341,1.369,342,2.252,343,1.68,344,2.599,345,2.824,346,2.824,347,2.824,348,2.412,349,3.105,350,3.105,351,3.105,352,3.105,353,2.112,354,2.824,355,3.105,356,1.241,357,2.824,358,1.303,359,1.644,360,3.105]],["title/injectables/RecoverEmailService.html",[205,1.081,272,2.208]],["body/injectables/RecoverEmailService.html",[0,0.662,3,0.284,4,0.184,5,0.163,7,2.5,9,0.321,10,0.477,11,1.912,15,2.58,16,2.107,17,0.593,18,0.019,19,0.329,24,0.603,26,0.184,33,0.325,41,0.25,43,0.713,44,0.804,45,1.309,58,3.79,60,0.882,62,0.638,63,1.327,82,1.439,83,0.817,87,0.78,97,2.301,98,1.394,101,1.756,107,2.289,110,1.046,112,1.514,119,0.012,120,0.012,126,1.394,140,0.804,145,0.586,146,0.443,196,0.346,205,1.442,207,2.136,211,2.5,215,1.572,221,2.477,223,1.695,228,1.411,244,2.212,247,3.913,248,3.809,249,3.809,250,1.994,251,5.293,252,4.338,253,2.164,254,2.301,255,2.75,256,2.5,257,1.098,258,2.75,259,2.75,260,1.487,261,2.75,262,1.442,263,1.883,264,1.046,265,1.262,266,2.136,267,1.59,268,4.676,269,3.631,270,2.5,271,2.5,272,2.944,273,2.346,274,1.945,275,3.79,276,2.944,277,3.179,278,3.79,279,2.289,280,3.447,281,2.235,282,3.447,283,2.425,284,3.556,285,4.46,286,2.346,287,2.399,288,3.79,289,1.87,290,4.46,291,3.79,292,2.279,293,2.289,294,3.79,295,2.01,296,1.658,297,1.994,298,2.289,299,2.75,300,2.75,301,2.301,302,1.66,303,2.823,304,2.75,305,2.75,306,2.75,307,2.5,308,2.301,309,2.5,310,2.5,311,2.749,312,2.75,313,2.75,314,1.514,315,2.75,316,2.749,317,2.75,318,2.8,319,2.749,320,2.944,321,1.847,322,2.577,323,3.79,324,1.994,325,1.994,326,1.512,327,3.79,328,2.75,329,2.75,330,2.301,331,2.75,332,1.34,333,2.75,334,3.369,335,2.301,336,2.75,337,2.425,338,2.75,339,1.34,340,2.75,341,1.212,342,1.994,343,1.487,344,3.173,345,3.447,346,3.447,347,3.447,348,2.944,349,3.79,350,3.79,351,3.79,352,3.79,353,2.577,354,3.447,355,3.79,356,1.098,357,2.5,358,1.153,359,1.514,360,2.75,575,1.374,1537,4.949,1538,4.949,1539,3.59,1540,3.59,1541,3.59,1542,3.59]],["title/components/ResetPasswordComponent.html",[21,0.043,185,0.657]],["body/components/ResetPasswordComponent.html",[3,0.155,4,0.139,5,0.123,9,0.242,10,0.389,15,1.01,17,0.643,18,0.02,19,0.359,20,0.505,21,0.056,24,0.454,26,0.207,28,2.071,29,2.369,30,0.751,31,0.852,32,0.96,33,0.155,34,0.754,35,0.754,36,0.793,37,1.322,38,1.184,40,0.341,41,0.189,42,0.454,43,0.951,44,1.077,45,1.122,49,2.517,50,1.408,59,0.505,60,0.32,62,0.632,63,1.618,65,0.407,67,1.61,68,1.326,83,0.54,84,1.121,87,1.307,108,1.363,112,1.236,119,0.01,120,0.01,121,0.754,122,0.479,123,0.532,124,0.454,126,1.61,134,0.532,135,0.793,136,0.754,137,0.532,138,1.053,139,0.532,140,0.686,141,0.532,142,0.479,143,0.532,144,0.9,145,0.418,146,0.433,147,0.532,148,0.479,149,0.532,150,0.793,151,0.479,152,0.754,153,0.949,154,0.479,155,0.949,156,0.479,157,0.902,158,0.479,159,0.532,160,0.479,161,0.532,162,0.532,163,0.479,164,0.532,165,0.479,166,0.532,167,0.479,168,0.532,169,0.479,170,0.532,171,0.479,172,0.532,173,0.479,174,0.505,175,0.532,176,0.479,177,0.573,178,0.532,179,0.454,180,0.532,181,0.479,182,0.532,183,0.532,184,0.479,185,0.949,186,0.479,187,0.532,188,0.532,189,0.479,190,0.505,191,0.479,192,0.505,193,0.532,194,0.479,195,0.454,196,0.261,197,0.532,198,0.479,199,0.532,200,0.532,203,0.835,215,1.121,223,0.751,224,1.298,262,0.788,263,1.342,287,1.587,295,1.902,296,0.969,316,2.243,326,0.922,341,0.913,362,1.063,380,2.762,381,2.813,394,2.813,404,2.813,438,3.558,441,2.948,492,2.977,515,3.812,528,1.899,532,0.913,539,2.113,540,2.517,553,3.996,554,3.996,556,3.189,572,2.782,575,1.121,576,2.589,578,2.589,585,2.235,586,1.673,587,1.183,589,1.183,591,2.104,592,2.517,593,1.61,594,1.01,595,1.734,596,1.734,597,2.072,598,3.366,604,2.364,607,1.766,638,1.409,639,0.869,640,1.409,654,2.104,656,2.243,659,2.589,660,3.189,661,3.579,662,3.856,663,3.856,664,3.133,665,3.856,666,2.589,675,2.243,677,2.589,678,2.589,680,1.734,681,3.094,684,4.925,685,4.925,686,4.151,687,4.925,688,4.151,692,4.151,693,4.151,696,2.324,697,2.324,698,2.324,699,2.324,700,2.324,701,2.324,702,2.324,704,2.324,706,3.469,713,3.702,714,3.702,718,2.324,719,2.324,720,4.151,721,2.324,722,2.324,723,2.324,724,4.151,727,2.072,728,2.324,737,2.324,738,3.469,739,3.469,740,3.436,741,2.324,742,3.469,743,2.324,744,2.324,937,2.324,942,2.324,944,2.324,1090,2.403,1091,2.403,1093,3.944,1094,3.944,1101,1.503,1111,2.684,1114,3.436,1519,3.702,1520,3.996,1524,1.734,1525,2.072,1527,2.072,1529,2.072,1530,1.734,1536,3.094,1543,4.833,1544,2.706,1545,2.706,1546,3.702,1547,4.039,1548,2.706,1549,2.706,1550,2.706,1551,2.706,1552,2.706,1553,2.706,1554,2.706,1555,4.039,1556,4.039,1557,5.36,1558,4.039]],["title/injectables/ResetPasswordService.html",[205,1.081,1111,2.061]],["body/injectables/ResetPasswordService.html",[0,0.707,3,0.181,4,0.162,5,0.143,7,2.197,9,0.282,10,0.436,11,1.946,15,2.542,16,2.177,17,0.633,18,0.02,19,0.313,24,0.53,26,0.162,33,0.259,40,0.397,41,0.22,43,0.8,44,0.901,45,1.33,60,0.875,61,3.141,62,0.588,63,1.588,65,0.679,82,1.454,83,0.817,84,1.307,87,1.502,92,1.546,98,1.032,101,1.874,107,2.822,110,0.919,112,1.383,119,0.011,120,0.011,126,1.45,140,0.818,145,0.547,146,0.546,196,0.556,205,1.317,207,1.877,215,1.255,221,2.522,223,1.601,224,1.452,228,1.24,244,2.246,257,0.965,260,1.307,262,1.317,263,1.815,264,0.919,265,1.473,267,2.101,273,2.188,274,1.776,277,2.354,279,2.937,281,1.526,286,2.188,287,1.776,289,1.643,293,1.459,296,1.658,297,1.752,298,1.459,314,1.383,318,2.669,321,1.687,322,1.643,324,1.752,325,1.752,326,1.45,339,1.687,341,1.065,342,1.752,343,1.872,353,2.354,356,1.383,358,1.452,359,1.383,382,2.215,383,3.696,408,2.75,449,2.688,463,1.976,486,2.897,517,1.546,575,1.255,639,2.149,650,1.687,689,2.777,770,2.09,774,2.826,844,2.442,973,2.688,1041,1.643,1078,2.354,1092,2.933,1093,3.632,1094,3.632,1095,1.877,1096,4.555,1097,2.197,1098,4.016,1099,2.197,1100,3.406,1101,1.752,1102,2.933,1103,1.877,1104,3.678,1105,2.897,1106,3.148,1107,3.148,1108,2.022,1109,2.197,1110,2.688,1111,2.51,1112,3.678,1113,3.148,1114,2.897,1115,3.148,1116,2.197,1117,4.016,1118,2.822,1119,2.897,1120,3.148,1121,3.148,1122,3.148,1123,3.385,1124,2.897,1125,2.897,1126,3.148,1127,2.197,1128,2.197,1129,4.016,1130,2.197,1131,2.197,1132,2.022,1133,1.752,1134,3.678,1135,2.197,1136,2.197,1137,2.197,1138,3.678,1139,1.752,1140,1.643,1141,2.197,1142,2.022,1143,2.022,1144,2.197,1145,2.197,1146,2.022,1147,2.197,1148,2.197,1149,2.197,1150,4.423,1151,2.197,1152,2.197,1153,2.197,1154,2.022,1155,2.897,1156,3.678,1157,3.148,1158,2.197,1159,3.148,1160,3.148,1161,3.148,1162,2.197,1559,4.519,1560,3.155,1561,3.155,1562,3.155,1563,3.155,1564,3.155,1565,3.155]],["title/interfaces/ShowForm.html",[0,0.497,689,1.458]],["body/interfaces/ShowForm.html",[0,0.766,2,1.3,3,0.21,4,0.188,5,0.167,9,0.328,10,0.484,11,1.694,15,2.486,16,2.152,17,0.622,18,0.02,19,0.331,24,0.615,26,0.188,33,0.288,40,0.461,41,0.256,43,0.632,44,0.712,45,1.203,60,0.887,61,2.18,62,0.552,63,1.549,65,0.551,82,1.402,83,0.863,84,1.518,87,1.448,92,1.796,98,1.146,101,2.031,107,2.647,110,1.068,119,0.012,120,0.012,145,0.519,146,0.512,196,0.484,205,1.463,224,1.177,228,1.44,244,2.202,257,1.121,260,1.518,262,1.463,263,1.791,264,1.068,265,1.456,267,2.29,273,1.518,274,1.44,277,1.908,279,2.647,281,1.237,286,2.079,287,1.44,289,1.908,293,1.694,296,1.71,297,2.035,298,1.694,314,1.536,318,2.821,321,1.368,322,1.908,324,2.035,325,2.035,326,1.146,339,1.368,341,1.237,342,2.035,343,2.079,353,1.908,356,1.536,358,1.613,359,1.536,382,2.46,383,3.217,408,2.981,449,2.986,463,1.602,486,2.349,517,1.796,639,1.978,650,1.873,689,2.916,770,1.694,774,2.805,844,2.321,973,2.18,1041,1.908,1078,1.908,1092,3.179,1093,2.035,1094,2.035,1095,2.18,1096,4.492,1097,2.552,1098,4.288,1099,2.552,1100,3.207,1101,2.035,1102,3.179,1103,2.18,1104,3.496,1105,3.217,1106,3.496,1107,3.496,1108,2.349,1109,2.552,1110,2.986,1111,2.035,1112,2.552,1113,2.552,1114,2.349,1115,2.552,1116,2.552,1117,3.496,1118,2.647,1119,2.349,1120,2.552,1121,2.552,1122,2.552,1123,3.217,1124,2.349,1125,2.349,1126,2.552,1127,2.552,1128,2.552,1129,4.288,1130,2.552,1131,2.552,1132,2.349,1133,2.035,1134,2.552,1135,2.552,1136,2.552,1137,2.552,1138,2.552,1139,2.035,1140,1.908,1141,2.552,1142,2.349,1143,2.349,1144,2.552,1145,2.552,1146,2.349,1147,2.552,1148,2.552,1149,2.552,1150,3.987,1151,2.552,1152,2.552,1153,2.552,1154,2.349,1155,2.349,1156,2.552,1157,2.552,1158,2.552,1159,2.552,1160,2.552,1161,2.552,1162,2.552]],["title/components/SidebarComponent.html",[21,0.043,186,0.657]],["body/components/SidebarComponent.html",[3,0.275,4,0.246,5,0.218,18,0.019,19,0.246,20,0.894,21,0.075,26,0.246,31,0.762,33,0.275,34,1.117,35,1.117,36,0.942,37,1.379,38,1.237,40,0.604,41,0.334,42,0.804,59,0.894,60,0.567,62,0.462,65,0.72,77,3.836,119,0.015,120,0.015,121,1.117,122,0.849,123,0.942,124,0.804,134,0.942,135,1.176,136,1.117,137,0.942,138,1.343,139,0.942,140,0.926,141,0.942,142,0.849,143,0.942,144,0.804,145,0.496,146,0.429,147,0.942,148,0.849,149,0.942,150,1.176,151,0.849,152,1.117,153,1.282,154,0.849,155,1.282,156,0.849,157,0.894,158,0.849,159,0.942,160,0.849,161,0.942,162,0.942,163,0.849,164,0.942,165,0.849,166,0.942,167,0.849,168,0.942,169,0.849,170,0.942,171,0.849,172,0.942,173,0.849,174,0.894,175,0.942,176,0.849,177,0.849,178,0.942,179,0.804,180,0.942,181,0.849,182,0.942,183,0.942,184,0.849,185,0.849,186,1.21,187,0.942,188,0.942,189,0.849,190,0.894,191,0.849,192,0.894,193,0.942,194,0.849,195,0.804,196,0.462,197,0.942,198,0.849,199,0.942,200,0.942,203,1.237,530,2.479,1566,4.116,1567,6.833,1568,5.984,1569,5.984]],["title/components/SpinnerComponent.html",[21,0.043,31,0.59]],["body/components/SpinnerComponent.html",[3,0.276,4,0.247,5,0.218,18,0.019,19,0.247,20,0.896,21,0.076,26,0.247,31,1.087,33,0.276,34,1.118,35,1.118,36,0.944,37,1.379,38,1.237,40,0.605,41,0.335,42,0.806,59,0.896,60,0.568,62,0.463,65,0.722,119,0.015,120,0.015,121,1.118,122,0.85,123,0.944,124,0.806,134,0.944,135,1.177,136,1.118,137,0.944,138,1.344,139,0.944,140,0.927,141,0.944,142,0.85,143,0.944,144,0.806,145,0.497,146,0.43,147,0.944,148,0.85,149,0.944,150,1.177,151,0.85,152,1.118,153,1.283,154,0.85,155,1.283,156,0.85,157,0.896,158,0.85,159,0.944,160,0.85,161,0.944,162,0.944,163,0.85,164,0.944,165,0.85,166,0.944,167,0.85,168,0.944,169,0.85,170,0.944,171,0.85,172,0.944,173,0.85,174,0.896,175,0.944,176,0.85,177,0.851,178,0.944,179,0.806,180,0.944,181,0.85,182,0.944,183,0.944,184,0.85,185,0.85,186,0.85,187,0.944,188,0.944,189,0.85,190,0.896,191,0.85,192,0.896,193,0.944,194,0.85,195,0.806,196,0.463,197,0.944,198,0.85,199,0.944,200,0.944,203,1.239,530,2.482,1123,3.841,1570,4.125,1571,5.992,1572,5.992,1573,5.992]],["title/components/StandardLayoutComponent.html",[21,0.043,189,0.657]],["body/components/StandardLayoutComponent.html",[3,0.267,4,0.239,5,0.212,18,0.019,19,0.358,20,0.868,21,0.074,26,0.239,30,1.292,31,0.739,33,0.267,34,1.096,35,1.096,36,1.154,37,1.376,38,1.234,40,0.586,41,0.325,42,0.781,59,0.868,60,0.55,62,0.449,65,0.699,119,0.015,120,0.015,121,1.096,122,0.824,123,0.914,124,0.781,134,0.914,135,1.154,136,1.096,137,0.914,138,1.328,139,0.914,140,0.914,141,0.914,142,0.824,143,0.914,144,0.781,145,0.482,146,0.416,147,0.914,148,0.824,149,0.914,150,1.154,151,0.824,152,1.096,153,1.265,154,0.824,155,1.265,156,0.824,157,0.868,158,0.824,159,0.914,160,0.824,161,0.914,162,0.914,163,1.197,164,0.914,165,0.824,166,0.914,167,1.197,168,0.914,169,0.824,170,0.914,171,0.824,172,0.914,173,0.824,174,0.868,175,0.914,176,0.824,177,0.834,178,0.914,179,0.781,180,0.914,181,0.824,182,0.914,183,0.914,184,0.824,185,0.824,186,1.197,187,0.914,188,0.914,189,1.197,190,1.201,191,0.824,192,0.868,193,0.914,194,0.824,195,0.781,196,0.449,197,0.914,198,0.824,199,0.914,200,0.914,202,4.93,203,1.214,526,5.045,530,2.433,533,3.996,1574,3.996,1575,5.873,1576,5.873,1577,4.652,1578,4.652]],["title/components/TermsAndConditionsComponent.html",[21,0.043,191,0.657]],["body/components/TermsAndConditionsComponent.html",[3,0.23,4,0.206,5,0.182,18,0.019,19,0.274,20,0.748,21,0.069,26,0.206,30,1.113,31,0.637,33,0.23,34,0.995,35,0.995,36,1.048,37,1.364,38,1.223,40,0.505,41,0.28,42,0.673,59,0.748,60,0.474,62,0.387,65,0.603,119,0.013,120,0.013,121,0.995,122,0.71,123,0.788,124,0.673,134,0.788,135,1.048,136,0.995,137,0.788,138,1.255,139,0.788,140,0.851,141,0.788,142,0.71,143,0.788,144,0.673,145,0.415,146,0.359,147,0.788,148,0.71,149,0.788,150,1.048,151,0.71,152,0.995,153,1.178,154,0.71,155,1.178,156,0.71,157,0.748,158,0.71,159,0.788,160,0.71,161,0.788,162,0.788,163,0.71,164,0.788,165,0.71,166,0.788,167,0.71,168,0.788,169,0.71,170,0.788,171,0.71,172,0.788,173,0.71,174,0.748,175,0.788,176,0.71,177,0.757,178,0.788,179,0.673,180,0.788,181,0.71,182,0.788,183,0.788,184,0.71,185,0.71,186,0.71,187,0.788,188,0.788,189,0.71,190,0.748,191,1.131,192,1.303,193,0.788,194,0.71,195,0.673,196,0.387,197,0.788,198,0.71,199,0.788,200,0.788,203,1.103,238,3.42,265,1.498,292,2.553,296,1.28,302,2.467,344,3.42,348,3.174,423,4.45,461,4.086,502,4.096,528,2.356,534,3.174,740,3.42,764,4.096,925,4.086,926,4.086,929,3.445,930,4.894,1228,3.174,1289,3.174,1323,4.582,1412,4.086,1494,4.086,1509,4.582,1579,3.445,1580,3.445,1581,3.445,1582,5.335,1583,5.335,1584,5.335,1585,4.582,1586,5.335,1587,4.894,1588,4.582,1589,5.335,1590,4.582,1591,4.582,1592,4.582,1593,5.488,1594,5.335,1595,5.335,1596,5.049,1597,5.335,1598,5.488,1599,4.582,1600,6.321,1601,4.582,1602,4.582,1603,5.335,1604,4.582,1605,5.335,1606,4.582,1607,4.582,1608,5.335,1609,4.582,1610,6.389,1611,4.582,1612,4.582,1613,5.335,1614,4.582,1615,5.335,1616,4.582,1617,4.582,1618,5.335,1619,5.335,1620,5.335,1621,4.086,1622,4.582,1623,4.582]],["title/components/TestComponent.html",[21,0.043,194,0.657]],["body/components/TestComponent.html",[3,0.281,4,0.252,5,0.223,18,0.019,19,0.252,21,0.083,26,0.252,31,0.779,33,0.281,37,1.378,38,1.236,40,0.764,41,0.342,42,0.822,59,0.914,60,0.579,62,0.472,65,0.736,95,4.589,119,0.015,120,0.015,121,1.132,122,0.867,123,0.962,124,0.822,134,0.962,135,1.192,136,1.132,137,0.962,138,1.353,139,0.962,140,0.935,141,0.962,142,0.867,143,0.962,144,0.822,145,0.507,146,0.438,147,0.962,148,0.867,149,0.962,150,1.192,151,0.867,152,1.132,153,1.295,154,0.867,155,1.295,156,0.867,157,0.914,158,0.867,159,0.962,160,0.867,161,0.962,162,0.962,163,0.867,164,0.962,165,0.867,166,0.962,167,0.867,168,0.962,169,0.867,170,0.962,171,0.867,172,0.962,173,0.867,174,0.914,175,0.962,176,0.867,177,0.861,178,0.962,179,0.822,180,0.962,181,0.867,182,0.962,183,0.962,184,0.867,185,0.867,186,0.867,187,0.962,188,0.962,189,0.867,190,0.914,191,0.867,192,0.914,193,0.962,194,1.219,195,0.822,196,0.472,197,0.962,198,0.867,199,0.962,200,0.962,1624,4.207]],["title/injectables/UserPhotosService.html",[205,1.081,1191,1.933]],["body/injectables/UserPhotosService.html",[0,0.607,3,0.182,4,0.163,5,0.31,9,0.284,10,0.438,11,1.533,16,1.909,17,0.6,18,0.019,19,0.314,24,0.533,26,0.163,33,0.332,40,0.572,41,0.222,43,0.859,44,1.004,45,1.273,50,1.544,62,0.306,76,1.889,82,0.987,83,0.979,86,2.597,87,1.152,92,2.225,98,1.037,106,2.91,110,0.925,111,1.556,112,0.971,119,0.011,120,0.011,124,0.89,126,1.496,140,0.644,177,0.821,205,1.323,207,1.889,215,1.26,221,1.985,222,2.211,223,1.26,224,1.703,228,1.248,238,2.035,239,3.162,244,1.621,260,1.315,262,1.323,263,1.86,265,0.938,276,3.64,279,2.099,283,2.225,286,2.396,292,1.695,295,1.611,296,1.089,298,1.468,302,2.099,303,2.451,311,2.521,320,2.701,339,1.185,369,1.388,397,2.035,400,2.701,441,1.556,457,1.763,463,2.317,516,2.701,517,1.556,519,3.211,523,1.653,524,3.691,575,1.26,632,2.451,635,2.364,639,1.02,664,1.653,671,2.035,765,2.035,774,3.119,843,2.943,844,2.451,975,3.398,997,3.49,999,3.604,1040,3.922,1041,2.364,1043,3.397,1100,3.012,1118,2.099,1133,1.763,1139,2.521,1163,3.099,1164,3.721,1165,2.035,1166,3.477,1167,2.432,1168,2.432,1169,2.432,1170,4.028,1171,2.432,1172,2.432,1173,3.477,1174,3.477,1175,3.477,1176,3.477,1177,4.059,1178,2.432,1179,3.477,1180,4.117,1181,1.889,1182,2.211,1183,2.432,1184,2.211,1185,4.436,1186,2.035,1187,2.035,1188,2.211,1189,2.035,1190,2.035,1191,2.364,1192,4.028,1193,4.429,1194,3.477,1195,3.477,1196,3.477,1197,3.162,1198,2.701,1199,3.477,1200,3.477,1201,4.686,1202,4.82,1203,4.059,1204,4.059,1205,3.477,1206,4.059,1207,2.432,1208,2.432,1209,2.432,1210,2.211,1211,2.432,1212,2.432,1213,3.44,1214,2.432,1215,2.432,1216,2.035,1217,2.432,1218,2.211,1219,4.82,1220,2.211,1221,2.432,1222,2.432,1223,2.432,1224,3.786,1225,3.477,1226,4.059,1227,3.477,1228,3.153,1229,3.477,1230,2.432,1231,3.477,1232,2.432,1233,2.432,1234,2.035,1235,2.432,1236,2.91,1237,2.432,1238,2.432,1239,2.432,1240,2.432,1241,2.432,1242,2.432,1243,2.432,1244,2.432,1245,3.477,1246,2.432,1247,2.035,1248,2.035,1249,2.432,1250,2.432,1251,2.432,1252,2.432,1253,2.432,1254,2.432,1255,2.432,1256,2.432,1257,2.432,1258,2.432,1259,2.432,1260,2.432,1261,2.432,1262,2.432,1263,2.432,1264,2.432,1265,2.432,1266,2.432,1267,2.211,1268,3.477,1269,2.432,1270,2.432,1271,4.028,1272,3.477,1273,2.91,1274,3.162,1275,3.162,1276,3.162,1277,3.162,1278,3.477,1279,3.477,1280,3.477,1281,3.477,1282,4.059,1283,2.432,1284,2.432,1285,2.432,1286,2.432,1287,2.432,1288,2.432,1289,1.889,1290,3.477,1291,2.432,1292,2.432,1293,2.211,1294,2.432,1295,1.889,1296,2.432,1297,2.432,1298,2.432,1299,2.432,1300,2.432,1301,2.432,1302,2.432,1625,4.54,1626,3.175,1627,3.175,1628,3.175,1629,3.175,1630,3.175]],["title/components/UserProfileComponent.html",[21,0.043,195,0.623]],["body/components/UserProfileComponent.html",[0,0.335,3,0.144,4,0.129,5,0.252,9,0.413,10,0.367,11,0.845,16,1.11,17,0.643,18,0.02,19,0.367,20,0.467,21,0.053,24,0.42,26,0.196,28,2.033,31,0.819,32,0.888,33,0.144,34,0.711,35,0.711,36,0.748,37,1.311,38,1.174,40,0.315,41,0.175,42,0.42,43,0.95,44,1.066,45,0.86,50,1.344,59,0.467,60,0.296,62,0.241,63,0.544,65,0.376,69,1.984,70,1.984,71,1.984,72,1.984,73,1.158,82,0.828,83,0.742,86,2.526,87,1.12,98,0.572,108,0.845,114,1.158,119,0.009,120,0.009,121,0.711,122,0.443,123,0.492,124,0.42,126,1.588,134,0.492,135,0.748,136,0.711,137,0.492,138,1.012,139,0.492,140,0.829,141,0.492,142,0.443,143,0.492,144,0.865,145,0.394,146,0.461,147,0.492,148,0.443,149,0.492,150,0.748,151,0.443,152,0.711,153,0.906,154,0.443,155,0.906,156,0.443,157,0.467,158,0.443,159,0.492,160,0.443,161,0.492,162,0.492,163,0.443,164,0.492,165,0.443,166,0.492,167,0.443,168,0.492,169,0.443,170,0.492,171,0.443,172,0.492,173,0.443,174,0.467,175,0.492,176,0.443,177,1.002,178,0.492,179,0.865,180,0.492,181,0.443,182,0.492,183,0.492,184,0.443,185,0.443,186,0.443,187,0.492,188,0.492,189,0.443,190,0.467,191,0.443,192,0.467,193,0.492,194,0.443,195,0.865,196,0.714,197,0.492,198,0.443,199,0.492,200,0.492,203,0.787,215,1.057,221,1.095,223,1.057,224,1.482,244,0.766,253,1.666,257,1.165,260,1.037,262,1.11,263,1.431,264,0.729,265,0.787,267,1.951,292,2.266,296,0.914,303,2.564,314,0.766,326,1.266,332,0.934,334,1.489,337,2.862,341,0.845,356,0.766,358,0.804,359,0.766,362,0.984,369,1.095,407,1.227,417,1.917,418,1.39,430,1.917,489,1.095,519,1.867,523,1.984,527,2.956,530,1.578,532,0.845,539,2.016,540,2.401,556,2.266,558,2.653,564,2.808,572,2.701,575,1.057,581,1.761,585,2.132,586,1.578,587,1.095,588,2.115,589,1.095,594,1.422,604,2.295,616,1.605,620,1.304,623,1.39,624,1.39,625,1.489,626,1.39,630,1.867,631,1.158,632,1.158,633,1.227,638,1.304,639,0.804,640,1.304,641,1.304,642,1.867,643,1.304,650,0.934,651,1.304,654,3.042,656,1.39,675,1.39,689,2.179,730,1.489,731,1.489,734,1.489,736,2.266,758,1.917,759,1.489,761,1.489,809,1.489,827,2.917,828,2.917,835,2.442,836,2.653,837,1.743,975,2.115,979,1.743,997,3.405,999,1.984,1024,2.442,1118,1.158,1163,3.241,1164,2.115,1185,2.442,1191,2.401,1192,2.653,1198,2.743,1213,2.743,1224,1.489,1236,2.956,1248,2.442,1295,2.266,1303,1.489,1309,1.605,1314,3.532,1330,1.917,1333,2.917,1469,3.947,1520,3.892,1530,1.605,1631,4.881,1632,1.743,1633,3.271,1634,3.271,1635,4.762,1636,3.96,1637,4.762,1638,3.96,1639,4.762,1640,3.96,1641,3.96,1642,3.96,1643,4.426,1644,3.809,1645,2.503,1646,2.503,1647,3.271,1648,5.788,1649,3.271,1650,2.917,1651,3.271,1652,2.503,1653,2.503,1654,2.503,1655,2.503,1656,2.503,1657,2.503,1658,2.503,1659,2.503,1660,2.503,1661,3.211,1662,2.503,1663,2.503,1664,2.15,1665,3.271,1666,2.15,1667,2.653,1668,2.15,1669,3.271,1670,2.15,1671,2.15,1672,2.15,1673,2.15,1674,3.271,1675,2.15,1676,2.15,1677,2.15,1678,2.15,1679,2.15,1680,2.15,1681,4.426,1682,2.15,1683,2.15,1684,2.15,1685,2.15,1686,2.15,1687,2.15,1688,2.15,1689,2.15,1690,2.15,1691,2.15,1692,2.15,1693,2.15,1694,2.15,1695,2.15,1696,2.15,1697,2.15,1698,2.15,1699,1.917,1700,3.271,1701,2.15,1702,2.15,1703,2.15,1704,3.809,1705,3.271,1706,2.503,1707,3.809,1708,3.809,1709,3.809,1710,3.809,1711,3.809,1712,3.809,1713,3.809,1714,3.809,1715,3.809,1716,3.809,1717,3.809,1718,3.809,1719,3.809,1720,2.503]],["title/interfaces/VerifiedFailed.html",[0,0.497,1102,2.061]],["body/interfaces/VerifiedFailed.html",[0,0.767,2,1.302,3,0.211,4,0.188,5,0.167,9,0.329,10,0.484,15,2.488,16,2.129,17,0.622,18,0.02,19,0.331,24,0.616,26,0.188,33,0.288,40,0.462,41,0.256,43,0.633,44,0.713,45,1.204,60,0.887,61,2.183,62,0.552,63,1.549,65,0.552,82,1.402,83,0.864,84,1.52,87,1.448,92,1.799,98,1.147,101,2.033,107,2.649,110,1.069,119,0.012,120,0.012,145,0.52,146,0.513,196,0.484,205,1.464,224,1.179,228,1.442,244,2.235,257,1.123,260,1.52,262,1.464,263,1.792,264,1.069,265,1.457,267,2.291,273,1.52,274,1.442,277,1.911,279,2.649,281,1.239,286,2.081,287,1.442,289,1.911,293,1.697,296,1.71,297,2.038,298,1.697,314,1.537,318,2.822,321,1.37,322,1.911,324,2.038,325,2.038,326,1.147,339,1.37,341,1.239,342,2.038,343,2.081,353,1.911,356,1.537,358,1.614,359,1.537,382,2.462,383,3.221,408,2.984,449,2.989,463,1.605,486,2.353,517,1.799,639,1.98,650,1.875,689,2.903,770,1.697,774,2.808,844,2.323,973,2.183,1041,1.911,1078,1.911,1092,3.182,1093,2.038,1094,2.038,1095,2.183,1096,4.495,1097,2.556,1098,4.291,1099,2.556,1100,3.209,1101,2.038,1102,3.422,1103,2.183,1104,3.499,1105,3.221,1106,3.499,1107,3.499,1108,2.353,1109,2.556,1110,2.989,1111,2.038,1112,2.556,1113,2.556,1114,2.353,1115,2.556,1116,2.556,1117,3.499,1118,2.649,1119,2.353,1120,2.556,1121,2.556,1122,2.556,1123,3.221,1124,2.353,1125,2.353,1126,2.556,1127,2.556,1128,2.556,1129,4.291,1130,2.556,1131,2.556,1132,2.353,1133,2.038,1134,2.556,1135,2.556,1136,2.556,1137,2.556,1138,2.556,1139,2.038,1140,1.911,1141,2.556,1142,2.353,1143,2.353,1144,2.556,1145,2.556,1146,2.353,1147,2.556,1148,2.556,1149,2.556,1150,3.99,1151,2.556,1152,2.556,1153,2.556,1154,2.353,1155,2.353,1156,2.556,1157,2.556,1158,2.556,1159,2.556,1160,2.556,1161,2.556,1162,2.556]],["title/components/VerifyEmailComponent.html",[21,0.043,198,0.657]],["body/components/VerifyEmailComponent.html",[3,0.231,4,0.207,5,0.183,9,0.36,10,0.515,12,3.426,15,1.501,17,0.573,18,0.019,19,0.364,20,0.75,21,0.069,24,0.675,26,0.207,29,2.942,30,1.116,31,1.017,32,1.427,33,0.231,34,0.997,35,0.997,36,1.05,37,1.364,38,1.223,40,0.506,41,0.281,42,0.675,43,0.756,44,1.019,45,1.277,49,3.126,50,1.749,59,0.75,60,0.787,62,0.388,65,1.05,67,2.392,68,1.971,82,1.161,83,0.538,84,1.666,119,0.013,120,0.013,121,0.997,122,0.712,123,0.79,124,0.675,126,1.461,134,0.79,135,1.05,136,0.997,137,0.79,138,1.257,139,0.79,140,0.852,141,0.79,142,0.712,143,0.79,144,1.074,145,0.553,146,0.537,147,0.79,148,0.712,149,0.79,150,1.05,151,0.712,152,0.997,153,1.179,154,0.712,155,1.179,156,0.712,157,0.75,158,0.712,159,0.79,160,0.712,161,0.79,162,0.79,163,0.712,164,0.79,165,0.712,166,0.79,167,0.712,168,0.79,169,0.712,170,0.79,171,0.712,172,0.79,173,0.712,174,0.75,175,0.79,176,0.712,177,0.759,178,0.79,179,0.675,180,0.79,181,0.712,182,0.79,183,0.79,184,0.712,185,0.712,186,0.712,187,0.79,188,0.79,189,0.712,190,0.75,191,0.712,192,0.75,193,0.79,194,0.712,195,0.675,196,0.388,197,0.79,198,1.133,199,0.79,200,0.79,203,1.105,316,2.968,326,1.22,362,1.58,380,2.214,382,2.619,408,2.783,424,3.722,528,2.359,532,1.358,538,2.392,539,2.625,541,3.722,589,1.759,654,2.783,1090,3.179,1091,3.179,1519,4.597,1520,4.478,1522,3.454,1524,2.578,1525,3.08,1526,4.59,1527,3.08,1529,3.08,1530,2.578,1536,4.093,1721,4.638,1722,4.638,1723,5.344,1724,4.021,1725,3.848,1726,2.578,1727,4.021,1728,4.021,1729,5.344]],["title/interfaces/VerifyEmailResult.html",[0,0.497,1726,2.379]],["body/interfaces/VerifyEmailResult.html",[0,0.683,2,1.812,3,0.293,4,0.262,5,0.232,9,0.457,10,0.6,11,2.101,12,4.772,15,2.505,16,2.169,17,0.601,18,0.019,19,0.345,24,0.857,26,0.262,33,0.357,41,0.356,43,0.643,44,0.725,45,0.953,82,1.11,83,0.683,98,1.166,101,1.812,110,1.488,119,0.015,120,0.015,145,0.644,146,0.457,205,1.813,228,2.007,244,1.562,250,2.836,253,2.935,254,3.273,257,1.562,264,1.488,265,1.055,267,2.37,273,2.115,274,2.007,293,2.361,296,1.61,314,1.562,318,2.721,326,1.166,330,3.273,343,2.115,356,1.562,358,1.641,359,1.562,408,3.841,650,1.906,1140,2.659,1721,3.557,1722,3.557,1725,3.273,1726,3.989,1730,4.386,1731,4.386,1732,4.386,1733,4.386]],["title/injectables/VerifyEmailService.html",[205,1.081,1725,2.379]],["body/injectables/VerifyEmailService.html",[0,0.658,3,0.282,4,0.252,5,0.223,9,0.44,10,0.586,11,1.659,12,4.69,15,2.573,16,2.154,17,0.544,18,0.019,19,0.339,24,0.825,26,0.252,33,0.349,41,0.343,43,0.831,44,0.937,45,1.231,66,4.655,82,1.321,83,0.658,98,1.122,101,1.744,110,1.432,112,1.86,119,0.015,120,0.015,126,1.388,140,0.698,145,0.683,146,0.44,205,1.771,207,2.924,215,1.687,221,2.149,223,1.364,228,1.931,244,2.019,250,2.729,253,2.149,254,3.151,257,1.504,264,1.432,265,1.016,267,2.215,273,2.734,274,2.389,293,2.811,296,1.583,314,1.504,318,2.658,326,1.507,330,3.151,343,2.036,356,1.504,358,1.579,359,1.504,408,3.591,575,1.687,650,1.834,1140,3.166,1721,4.596,1722,4.596,1725,3.897,1726,3.151,1730,5.22,1731,5.22,1732,5.22,1733,5.22,1734,4.914,1735,4.914]],["title/interfaces/ViewModel.html",[0,0.497,1667,2.585]],["body/interfaces/ViewModel.html",[0,0.477,2,1.266,3,0.205,4,0.183,5,0.162,9,0.319,10,0.475,16,1.436,17,0.627,18,0.02,19,0.384,20,0.666,21,0.057,24,0.599,26,0.253,28,2.072,31,0.783,32,1.266,33,0.205,34,0.666,35,0.666,36,0.701,37,0.632,38,0.567,41,0.249,43,0.916,44,1.025,45,0.666,50,1.039,63,0.775,69,2.566,70,2.566,71,2.566,72,2.566,73,1.649,82,0.775,83,0.855,86,1.748,87,1.323,98,0.815,108,1.204,114,1.649,119,0.012,120,0.012,144,0.827,145,0.369,146,0.505,177,0.961,179,0.827,195,0.599,196,0.733,203,0.737,224,1.583,244,1.091,253,2.155,257,1.507,260,1.478,262,1.436,263,1.567,264,1.039,265,1.018,267,1.146,292,2.107,296,1.182,303,2.61,314,1.091,326,0.815,332,1.331,334,2.122,337,3.238,341,1.204,356,1.091,358,1.146,359,1.091,362,1.402,369,1.56,407,1.748,417,2.732,418,1.981,430,2.732,489,1.56,519,1.748,523,1.858,527,3.159,530,1.478,532,1.204,539,2.155,540,2.566,558,2.484,564,2.815,572,2.815,575,1.368,581,2.278,585,2.61,586,2.041,587,1.56,588,2.736,589,1.56,594,1.839,604,1.936,616,2.287,620,1.858,623,1.981,624,1.981,625,2.122,626,1.981,630,2.415,631,1.649,632,1.649,633,1.748,638,1.858,639,1.146,640,1.858,641,1.858,642,2.415,643,1.858,650,1.331,651,1.858,689,1.402,730,2.122,731,2.122,734,2.122,736,2.931,758,2.732,759,2.122,761,2.122,809,2.122,827,3.774,828,3.774,835,3.159,836,3.432,837,2.484,975,1.981,979,2.484,997,2.94,999,1.858,1024,2.287,1118,1.649,1163,1.649,1164,2.736,1185,2.287,1191,2.566,1198,2.931,1213,2.122,1224,2.122,1236,4.235,1295,2.931,1303,2.122,1309,2.287,1314,2.732,1330,2.732,1333,3.774,1469,2.732,1520,2.287,1530,2.287,1631,2.484,1632,2.484,1633,3.063,1634,3.063,1635,3.063,1636,3.063,1637,3.063,1638,3.063,1639,3.063,1640,3.063,1641,3.063,1642,3.063,1643,3.063,1647,3.063,1648,6.151,1649,3.063,1650,2.732,1651,3.063,1661,3.432,1664,3.063,1665,4.232,1666,3.063,1667,3.931,1668,3.063,1669,4.232,1670,3.063,1671,3.063,1672,3.063,1673,3.063,1674,4.232,1675,3.063,1676,3.063,1677,3.063,1678,3.063,1679,3.063,1680,3.063,1681,5.229,1682,3.063,1683,3.063,1684,3.063,1685,3.063,1686,3.063,1687,3.063,1688,3.063,1689,3.063,1690,3.063,1691,3.063,1692,3.063,1693,3.063,1694,3.063,1695,3.063,1696,3.063,1697,3.063,1698,3.063,1699,2.732,1700,4.232,1701,3.063,1702,3.063,1703,3.063]],["title/coverage.html",[1736,3.878]],["body/coverage.html",[0,0.946,1,1.929,5,0.137,6,3.346,17,0.65,18,0.019,21,0.087,31,0.478,42,0.505,87,0.654,108,1.736,119,0.011,120,0.011,142,0.533,144,0.505,146,0.391,148,0.533,151,0.533,154,0.533,156,0.533,158,0.533,160,0.533,163,0.533,165,0.533,167,0.533,169,0.533,171,0.533,173,0.533,176,0.533,177,0.427,179,0.505,181,0.533,184,0.533,185,0.533,186,0.533,189,0.533,191,0.533,194,0.533,195,0.505,196,0.29,198,0.533,201,2.585,205,1.746,206,2.096,208,2.585,209,2.585,210,2.585,247,1.929,248,3.564,249,3.564,250,3.471,264,0.877,266,1.79,269,1.929,272,1.79,307,5.435,361,2.585,362,1.183,363,2.585,505,2.585,514,2.305,525,2.585,536,4.173,537,3.938,538,3.836,570,2.305,581,2.02,590,1.79,591,1.567,592,1.567,594,1.123,595,1.929,596,1.929,600,3.042,604,1.717,679,3.346,680,4.006,689,1.183,705,2.305,745,2.096,746,4.173,747,4.173,761,1.79,790,3.346,791,3.346,799,2.096,805,2.305,809,1.79,822,2.096,823,4.321,824,4.321,829,2.305,830,2.305,832,2.305,850,2.585,860,3.938,861,3.938,862,3.938,880,2.305,889,2.305,917,2.585,931,3.346,932,3.346,943,2.305,952,2.585,1001,3.346,1014,2.305,1030,2.585,1047,3.346,1048,3.346,1049,3.346,1067,2.305,1092,1.671,1093,3.739,1094,3.739,1095,3.836,1101,1.671,1102,1.671,1103,1.79,1110,1.79,1111,1.671,1163,3.269,1164,3.581,1165,4.133,1180,1.79,1181,1.79,1186,1.929,1187,1.929,1189,1.929,1191,1.567,1216,4.384,1303,3.059,1304,2.585,1305,2.585,1309,2.8,1310,3.346,1334,2.305,1340,2.585,1341,2.585,1342,2.585,1524,1.929,1546,2.305,1566,2.585,1570,2.585,1574,2.585,1579,2.585,1580,2.585,1581,2.585,1624,2.585,1631,3.581,1632,3.581,1661,2.096,1667,2.096,1721,3.581,1722,3.581,1725,1.929,1726,1.929,1736,2.305,1737,3.009,1738,3.009,1739,7.719,1740,2.585,1741,7.625,1742,2.585,1743,5.991,1744,2.585,1745,2.585,1746,2.585,1747,2.585,1748,2.585,1749,2.585,1750,2.585,1751,2.585,1752,2.585,1753,2.585,1754,2.585,1755,3.938,1756,7.221,1757,6.732,1758,3.009,1759,2.585,1760,3.009,1761,2.585,1762,2.585,1763,6.838,1764,4.368,1765,3.009,1766,4.368,1767,2.585,1768,2.585,1769,3.009,1770,5.991,1771,3.009,1772,2.585,1773,3.009,1774,3.009,1775,3.009,1776,2.585,1777,3.009,1778,3.009,1779,3.009,1780,3.009,1781,4.416,1782,3.752,1783,3.752,1784,2.585,1785,2.585,1786,2.585,1787,2.585,1788,2.585,1789,2.585,1790,2.585,1791,3.009,1792,3.009,1793,3.009,1794,3.009,1795,3.009,1796,3.752,1797,3.752,1798,2.585,1799,2.585,1800,5.538,1801,5.146,1802,2.585,1803,2.585,1804,2.585,1805,2.585,1806,2.585,1807,3.752,1808,2.585,1809,2.585,1810,3.009,1811,3.009]],["title/dependencies.html",[1812,2.662,1813,3.418]],["body/dependencies.html",[18,0.019,26,0.283,30,1.53,63,1.198,119,0.016,120,0.016,226,4.989,227,3.875,262,1.606,319,3.061,532,1.86,586,2.283,985,4.733,986,4.733,987,5.956,988,4.733,989,5.956,990,5.956,1813,4.221,1814,5.511,1815,7.589,1816,5.511,1817,5.511,1818,5.511,1819,5.511,1820,5.511,1821,5.511,1822,5.511,1823,5.511,1824,6.935,1825,5.511,1826,4.733,1827,5.511,1828,5.511,1829,5.511,1830,5.511,1831,5.511,1832,5.511,1833,5.511,1834,5.511,1835,5.511]],["title/miscellaneous/enumerations.html",[1836,1.844,1837,3.833]],["body/miscellaneous/enumerations.html",[9,0.518,18,0.019,60,0.793,63,1.457,119,0.017,120,0.017,575,2.081,1836,3.445,1837,4.974,1838,6.706,1839,5.759,1840,6.706,1841,5.791,1842,5.791,1843,5.791,1844,5.791,1845,6.706,1846,5.791,1847,5.791,1848,5.791,1849,5.791,1850,5.791]],["title/index.html",[9,0.277,1851,2.662,1852,2.662]],["body/index.html",[18,0.016,38,0.893,119,0.016,120,0.016,174,1.048,265,1.361,303,2.597,418,3.119,419,4.301,502,4.481,534,3.341,535,4.301,905,3.911,998,3.911,1234,3.6,1409,4.823,1427,3.911,1621,5.045,1813,4.301,1853,4.823,1854,6.99,1855,6.003,1856,5.616,1857,6.587,1858,6.587,1859,5.616,1860,4.823,1861,6.003,1862,4.823,1863,6.003,1864,4.823,1865,5.616,1866,5.616,1867,6.99,1868,5.616,1869,5.616,1870,5.616,1871,4.823,1872,5.616,1873,5.616,1874,5.616,1875,5.616,1876,5.616,1877,5.616,1878,5.616,1879,6.587]],["title/license.html",[1596,2.159,1851,2.662,1852,2.662]],["body/license.html",[0,0.589,2,0.978,4,0.36,5,0.094,14,1.591,17,0.186,18,0.012,19,0.061,21,0.043,23,0.915,39,0.832,41,0.083,43,0.818,45,0.223,63,0.26,71,0.622,72,0.622,77,3.468,80,1.591,84,0.495,87,0.957,96,1.591,111,0.586,115,0.766,119,0.007,120,0.005,126,0.273,152,0.697,190,0.514,192,1.262,196,0.557,215,0.332,224,0.384,230,0.832,265,1.411,277,2.953,280,1.447,281,0.403,282,0.832,283,1.615,286,0.861,292,2.405,295,0.737,296,0.287,301,0.766,302,1.524,308,2.393,309,1.92,311,0.664,321,1.23,332,0.776,335,2.113,339,1.394,343,0.495,344,0.766,348,2.618,353,0.622,354,0.832,366,2.113,372,2.112,380,0.495,388,0.915,390,1.026,391,2.524,395,1.785,397,0.766,407,2.395,418,3.004,422,2.112,423,3.863,424,1.447,428,3.571,432,1.026,433,3.207,437,1.026,442,2.831,443,2.112,445,3.571,446,1.026,447,2.831,448,5.488,452,2.6,458,1.026,461,2.86,463,1.441,466,4.004,467,4.804,470,2.831,489,0.522,498,0.915,499,2.86,501,3.207,503,4.366,516,1.64,517,2.157,519,0.586,521,4.515,523,1.436,594,0.446,607,1.791,624,2.714,631,0.961,633,1.018,635,0.622,639,1.689,642,0.586,653,0.766,654,0.622,660,1.236,661,0.711,740,2.626,764,1.767,770,0.553,776,2.853,783,0.915,844,0.961,905,0.832,908,1.785,923,1.026,925,4.973,926,5.131,930,4.342,967,1.026,975,1.154,976,0.915,1021,2.86,1071,2.368,1078,1.082,1081,1.026,1090,0.711,1091,1.64,1100,0.622,1105,0.766,1108,0.766,1118,1.894,1140,2.953,1146,0.766,1155,1.332,1184,1.92,1190,2.393,1218,0.832,1219,2.295,1228,3.024,1234,4.818,1247,3.635,1248,0.766,1267,2.853,1273,2.626,1275,2.853,1277,1.447,1289,2.437,1293,0.832,1295,0.711,1344,1.026,1345,1.785,1346,1.785,1347,1.026,1351,2.831,1353,1.026,1355,1.785,1364,2.368,1365,1.026,1369,4.198,1375,1.785,1376,2.368,1377,1.026,1386,2.368,1390,3.518,1391,1.785,1396,1.026,1404,1.785,1411,1.785,1412,0.915,1413,1.026,1415,1.026,1420,3.207,1423,3.518,1424,1.026,1425,4.515,1426,2.831,1427,3.949,1428,4.198,1429,1.785,1432,1.785,1436,1.026,1443,1.026,1445,1.026,1446,1.026,1448,1.026,1453,1.785,1454,1.026,1456,2.368,1457,1.026,1459,1.785,1460,1.026,1462,3.207,1463,1.785,1465,2.368,1466,1.026,1467,1.026,1468,1.785,1474,4.965,1482,1.785,1488,5.202,1489,2.368,1490,1.026,1491,1.026,1493,2.368,1494,2.524,1495,6.06,1497,0.915,1498,1.785,1504,1.785,1511,4.973,1512,1.026,1514,1.026,1517,1.026,1585,3.78,1587,1.591,1588,1.026,1590,1.785,1591,1.785,1592,2.831,1593,1.026,1596,5.255,1598,4.646,1599,3.207,1600,5.654,1601,4.004,1602,3.207,1604,1.026,1606,1.026,1607,2.368,1609,2.368,1611,1.785,1612,2.368,1614,4.965,1616,1.785,1617,2.368,1621,2.112,1622,1.026,1623,1.785,1699,3.571,1705,1.026,1736,1.591,1759,1.026,1772,1.026,1776,1.785,1862,1.785,1863,2.831,1864,5.488,1880,6.135,1881,3.733,1882,1.195,1883,1.195,1884,2.757,1885,4.662,1886,6.206,1887,4.096,1888,1.195,1889,1.195,1890,2.078,1891,3.733,1892,2.757,1893,5.669,1894,2.757,1895,1.195,1896,1.195,1897,1.195,1898,2.078,1899,4.096,1900,1.195,1901,1.195,1902,4.662,1903,1.195,1904,1.195,1905,5.669,1906,7.123,1907,2.757,1908,2.078,1909,3.78,1910,4.401,1911,4.096,1912,1.195,1913,1.195,1914,3.296,1915,4.662,1916,4.662,1917,2.368,1918,1.195,1919,1.195,1920,6.135,1921,3.296,1922,1.195,1923,1.195,1924,2.078,1925,3.296,1926,2.078,1927,2.078,1928,3.733,1929,2.078,1930,3.296,1931,1.026,1932,4.401,1933,1.195,1934,2.757,1935,4.401,1936,3.733,1937,1.195,1938,4.662,1939,2.078,1940,5.084,1941,3.733,1942,1.195,1943,1.195,1944,1.785,1945,1.195,1946,5.547,1947,2.078,1948,1.195,1949,2.757,1950,1.195,1951,1.195,1952,1.195,1953,1.195,1954,4.662,1955,1.195,1956,1.195,1957,1.195,1958,1.195,1959,1.195,1960,1.195,1961,2.078,1962,1.195,1963,1.195,1964,1.195,1965,2.078,1966,2.078,1967,1.195,1968,1.195,1969,2.078,1970,2.078,1971,1.195,1972,2.078,1973,2.078,1974,1.195,1975,1.195,1976,2.078,1977,2.757,1978,2.368,1979,2.078,1980,1.195,1981,1.195,1982,4.096,1983,1.195,1984,1.195,1985,1.195,1986,3.296,1987,1.195,1988,1.195,1989,2.078,1990,2.757,1991,1.195,1992,1.195,1993,1.195,1994,3.296,1995,4.096,1996,2.757,1997,1.195,1998,2.757,1999,1.195,2000,1.195,2001,1.195,2002,2.757,2003,1.195,2004,2.078,2005,2.078,2006,1.195,2007,5.084,2008,1.195,2009,3.296,2010,4.662,2011,1.195,2012,2.757,2013,2.078,2014,4.096,2015,6.997,2016,2.757,2017,4.887,2018,3.296,2019,2.078,2020,1.195,2021,2.757,2022,5.084,2023,2.078,2024,2.078,2025,3.296,2026,3.296,2027,1.195,2028,2.757,2029,1.195,2030,6.539,2031,2.078,2032,1.195,2033,4.662,2034,1.195,2035,2.757,2036,3.296,2037,5.78,2038,3.296,2039,2.078,2040,4.662,2041,5.256,2042,1.195,2043,1.195,2044,1.195,2045,1.195,2046,1.195,2047,1.195,2048,2.757,2049,1.195,2050,2.757,2051,1.195,2052,1.195,2053,1.195,2054,6.272,2055,1.195,2056,1.195,2057,1.195,2058,1.195,2059,2.078,2060,5.084,2061,1.195,2062,2.078,2063,1.195,2064,1.195,2065,3.733,2066,2.757,2067,2.757,2068,2.757,2069,1.195,2070,1.195,2071,3.733,2072,1.195,2073,1.195,2074,1.026,2075,1.195,2076,2.757,2077,1.195,2078,1.195,2079,2.757,2080,1.195,2081,1.195,2082,1.195,2083,2.078,2084,1.195,2085,1.195,2086,1.195,2087,2.078,2088,1.195,2089,2.078,2090,2.078,2091,1.195,2092,1.195,2093,1.195,2094,2.078,2095,2.757,2096,3.733,2097,1.195,2098,1.195,2099,1.195,2100,4.096,2101,1.195,2102,1.195,2103,3.296,2104,1.195,2105,3.733,2106,1.195,2107,2.078,2108,1.195,2109,1.195,2110,2.757,2111,2.757,2112,2.757,2113,1.195,2114,1.195,2115,1.195,2116,1.195,2117,1.195,2118,2.078,2119,2.078,2120,2.078,2121,5.547,2122,2.078,2123,1.195,2124,1.195,2125,1.195,2126,1.195,2127,1.195,2128,1.195,2129,1.195,2130,2.757,2131,1.195,2132,1.195,2133,3.733,2134,3.733,2135,1.195,2136,2.757,2137,1.195,2138,1.195,2139,1.195,2140,2.078,2141,1.195,2142,1.195,2143,1.195,2144,1.195,2145,1.195,2146,2.078,2147,2.078,2148,1.195,2149,2.757,2150,1.195,2151,1.195,2152,2.078,2153,1.195,2154,1.195,2155,1.195,2156,1.195,2157,2.078,2158,2.078,2159,1.785,2160,4.887,2161,2.078,2162,4.096,2163,1.195,2164,1.195,2165,2.078,2166,2.757,2167,2.757,2168,3.296,2169,3.296,2170,2.757,2171,3.296,2172,2.757,2173,1.195,2174,3.733,2175,2.757,2176,2.078,2177,2.078,2178,3.733,2179,2.078,2180,3.296,2181,2.078,2182,2.757,2183,5.669,2184,3.733,2185,1.195,2186,1.195,2187,2.757,2188,2.757,2189,1.785,2190,2.078,2191,1.195,2192,1.195,2193,1.195,2194,1.195,2195,2.078,2196,1.195,2197,1.195,2198,2.757,2199,1.195,2200,1.195,2201,2.078,2202,1.195,2203,2.078,2204,2.757,2205,1.026,2206,1.195,2207,1.195,2208,2.078,2209,2.078,2210,4.096,2211,6.272,2212,2.757,2213,2.078,2214,2.078,2215,2.078,2216,2.078,2217,2.078,2218,1.195,2219,1.195,2220,1.195,2221,1.195,2222,1.195,2223,2.078,2224,1.195,2225,3.733,2226,1.195,2227,1.195,2228,1.195,2229,2.078,2230,1.195,2231,2.078,2232,4.662,2233,1.195,2234,1.195,2235,1.195,2236,1.195,2237,1.785,2238,1.195,2239,1.195,2240,2.757,2241,2.078,2242,3.296,2243,1.195,2244,1.195,2245,1.195,2246,1.195,2247,2.078,2248,1.195,2249,1.195,2250,2.368,2251,3.296,2252,1.195,2253,2.078,2254,1.195,2255,1.195,2256,1.195,2257,1.195,2258,1.195,2259,1.195,2260,1.195,2261,1.195,2262,1.195,2263,1.195,2264,1.195,2265,1.195,2266,1.195,2267,1.195,2268,1.195,2269,1.195,2270,3.296,2271,1.195,2272,1.195,2273,1.195,2274,1.195,2275,1.195,2276,1.195,2277,1.195,2278,1.195,2279,1.195,2280,4.401,2281,1.195,2282,1.195,2283,2.757,2284,1.195,2285,2.757,2286,1.195,2287,1.195,2288,1.195,2289,1.195,2290,1.195,2291,1.195,2292,1.195,2293,1.195,2294,1.195,2295,1.195,2296,1.195,2297,1.195,2298,1.195,2299,2.078,2300,2.078,2301,1.195,2302,2.757,2303,1.195,2304,1.195,2305,2.078,2306,3.296,2307,1.195,2308,2.078,2309,1.195,2310,2.757,2311,4.401,2312,1.195,2313,2.078,2314,1.195,2315,1.195,2316,1.195,2317,1.195,2318,1.195,2319,1.195,2320,1.195,2321,2.078,2322,3.296,2323,1.195,2324,1.195,2325,1.195,2326,1.195,2327,1.195,2328,1.195,2329,1.195,2330,2.078,2331,2.078,2332,2.078,2333,2.757,2334,1.195,2335,2.078,2336,1.195,2337,2.757,2338,1.195,2339,2.078,2340,1.195,2341,2.078,2342,1.195,2343,2.757,2344,2.078,2345,1.195,2346,1.195,2347,2.078,2348,6.39,2349,2.078,2350,1.195,2351,3.733,2352,5.084,2353,2.757,2354,1.195,2355,1.195,2356,1.195,2357,3.296,2358,1.195,2359,2.757,2360,2.078,2361,1.195,2362,1.195,2363,1.195,2364,1.195,2365,1.195,2366,1.195,2367,1.195,2368,1.195,2369,3.296,2370,2.078,2371,2.078,2372,1.195,2373,1.195,2374,2.757,2375,1.195,2376,2.078,2377,2.757,2378,2.078,2379,1.195,2380,1.195,2381,1.195,2382,2.078,2383,2.757,2384,1.195,2385,1.195,2386,2.078,2387,1.195,2388,1.195,2389,1.195,2390,1.195,2391,1.195,2392,1.195,2393,2.757,2394,2.078,2395,1.195,2396,1.195,2397,3.296,2398,1.195,2399,2.757,2400,1.195,2401,1.195,2402,1.195,2403,2.078,2404,1.195,2405,1.195,2406,1.195,2407,2.757,2408,2.078,2409,2.078,2410,1.195,2411,4.401,2412,2.078,2413,2.757,2414,3.296,2415,1.195,2416,2.078,2417,1.195,2418,2.757,2419,1.195,2420,2.078,2421,1.195,2422,1.195,2423,1.195,2424,1.195,2425,1.195,2426,2.078,2427,1.195,2428,1.195,2429,1.195,2430,2.078,2431,1.195,2432,1.195,2433,2.078,2434,1.195,2435,1.195,2436,1.195,2437,1.026,2438,1.195,2439,1.195,2440,1.195,2441,1.195,2442,2.757,2443,1.195,2444,1.195,2445,1.195,2446,1.195,2447,1.195,2448,2.078,2449,1.195,2450,1.195,2451,1.195,2452,1.195,2453,1.195,2454,1.195,2455,1.195,2456,1.195,2457,1.195,2458,1.195,2459,1.195,2460,1.195,2461,1.195,2462,1.195,2463,2.078,2464,1.195,2465,1.195,2466,1.195,2467,1.195,2468,1.195,2469,1.195,2470,1.195,2471,1.195,2472,2.757,2473,1.195,2474,2.078,2475,1.195,2476,1.195,2477,1.195,2478,1.195,2479,2.078,2480,2.078,2481,2.757,2482,1.195,2483,2.078,2484,1.195,2485,1.195,2486,1.195,2487,2.757,2488,2.078,2489,1.195,2490,2.078,2491,2.078,2492,1.195,2493,1.195,2494,1.195,2495,1.195,2496,1.195,2497,1.195,2498,1.195,2499,1.195,2500,2.078,2501,1.195,2502,1.195,2503,1.195,2504,1.195,2505,1.195,2506,1.195,2507,1.195,2508,1.195,2509,1.195,2510,1.195,2511,1.195,2512,2.078,2513,1.195,2514,1.195,2515,2.078,2516,1.195,2517,1.195,2518,1.195,2519,1.195,2520,1.195,2521,1.195,2522,1.195,2523,1.195,2524,1.195,2525,1.195,2526,1.195,2527,1.195,2528,1.195,2529,1.195,2530,1.195,2531,2.757,2532,2.078,2533,1.195,2534,1.195,2535,1.195,2536,1.195,2537,1.195,2538,2.078,2539,1.195,2540,1.195,2541,1.195,2542,1.195,2543,1.195,2544,1.195,2545,2.078,2546,1.195,2547,1.195,2548,1.195,2549,1.195,2550,1.195,2551,1.195,2552,1.195,2553,1.195,2554,1.195,2555,1.195,2556,1.195,2557,1.195,2558,1.195,2559,1.195,2560,1.195,2561,1.195,2562,1.195,2563,1.195,2564,1.195]],["title/modules.html",[2565,4.348]],["body/modules.html",[18,0.017,119,0.017,120,0.017,2565,5.211]],["title/overview.html",[2566,4.348]],["body/overview.html",[2,2.136,18,0.017,119,0.017,120,0.017,121,1.123,207,3.58,1497,4.61,2205,5.169,2566,5.169,2567,6.018]],["title/properties.html",[10,0.43,1812,2.662]],["body/properties.html",[7,4.055,10,0.561,18,0.019,119,0.017,120,0.017,499,4.459,502,3.732,1511,4.459,1513,5,1587,4.459,1596,4.055,1853,5,1861,5,2568,5.821,2569,5.821,2570,5.821,2571,5.821,2572,5.821,2573,5.821,2574,5.821,2575,5.821,2576,5.821,2577,5.821,2578,5.821,2579,5.821,2580,5.821,2581,5.821,2582,5.821]],["title/miscellaneous/typealiases.html",[1836,1.844,2583,4.462]],["body/miscellaneous/typealiases.html",[9,0.461,17,0.461,18,0.019,119,0.016,120,0.016,196,0.497,244,1.577,263,1.431,337,2.526,536,4.359,537,3.947,538,4.272,570,4.793,581,3.241,585,3.417,600,4.881,601,4.793,602,4.359,603,4.793,679,3.947,680,4.68,689,2.648,705,4.793,790,3.947,791,3.947,860,3.947,861,3.947,862,5.162,880,4.793,887,4.793,889,4.793,931,3.947,932,3.947,943,4.793,1001,3.947,1014,4.793,1092,3.475,1093,3.475,1094,3.475,1095,4.169,1101,3.475,1102,3.475,1103,3.723,1110,3.723,1163,2.894,1303,3.066,1309,3.304,1310,4.793,1334,4.793,1546,4.793,1631,3.59,1632,4.359,1661,4.359,1755,3.947,1836,3.066,2584,5.154,2585,6.739,2586,7.008,2587,6.258,2588,5.154,2589,5.154,2590,5.154,2591,5.375,2592,4.426,2593,4.426]],["title/miscellaneous/variables.html",[1836,1.844,2594,3.833]],["body/miscellaneous/variables.html",[1,1.136,9,0.159,10,0.171,16,1.615,17,0.591,18,0.02,22,1.357,25,2.043,28,1.126,29,1.803,38,0.282,45,0.541,52,1.357,62,0.171,63,1.094,68,1.803,69,3.074,70,3.074,71,2.442,72,2.988,73,0.82,74,1.357,76,1.054,82,0.63,83,0.982,84,1.942,86,1.421,87,1.364,95,1.234,98,0.405,101,2.227,108,2.151,109,1.136,110,0.516,111,0.868,112,2.236,113,1.234,114,0.82,115,1.136,116,1.234,117,1.234,119,0.007,120,0.007,122,0.651,136,0.793,140,0.252,145,0.626,146,0.514,196,0.553,206,1.234,212,1.522,219,3.16,223,1.301,224,0.569,230,1.234,244,1.806,248,1.054,249,1.054,250,1.61,253,2.424,263,1.539,264,0.845,265,0.599,269,1.859,270,1.234,271,1.234,274,0.696,290,1.234,292,1.082,293,1.701,295,1.508,296,1.767,302,1.701,303,2.168,314,1.301,318,2.05,319,2.604,321,0.661,326,0.662,332,0.661,337,3.496,339,0.661,341,1.699,346,1.234,359,1.301,364,2.818,366,1.136,372,2.221,388,2.221,398,1.522,400,1.725,402,2.49,404,1.234,416,1.522,449,1.054,452,2.019,463,1.268,464,2.49,514,1.357,519,1.421,534,2.189,572,2.168,575,2.066,581,1.966,585,2.168,587,2.05,590,1.725,591,1.51,592,2.442,594,1.587,595,2.725,596,1.859,598,1.234,604,2.569,607,2.787,623,0.984,628,2.189,630,1.803,631,0.82,633,0.868,635,0.923,639,1.366,653,3.005,655,3.265,713,2.818,714,3.256,727,1.357,745,1.234,746,2.019,747,3.265,748,4.069,752,3.256,753,3.7,754,2.221,755,2.49,756,1.522,759,1.054,761,1.725,762,1.522,763,2.221,764,1.136,765,2.359,766,1.522,767,2.49,768,2.221,769,1.522,770,2.653,771,3.861,772,1.522,773,2.221,774,0.868,775,1.522,776,1.234,777,2.49,778,1.522,779,2.49,780,2.49,781,2.49,782,2.49,783,1.357,784,1.522,785,1.522,786,1.522,787,1.522,788,1.522,789,1.522,799,3.265,800,2.49,801,1.522,802,1.522,803,1.522,804,1.522,805,2.221,806,1.522,807,1.522,808,1.522,809,1.725,810,2.49,811,1.522,812,1.522,813,1.522,814,3.651,815,1.522,816,1.522,817,1.522,818,1.522,819,1.522,820,1.522,821,1.522,822,2.562,823,1.357,824,3.256,825,3.16,829,2.221,830,2.221,832,2.221,833,1.522,834,1.522,835,3.406,836,2.562,837,3.7,838,3.651,839,2.49,840,2.49,843,2.361,844,1.341,845,1.522,846,1.522,847,1.522,848,1.522,849,1.522,856,3.16,857,3.16,905,1.234,928,3.256,973,1.054,997,0.923,999,0.923,1022,3.16,1023,1.522,1024,1.136,1040,1.136,1047,1.357,1048,1.357,1049,2.221,1066,1.522,1067,2.221,1068,1.522,1069,1.522,1070,1.522,1078,0.923,1091,1.725,1124,1.136,1125,1.136,1132,1.136,1140,0.923,1143,1.859,1163,0.82,1164,0.984,1165,3.005,1181,1.725,1182,1.234,1186,1.859,1187,1.859,1188,1.234,1189,1.859,1190,1.859,1220,1.234,1228,1.725,1274,1.234,1276,2.019,1325,1.522,1359,1.522,1373,1.522,1406,1.522,1427,1.234,1481,3.651,1484,1.522,1515,1.522,1524,1.859,1650,1.357,1740,1.522,1742,2.49,1744,1.522,1745,2.49,1746,3.16,1747,1.522,1748,2.49,1749,1.522,1750,2.49,1751,2.49,1752,1.522,1753,2.49,1754,2.49,1755,1.357,1761,1.522,1762,2.49,1767,1.522,1768,2.49,1781,2.49,1782,1.522,1783,3.16,1784,3.16,1785,1.522,1786,2.49,1787,1.522,1788,1.522,1789,1.522,1790,2.49,1796,1.522,1797,1.522,1798,2.49,1799,2.49,1800,2.49,1801,4.323,1802,3.651,1803,2.49,1804,2.49,1805,3.16,1806,3.651,1807,3.16,1808,2.49,1809,3.651,1826,3.16,1836,1.054,1839,2.49,1855,1.522,1860,1.522,1871,1.522,1909,1.522,1917,1.522,1931,1.522,1944,1.522,1978,1.522,2074,1.522,2159,2.49,2189,1.522,2237,2.49,2250,1.522,2437,3.16,2591,1.522,2592,3.651,2593,2.49,2594,1.522,2595,1.772,2596,5.312,2597,1.772,2598,1.772,2599,3.679,2600,3.679,2601,1.772,2602,2.899,2603,1.772,2604,1.772,2605,1.772,2606,1.772,2607,1.772,2608,1.772,2609,1.772,2610,1.772,2611,1.772,2612,1.772,2613,1.772,2614,1.772,2615,2.899,2616,2.899,2617,1.772,2618,1.772,2619,1.772,2620,1.772,2621,1.772,2622,1.772,2623,1.772,2624,1.772,2625,1.772,2626,1.772,2627,1.772,2628,1.772,2629,1.772,2630,1.772,2631,1.772,2632,1.772,2633,1.772,2634,1.772,2635,1.772,2636,1.772,2637,1.772,2638,1.772,2639,3.679,2640,1.772,2641,1.772,2642,1.772,2643,2.899,2644,2.899,2645,2.899,2646,1.772,2647,1.772,2648,1.772,2649,1.772,2650,1.772,2651,1.772,2652,1.772,2653,1.772,2654,1.772,2655,1.772,2656,3.679,2657,1.772,2658,1.772,2659,1.772,2660,4.251,2661,5.033,2662,2.899,2663,2.899,2664,3.679,2665,2.899,2666,1.772,2667,1.772,2668,2.899,2669,2.899,2670,2.899,2671,2.899,2672,3.679,2673,1.772,2674,1.772,2675,1.772,2676,1.772,2677,4.688,2678,3.679,2679,1.772,2680,1.772,2681,1.772,2682,1.772,2683,2.899,2684,1.772,2685,1.772,2686,1.772,2687,1.772,2688,1.772,2689,1.772,2690,1.772,2691,1.772,2692,1.772,2693,2.899,2694,2.899,2695,1.772,2696,1.772,2697,1.772,2698,2.899,2699,1.772,2700,2.899,2701,1.772,2702,1.772,2703,1.772,2704,1.772,2705,1.772,2706,1.772,2707,1.772,2708,1.772,2709,2.899,2710,1.772,2711,1.772,2712,1.772,2713,4.251,2714,1.772,2715,1.772,2716,3.679,2717,2.899,2718,3.679,2719,3.679,2720,1.772,2721,5.543,2722,2.899,2723,1.772,2724,2.899,2725,3.679,2726,1.772,2727,3.679,2728,1.772,2729,2.899,2730,2.899,2731,1.772,2732,1.772,2733,2.899,2734,2.899,2735,1.772,2736,2.899,2737,2.899,2738,1.772,2739,1.772,2740,1.772,2741,1.772,2742,1.772,2743,1.772,2744,1.772,2745,1.772,2746,1.772,2747,1.772,2748,1.772,2749,1.772,2750,2.899,2751,1.772,2752,1.772,2753,2.899,2754,1.772,2755,1.772,2756,1.772,2757,1.772,2758,1.772,2759,1.772,2760,2.899,2761,1.772,2762,4.251,2763,3.679,2764,2.899,2765,1.772,2766,1.772,2767,1.772,2768,1.772,2769,1.772,2770,1.772,2771,1.772,2772,1.772,2773,1.772,2774,1.772,2775,1.772,2776,1.772,2777,1.772,2778,1.772,2779,1.772,2780,1.772,2781,1.772,2782,1.772,2783,3.679,2784,3.679,2785,2.899,2786,1.772,2787,1.772,2788,2.899,2789,1.772,2790,1.772,2791,1.772,2792,1.772,2793,1.772,2794,1.772,2795,1.772,2796,1.772,2797,2.899,2798,1.772,2799,1.772,2800,1.772,2801,1.772,2802,1.772,2803,1.772,2804,1.772,2805,1.772,2806,2.899,2807,1.772,2808,1.772,2809,1.772,2810,2.899,2811,1.772,2812,1.772,2813,1.772,2814,1.772,2815,1.772,2816,1.772,2817,1.772,2818,1.772,2819,1.772,2820,1.772,2821,1.772,2822,1.772,2823,1.772,2824,1.772,2825,1.772,2826,1.772,2827,1.772,2828,1.772,2829,1.772,2830,1.772,2831,1.772,2832,1.772,2833,1.772,2834,1.772,2835,1.772,2836,1.772]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":307,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2568,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":1835,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1739,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1769,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1758,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1766,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1764,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1793,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1757,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1770,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1743,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1765,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1936,"title":{},"body":{"license.html":{}}}],["1.0.0",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1763,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1792,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1760,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2130,"title":{},"body":{"license.html":{}}}],["100",{"_index":1216,"title":{},"body":{"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"coverage.html":{}}}],["1000",{"_index":2749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":2140,"title":{},"body":{"license.html":{}}}],["12",{"_index":514,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["13",{"_index":1497,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{},"overview.html":{}}}],["15",{"_index":2313,"title":{},"body":{"license.html":{}}}],["16",{"_index":1776,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["19.0.0",{"_index":1818,"title":{},"body":{"dependencies.html":{}}}],["19.1.5",{"_index":1815,"title":{},"body":{"dependencies.html":{}}}],["1996",{"_index":2145,"title":{},"body":{"license.html":{}}}],["1:207926801743:web:e1402f665312fb7ab0813a",{"_index":2826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":1190,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":1833,"title":{},"body":{"dependencies.html":{}}}],["2/12",{"_index":1777,"title":{},"body":{"coverage.html":{}}}],["2/16",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1759,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["2007",{"_index":1884,"title":{},"body":{"license.html":{}}}],["207926801743",{"_index":2830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27",{"_index":2567,"title":{},"body":{"overview.html":{}}}],["28",{"_index":2458,"title":{},"body":{"license.html":{}}}],["29",{"_index":1882,"title":{},"body":{"license.html":{}}}],["2bdaafa",{"_index":1848,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["3",{"_index":1881,"title":{},"body":{"license.html":{}}}],["3.0",{"_index":2578,"title":{},"body":{"properties.html":{}}}],["3.0.0",{"_index":1827,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":1830,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":1773,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1795,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2365,"title":{},"body":{"license.html":{}}}],["33",{"_index":1791,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":1188,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["37",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["3rd",{"_index":520,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["4",{"_index":2175,"title":{},"body":{"license.html":{}}}],["4/7",{"_index":1775,"title":{},"body":{"coverage.html":{}}}],["404",{"_index":1076,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["4096",{"_index":2752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42",{"_index":1794,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":2205,"title":{},"body":{"license.html":{},"overview.html":{}}}],["500",{"_index":270,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"miscellaneous/variables.html":{}}}],["556e@411e.89a6",{"_index":1842,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["57",{"_index":1774,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1182,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["6.7.1",{"_index":1824,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1772,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["6b",{"_index":2230,"title":{},"body":{"license.html":{}}}],["6d",{"_index":2245,"title":{},"body":{"license.html":{}}}],["7",{"_index":2172,"title":{},"body":{"license.html":{}}}],["7.8.0",{"_index":1831,"title":{},"body":{"dependencies.html":{}}}],["86f(8b36#26b",{"_index":1844,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["8dafcd9)6*e3",{"_index":1849,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["908a@40c2.b893",{"_index":1847,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_",{"_index":2801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_$actionstate",{"_index":46,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["_$confirmdialog",{"_index":864,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["_$fileinput",{"_index":1313,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["_auth",{"_index":273,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["_basetitle",{"_index":213,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["_childroute",{"_index":2717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_confirmpasswordreset",{"_index":1138,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["_confirmpasswordreset(code",{"_index":1157,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["_doactioncode",{"_index":1537,"title":{},"body":{"injectables/RecoverEmailService.html":{}}}],["_doactioncode(oobcode",{"_index":327,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["_metaservice",{"_index":1055,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["_modepaths",{"_index":47,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["_newpasswordsubject",{"_index":1112,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["_refreshfilessubject",{"_index":1203,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["_robotstag",{"_index":1056,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["_router",{"_index":49,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["_sendpasswordresetemail",{"_index":1538,"title":{},"body":{"injectables/RecoverEmailService.html":{}}}],["_sendpasswordresetemail(restoredemail",{"_index":355,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["_service",{"_index":1519,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["_state",{"_index":2792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_storage",{"_index":1204,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["_tasksubject",{"_index":1206,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["_title",{"_index":214,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["_userphotoservice",{"_index":1314,"title":{},"body":{"components/PhotoUploadComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["_verifycode",{"_index":1134,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["_verifycode(code",{"_index":1161,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["ability",{"_index":1467,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["above",{"_index":2343,"title":{},"body":{"license.html":{}}}],["absence",{"_index":2173,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1491,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["absolutely",{"_index":2544,"title":{},"body":{"license.html":{}}}],["absorb",{"_index":1868,"title":{},"body":{"index.html":{}}}],["abstractcontrol",{"_index":753,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["abuse",{"_index":1964,"title":{},"body":{"license.html":{}}}],["accept",{"_index":2370,"title":{},"body":{"license.html":{}}}],["acceptable",{"_index":1487,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["acceptance",{"_index":2369,"title":{},"body":{"license.html":{}}}],["access",{"_index":1289,"title":{},"body":{"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["accessible",{"_index":2432,"title":{},"body":{"license.html":{}}}],["accomodate",{"_index":1136,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["accompanied",{"_index":2212,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":2524,"title":{},"body":{"license.html":{}}}],["accord",{"_index":2171,"title":{},"body":{"license.html":{}}}],["accordance",{"_index":1349,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["according",{"_index":2516,"title":{},"body":{"license.html":{}}}],["account",{"_index":287,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/DeleteAccountComponent.html":{},"components/HeaderComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["account'},{'name",{"_index":162,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["account.component.html",{"_index":863,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts",{"_index":862,"title":{},"body":{"components/DeleteAccountComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["account.component.ts:106",{"_index":873,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:42",{"_index":876,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:43",{"_index":877,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:44",{"_index":878,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:45",{"_index":879,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:46",{"_index":881,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:47",{"_index":882,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:48",{"_index":883,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:49",{"_index":884,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:50",{"_index":885,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:52",{"_index":875,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:53",{"_index":869,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:75",{"_index":870,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account.component.ts:80",{"_index":872,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["account/delete",{"_index":861,"title":{},"body":{"components/DeleteAccountComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["accounts",{"_index":347,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["achieve",{"_index":2530,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":2114,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":2416,"title":{},"body":{"license.html":{}}}],["action",{"_index":107,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["actioncodesettings#mode",{"_index":104,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["actioncodesettings#oobcode",{"_index":105,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["actioncodestate",{"_index":1,"title":{"interfaces/ActionCodeState.html":{}},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":39,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["actions'},{'name",{"_index":141,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["actions/get",{"_index":1525,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["actionscomponent",{"_index":42,"title":{"components/ActionsComponent.html":{}},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["activatedroutesnapshot",{"_index":2718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activities",{"_index":2028,"title":{},"body":{"license.html":{}}}],["activity",{"_index":498,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["actual",{"_index":2437,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["actual_component",{"_index":200,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["actually",{"_index":2264,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":2006,"title":{},"body":{"license.html":{}}}],["add",{"_index":2306,"title":{},"body":{"license.html":{}}}],["added",{"_index":2170,"title":{},"body":{"license.html":{}}}],["additional",{"_index":2183,"title":{},"body":{"license.html":{}}}],["additionally",{"_index":634,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/RecoverEmailComponent.html":{}}}],["address",{"_index":281,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{}}}],["addressed",{"_index":1705,"title":{},"body":{"components/UserProfileComponent.html":{},"license.html":{}}}],["addresses",{"_index":349,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["adds",{"_index":841,"title":{},"body":{"interfaces/ControlStruct.html":{}}}],["adequate",{"_index":1464,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["administrator",{"_index":508,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["adopted",{"_index":2143,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":2290,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1514,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["affects",{"_index":2291,"title":{},"body":{"license.html":{}}}],["affero",{"_index":2472,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":2398,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":2108,"title":{},"body":{"license.html":{}}}],["again",{"_index":383,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["against",{"_index":2159,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["age",{"_index":1496,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aggregate",{"_index":2198,"title":{},"body":{"license.html":{}}}],["agpl",{"_index":2577,"title":{},"body":{"properties.html":{}}}],["agree",{"_index":1347,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["agreed",{"_index":2501,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1456,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["agreements",{"_index":1433,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aim",{"_index":1960,"title":{},"body":{"license.html":{}}}],["aizasyb75fqz0szrfvclvpil9_t9upqllyplnci",{"_index":2824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alias",{"_index":1756,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2584,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliasing",{"_index":370,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["alleging",{"_index":2406,"title":{},"body":{"license.html":{}}}],["allow",{"_index":111,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["allowed",{"_index":1184,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["allows",{"_index":1475,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["along",{"_index":2174,"title":{},"body":{"license.html":{}}}],["already",{"_index":388,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["alternative",{"_index":2226,"title":{},"body":{"license.html":{}}}],["although",{"_index":1956,"title":{},"body":{"license.html":{}}}],["always",{"_index":345,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["amend",{"_index":1470,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["amp",{"_index":929,"title":{},"body":{"components/FooterComponent.html":{},"components/TermsAndConditionsComponent.html":{}}}],["analysis",{"_index":1393,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["analytics",{"_index":2618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["analyze",{"_index":1407,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anchorscrolling",{"_index":2653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ancillary",{"_index":2372,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1941,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1861,"title":{},"body":{"index.html":{},"properties.html":{}}}],["angular/animations",{"_index":1814,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":532,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1816,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":26,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":750,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{}}}],["angular/fire",{"_index":1817,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/auth",{"_index":257,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{}}}],["angular/fire/storage",{"_index":1173,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["angular/forms",{"_index":586,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":226,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"components/PageNotFoundComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":30,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"components/CentralLayoutComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/VerifyEmailComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":1820,"title":{},"body":{"dependencies.html":{}}}],["another",{"_index":409,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["anti",{"_index":2132,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":1494,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["anything",{"_index":2018,"title":{},"body":{"license.html":{}}}],["anyway",{"_index":1089,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["api",{"_index":2711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apikey",{"_index":2823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":38,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.appspot.com",{"_index":2833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.component.html",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["app.firebaseapp.com",{"_index":2828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.provider.ts",{"_index":1745,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.web.app",{"_index":2574,"title":{},"body":{"properties.html":{}}}],["app/core/user.token",{"_index":588,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["app/shared/constants",{"_index":826,"title":{},"body":{"interfaces/ControlStruct.html":{}}}],["app/shared/control",{"_index":827,"title":{},"body":{"interfaces/ControlStruct.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["app/shared/spinner/spinner.component",{"_index":32,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["appcheck",{"_index":2623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":142,"title":{"components/AppComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1742,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appears",{"_index":1694,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["appid",{"_index":2825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicable",{"_index":1428,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["application",{"_index":502,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{},"index.html":{},"properties.html":{}}}],["applicationconfig",{"_index":2612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":2560,"title":{},"body":{"license.html":{}}}],["application’s",{"_index":1379,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["applied",{"_index":1988,"title":{},"body":{"license.html":{}}}],["applies",{"_index":1155,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{}}}],["apply",{"_index":277,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{}}}],["applyactioncode",{"_index":254,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["applyactioncode(this._auth",{"_index":330,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["applying",{"_index":1152,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["applyresult",{"_index":247,"title":{"interfaces/ApplyResult.html":{}},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"coverage.html":{}}}],["appropriate",{"_index":2040,"title":{},"body":{"license.html":{}}}],["appropriately",{"_index":2164,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":2520,"title":{},"body":{"license.html":{}}}],["apptitlestrategyservice",{"_index":206,"title":{"injectables/AppTitleStrategyService.html":{}},"body":{"injectables/AppTitleStrategyService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["area",{"_index":446,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["areas",{"_index":1409,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"index.html":{}}}],["aren't",{"_index":1246,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["arguments",{"_index":963,"title":{},"body":{"components/HeaderComponent.html":{}}}],["aria",{"_index":977,"title":{},"body":{"components/HeaderComponent.html":{}}}],["arise",{"_index":1971,"title":{},"body":{"license.html":{}}}],["arising",{"_index":2504,"title":{},"body":{"license.html":{}}}],["arrange",{"_index":2433,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":2442,"title":{},"body":{"license.html":{}}}],["array",{"_index":1239,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["arrays",{"_index":1877,"title":{},"body":{"index.html":{}}}],["article",{"_index":2139,"title":{},"body":{"license.html":{}}}],["ask",{"_index":1350,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["asking",{"_index":1923,"title":{},"body":{"license.html":{}}}],["assert",{"_index":1937,"title":{},"body":{"license.html":{}}}],["assets",{"_index":2388,"title":{},"body":{"license.html":{}}}],["assistance",{"_index":1536,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["associated",{"_index":390,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["assume",{"_index":2496,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":2523,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":2332,"title":{},"body":{"license.html":{}}}],["assures",{"_index":1991,"title":{},"body":{"license.html":{}}}],["async",{"_index":326,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoUploadComponent.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["asyncpipe",{"_index":539,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/PhotoUploadComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["asyncvalidatorfn",{"_index":2796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asyncvalidatorfns",{"_index":2812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attach",{"_index":2532,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":2346,"title":{},"body":{"license.html":{}}}],["attend",{"_index":1392,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["attributed",{"_index":1950,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":2315,"title":{},"body":{"license.html":{}}}],["auth",{"_index":145,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["auth.guard.ts",{"_index":1753,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.ts",{"_index":1801,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth/account",{"_index":459,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/cancelled",{"_index":411,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/code",{"_index":377,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/cors",{"_index":384,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/credential",{"_index":387,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/email",{"_index":403,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/emulator",{"_index":2666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth/expired",{"_index":410,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/identitytoolkit.getpasswordpolicy",{"_index":2679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth/invalid",{"_index":417,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["auth/missing",{"_index":450,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/multi",{"_index":453,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/network",{"_index":465,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/password",{"_index":431,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/popup",{"_index":474,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/quota",{"_index":480,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/redirect",{"_index":484,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/requires",{"_index":392,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/timeout",{"_index":487,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/too",{"_index":493,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/unverified",{"_index":500,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/user",{"_index":490,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/weak",{"_index":513,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/web",{"_index":518,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["auth/wrong",{"_index":436,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["authdomain",{"_index":2827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authemulatorconnected",{"_index":1802,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authentication",{"_index":398,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"miscellaneous/variables.html":{}}}],["autherrormessagescomponent",{"_index":144,"title":{"components/AuthErrorMessagesComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{}}}],["authguard",{"_index":1748,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":1587,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{},"properties.html":{}}}],["authorization",{"_index":2272,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":2307,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":2412,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":2446,"title":{},"body":{"license.html":{}}}],["authors",{"_index":1910,"title":{},"body":{"license.html":{}}}],["automatic",{"_index":2380,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":283,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/DeleteAccountComponent.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["available",{"_index":1369,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["avif",{"_index":1712,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["avoid",{"_index":1293,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["await",{"_index":98,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["awaited",{"_index":94,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["aware",{"_index":1501,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["away",{"_index":1901,"title":{},"body":{"license.html":{}}}],["aws",{"_index":1284,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["b",{"_index":1267,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["b567cce6",{"_index":1843,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["back",{"_index":1045,"title":{},"body":{"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["badly",{"_index":426,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["base",{"_index":1610,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["based",{"_index":2014,"title":{},"body":{"license.html":{}}}],["basic",{"_index":2102,"title":{},"body":{"license.html":{}}}],["basis",{"_index":1478,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["become",{"_index":1505,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["before",{"_index":400,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["begin",{"_index":910,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["behalf",{"_index":2123,"title":{},"body":{"license.html":{}}}],["behaviorsubject",{"_index":1177,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["behaviorsubject(undefined",{"_index":1208,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["being",{"_index":332,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["believe",{"_index":2440,"title":{},"body":{"license.html":{}}}],["below",{"_index":2128,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":2436,"title":{},"body":{"license.html":{}}}],["best",{"_index":2529,"title":{},"body":{"license.html":{}}}],["better",{"_index":1143,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/variables.html":{}}}],["between",{"_index":2099,"title":{},"body":{"license.html":{}}}],["beyond",{"_index":2200,"title":{},"body":{"license.html":{}}}],["blank",{"_index":2784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blocked",{"_index":475,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["blockwindow",{"_index":1032,"title":{},"body":{"components/LogoutComponent.html":{}}}],["body",{"_index":2058,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":253,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["boolean(val",{"_index":808,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["both",{"_index":1944,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["box",{"_index":2551,"title":{},"body":{"license.html":{}}}],["brainfry",{"_index":534,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/HeaderComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["branch",{"_index":1196,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["brands",{"_index":1823,"title":{},"body":{"dependencies.html":{}}}],["break",{"_index":1691,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["brew",{"_index":1865,"title":{},"body":{"index.html":{}}}],["browser",{"_index":227,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"components/AuthErrorMessagesComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"dependencies.html":{}}}],["bugs",{"_index":2575,"title":{},"body":{"properties.html":{}}}],["build",{"_index":238,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{}}}],["business",{"_index":1606,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["button",{"_index":913,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["c",{"_index":1885,"title":{},"body":{"license.html":{}}}],["caches",{"_index":2809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["call",{"_index":2664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["called",{"_index":372,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":1373,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["campaigns",{"_index":1399,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["canactivatechildfn",{"_index":2716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancel",{"_index":916,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["cancelled",{"_index":413,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["care",{"_index":762,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["carry",{"_index":2176,"title":{},"body":{"license.html":{}}}],["case",{"_index":286,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{}}}],["cases",{"_index":96,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"license.html":{}}}],["catch",{"_index":358,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{}}}],["catcherror",{"_index":258,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["catcherror((problem",{"_index":313,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["caught",{"_index":2777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cause",{"_index":2203,"title":{},"body":{"license.html":{}}}],["causes",{"_index":2665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cease",{"_index":2350,"title":{},"body":{"license.html":{}}}],["central",{"_index":149,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["central.component.html",{"_index":529,"title":{},"body":{"components/CentralLayoutComponent.html":{}}}],["central.component.scss",{"_index":531,"title":{},"body":{"components/CentralLayoutComponent.html":{}}}],["centrallayoutcomponent",{"_index":148,"title":{"components/CentralLayoutComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["certain",{"_index":1351,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["cessation",{"_index":2361,"title":{},"body":{"license.html":{}}}],["change",{"_index":152,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["changed",{"_index":1948,"title":{},"body":{"license.html":{}}}],["changedetection",{"_index":34,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["changedetectionstrategy",{"_index":20,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["changedetectionstrategy.onpush",{"_index":35,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["changeemailcomponent",{"_index":151,"title":{"components/ChangeEmailComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["changeemailform",{"_index":550,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["changeemailformgroup",{"_index":570,"title":{},"body":{"components/ChangeEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["changepasswordcomponent",{"_index":154,"title":{"components/ChangePasswordComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["changepasswordform",{"_index":690,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["changepasswordformgroup",{"_index":705,"title":{},"body":{"components/ChangePasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["changes",{"_index":1509,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{}}}],["changing",{"_index":1895,"title":{},"body":{"license.html":{}}}],["characterized",{"_index":2282,"title":{},"body":{"license.html":{}}}],["characters",{"_index":515,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["charge",{"_index":1915,"title":{},"body":{"license.html":{}}}],["check",{"_index":319,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["checkactioncode",{"_index":255,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["checkactioncode(this._auth",{"_index":328,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["checker",{"_index":1106,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["checking",{"_index":2780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["child",{"_index":1502,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["children’s",{"_index":1492,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["childroute",{"_index":2791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["childroute.queryparammap.get('next",{"_index":2794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["choose",{"_index":2483,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":2486,"title":{},"body":{"license.html":{}}}],["circumstances",{"_index":2127,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":2133,"title":{},"body":{"license.html":{}}}],["civil",{"_index":2522,"title":{},"body":{"license.html":{}}}],["claim",{"_index":2403,"title":{},"body":{"license.html":{}}}],["claims",{"_index":2414,"title":{},"body":{"license.html":{}}}],["class",{"_index":41,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["clean",{"_index":2811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clear",{"_index":642,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["clearly",{"_index":1942,"title":{},"body":{"license.html":{}}}],["cli",{"_index":1873,"title":{},"body":{"index.html":{}}}],["click",{"_index":667,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/HeaderComponent.html":{},"components/LogoutComponent.html":{}}}],["click(event",{"_index":964,"title":{},"body":{"components/HeaderComponent.html":{}}}],["clicking",{"_index":912,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["clicks",{"_index":968,"title":{},"body":{"components/HeaderComponent.html":{}}}],["close",{"_index":966,"title":{},"body":{"components/HeaderComponent.html":{}}}],["closed",{"_index":478,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["closedialog",{"_index":866,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["closely",{"_index":2519,"title":{},"body":{"license.html":{}}}],["closes",{"_index":895,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["code",{"_index":265,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["code.ts",{"_index":1768,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["code][subscriber",{"_index":444,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["codes",{"_index":451,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["collect",{"_index":1344,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["collected",{"_index":1506,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["collection",{"_index":1348,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["collisions",{"_index":1294,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["combination",{"_index":661,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"license.html":{}}}],["combine",{"_index":783,"title":{},"body":{"interfaces/CombinedObs.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["combined",{"_index":2195,"title":{},"body":{"license.html":{}}}],["combinedobs",{"_index":745,"title":{"interfaces/CombinedObs.html":{}},"body":{"interfaces/CombinedObs.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["combinelatest",{"_index":756,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["comes",{"_index":2181,"title":{},"body":{"license.html":{}}}],["commands",{"_index":2048,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1604,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["commercially",{"_index":1486,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["commitment",{"_index":2426,"title":{},"body":{"license.html":{}}}],["common",{"_index":2263,"title":{},"body":{"license.html":{}}}],["communicate",{"_index":1417,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["communication",{"_index":1375,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["communications",{"_index":1384,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["compilation",{"_index":2190,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":2199,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":2455,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":2763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compiler",{"_index":2082,"title":{},"body":{"license.html":{}}}],["complete",{"_index":457,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["compliance",{"_index":2385,"title":{},"body":{"license.html":{}}}],["complicated",{"_index":1141,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["comply",{"_index":1424,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["component",{"_index":21,"title":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"license.html":{}}}],["component_template",{"_index":139,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["componentfixture",{"_index":2761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["components",{"_index":121,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"overview.html":{}}}],["compromise",{"_index":288,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["compromised",{"_index":310,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["computed",{"_index":22,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"miscellaneous/variables.html":{}}}],["computer",{"_index":2023,"title":{},"body":{"license.html":{}}}],["computers",{"_index":1448,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["concerning",{"_index":2473,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":2477,"title":{},"body":{"license.html":{}}}],["conditioned",{"_index":2451,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":930,"title":{},"body":{"components/FooterComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["conditions'},{'name",{"_index":193,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["conditions.component.html",{"_index":1582,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["conditions.component.ts",{"_index":1581,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"coverage.html":{}}}],["conditions/terms",{"_index":1580,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"coverage.html":{}}}],["config",{"_index":2667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configurable",{"_index":2702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirm",{"_index":157,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["confirmed",{"_index":1121,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["confirmemailcomponent",{"_index":156,"title":{"components/ConfirmEmailComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["confirmmatch",{"_index":595,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmmatch('email1",{"_index":617,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["confirmmatch('password1",{"_index":727,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["confirmmatchformerrors",{"_index":596,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmmatchformerrors(this.changeemailform",{"_index":619,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["confirmmatchformerrors(this.changepasswordform",{"_index":729,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["confirmmatchformerrors(this.resetpasswordform",{"_index":1550,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["confirmpasswordreset",{"_index":1096,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["confirmpasswordreset(this._auth",{"_index":1158,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["confirmresult",{"_index":1103,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["conflicting",{"_index":415,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["connectauthemulator",{"_index":2704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connectauthemulator(auth",{"_index":2674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connected",{"_index":2697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connecting",{"_index":2660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection",{"_index":470,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["connectstorageemulator(storage",{"_index":2818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consent",{"_index":1418,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["consequence",{"_index":2374,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":2503,"title":{},"body":{"license.html":{}}}],["consider",{"_index":2558,"title":{},"body":{"license.html":{}}}],["considered",{"_index":2334,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":2420,"title":{},"body":{"license.html":{}}}],["console.error('missing",{"_index":103,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["console.error('recoveremailcomponent",{"_index":315,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["console.error('recoveremailcomponent#_sendpasswordresetemail",{"_index":360,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["console.error('unknown",{"_index":2775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.error(`unknown",{"_index":102,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["console.error(settledmetadata.reason",{"_index":1261,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["console.error(settledurl.reason",{"_index":1259,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["conspicuously",{"_index":2163,"title":{},"body":{"license.html":{}}}],["const",{"_index":83,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["constantly",{"_index":1981,"title":{},"body":{"license.html":{}}}],["constants",{"_index":760,"title":{},"body":{"interfaces/CombinedObs.html":{}}}],["constitutes",{"_index":2113,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":50,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["construed",{"_index":2460,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":2251,"title":{},"body":{"license.html":{}}}],["contact",{"_index":1090,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["contain",{"_index":2456,"title":{},"body":{"license.html":{}}}],["containing",{"_index":2317,"title":{},"body":{"license.html":{}}}],["contains",{"_index":660,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"license.html":{}}}],["content",{"_index":230,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"components/PageNotFoundComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["contents",{"_index":2424,"title":{},"body":{"license.html":{}}}],["context",{"_index":2075,"title":{},"body":{"license.html":{}}}],["continue",{"_index":424,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/RecoverEmailComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["continued",{"_index":2276,"title":{},"body":{"license.html":{}}}],["continueurl",{"_index":12,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["contracted",{"_index":1387,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["contractual",{"_index":2331,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":2465,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":1903,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":2411,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":2413,"title":{},"body":{"license.html":{}}}],["control",{"_index":607,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["control.addasyncvalidators(passwordfirebasevalidator",{"_index":849,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["control.addvalidators(passwordstrengthvalidator",{"_index":848,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["control.dirty",{"_index":811,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["control.errors",{"_index":775,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["control.events.pipe",{"_index":768,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["control.invalid",{"_index":812,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["control.statuschanges.pipe",{"_index":778,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["control.touched",{"_index":813,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["control1",{"_index":2725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control1.valid",{"_index":2736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control1.value",{"_index":2731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control2",{"_index":2727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control2.valid",{"_index":2737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control2.value",{"_index":2732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controldirty",{"_index":767,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["controlerrors",{"_index":786,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["controlerrorssignal",{"_index":761,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlStruct.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlerrorssignal(control",{"_index":834,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["controlerrorssignal(this.namecntrl",{"_index":1671,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["controlerrorssignal(this.photourlcntrl",{"_index":1677,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["controlevent",{"_index":754,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["controlevents",{"_index":816,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["controlinvalidsignal",{"_index":809,"title":{},"body":{"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlinvalidsignal(control",{"_index":833,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["controlinvalidsignal(this.namecntrl",{"_index":1673,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["controlinvalidsignal(this.photourlcntrl",{"_index":1679,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["controlled",{"_index":1512,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["controlproperties",{"_index":799,"title":{"interfaces/ControlProperties.html":{}},"body":{"interfaces/ControlProperties.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controls",{"_index":763,"title":{},"body":{"interfaces/CombinedObs.html":{},"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["controlstatus",{"_index":777,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["controlstruct",{"_index":822,"title":{"interfaces/ControlStruct.html":{}},"body":{"interfaces/ControlStruct.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["convenient",{"_index":2042,"title":{},"body":{"license.html":{}}}],["convey",{"_index":2030,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":2444,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":2283,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":2037,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":2330,"title":{},"body":{"license.html":{}}}],["cookies",{"_index":522,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["copies",{"_index":1893,"title":{},"body":{"license.html":{}}}],["copy",{"_index":925,"title":{},"body":{"components/FooterComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["copying",{"_index":1994,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":1897,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":926,"title":{},"body":{"components/FooterComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["copyrightable",{"_index":2001,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":2125,"title":{},"body":{"license.html":{}}}],["correction",{"_index":2499,"title":{},"body":{"license.html":{}}}],["correspond",{"_index":510,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["corresponding",{"_index":448,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["cost",{"_index":2223,"title":{},"body":{"license.html":{}}}],["counterclaim",{"_index":2404,"title":{},"body":{"license.html":{}}}],["countries",{"_index":2027,"title":{},"body":{"license.html":{}}}],["country",{"_index":443,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["course",{"_index":2549,"title":{},"body":{"license.html":{}}}],["court",{"_index":2464,"title":{},"body":{"license.html":{}}}],["courts",{"_index":2518,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":2428,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":1736,"title":{"coverage.html":{}},"body":{"coverage.html":{},"license.html":{}}}],["covered",{"_index":2015,"title":{},"body":{"license.html":{}}}],["crawlers",{"_index":1083,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["create",{"_index":419,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/ControlStruct.html":{},"index.html":{}}}],["createemailcontrol",{"_index":590,"title":{},"body":{"components/ChangeEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createpasswordcontrol",{"_index":591,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createpasswordcontrol(true",{"_index":721,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["creates",{"_index":275,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["creating",{"_index":2569,"title":{},"body":{"properties.html":{}}}],["credential",{"_index":389,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["credentials",{"_index":462,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["criterion",{"_index":2052,"title":{},"body":{"license.html":{}}}],["cross",{"_index":2402,"title":{},"body":{"license.html":{}}}],["cure",{"_index":2364,"title":{},"body":{"license.html":{}}}],["current",{"_index":655,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["currentpw",{"_index":726,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["currentpwcntrl",{"_index":691,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["currentpwcntrlerrors",{"_index":682,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["currentpwcntrlinvalid",{"_index":683,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["customarily",{"_index":2215,"title":{},"body":{"license.html":{}}}],["customer",{"_index":2220,"title":{},"body":{"license.html":{}}}],["d",{"_index":2188,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1617,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["danger",{"_index":1987,"title":{},"body":{"license.html":{}}}],["dare",{"_index":1605,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["dashboard",{"_index":851,"title":{},"body":{"components/DashboardComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["dashboard'},{'name",{"_index":159,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["dashboard.component.html",{"_index":852,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":853,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard@if",{"_index":1046,"title":{},"body":{"components/LogoutComponent.html":{}}}],["dashboardcomponent",{"_index":158,"title":{"components/DashboardComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["data",{"_index":523,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["date",{"_index":923,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["date(a.metadata.updated",{"_index":1270,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["date(b.metadata.updated",{"_index":1269,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["datepipe",{"_index":919,"title":{},"body":{"components/FooterComponent.html":{}}}],["days",{"_index":2360,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":757,"title":{},"body":{"interfaces/CombinedObs.html":{}}}],["debouncetime(forms.inputdebounce",{"_index":781,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["december",{"_index":2144,"title":{},"body":{"license.html":{}}}],["decide",{"_index":115,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/LoginComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["declining",{"_index":2323,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":970,"title":{},"body":{"components/HeaderComponent.html":{}}}],["deemed",{"_index":2135,"title":{},"body":{"license.html":{}}}],["default",{"_index":112,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["default_test_user",{"_index":1838,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["defaultproperties",{"_index":810,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["defective",{"_index":2495,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":2462,"title":{},"body":{"license.html":{}}}],["defined",{"_index":126,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"components/RecoverEmailComponent.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"injectables/VerifyEmailService.html":{},"license.html":{}}}],["definition",{"_index":2090,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1997,"title":{},"body":{"license.html":{}}}],["delay",{"_index":290,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"miscellaneous/variables.html":{}}}],["delaywhen",{"_index":259,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["delaywhen((result",{"_index":305,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["delete",{"_index":161,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["deleteaccountcomponent",{"_index":160,"title":{"components/DeleteAccountComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["deleteaccountform",{"_index":865,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["deleteaccountformgroup",{"_index":880,"title":{},"body":{"components/DeleteAccountComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["deleteacount",{"_index":867,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["deleteacount(user",{"_index":871,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["deleted",{"_index":506,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["deleteuser",{"_index":888,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["deleteuser(credentials.user",{"_index":901,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["deleting",{"_index":903,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["deletion",{"_index":911,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["demonstration",{"_index":1584,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["denied",{"_index":2287,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":2427,"title":{},"body":{"license.html":{}}}],["deny",{"_index":1953,"title":{},"body":{"license.html":{}}}],["denying",{"_index":1922,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":1813,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["deprive",{"_index":2434,"title":{},"body":{"license.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/ActionCodeState.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"properties.html":{}}}],["descriptions",{"_index":1416,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["design",{"_index":1132,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/variables.html":{}}}],["designated",{"_index":1588,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["designed",{"_index":1275,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["designs",{"_index":2708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["desired",{"_index":2714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["destination",{"_index":117,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["destructuring",{"_index":1109,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["detail",{"_index":2476,"title":{},"body":{"license.html":{}}}],["details",{"_index":1623,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["details.the",{"_index":2547,"title":{},"body":{"license.html":{}}}],["determining",{"_index":1396,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["develop",{"_index":2526,"title":{},"body":{"license.html":{}}}],["developer",{"_index":1854,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1934,"title":{},"body":{"license.html":{}}}],["development",{"_index":1985,"title":{},"body":{"license.html":{}}}],["device",{"_index":496,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["devices",{"_index":1952,"title":{},"body":{"license.html":{}}}],["dialog",{"_index":894,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["dialogel",{"_index":891,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["dialogel.nativeelement.close",{"_index":893,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["dialogel.nativeelement.showmodal",{"_index":902,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["dialogref",{"_index":889,"title":{},"body":{"components/DeleteAccountComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["differ",{"_index":1454,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["different",{"_index":391,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["differently",{"_index":2312,"title":{},"body":{"license.html":{}}}],["direction",{"_index":2124,"title":{},"body":{"license.html":{}}}],["directions",{"_index":2235,"title":{},"body":{"license.html":{}}}],["directive",{"_index":137,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["directives",{"_index":199,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["directly",{"_index":2019,"title":{},"body":{"license.html":{}}}],["directory",{"_index":1272,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["dirty",{"_index":748,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["disable",{"_index":70,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlStruct.html":{},"components/PageNotFoundComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":507,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["disablewarnings",{"_index":2676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disclaim",{"_index":2155,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":2487,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":2309,"title":{},"body":{"license.html":{}}}],["disclose",{"_index":1419,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["discriminatory",{"_index":2448,"title":{},"body":{"license.html":{}}}],["display",{"_index":2189,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["displayed",{"_index":2316,"title":{},"body":{"license.html":{}}}],["displaying",{"_index":765,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["displayname",{"_index":1681,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["displays",{"_index":2039,"title":{},"body":{"license.html":{}}}],["disputes",{"_index":1431,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["distinctuntilchanged",{"_index":803,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["distinguishing",{"_index":2478,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":1599,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["distributed",{"_index":1412,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["distributing",{"_index":2452,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1602,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["doc",{"_index":1879,"title":{},"body":{"index.html":{}}}],["document",{"_index":1894,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":1737,"title":{},"body":{"coverage.html":{}}}],["documented",{"_index":2295,"title":{},"body":{"license.html":{}}}],["doesn't",{"_index":369,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["dom",{"_index":122,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["domains",{"_index":1973,"title":{},"body":{"license.html":{}}}],["doubtful",{"_index":2259,"title":{},"body":{"license.html":{}}}],["download",{"_index":1242,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["downstream",{"_index":2382,"title":{},"body":{"license.html":{}}}],["dprint",{"_index":1866,"title":{},"body":{"index.html":{}}}],["due",{"_index":414,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["durable",{"_index":2214,"title":{},"body":{"license.html":{}}}],["dwelling",{"_index":2258,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":1819,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":2092,"title":{},"body":{"license.html":{}}}],["e",{"_index":2241,"title":{},"body":{"license.html":{}}}],["e.164",{"_index":440,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["each",{"_index":1228,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["earlier",{"_index":2013,"title":{},"body":{"license.html":{}}}],["easier",{"_index":1732,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["effect",{"_index":23,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"license.html":{}}}],["effect(async",{"_index":81,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["effected",{"_index":2153,"title":{},"body":{"license.html":{}}}],["effective",{"_index":1517,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["effectively",{"_index":1989,"title":{},"body":{"license.html":{}}}],["effectiveness",{"_index":1397,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["efforts",{"_index":2396,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1377,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["element",{"_index":136,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["elementref",{"_index":887,"title":{},"body":{"components/DeleteAccountComponent.html":{},"components/PhotoUploadComponent.html":{},"miscellaneous/typealiases.html":{}}}],["email",{"_index":60,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/enumerations.html":{}}}],["email'},{'name",{"_index":153,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["email.component.html",{"_index":541,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/RecoverEmailComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["email.component.ts",{"_index":538,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/RecoverEmailComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["email.component.ts:25",{"_index":1523,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["email.component.ts:27",{"_index":1522,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["email.component.ts:28",{"_index":1521,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["email.component.ts:29",{"_index":1724,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:30",{"_index":1723,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:31",{"_index":795,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:32",{"_index":796,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:33",{"_index":793,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:43",{"_index":560,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:44",{"_index":561,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:45",{"_index":562,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:46",{"_index":563,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:47",{"_index":565,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:48",{"_index":566,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:49",{"_index":567,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:50",{"_index":568,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:51",{"_index":569,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:52",{"_index":571,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:53",{"_index":573,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:54",{"_index":574,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:55",{"_index":577,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:56",{"_index":579,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:57",{"_index":580,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:58",{"_index":557,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.component.ts:83",{"_index":559,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email.service",{"_index":1526,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["email.service.ts",{"_index":250,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["email.service.ts:14",{"_index":1735,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["email.service.ts:19",{"_index":1734,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["email.service.ts:33",{"_index":1542,"title":{},"body":{"injectables/RecoverEmailService.html":{}}}],["email.service.ts:42",{"_index":1541,"title":{},"body":{"injectables/RecoverEmailService.html":{}}}],["email.service.ts:70",{"_index":1539,"title":{},"body":{"injectables/RecoverEmailService.html":{}}}],["email.service.ts:91",{"_index":1540,"title":{},"body":{"injectables/RecoverEmailService.html":{}}}],["email/change",{"_index":537,"title":{},"body":{"components/ChangeEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["email/confirm",{"_index":791,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["email/recover",{"_index":249,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["email/verify",{"_index":1722,"title":{},"body":{"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"coverage.html":{}}}],["email1",{"_index":616,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["email1cntrl",{"_index":551,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email1cntrl.value",{"_index":668,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email1cntrlerrors",{"_index":542,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email1cntrlinvalid",{"_index":543,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email2",{"_index":599,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email2cntrl",{"_index":552,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email2cntrlerrors",{"_index":544,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email2cntrlinvalid",{"_index":545,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["email?next=${url",{"_index":2745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emailauthprovider",{"_index":582,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["emailauthprovider.credential(user.email",{"_index":646,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["emailcntrl",{"_index":935,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["emailcntrlerrors",{"_index":933,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["emailcntrlinvalid",{"_index":934,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["emailcreds",{"_index":645,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["emails",{"_index":658,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["emailverifiedguard",{"_index":1751,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["embodied",{"_index":2209,"title":{},"body":{"license.html":{}}}],["emit",{"_index":774,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/variables.html":{}}}],["emits",{"_index":1122,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["emitted",{"_index":785,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["emitting",{"_index":1195,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["employer",{"_index":2552,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1695,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["emulator",{"_index":2661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enable",{"_index":2073,"title":{},"body":{"license.html":{}}}],["enabled",{"_index":2639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enables",{"_index":2032,"title":{},"body":{"license.html":{}}}],["end",{"_index":2525,"title":{},"body":{"license.html":{}}}],["endwith",{"_index":1178,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["endwith(undefined",{"_index":1217,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["enforce",{"_index":1432,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["enforces",{"_index":2813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enforcing",{"_index":2158,"title":{},"body":{"license.html":{}}}],["ensure",{"_index":1459,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["entails",{"_index":1597,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["enter",{"_index":438,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["entered",{"_index":2457,"title":{},"body":{"license.html":{}}}],["entire",{"_index":2180,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":2471,"title":{},"body":{"license.html":{}}}],["entity",{"_index":2386,"title":{},"body":{"license.html":{}}}],["enumerations",{"_index":1837,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environmentproviders",{"_index":2656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["equivalent",{"_index":1376,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["err",{"_index":359,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["err.code",{"_index":2773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err.message",{"_index":2774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erroneously",{"_index":1951,"title":{},"body":{"license.html":{}}}],["error",{"_index":146,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["error('invalid",{"_index":638,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["error('oobcode",{"_index":342,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["error(`cannot",{"_index":2729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.signal.ts",{"_index":1786,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error_name",{"_index":1784,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorcode",{"_index":267,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{}}}],["errors",{"_index":604,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errors['email",{"_index":657,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["errors['firebasevalidator",{"_index":741,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors['maxlength",{"_index":666,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors['minlength",{"_index":659,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors['passwordstrength",{"_index":737,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors['pattern",{"_index":1706,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["errors['required",{"_index":656,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["errors[\\'email",{"_index":676,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["errors[\\'firebasevalidator",{"_index":744,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors[\\'maxlength",{"_index":678,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors[\\'minlength",{"_index":677,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors[\\'passwordstrength",{"_index":743,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors[\\'pattern",{"_index":1720,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["errors[\\'required",{"_index":675,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["errors[error_name",{"_index":2741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eslint",{"_index":69,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlStruct.html":{},"components/PageNotFoundComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["eslint/no",{"_index":74,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"miscellaneous/variables.html":{}}}],["essential",{"_index":2076,"title":{},"body":{"license.html":{}}}],["establish",{"_index":477,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["evaluate",{"_index":1400,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["even",{"_index":2512,"title":{},"body":{"license.html":{}}}],["event",{"_index":770,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"components/HeaderComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/RecoverEmailComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["event.preventdefault",{"_index":897,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["event.pristine",{"_index":773,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["event.status",{"_index":818,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["event.stoppropagation",{"_index":898,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["event.touched",{"_index":817,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["eventcoalescing",{"_index":2614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["everyone",{"_index":1890,"title":{},"body":{"license.html":{}}}],["exact",{"_index":2011,"title":{},"body":{"license.html":{}}}],["example",{"_index":1427,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["exceeded",{"_index":481,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["except",{"_index":335,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{}}}],["exceptions",{"_index":2300,"title":{},"body":{"license.html":{}}}],["excluded",{"_index":2249,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":2461,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":2535,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":2421,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":2119,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":2466,"title":{},"body":{"license.html":{}}}],["executable",{"_index":2067,"title":{},"body":{"license.html":{}}}],["execute",{"_index":2274,"title":{},"body":{"license.html":{}}}],["executing",{"_index":1081,"title":{},"body":{"components/PageNotFoundComponent.html":{},"license.html":{}}}],["execution",{"_index":2696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exercise",{"_index":2397,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":2154,"title":{},"body":{"license.html":{}}}],["existing",{"_index":643,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["exists",{"_index":460,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["expanded",{"_index":974,"title":{},"body":{"components/HeaderComponent.html":{}}}],["expect",{"_index":2682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expected",{"_index":635,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["expects",{"_index":2265,"title":{},"body":{"license.html":{}}}],["experience",{"_index":1403,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["expired",{"_index":378,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["explains",{"_index":1943,"title":{},"body":{"license.html":{}}}],["explicitly",{"_index":2107,"title":{},"body":{"license.html":{}}}],["export",{"_index":33,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{}}}],["express",{"_index":1591,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["expressed",{"_index":2489,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":2345,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1976,"title":{},"body":{"license.html":{}}}],["extended",{"_index":2447,"title":{},"body":{"license.html":{}}}],["extends",{"_index":211,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["extension",{"_index":1708,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["extensions",{"_index":2194,"title":{},"body":{"license.html":{}}}],["extent",{"_index":1423,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["extra",{"_index":842,"title":{},"body":{"interfaces/ControlStruct.html":{}}}],["extracting",{"_index":2781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extras",{"_index":2790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f",{"_index":2328,"title":{},"body":{"license.html":{}}}],["fabars",{"_index":958,"title":{},"body":{"components/HeaderComponent.html":{}}}],["facilities",{"_index":2120,"title":{},"body":{"license.html":{}}}],["factor",{"_index":406,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["factory",{"_index":2835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["faiconcomponent",{"_index":954,"title":{},"body":{"components/HeaderComponent.html":{}}}],["fail",{"_index":97,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["failed",{"_index":449,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/variables.html":{}}}],["fails",{"_index":353,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{}}}],["failure",{"_index":1108,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{}}}],["fair",{"_index":2115,"title":{},"body":{"license.html":{}}}],["false",{"_index":318,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/ControlStruct.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["falsey",{"_index":632,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["falsy",{"_index":325,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["family",{"_index":2254,"title":{},"body":{"license.html":{}}}],["fashion",{"_index":2008,"title":{},"body":{"license.html":{}}}],["favor",{"_index":2261,"title":{},"body":{"license.html":{}}}],["fax",{"_index":959,"title":{},"body":{"components/HeaderComponent.html":{}}}],["feature",{"_index":2045,"title":{},"body":{"license.html":{}}}],["fee",{"_index":1930,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":1220,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["few",{"_index":672,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["fewer",{"_index":1324,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["field",{"_index":845,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["fields",{"_index":2746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"license.html":{}}}],["file#result",{"_index":2758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file(s",{"_index":1327,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["file.name",{"_index":1298,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["filecount",{"_index":1315,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["fileinpt",{"_index":1337,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["fileinputref",{"_index":1334,"title":{},"body":{"components/PhotoUploadComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["filelist",{"_index":1282,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["filename",{"_index":1291,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["files",{"_index":1219,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["filter",{"_index":758,"title":{},"body":{"interfaces/CombinedObs.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["filter((event",{"_index":769,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["filter((user",{"_index":1684,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["final",{"_index":1041,"title":{},"body":{"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{}}}],["finalize",{"_index":1179,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["finalizing",{"_index":479,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["finally",{"_index":1979,"title":{},"body":{"license.html":{}}}],["find",{"_index":2237,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["firebase",{"_index":303,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["firebaseapp",{"_index":2821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebaseerror",{"_index":2678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebaseperformance",{"_index":2634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebasesettings.emulators.auth",{"_index":2673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebasesettings.emulators.storage",{"_index":2817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebasestorage",{"_index":2644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebasevalidator",{"_index":2804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firestore",{"_index":2628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":844,"title":{},"body":{"interfaces/ControlStruct.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["fitness",{"_index":2491,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":2213,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":2670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fixture",{"_index":2760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fixture.nativeelement",{"_index":2764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flag",{"_index":323,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["floating",{"_index":2657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flow",{"_index":2098,"title":{},"body":{"license.html":{}}}],["folder",{"_index":671,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["folders",{"_index":1245,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["follow",{"_index":1996,"title":{},"body":{"license.html":{}}}],["followed",{"_index":1119,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["following",{"_index":1364,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["fontawesome",{"_index":986,"title":{},"body":{"components/HeaderComponent.html":{},"dependencies.html":{}}}],["footer",{"_index":918,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":164,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["footer.component.html",{"_index":920,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":921,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":533,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["footercomponent",{"_index":163,"title":{"components/FooterComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["forbid",{"_index":2152,"title":{},"body":{"license.html":{}}}],["force",{"_index":2116,"title":{},"body":{"license.html":{}}}],["forgot",{"_index":166,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["forgotform",{"_index":936,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotformgroup",{"_index":943,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["forgotpasswordcomponent",{"_index":165,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["form",{"_index":639,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["form.errors?.[error_name",{"_index":2738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["form.invalid",{"_index":2735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["form.statuschanges.pipe",{"_index":2740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format",{"_index":437,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["formatted",{"_index":427,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["formcontrol",{"_index":572,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["formcontrol(null",{"_index":836,"title":{},"body":{"interfaces/ControlStruct.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["formcontrolstatus",{"_index":755,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["formemailsinvalid",{"_index":546,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["formgroup",{"_index":585,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["formgrp",{"_index":2722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formgrp.get(password1",{"_index":2726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formgrp.get(password2",{"_index":2728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formpasswordsinvalid",{"_index":684,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["forms",{"_index":594,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["forms.ts",{"_index":824,"title":{},"body":{"interfaces/ControlStruct.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formstatus",{"_index":2739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fortawesome/angular",{"_index":985,"title":{},"body":{"components/HeaderComponent.html":{},"dependencies.html":{}}}],["fortawesome/free",{"_index":987,"title":{},"body":{"components/HeaderComponent.html":{},"dependencies.html":{}}}],["found",{"_index":343,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"license.html":{}}}],["found'},{'name",{"_index":175,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["found.component.html",{"_index":1053,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":1054,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1049,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["found.component.ts:21",{"_index":1063,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:22",{"_index":1065,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:24",{"_index":1059,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:30",{"_index":1060,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":1048,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["foundation",{"_index":1887,"title":{},"body":{"license.html":{}}}],["free",{"_index":1886,"title":{},"body":{"license.html":{}}}],["freedom",{"_index":1902,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":1933,"title":{},"body":{"license.html":{}}}],["from(promise",{"_index":1151,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["fulfilling",{"_index":2138,"title":{},"body":{"license.html":{}}}],["full",{"_index":1622,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["fullmetadata",{"_index":1166,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["function",{"_index":2778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["functionalities",{"_index":1368,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["functionality",{"_index":1441,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["functioning",{"_index":2277,"title":{},"body":{"license.html":{}}}],["functions",{"_index":2631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fundamentally",{"_index":1958,"title":{},"body":{"license.html":{}}}],["further",{"_index":2232,"title":{},"body":{"license.html":{}}}],["future",{"_index":80,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"license.html":{}}}],["game",{"_index":1085,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["gant",{"_index":2582,"title":{},"body":{"properties.html":{}}}],["gcp",{"_index":1859,"title":{},"body":{"index.html":{}}}],["general",{"_index":1864,"title":{},"body":{"index.html":{},"license.html":{}}}],["generally",{"_index":1436,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["generate",{"_index":2085,"title":{},"body":{"license.html":{}}}],["generated",{"_index":2710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getanalytics",{"_index":2619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getauth",{"_index":2616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcompiled",{"_index":1798,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getcontrolstructure",{"_index":832,"title":{},"body":{"interfaces/ControlStruct.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getcontrolstructure(control",{"_index":839,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["getdownloadurl",{"_index":1167,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["getdownloadurl(item",{"_index":1251,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["geterrorcode",{"_index":264,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["geterrorcode(err",{"_index":650,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{}}}],["geterrorcode(problem",{"_index":317,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["getfirestore",{"_index":2629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getfunctions",{"_index":2632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getmetadata",{"_index":1168,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["getmetadata(item",{"_index":1252,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["getpasswordcontrolvalue",{"_index":1790,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getpasswordcontrolvalue(control",{"_index":2797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getperformance",{"_index":2635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getprofilephotos",{"_index":1201,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["getprofilephotos(uid",{"_index":1229,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["gets",{"_index":239,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["getstate",{"_index":1524,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getstate(this._router.getcurrentnavigation",{"_index":1529,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["getstorage",{"_index":2645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":1851,"title":{"index.html":{},"license.html":{}},"body":{}}],["getvertexai",{"_index":2648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gif",{"_index":1714,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["git",{"_index":1867,"title":{},"body":{"index.html":{}}}],["git+https://github.com/rgant/brainfry.git",{"_index":2579,"title":{},"body":{"properties.html":{}}}],["give",{"_index":308,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{}}}],["given",{"_index":2112,"title":{},"body":{"license.html":{}}}],["gives",{"_index":1466,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["giving",{"_index":1939,"title":{},"body":{"license.html":{}}}],["global",{"_index":1871,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["glyphs",{"_index":2750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gnu",{"_index":1880,"title":{},"body":{"license.html":{}}}],["go",{"_index":1044,"title":{},"body":{"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["going",{"_index":1278,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["governed",{"_index":2302,"title":{},"body":{"license.html":{}}}],["governmental",{"_index":1451,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gpl",{"_index":1935,"title":{},"body":{"license.html":{}}}],["gplv3",{"_index":1613,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["grant",{"_index":501,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["granted",{"_index":1585,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["grants",{"_index":2377,"title":{},"body":{"license.html":{}}}],["gratis",{"_index":1929,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":2527,"title":{},"body":{"license.html":{}}}],["guarantee",{"_index":1490,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["guardian",{"_index":1500,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["guards",{"_index":626,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LogoutComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["gui",{"_index":2550,"title":{},"body":{"license.html":{}}}],["hack",{"_index":2715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hacky",{"_index":2705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handle",{"_index":1040,"title":{},"body":{"components/LogoutComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["handles",{"_index":2779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handling",{"_index":623,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["happen",{"_index":434,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["happier",{"_index":1107,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["having",{"_index":2118,"title":{},"body":{"license.html":{}}}],["header",{"_index":953,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":168,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["header.component.html",{"_index":955,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":956,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":1577,"title":{},"body":{"components/StandardLayoutComponent.html":{}}}],["headercomponent",{"_index":167,"title":{"components/HeaderComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["held",{"_index":1615,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["hello",{"_index":859,"title":{},"body":{"components/DashboardComponent.html":{}}}],["helper",{"_index":2688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["here",{"_index":1043,"title":{},"body":{"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["hereafter",{"_index":2417,"title":{},"body":{"license.html":{}}}],["here’s",{"_index":1595,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["holder",{"_index":2352,"title":{},"body":{"license.html":{}}}],["holders",{"_index":2308,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":2572,"title":{},"body":{"properties.html":{}}}],["hope",{"_index":2537,"title":{},"body":{"license.html":{}}}],["hopefully",{"_index":2669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":472,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["hostlistener",{"_index":984,"title":{},"body":{"components/HeaderComponent.html":{}}}],["hostlistener('click",{"_index":971,"title":{},"body":{"components/HeaderComponent.html":{}}}],["hostlisteners",{"_index":962,"title":{},"body":{"components/HeaderComponent.html":{}}}],["hosts",{"_index":2238,"title":{},"body":{"license.html":{}}}],["household",{"_index":2255,"title":{},"body":{"license.html":{}}}],["html",{"_index":135,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["htmlanchorelement",{"_index":992,"title":{},"body":{"components/HeaderComponent.html":{}}}],["htmlelement",{"_index":2762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["htmlmetaelement",{"_index":1064,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["http://localhost:${port",{"_index":2675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://brainfry",{"_index":2573,"title":{},"body":{"properties.html":{}}}],["https://firebase.google.com/docs/reference/js/auth.actioncodeurl",{"_index":8,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["https://fsf.org",{"_index":1889,"title":{},"body":{"license.html":{}}}],["https://github.com/angular/angularfire/issues/3614",{"_index":2799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/deanilvincent/check",{"_index":2755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/firebaseextended/rxfire/blob/b91f358e2c13c6bf33fb4a540e3963c3902a62b1/storage/index.ts#l115",{"_index":1214,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["https://github.com/rgant/brainfry/issues/new",{"_index":2576,"title":{},"body":{"properties.html":{}}}],["https://np.reddit.com/r/firebase/comments/18s6wzp/comment/kf6w7hk",{"_index":2671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://stackoverflow.com/questions/71047275/setting",{"_index":1696,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["https://www.gnu.org/licenses",{"_index":2555,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses/why",{"_index":2563,"title":{},"body":{"license.html":{}}}],["hypothetical",{"_index":2548,"title":{},"body":{"license.html":{}}}],["icon",{"_index":978,"title":{},"body":{"components/HeaderComponent.html":{}}}],["icondefinition",{"_index":981,"title":{},"body":{"components/HeaderComponent.html":{}}}],["icons",{"_index":990,"title":{},"body":{"components/HeaderComponent.html":{},"dependencies.html":{}}}],["iczzowjndpa6eujl8rlt5wn0renh",{"_index":1850,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["idea",{"_index":1194,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["ideal",{"_index":2707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifiable",{"_index":1353,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["identifier",{"_index":505,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"coverage.html":{}}}],["identifies",{"_index":1159,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["identify",{"_index":1354,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["identifying",{"_index":1394,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["identity",{"_index":593,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["image",{"_index":1707,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["immediately",{"_index":914,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["implement",{"_index":2074,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["implementation",{"_index":1391,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["implemented",{"_index":2680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":1050,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["implied",{"_index":1592,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["important",{"_index":1479,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["importing",{"_index":2410,"title":{},"body":{"license.html":{}}}],["imports",{"_index":36,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["impose",{"_index":2333,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":2463,"title":{},"body":{"license.html":{}}}],["improve",{"_index":1401,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inability",{"_index":2505,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":2508,"title":{},"body":{"license.html":{}}}],["inbox",{"_index":669,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["inc",{"_index":1888,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":2502,"title":{},"body":{"license.html":{}}}],["include",{"_index":740,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["included",{"_index":2068,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2026,"title":{},"body":{"license.html":{}}}],["including",{"_index":445,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["inclusion",{"_index":2202,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":1959,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":2556,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":2257,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":430,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["indemnification",{"_index":2329,"title":{},"body":{"license.html":{}}}],["independent",{"_index":2192,"title":{},"body":{"license.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":231,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["indexing",{"_index":1074,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["indicate",{"_index":344,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["indicated",{"_index":1503,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["indicating",{"_index":2342,"title":{},"body":{"license.html":{}}}],["individual",{"_index":2201,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":1966,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":2267,"title":{},"body":{"license.html":{}}}],["indx",{"_index":1719,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["inflicted",{"_index":1618,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{}}}],["info.data",{"_index":329,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["inform",{"_index":1218,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["information",{"_index":428,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["informative",{"_index":1383,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["infrastructure",{"_index":1858,"title":{},"body":{"index.html":{}}}],["infringe",{"_index":2378,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":2407,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":2021,"title":{},"body":{"license.html":{}}}],["initial",{"_index":116,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["initializeapp",{"_index":2822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initializeappcheck(undefined",{"_index":2625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initialvalue",{"_index":814,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["initiate",{"_index":2400,"title":{},"body":{"license.html":{}}}],["inject",{"_index":24,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{}}}],["inject(auth",{"_index":274,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["inject(meta",{"_index":1062,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["inject(recoveremailservice",{"_index":1528,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["inject(resetpasswordservice",{"_index":1548,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["inject(router",{"_index":68,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(storage",{"_index":1205,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["inject(title",{"_index":234,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["inject(user",{"_index":628,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(user$).pipe",{"_index":1683,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["inject(userphotosservice",{"_index":1330,"title":{},"body":{"components/PhotoUploadComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["inject(verifyemailservice",{"_index":1727,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["injectable",{"_index":205,"title":{"injectables/AppTitleStrategyService.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"injectables/VerifyEmailService.html":{}},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"coverage.html":{}}}],["injectables",{"_index":207,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"injectables/VerifyEmailService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":2834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inmemorypersistence",{"_index":2659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inner",{"_index":1133,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{}}}],["input",{"_index":25,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"interfaces/CombinedObs.html":{},"components/LoginComponent.html":{},"components/PhotoUploadComponent.html":{},"miscellaneous/variables.html":{}}}],["input.required",{"_index":375,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PhotoUploadComponent.html":{}}}],["inputdebounce",{"_index":2748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inputevent/control.valuechange",{"_index":2807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inputs",{"_index":125,"title":{},"body":{"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/PhotoUploadComponent.html":{}}}],["inputsignal",{"_index":27,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/LoginComponent.html":{},"components/PhotoUploadComponent.html":{}}}],["inside",{"_index":1955,"title":{},"body":{"license.html":{}}}],["install",{"_index":1863,"title":{},"body":{"index.html":{},"license.html":{}}}],["installation",{"_index":2270,"title":{},"body":{"license.html":{}}}],["installed",{"_index":2285,"title":{},"body":{"license.html":{}}}],["instance",{"_index":2724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instanceof",{"_index":771,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["instead",{"_index":1295,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["intact",{"_index":2167,"title":{},"body":{"license.html":{}}}],["intended",{"_index":1904,"title":{},"body":{"license.html":{}}}],["intention",{"_index":2156,"title":{},"body":{"license.html":{}}}],["interact",{"_index":1408,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["interaction",{"_index":2035,"title":{},"body":{"license.html":{}}}],["interactive",{"_index":2038,"title":{},"body":{"license.html":{}}}],["interchange",{"_index":2216,"title":{},"body":{"license.html":{}}}],["interest",{"_index":2394,"title":{},"body":{"license.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionCodeState.html":{},"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"interfaces/ViewModel.html":{}},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"license.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionCodeState.html":{},"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"interfaces/ViewModel.html":{},"license.html":{},"overview.html":{}}}],["interfered",{"_index":2279,"title":{},"body":{"license.html":{}}}],["internal",{"_index":1435,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["internet",{"_index":1483,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["interop",{"_index":751,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{}}}],["interpretation",{"_index":2514,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":2084,"title":{},"body":{"license.html":{}}}],["interrupted",{"_index":469,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["intimate",{"_index":2097,"title":{},"body":{"license.html":{}}}],["invalid",{"_index":108,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["invalidate",{"_index":2186,"title":{},"body":{"license.html":{}}}],["irrecoverably",{"_index":915,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["irrevocable",{"_index":2104,"title":{},"body":{"license.html":{}}}],["isdevmode",{"_index":2640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isinvalid",{"_index":805,"title":{},"body":{"interfaces/ControlProperties.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isinvalid(defaultproperties",{"_index":815,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["isinvalid(properties",{"_index":820,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["isn't",{"_index":350,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["isnewpassword",{"_index":840,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":2798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["istokenautorefreshenabled",{"_index":2626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isvalid",{"_index":2713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item",{"_index":1248,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"license.html":{}}}],["item.url",{"_index":1718,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["itself",{"_index":2288,"title":{},"body":{"license.html":{}}}],["j",{"_index":2580,"title":{},"body":{"properties.html":{}}}],["jasmine",{"_index":2687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jasmine/no",{"_index":2684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["javascript",{"_index":1080,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["jpeg",{"_index":1709,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["jpg",{"_index":1710,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["json",{"_index":1697,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["june",{"_index":1883,"title":{},"body":{"license.html":{}}}],["jurisdiction",{"_index":1452,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["keep",{"_index":2166,"title":{},"body":{"license.html":{}}}],["kernel",{"_index":2077,"title":{},"body":{"license.html":{}}}],["key",{"_index":2296,"title":{},"body":{"license.html":{}}}],["keys",{"_index":2273,"title":{},"body":{"license.html":{}}}],["keystroke",{"_index":2747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":2031,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":1898,"title":{},"body":{"license.html":{}}}],["kn9ts",{"_index":1620,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["know",{"_index":633,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["knowingly",{"_index":1498,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["knowledge",{"_index":2438,"title":{},"body":{"license.html":{}}}],["knows",{"_index":1286,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["lang",{"_index":13,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["language",{"_index":2062,"title":{},"body":{"license.html":{}}}],["larger",{"_index":2196,"title":{},"body":{"license.html":{}}}],["later",{"_index":499,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{},"properties.html":{}}}],["law",{"_index":2022,"title":{},"body":{"license.html":{}}}],["lawful",{"_index":1477,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["laws",{"_index":1429,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["lawsuit",{"_index":2405,"title":{},"body":{"license.html":{}}}],["layout",{"_index":526,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["layout'},{'name",{"_index":150,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["legal",{"_index":1425,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["legally",{"_index":1442,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["legend",{"_index":134,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["length",{"_index":2753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lesser",{"_index":2561,"title":{},"body":{"license.html":{}}}],["letters",{"_index":664,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserPhotosService.html":{}}}],["lgpl.html",{"_index":2564,"title":{},"body":{"license.html":{}}}],["liability",{"_index":2311,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1616,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["libraries",{"_index":2066,"title":{},"body":{"license.html":{}}}],["library",{"_index":2250,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":1596,"title":{"license.html":{}},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":2002,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":2003,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":2004,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1899,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":2381,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":2322,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":2375,"title":{},"body":{"license.html":{}}}],["limit",{"_index":2157,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":2500,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1355,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["limiting",{"_index":2310,"title":{},"body":{"license.html":{}}}],["line",{"_index":72,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ControlStruct.html":{},"components/PageNotFoundComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":654,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/HeaderComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["linked",{"_index":2093,"title":{},"body":{"license.html":{}}}],["linking",{"_index":2559,"title":{},"body":{"license.html":{}}}],["links",{"_index":1356,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["linter",{"_index":368,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["list",{"_index":975,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["listall",{"_index":1169,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["listall(profilephotosref",{"_index":1238,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["listresult",{"_index":1174,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["litigation",{"_index":2401,"title":{},"body":{"license.html":{}}}],["loading",{"_index":1573,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["local",{"_index":2515,"title":{},"body":{"license.html":{}}}],["localhost",{"_index":2819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["located",{"_index":1449,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["log",{"_index":399,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["logged",{"_index":625,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["login",{"_index":394,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["login'},{'name",{"_index":170,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["login.component.html",{"_index":1002,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":169,"title":{"components/LoginComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":1003,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginformgroup",{"_index":1014,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["logout",{"_index":1000,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogoutComponent.html":{}}}],["logout'},{'name",{"_index":172,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["logout.component.html",{"_index":1031,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logoutcomponent",{"_index":171,"title":{"components/LogoutComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["long",{"_index":516,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["longer",{"_index":492,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["loss",{"_index":2506,"title":{},"body":{"license.html":{}}}],["losses",{"_index":2509,"title":{},"body":{"license.html":{}}}],["lost",{"_index":1088,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["lowercase",{"_index":663,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["machete",{"_index":1869,"title":{},"body":{"index.html":{}}}],["machine",{"_index":2206,"title":{},"body":{"license.html":{}}}],["made",{"_index":1611,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["mail",{"_index":2540,"title":{},"body":{"license.html":{}}}],["maintain",{"_index":1365,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["maintained",{"_index":1447,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["major",{"_index":2071,"title":{},"body":{"license.html":{}}}],["make",{"_index":1140,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["makes",{"_index":1105,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{}}}],["making",{"_index":2010,"title":{},"body":{"license.html":{}}}],["malformed",{"_index":435,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["manage",{"_index":998,"title":{},"body":{"components/HeaderComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"index.html":{}}}],["manager",{"_index":1306,"title":{},"body":{"components/PhotoManagerComponent.html":{}}}],["manager'},{'name",{"_index":178,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["manager.component.html",{"_index":1307,"title":{},"body":{"components/PhotoManagerComponent.html":{}}}],["manager.component.scss",{"_index":1308,"title":{},"body":{"components/PhotoManagerComponent.html":{}}}],["manager.component.ts",{"_index":1305,"title":{},"body":{"components/PhotoManagerComponent.html":{},"coverage.html":{}}}],["manager/photo",{"_index":1304,"title":{},"body":{"components/PhotoManagerComponent.html":{},"coverage.html":{}}}],["manner",{"_index":2418,"title":{},"body":{"license.html":{}}}],["manually",{"_index":1649,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["manufacturer",{"_index":1957,"title":{},"body":{"license.html":{}}}],["many",{"_index":494,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["map",{"_index":759,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"components/DashboardComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["map((event",{"_index":772,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["map((maybeuser",{"_index":857,"title":{},"body":{"components/DashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["map((profilephotos",{"_index":1688,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["map((properties",{"_index":819,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["map((status",{"_index":782,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["march",{"_index":2459,"title":{},"body":{"license.html":{}}}],["markdownlint",{"_index":1872,"title":{},"body":{"index.html":{}}}],["marked",{"_index":1947,"title":{},"body":{"license.html":{}}}],["marketing",{"_index":1402,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["marks",{"_index":2327,"title":{},"body":{"license.html":{}}}],["masks",{"_index":2000,"title":{},"body":{"license.html":{}}}],["match",{"_index":598,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["match.validator.ts",{"_index":1783,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["match/confirm",{"_index":1782,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["match/match",{"_index":1785,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":120,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":2121,"title":{},"body":{"license.html":{}}}],["materially",{"_index":2289,"title":{},"body":{"license.html":{}}}],["math.random().tostring(radix).slice(skip_whole_num",{"_index":1296,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["maximum",{"_index":1325,"title":{},"body":{"components/PhotoUploadComponent.html":{},"miscellaneous/variables.html":{}}}],["maximum_photos",{"_index":1181,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maximumfiles",{"_index":1316,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["maxlength",{"_index":2751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxpasswordlength",{"_index":553,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["maybenavigation",{"_index":2787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybenavigation?.extras.state",{"_index":2789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybeuser",{"_index":581,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maybeuser.emailverified",{"_index":2743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybeuser?.displayname",{"_index":858,"title":{},"body":{"components/DashboardComponent.html":{}}}],["meaning",{"_index":2336,"title":{},"body":{"license.html":{}}}],["means",{"_index":1488,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["measure",{"_index":2137,"title":{},"body":{"license.html":{}}}],["measures",{"_index":2149,"title":{},"body":{"license.html":{}}}],["media",{"_index":1358,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["medium",{"_index":2162,"title":{},"body":{"license.html":{}}}],["meet",{"_index":432,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["meets",{"_index":2051,"title":{},"body":{"license.html":{}}}],["menu",{"_index":967,"title":{},"body":{"components/HeaderComponent.html":{},"license.html":{}}}],["menushown",{"_index":994,"title":{},"body":{"components/HeaderComponent.html":{}}}],["merchantability",{"_index":2490,"title":{},"body":{"license.html":{}}}],["mere",{"_index":2034,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1098,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["merging",{"_index":2390,"title":{},"body":{"license.html":{}}}],["message",{"_index":1125,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":364,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["messages'},{'name",{"_index":147,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["messages.component",{"_index":589,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["messages.component.html",{"_index":365,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["messages.component.ts",{"_index":363,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"coverage.html":{}}}],["messages.component.ts:19",{"_index":367,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["messages/auth",{"_index":362,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{}}}],["messagingsenderid",{"_index":2829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["met",{"_index":2106,"title":{},"body":{"license.html":{}}}],["meta",{"_index":1061,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["metadata",{"_index":124,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["metadefinition",{"_index":1066,"title":{},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["meter",{"_index":1200,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["method",{"_index":1481,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":215,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"injectables/VerifyEmailService.html":{},"license.html":{}}}],["milliseconds",{"_index":271,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"miscellaneous/variables.html":{}}}],["minlength",{"_index":2754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minpasswordlength",{"_index":554,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["minstrength",{"_index":2759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minutes",{"_index":673,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["miscellaneous",{"_index":1836,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":509,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["misrepresentation",{"_index":2318,"title":{},"body":{"license.html":{}}}],["misused",{"_index":75,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["mobile",{"_index":1378,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mock",{"_index":2699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mocked",{"_index":2698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mocking",{"_index":2706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":14,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"license.html":{}}}],["model",{"_index":2221,"title":{},"body":{"license.html":{}}}],["modern",{"_index":1828,"title":{},"body":{"dependencies.html":{}}}],["modification",{"_index":1995,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":1612,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["modified",{"_index":1946,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":2179,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1598,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["modifying",{"_index":2024,"title":{},"body":{"license.html":{}}}],["modules",{"_index":2565,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monitor",{"_index":1366,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["more",{"_index":517,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{}}}],["moreover",{"_index":2362,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":1730,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["move",{"_index":1144,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["multi",{"_index":405,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["multiline",{"_index":1876,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":1276,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":140,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["namecntrl",{"_index":1640,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["namecntrlerrors",{"_index":1635,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["namecntrlinvalid",{"_index":1636,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["named",{"_index":2730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["names",{"_index":2321,"title":{},"body":{"license.html":{}}}],["native",{"_index":2767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nature",{"_index":2193,"title":{},"body":{"license.html":{}}}],["navigate",{"_index":109,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"miscellaneous/variables.html":{}}}],["navigation",{"_index":2788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["necessary",{"_index":1078,"title":{},"body":{"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":339,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["needed",{"_index":1978,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["needs",{"_index":404,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["nested",{"_index":1244,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["network",{"_index":466,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["new",{"_index":87,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":1150,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["next",{"_index":71,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ControlStruct.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["nexturl",{"_index":2793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":236,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["ngondestroy",{"_index":1057,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["ngoninit",{"_index":1058,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["ngoptimizedimage",{"_index":527,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["ngsw",{"_index":2637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nice",{"_index":2814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noauthguard",{"_index":1754,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nofollow",{"_index":1069,"title":{},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["noindex",{"_index":1068,"title":{},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["nominally",{"_index":1274,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["non",{"_index":624,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["noncommercially",{"_index":2228,"title":{},"body":{"license.html":{}}}],["normal",{"_index":2069,"title":{},"body":{"license.html":{}}}],["normalize",{"_index":1829,"title":{},"body":{"dependencies.html":{}}}],["normally",{"_index":2253,"title":{},"body":{"license.html":{}}}],["note",{"_index":843,"title":{},"body":{"interfaces/ControlStruct.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["nothing",{"_index":2376,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1601,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["notices",{"_index":2041,"title":{},"body":{"license.html":{}}}],["notifications",{"_index":1381,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["notifies",{"_index":2363,"title":{},"body":{"license.html":{}}}],["notify",{"_index":2358,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":2305,"title":{},"body":{"license.html":{}}}],["now",{"_index":78,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["npm",{"_index":1870,"title":{},"body":{"index.html":{}}}],["null",{"_index":337,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/ControlStruct.html":{},"components/PageNotFoundComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["nulls",{"_index":2772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":295,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["number(new",{"_index":1268,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["numbered",{"_index":2480,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":441,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserPhotosService.html":{}}}],["object",{"_index":2054,"title":{},"body":{"license.html":{}}}],["object.values(properties",{"_index":807,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["obligate",{"_index":2469,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":1443,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["obligation",{"_index":1476,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["obligations",{"_index":1426,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["observable",{"_index":263,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"components/DashboardComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["observables",{"_index":784,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["occasionally",{"_index":2227,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":473,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["occurring",{"_index":2373,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":1965,"title":{},"body":{"license.html":{}}}],["of(code).pipe",{"_index":297,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["of(verifyresults",{"_index":1130,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["offer",{"_index":1938,"title":{},"body":{"license.html":{}}}],["offered",{"_index":2244,"title":{},"body":{"license.html":{}}}],["offering",{"_index":2231,"title":{},"body":{"license.html":{}}}],["official",{"_index":2055,"title":{},"body":{"license.html":{}}}],["once",{"_index":2668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onclick",{"_index":960,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onclick(event",{"_index":969,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ondestroy",{"_index":1051,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["one",{"_index":1273,"title":{},"body":{"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["oninit",{"_index":1052,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["onsubmit",{"_index":556,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["onsubmit(user",{"_index":558,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["oobcode",{"_index":15,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["oops",{"_index":1087,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["open",{"_index":1323,"title":{},"body":{"components/PhotoUploadComponent.html":{},"components/TermsAndConditionsComponent.html":{}}}],["opendialog",{"_index":868,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["opened",{"_index":416,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"miscellaneous/variables.html":{}}}],["openfilepicker",{"_index":1317,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["operate",{"_index":2511,"title":{},"body":{"license.html":{}}}],["operated",{"_index":2233,"title":{},"body":{"license.html":{}}}],["operating",{"_index":2080,"title":{},"body":{"license.html":{}}}],["operation",{"_index":395,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["option",{"_index":309,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{}}}],["optional",{"_index":11,"title":{},"body":{"interfaces/ActionCodeState.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/HeaderComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["options",{"_index":2049,"title":{},"body":{"license.html":{}}}],["order",{"_index":2371,"title":{},"body":{"license.html":{}}}],["organization",{"_index":1463,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["organizations",{"_index":2005,"title":{},"body":{"license.html":{}}}],["organize",{"_index":1265,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["origin",{"_index":2319,"title":{},"body":{"license.html":{}}}],["original",{"_index":280,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{}}}],["others",{"_index":1921,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":776,"title":{},"body":{"interfaces/CombinedObs.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":489,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["output",{"_index":2110,"title":{},"body":{"license.html":{}}}],["outside",{"_index":1413,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["ov",{"_index":2757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["over",{"_index":1086,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["overview",{"_index":2566,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":2415,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":455,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["package",{"_index":1812,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packaged",{"_index":2185,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":2070,"title":{},"body":{"license.html":{}}}],["page",{"_index":174,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"index.html":{}}}],["pagenotfoundcomponent",{"_index":173,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["pagetitle",{"_index":242,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["paper",{"_index":2539,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":2349,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":2425,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":2695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":289,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/ControlStruct.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["parameter",{"_index":1023,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":221,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/HeaderComponent.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"injectables/VerifyEmailService.html":{}}}],["parent",{"_index":1499,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["parental",{"_index":1507,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["parentelement",{"_index":2768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parentelement.queryselector(query",{"_index":2769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parsed",{"_index":439,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["part",{"_index":2007,"title":{},"body":{"license.html":{}}}],["partial",{"_index":52,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":2060,"title":{},"body":{"license.html":{}}}],["parties",{"_index":2033,"title":{},"body":{"license.html":{}}}],["partly",{"_index":2701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parts",{"_index":2100,"title":{},"body":{"license.html":{}}}],["party",{"_index":521,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["party's",{"_index":2392,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1931,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["passing",{"_index":1137,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["password",{"_index":63,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["password'},{'name",{"_index":155,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["password.component.html",{"_index":681,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":680,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["password.component.ts:33",{"_index":938,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:34",{"_index":939,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:35",{"_index":940,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:36",{"_index":941,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:37",{"_index":942,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:38",{"_index":944,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:39",{"_index":1545,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:40",{"_index":937,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:41",{"_index":696,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:42",{"_index":697,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:43",{"_index":698,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:44",{"_index":699,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:45",{"_index":700,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:46",{"_index":701,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:47",{"_index":702,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:48",{"_index":703,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:49",{"_index":704,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:50",{"_index":706,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:51",{"_index":707,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:52",{"_index":708,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:53",{"_index":709,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:54",{"_index":710,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:55",{"_index":711,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:56",{"_index":694,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:81",{"_index":1544,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:93",{"_index":695,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.service",{"_index":1547,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.service.ts",{"_index":1095,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["password.service.ts:102",{"_index":1560,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:117",{"_index":1561,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:43",{"_index":1564,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:44",{"_index":1565,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:49",{"_index":1562,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:60",{"_index":1563,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password/change",{"_index":679,"title":{},"body":{"components/ChangePasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["password/forgot",{"_index":932,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["password/reset",{"_index":1094,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["password1",{"_index":713,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["password1cntrl",{"_index":692,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password1cntrlerrors",{"_index":685,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password1cntrlinvalid",{"_index":686,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password2",{"_index":714,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["password2cntrl",{"_index":693,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password2cntrlerrors",{"_index":687,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password2cntrlinvalid",{"_index":688,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwordcntrl",{"_index":555,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{}}}],["passwordcntrlerrors",{"_index":547,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{}}}],["passwordcntrlinvalid",{"_index":548,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{}}}],["passwordfirebasevalidator",{"_index":829,"title":{},"body":{"interfaces/ControlStruct.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordpolicy",{"_index":2800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passwordresetsent",{"_index":268,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["passwordresetsuccess",{"_index":1092,"title":{"interfaces/PasswordResetSuccess.html":{}},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["passwords",{"_index":592,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwords.maxlength",{"_index":576,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwords.minlength",{"_index":578,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwordstrength(value",{"_index":2815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passwordstrengthvalidator",{"_index":830,"title":{},"body":{"interfaces/ControlStruct.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["patent",{"_index":2348,"title":{},"body":{"license.html":{}}}],["patents",{"_index":1982,"title":{},"body":{"license.html":{}}}],["path",{"_index":92,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{}}}],["pattern",{"_index":1963,"title":{},"body":{"license.html":{}}}],["payload",{"_index":1698,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["payment",{"_index":2453,"title":{},"body":{"license.html":{}}}],["pedantic",{"_index":333,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["peer",{"_index":2242,"title":{},"body":{"license.html":{}}}],["peers",{"_index":2243,"title":{},"body":{"license.html":{}}}],["pending",{"_index":486,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["percentage",{"_index":1170,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["percentage(task).pipe",{"_index":1215,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["percentage.progress",{"_index":1339,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["performance",{"_index":2493,"title":{},"body":{"license.html":{}}}],["performing",{"_index":2089,"title":{},"body":{"license.html":{}}}],["perhaps",{"_index":79,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["period",{"_index":1439,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["periodically",{"_index":1516,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["periods",{"_index":1444,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["permanently",{"_index":2357,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1940,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":503,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["permissive",{"_index":2169,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1493,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["permits",{"_index":2338,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1891,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":2281,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1345,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["personally",{"_index":1352,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["pertinent",{"_index":2468,"title":{},"body":{"license.html":{}}}],["phone",{"_index":420,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["photo",{"_index":177,"title":{"interfaces/Photo.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{}}}],["photo.url",{"_index":1689,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["photo_dir",{"_index":1186,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["photomanagercomponent",{"_index":176,"title":{"components/PhotoManagerComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["photos",{"_index":999,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["photos.service",{"_index":1333,"title":{},"body":{"components/PhotoUploadComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["photos.service.ts",{"_index":1165,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["photos.service.ts:127",{"_index":1627,"title":{},"body":{"injectables/UserPhotosService.html":{}}}],["photos.service.ts:51",{"_index":1630,"title":{},"body":{"injectables/UserPhotosService.html":{}}}],["photos.service.ts:53",{"_index":1628,"title":{},"body":{"injectables/UserPhotosService.html":{}}}],["photos.service.ts:54",{"_index":1629,"title":{},"body":{"injectables/UserPhotosService.html":{}}}],["photos.service.ts:55",{"_index":1625,"title":{},"body":{"injectables/UserPhotosService.html":{}}}],["photos.service.ts:78",{"_index":1626,"title":{},"body":{"injectables/UserPhotosService.html":{}}}],["photos/photo",{"_index":1303,"title":{},"body":{"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["photos/user",{"_index":1164,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["photouploadcomponent",{"_index":179,"title":{"components/PhotoUploadComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{}}}],["photourl",{"_index":1648,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["photourlcntrl",{"_index":1641,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["photourlcntrl.valid",{"_index":1716,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["photourlcntrl.value",{"_index":1715,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["photourlcntrlerrors",{"_index":1637,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["photourlcntrlinvalid",{"_index":1638,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["physical",{"_index":2210,"title":{},"body":{"license.html":{}}}],["physically",{"_index":2224,"title":{},"body":{"license.html":{}}}],["picker",{"_index":1197,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["picking",{"_index":1651,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["pieces",{"_index":1918,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":788,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["pipe(startwith(undefined",{"_index":1153,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["place",{"_index":1462,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["plain",{"_index":2782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":380,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["plugin",{"_index":1875,"title":{},"body":{"index.html":{}}}],["plus",{"_index":2395,"title":{},"body":{"license.html":{}}}],["png",{"_index":1711,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["pointer",{"_index":2536,"title":{},"body":{"license.html":{}}}],["policies",{"_index":1434,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy",{"_index":928,"title":{},"body":{"components/FooterComponent.html":{},"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["policy'},{'name",{"_index":183,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["policy.component.html",{"_index":1343,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.component.ts",{"_index":1342,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["policy/privacy",{"_index":1341,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["pollute",{"_index":2692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["popup",{"_index":412,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["port",{"_index":2672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portion",{"_index":2247,"title":{},"body":{"license.html":{}}}],["possesses",{"_index":2222,"title":{},"body":{"license.html":{}}}],["possession",{"_index":2182,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":2513,"title":{},"body":{"license.html":{}}}],["possible",{"_index":2528,"title":{},"body":{"license.html":{}}}],["posted",{"_index":1518,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["power",{"_index":2151,"title":{},"body":{"license.html":{}}}],["practical",{"_index":1900,"title":{},"body":{"license.html":{}}}],["practice",{"_index":1970,"title":{},"body":{"license.html":{}}}],["preamble",{"_index":1896,"title":{},"body":{"license.html":{}}}],["precise",{"_index":1993,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":1967,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":2393,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":2053,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":1290,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["prefixed",{"_index":374,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["present",{"_index":282,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{}}}],["presented",{"_index":1583,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["presenting",{"_index":2570,"title":{},"body":{"properties.html":{}}}],["presents",{"_index":2047,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":2314,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":1874,"title":{},"body":{"index.html":{}}}],["prettierto",{"_index":1878,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":631,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["prevented",{"_index":2278,"title":{},"body":{"license.html":{}}}],["previous",{"_index":1277,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["previously",{"_index":511,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["price",{"_index":1914,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":2454,"title":{},"body":{"license.html":{}}}],["primary",{"_index":1856,"title":{},"body":{"index.html":{}}}],["prior",{"_index":2359,"title":{},"body":{"license.html":{}}}],["pristinechangeevent",{"_index":752,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["privacy",{"_index":182,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["privacypolicycomponent",{"_index":181,"title":{"components/PrivacyPolicyComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["private",{"_index":45,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["privately",{"_index":1603,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["probably",{"_index":1077,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["problem",{"_index":316,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["problems",{"_index":1949,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":2271,"title":{},"body":{"license.html":{}}}],["proceed",{"_index":909,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["process",{"_index":907,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["procuring",{"_index":2443,"title":{},"body":{"license.html":{}}}],["produce",{"_index":2083,"title":{},"body":{"license.html":{}}}],["product",{"_index":2211,"title":{},"body":{"license.html":{}}}],["production",{"_index":291,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["products",{"_index":1386,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["profile",{"_index":997,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["profile'},{'name",{"_index":197,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["profile.component.html",{"_index":1633,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["profile.component.scss",{"_index":1634,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["profile.component.ts",{"_index":1632,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["profile.component.ts:137",{"_index":1645,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:166",{"_index":1646,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:70",{"_index":1652,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:71",{"_index":1653,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:72",{"_index":1654,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:73",{"_index":1655,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:74",{"_index":1656,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:75",{"_index":1657,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:76",{"_index":1658,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:77",{"_index":1659,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:78",{"_index":1660,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:79",{"_index":1662,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:80",{"_index":1663,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:82",{"_index":1644,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":1631,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["profileform",{"_index":1642,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["profileformgroup",{"_index":1661,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["profilephotos",{"_index":1236,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["profilephotos.push",{"_index":1262,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["profilephotos.sort((a",{"_index":1266,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["profilephotoslist",{"_index":1237,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["profilephotoslist.items",{"_index":1249,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["profilephotosref",{"_index":1230,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["program",{"_index":1906,"title":{},"body":{"license.html":{}}}],["program's",{"_index":2161,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":2553,"title":{},"body":{"license.html":{}}}],["programming",{"_index":2061,"title":{},"body":{"license.html":{}}}],["programs",{"_index":1911,"title":{},"body":{"license.html":{}}}],["progress",{"_index":1180,"title":{"interfaces/Progress.html":{}},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"coverage.html":{}}}],["prohibit",{"_index":1969,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":2147,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":2450,"title":{},"body":{"license.html":{}}}],["project",{"_index":1860,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["projectid",{"_index":2831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project’s",{"_index":482,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["prominent",{"_index":2050,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":2043,"title":{},"body":{"license.html":{}}}],["promise",{"_index":82,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["promise.all(promises",{"_index":1255,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["promise.allsettled",{"_index":1250,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["promises",{"_index":76,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"miscellaneous/variables.html":{}}}],["promises.push(promise",{"_index":1253,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["promisesettledresult",{"_index":1240,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["promotional",{"_index":1398,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["proof",{"_index":454,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["propagate",{"_index":2017,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":2379,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":2025,"title":{},"body":{"license.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":1146,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{}}}],["proprietary",{"_index":1990,"title":{},"body":{"license.html":{}}}],["protect",{"_index":1489,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["protecting",{"_index":1961,"title":{},"body":{"license.html":{}}}],["protection",{"_index":1453,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["protocols",{"_index":2294,"title":{},"body":{"license.html":{}}}],["prove",{"_index":2494,"title":{},"body":{"license.html":{}}}],["provide",{"_index":452,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provideanalytics",{"_index":2617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideappcheck",{"_index":2622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideauth",{"_index":2615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":423,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["providedin",{"_index":228,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["provideemulatedauth",{"_index":1803,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["provideemulatedstorage",{"_index":1808,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["providefirebaseapp",{"_index":2820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providefirestore",{"_index":2627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providefunctions",{"_index":2630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideourfirebaseapp",{"_index":1746,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["provideperformance",{"_index":2633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":464,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"miscellaneous/variables.html":{}}}],["providerouter",{"_index":2649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1406,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["provideserviceworker",{"_index":2636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providestorage",{"_index":2643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providevertexai",{"_index":2646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["province",{"_index":1450,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["provision",{"_index":1977,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":2354,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":2484,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":2485,"title":{},"body":{"license.html":{}}}],["pub",{"_index":1853,"title":{},"body":{"index.html":{},"properties.html":{}}}],["public",{"_index":43,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["publicity",{"_index":2320,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":1411,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["publish",{"_index":2165,"title":{},"body":{"license.html":{}}}],["published",{"_index":2481,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1420,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["purposes",{"_index":764,"title":{},"body":{"interfaces/CombinedObs.html":{},"components/PrivacyPolicyComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["pursuant",{"_index":2441,"title":{},"body":{"license.html":{}}}],["push",{"_index":1380,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["qualify",{"_index":2368,"title":{},"body":{"license.html":{}}}],["quality",{"_index":2492,"title":{},"body":{"license.html":{}}}],["query",{"_index":1022,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["quiz",{"_index":535,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["quizzes",{"_index":2571,"title":{},"body":{"properties.html":{}}}],["quota",{"_index":483,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["radix",{"_index":1187,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["random",{"_index":1292,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["re",{"_index":381,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["reactiveformsmodule",{"_index":540,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["read",{"_index":2562,"title":{},"body":{"license.html":{}}}],["readable",{"_index":2207,"title":{},"body":{"license.html":{}}}],["readily",{"_index":2431,"title":{},"body":{"license.html":{}}}],["reading",{"_index":2298,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":44,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{}}}],["ready",{"_index":1975,"title":{},"body":{"license.html":{}}}],["real",{"_index":2712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reason",{"_index":354,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{}}}],["reasonable",{"_index":1390,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["reasonably",{"_index":1458,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["reauthenticatewithcredential",{"_index":583,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["reauthenticatewithcredential(user",{"_index":647,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["recaptchaenterpriseprovider('6lfg3reqaaaaak18s9uymuk8wd3jswjvnmdzmlrt",{"_index":2624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["receipt",{"_index":2366,"title":{},"body":{"license.html":{}}}],["receive",{"_index":1916,"title":{},"body":{"license.html":{}}}],["received",{"_index":1699,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["receives",{"_index":2383,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":2445,"title":{},"body":{"license.html":{}}}],["recent",{"_index":393,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["recently",{"_index":1226,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["recipient",{"_index":447,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["recipient's",{"_index":2439,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1932,"title":{},"body":{"license.html":{}}}],["recognize",{"_index":304,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["recognized",{"_index":2056,"title":{},"body":{"license.html":{}}}],["record",{"_index":48,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{}}}],["recorded",{"_index":1510,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["recover",{"_index":59,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["recoveremail",{"_index":58,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/RecoverEmailService.html":{}}}],["recoveremail$(code",{"_index":294,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["recoveremailcomponent",{"_index":184,"title":{"components/RecoverEmailComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["recoveremailresults",{"_index":266,"title":{"interfaces/RecoverEmailResults.html":{}},"body":{"interfaces/ApplyResult.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"coverage.html":{}}}],["recoveremailservice",{"_index":272,"title":{"injectables/RecoverEmailService.html":{}},"body":{"interfaces/ApplyResult.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"coverage.html":{}}}],["redirect",{"_index":485,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["redirecting",{"_index":1042,"title":{},"body":{"components/LogoutComponent.html":{}}}],["redirectto",{"_index":113,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["redisplay",{"_index":1156,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["redistribute",{"_index":2531,"title":{},"body":{"license.html":{}}}],["ref",{"_index":1171,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["ref(this._storage",{"_index":1231,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["referring",{"_index":1913,"title":{},"body":{"license.html":{}}}],["refers",{"_index":1998,"title":{},"body":{"license.html":{}}}],["refrain",{"_index":2470,"title":{},"body":{"license.html":{}}}],["refresh",{"_index":524,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["refreshed",{"_index":1227,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["regard",{"_index":2303,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":1382,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["regardless",{"_index":2184,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":2101,"title":{},"body":{"license.html":{}}}],["registered",{"_index":1370,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["registerwhenstable:30000",{"_index":2642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registration",{"_index":1367,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["registrationstrategy",{"_index":2641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regular",{"_index":1825,"title":{},"body":{"dependencies.html":{}}}],["reinstated",{"_index":2353,"title":{},"body":{"license.html":{}}}],["rejected",{"_index":1139,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{}}}],["related",{"_index":1385,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["relationship",{"_index":2126,"title":{},"body":{"license.html":{}}}],["released",{"_index":1908,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":2177,"title":{},"body":{"license.html":{}}}],["relicensing",{"_index":2339,"title":{},"body":{"license.html":{}}}],["rely",{"_index":2783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relying",{"_index":2430,"title":{},"body":{"license.html":{}}}],["remain",{"_index":2239,"title":{},"body":{"license.html":{}}}],["remains",{"_index":1907,"title":{},"body":{"license.html":{}}}],["remember",{"_index":1480,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["remote",{"_index":1650,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["removal",{"_index":2304,"title":{},"body":{"license.html":{}}}],["remove",{"_index":1504,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["render",{"_index":1992,"title":{},"body":{"license.html":{}}}],["rendered",{"_index":2507,"title":{},"body":{"license.html":{}}}],["repair",{"_index":2498,"title":{},"body":{"license.html":{}}}],["replace",{"_index":1114,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["replaced",{"_index":1558,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["replacepassword",{"_index":1559,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["replacepassword(newpassword",{"_index":1115,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["replaceurl",{"_index":100,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["repository",{"_index":1513,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"properties.html":{}}}],["represent",{"_index":2268,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":1589,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["represents",{"_index":1455,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["request",{"_index":402,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":504,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["requests",{"_index":495,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["require",{"_index":2096,"title":{},"body":{"license.html":{}}}],["required",{"_index":366,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["requirement",{"_index":2178,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":433,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["requires",{"_index":397,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["requiring",{"_index":2009,"title":{},"body":{"license.html":{}}}],["resend",{"_index":421,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["reset",{"_index":62,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["resetpassword",{"_index":61,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["resetpassword$(code",{"_index":1126,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["resetpasswordcomponent",{"_index":185,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["resetpasswordform",{"_index":1543,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordformgroup",{"_index":1546,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["resetpasswordresults",{"_index":1101,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["resetpasswordservice",{"_index":1111,"title":{"injectables/ResetPasswordService.html":{}},"body":{"interfaces/PasswordResetSuccess.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{}}}],["resetting",{"_index":1104,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["resolve",{"_index":1430,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["resolved",{"_index":2260,"title":{},"body":{"license.html":{}}}],["resolvevalidatepassword",{"_index":1804,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["respect",{"_index":1927,"title":{},"body":{"license.html":{}}}],["response",{"_index":2700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsibilities",{"_index":1926,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":2384,"title":{},"body":{"license.html":{}}}],["restoration",{"_index":1535,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["restore",{"_index":278,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["restored",{"_index":285,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["restoredemail",{"_index":251,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["restrict",{"_index":1984,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":2148,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":2337,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":2335,"title":{},"body":{"license.html":{}}}],["result",{"_index":311,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["resulting",{"_index":2012,"title":{},"body":{"license.html":{}}}],["results",{"_index":119,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1422,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["retained",{"_index":1437,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["retains",{"_index":2284,"title":{},"body":{"license.html":{}}}],["retention",{"_index":1421,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["retrying",{"_index":401,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["return",{"_index":296,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":346,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":223,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["reverted",{"_index":331,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["review",{"_index":1515,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["reviewing",{"_index":2517,"title":{},"body":{"license.html":{}}}],["revised",{"_index":2474,"title":{},"body":{"license.html":{}}}],["revoked",{"_index":1586,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["rid",{"_index":340,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["right",{"_index":1465,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["rights",{"_index":1920,"title":{},"body":{"license.html":{}}}],["risk",{"_index":1593,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["rob",{"_index":2581,"title":{},"body":{"properties.html":{}}}],["robots",{"_index":1070,"title":{},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["robots_meta",{"_index":1067,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rom",{"_index":2286,"title":{},"body":{"license.html":{}}}],["root",{"_index":110,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":143,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["route",{"_index":114,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":29,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["router.parseurl(`/confirm",{"_index":2744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.parseurl(`/login?next=${url",{"_index":2720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.parseurl(nexturl",{"_index":2795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":528,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["routeroutlet",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/CentralLayoutComponent.html":{},"components/StandardLayoutComponent.html":{}}}],["routerstatesnapshot",{"_index":219,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":2650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["royalty",{"_index":2399,"title":{},"body":{"license.html":{}}}],["rules",{"_index":2293,"title":{},"body":{"license.html":{}}}],["run",{"_index":1954,"title":{},"body":{"license.html":{}}}],["running",{"_index":2111,"title":{},"body":{"license.html":{}}}],["runs",{"_index":2081,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":262,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"components/DashboardComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"dependencies.html":{}}}],["rxjs/finnish",{"_index":787,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["s3",{"_index":1285,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["safe",{"_index":2694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["safely",{"_index":2771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["safephotourl",{"_index":1700,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["safequeryselector",{"_index":1799,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["safest",{"_index":2533,"title":{},"body":{"license.html":{}}}],["safety",{"_index":2766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sake",{"_index":1945,"title":{},"body":{"license.html":{}}}],["sale",{"_index":2409,"title":{},"body":{"license.html":{}}}],["same",{"_index":461,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["satisfy",{"_index":2240,"title":{},"body":{"license.html":{}}}],["saying",{"_index":2236,"title":{},"body":{"license.html":{}}}],["scan",{"_index":804,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["school",{"_index":2554,"title":{},"body":{"license.html":{}}}],["scope",{"_index":2449,"title":{},"body":{"license.html":{}}}],["screentrackingservice",{"_index":2620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scripts",{"_index":2086,"title":{},"body":{"license.html":{}}}],["scrollpositionrestoration",{"_index":2654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["second",{"_index":456,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["secondarily",{"_index":2020,"title":{},"body":{"license.html":{}}}],["section",{"_index":1474,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["sections",{"_index":2204,"title":{},"body":{"license.html":{}}}],["secure",{"_index":1484,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["securely",{"_index":1461,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["security",{"_index":1389,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["see",{"_index":1621,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"index.html":{},"license.html":{}}}],["selector",{"_index":37,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["sell",{"_index":2423,"title":{},"body":{"license.html":{}}}],["selling",{"_index":2408,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":1999,"title":{},"body":{"license.html":{}}}],["send",{"_index":284,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["send_email_delay",{"_index":269,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sendconfirmemail",{"_index":792,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["sendconfirmemail(user",{"_index":794,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["sendemailverification",{"_index":797,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["sendemailverification(user",{"_index":798,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["sending",{"_index":601,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"miscellaneous/typealiases.html":{}}}],["sendpasswordresetemail",{"_index":256,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["sendpasswordresetemail(this._auth",{"_index":357,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["sends",{"_index":1360,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sensitive",{"_index":396,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["sent",{"_index":602,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/RecoverEmailComponent.html":{},"miscellaneous/typealiases.html":{}}}],["separable",{"_index":2246,"title":{},"body":{"license.html":{}}}],["separate",{"_index":2191,"title":{},"body":{"license.html":{}}}],["separately",{"_index":2187,"title":{},"body":{"license.html":{}}}],["serve",{"_index":237,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["server",{"_index":2225,"title":{},"body":{"license.html":{}}}],["servers",{"_index":1508,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["serves",{"_index":2072,"title":{},"body":{"license.html":{}}}],["service",{"_index":1346,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["services",{"_index":1388,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["servicing",{"_index":2497,"title":{},"body":{"license.html":{}}}],["set",{"_index":1024,"title":{},"body":{"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["setpersistence(auth",{"_index":2658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sets",{"_index":973,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":1120,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["settings",{"_index":1473,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["settledmetadata",{"_index":1257,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["settledmetadata.status",{"_index":1260,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["settledmetadata.value",{"_index":1263,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["settledurl",{"_index":1256,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["settledurl.status",{"_index":1258,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["settledurl.value",{"_index":1264,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["settles",{"_index":1135,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["setup",{"_index":1855,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["setvalidatepassword",{"_index":1805,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["setvalidatepassword(true",{"_index":2691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":2134,"title":{},"body":{"license.html":{}}}],["share",{"_index":1404,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["shared",{"_index":2091,"title":{},"body":{"license.html":{}}}],["short",{"_index":2542,"title":{},"body":{"license.html":{}}}],["shorter",{"_index":1438,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["show",{"_index":1118,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["showform",{"_index":689,"title":{"interfaces/ShowForm.html":{}},"body":{"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["showmenu",{"_index":957,"title":{},"body":{"components/HeaderComponent.html":{}}}],["shows",{"_index":1124,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"miscellaneous/variables.html":{}}}],["showurl",{"_index":1703,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["showurlinput",{"_index":1639,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["sidebar",{"_index":1567,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":187,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["sidebar.component.html",{"_index":1568,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1569,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.component",{"_index":1578,"title":{},"body":{"components/StandardLayoutComponent.html":{}}}],["sidebarcomponent",{"_index":186,"title":{"components/SidebarComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["sign",{"_index":458,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["signal",{"_index":28,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PhotoUploadComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["signal('unsent",{"_index":622,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["signal(false",{"_index":979,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogoutComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["signal(true",{"_index":731,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["signal.util",{"_index":828,"title":{},"body":{"interfaces/ControlStruct.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["signal.util.ts",{"_index":747,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["signals",{"_index":371,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["signed",{"_index":512,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["significant",{"_index":2269,"title":{},"body":{"license.html":{}}}],["signing",{"_index":1471,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["signinwithemailandpassword",{"_index":1020,"title":{},"body":{"components/LoginComponent.html":{}}}],["signinwithemailandpassword(this._auth",{"_index":1028,"title":{},"body":{"components/LoginComponent.html":{}}}],["signout",{"_index":1037,"title":{},"body":{"components/LogoutComponent.html":{}}}],["signout(this._auth",{"_index":1039,"title":{},"body":{"components/LogoutComponent.html":{}}}],["similar",{"_index":2146,"title":{},"body":{"license.html":{}}}],["similarly",{"_index":1414,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["simultaneously",{"_index":2467,"title":{},"body":{"license.html":{}}}],["single",{"_index":1862,"title":{},"body":{"index.html":{},"license.html":{}}}],["singlton",{"_index":2703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["situations",{"_index":1405,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["skip",{"_index":352,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["skip_whole_num",{"_index":1189,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sl45pfwdkvgpgfysjutci0zrcl5v",{"_index":1846,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sms",{"_index":379,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["snapshot",{"_index":222,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["social",{"_index":1357,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["soft",{"_index":1075,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["software",{"_index":1600,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["sold",{"_index":2256,"title":{},"body":{"license.html":{}}}],["sole",{"_index":2117,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1607,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["solid",{"_index":988,"title":{},"body":{"components/HeaderComponent.html":{},"dependencies.html":{}}}],["someone",{"_index":1235,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["something",{"_index":106,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["sometimes",{"_index":338,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["sorted",{"_index":1225,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["sorting",{"_index":1241,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["sourcing",{"_index":1608,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["spam",{"_index":670,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["spare",{"_index":2219,"title":{},"body":{"license.html":{}}}],["speak",{"_index":1912,"title":{},"body":{"license.html":{}}}],["special",{"_index":1986,"title":{},"body":{"license.html":{}}}],["specific",{"_index":2079,"title":{},"body":{"license.html":{}}}],["specifically",{"_index":2095,"title":{},"body":{"license.html":{}}}],["specified",{"_index":2059,"title":{},"body":{"license.html":{}}}],["specifies",{"_index":2479,"title":{},"body":{"license.html":{}}}],["specify",{"_index":2482,"title":{},"body":{"license.html":{}}}],["spinner",{"_index":1123,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SpinnerComponent.html":{},"interfaces/VerifiedFailed.html":{}}}],["spinner'},{'name",{"_index":188,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["spinner.component.scss",{"_index":1572,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner.component.svg",{"_index":1571,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinnercomponent",{"_index":31,"title":{"components/SpinnerComponent.html":{}},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{}}}],["spirit",{"_index":2475,"title":{},"body":{"license.html":{}}}],["spy",{"_index":2686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spying",{"_index":2683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spyon(auth",{"_index":2689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":2595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":2597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../change",{"_index":2585,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../confirm",{"_index":2593,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":1839,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../control",{"_index":2599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../delete",{"_index":2587,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../dom.ts",{"_index":2602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../email",{"_index":2601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../emulator",{"_index":2596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error",{"_index":2603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../firebase",{"_index":2609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../firebase.validator.ts",{"_index":2607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../forgot",{"_index":2589,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../get",{"_index":2605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../identity",{"_index":2600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../login.component.ts",{"_index":2590,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../match",{"_index":2598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../no",{"_index":2606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../page",{"_index":2610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../photo",{"_index":2588,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../recover",{"_index":2611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../reset",{"_index":2586,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../strength.validator.ts",{"_index":2608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":2592,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.token.ts",{"_index":2591,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../util.ts",{"_index":2604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.config.ts",{"_index":1740,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/app",{"_index":208,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"coverage.html":{}}}],["src/app/core/firebase",{"_index":1744,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":1747,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/email",{"_index":1749,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/no",{"_index":1752,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/user.token.ts",{"_index":1755,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":850,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts:18",{"_index":854,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/identity/actions/actions.component.ts",{"_index":6,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"coverage.html":{}}}],["src/app/identity/actions/actions.component.ts:35",{"_index":128,"title":{},"body":{"components/ActionsComponent.html":{}}}],["src/app/identity/actions/actions.component.ts:36",{"_index":129,"title":{},"body":{"components/ActionsComponent.html":{}}}],["src/app/identity/actions/actions.component.ts:37",{"_index":130,"title":{},"body":{"components/ActionsComponent.html":{}}}],["src/app/identity/actions/actions.component.ts:38",{"_index":131,"title":{},"body":{"components/ActionsComponent.html":{}}}],["src/app/identity/actions/actions.component.ts:40",{"_index":132,"title":{},"body":{"components/ActionsComponent.html":{}}}],["src/app/identity/actions/actions.component.ts:41",{"_index":133,"title":{},"body":{"components/ActionsComponent.html":{}}}],["src/app/identity/actions/actions.component.ts:42",{"_index":127,"title":{},"body":{"components/ActionsComponent.html":{}}}],["src/app/identity/actions/get",{"_index":1761,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/auth",{"_index":361,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"coverage.html":{}}}],["src/app/identity/change",{"_index":536,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/identity/confirm",{"_index":790,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/identity/delete",{"_index":860,"title":{},"body":{"components/DeleteAccountComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/identity/error",{"_index":1767,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/forgot",{"_index":931,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/identity/identity",{"_index":823,"title":{},"body":{"interfaces/ControlStruct.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/login/login.component.ts",{"_index":1001,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/identity/login/login.component.ts:37",{"_index":1007,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:38",{"_index":1008,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:39",{"_index":1009,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:40",{"_index":1010,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:41",{"_index":1011,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:42",{"_index":1012,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:43",{"_index":1013,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:44",{"_index":1015,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:45",{"_index":1016,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:46",{"_index":1017,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:48",{"_index":1018,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:49",{"_index":1019,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:51",{"_index":1006,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:52",{"_index":1004,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:69",{"_index":1005,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/logout/logout.component.ts",{"_index":1030,"title":{},"body":{"components/LogoutComponent.html":{},"coverage.html":{}}}],["src/app/identity/logout/logout.component.ts:20",{"_index":1036,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/identity/logout/logout.component.ts:22",{"_index":1034,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/identity/logout/logout.component.ts:23",{"_index":1035,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/identity/logout/logout.component.ts:25",{"_index":1033,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/identity/recover",{"_index":248,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/reset",{"_index":1093,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/identity/user",{"_index":1163,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/validators/confirm",{"_index":1781,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/validators/passwords/firebase.validator.ts",{"_index":1787,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/validators/passwords/strength.validator.ts",{"_index":1788,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/validators/passwords/util.ts",{"_index":1789,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/identity/verify",{"_index":1721,"title":{},"body":{"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"coverage.html":{}}}],["src/app/layouts/central/central.component.ts",{"_index":525,"title":{},"body":{"components/CentralLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layouts/footer/footer.component.ts",{"_index":917,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/layouts/footer/footer.component.ts:13",{"_index":924,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/layouts/header/header.component.ts",{"_index":952,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/layouts/header/header.component.ts:22",{"_index":980,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layouts/header/header.component.ts:23",{"_index":982,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layouts/header/header.component.ts:24",{"_index":983,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layouts/header/header.component.ts:30",{"_index":965,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layouts/header/header.component.ts:41",{"_index":972,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layouts/sidebar/sidebar.component.ts",{"_index":1566,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/layouts/standard/standard.component.ts",{"_index":1574,"title":{},"body":{"components/StandardLayoutComponent.html":{},"coverage.html":{}}}],["src/app/legal/privacy",{"_index":1340,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["src/app/legal/terms",{"_index":1579,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"coverage.html":{}}}],["src/app/page",{"_index":1047,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/constants.ts",{"_index":1796,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/control",{"_index":746,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/spinner/spinner.component.ts",{"_index":1570,"title":{},"body":{"components/SpinnerComponent.html":{},"coverage.html":{}}}],["src/testing/constants.ts",{"_index":1841,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/testing/test.component.ts",{"_index":1624,"title":{},"body":{"components/TestComponent.html":{},"coverage.html":{}}}],["src/testing/utilities/dom.ts",{"_index":1797,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/testing/utilities/emulator",{"_index":1800,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssr",{"_index":1079,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["stand",{"_index":1974,"title":{},"body":{"license.html":{}}}],["standard",{"_index":190,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["standard.component.html",{"_index":1575,"title":{},"body":{"components/StandardLayoutComponent.html":{}}}],["standard.component.scss",{"_index":1576,"title":{},"body":{"components/StandardLayoutComponent.html":{}}}],["standardlayoutcomponent",{"_index":189,"title":{"components/StandardLayoutComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["standards",{"_index":2057,"title":{},"body":{"license.html":{}}}],["start",{"_index":2534,"title":{},"body":{"license.html":{}}}],["started",{"_index":1852,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":2543,"title":{},"body":{"license.html":{}}}],["startwith",{"_index":1099,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["state",{"_index":84,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["state.continueurl",{"_index":85,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["state.mode",{"_index":90,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["state.oobcode",{"_index":91,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["state.ts",{"_index":1762,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stated",{"_index":2105,"title":{},"body":{"license.html":{}}}],["statement",{"_index":2341,"title":{},"body":{"license.html":{}}}],["statements",{"_index":1738,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":1983,"title":{},"body":{"license.html":{}}}],["stating",{"_index":2168,"title":{},"body":{"license.html":{}}}],["status",{"_index":653,"title":{},"body":{"components/ChangeEmailComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["status.isvalid",{"_index":2803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statuschangeevent",{"_index":801,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["step",{"_index":906,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["steps",{"_index":1457,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["still",{"_index":320,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/UserPhotosService.html":{}}}],["stop",{"_index":780,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["storage",{"_index":519,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["storage.ts",{"_index":1807,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["storagebucket",{"_index":2832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storageemulatorconnected",{"_index":1809,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["storageref",{"_index":1299,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["storagereferences",{"_index":1222,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["store",{"_index":1145,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["straightforward",{"_index":1288,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["strategy.service.ts",{"_index":210,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"coverage.html":{}}}],["strategy.service.ts:18",{"_index":220,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["strategy.service.ts:8",{"_index":225,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["strategy.service.ts:9",{"_index":217,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["stream",{"_index":1221,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["strength",{"_index":1826,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["strength.id",{"_index":2816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strength?tab=readme",{"_index":2756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strengthen",{"_index":1440,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["string",{"_index":16,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/DashboardComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["strive",{"_index":1485,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["strong",{"_index":739,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["structure",{"_index":1254,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["styleurl",{"_index":530,"title":{},"body":{"components/CentralLayoutComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["subdividing",{"_index":2389,"title":{},"body":{"license.html":{}}}],["subject",{"_index":1100,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{}}}],["sublicenses",{"_index":2419,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":2129,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1154,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["submit",{"_index":896,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["submitted",{"_index":640,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["subprograms",{"_index":2094,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":2557,"title":{},"body":{"license.html":{}}}],["subscribed",{"_index":276,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/UserPhotosService.html":{}}}],["subsection",{"_index":2229,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":2266,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":1972,"title":{},"body":{"license.html":{}}}],["succeeded",{"_index":1131,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["success",{"_index":322,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoUploadComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["successful",{"_index":252,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["such",{"_index":467,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["sue",{"_index":2429,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":2275,"title":{},"body":{"license.html":{}}}],["summary",{"_index":1619,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["super",{"_index":232,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["supplement",{"_index":2299,"title":{},"body":{"license.html":{}}}],["supplied",{"_index":429,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["support",{"_index":1091,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["supported",{"_index":386,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["supports",{"_index":2234,"title":{},"body":{"license.html":{}}}],["sure",{"_index":422,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/DeleteAccountComponent.html":{},"license.html":{}}}],["surrender",{"_index":1924,"title":{},"body":{"license.html":{}}}],["survive",{"_index":2340,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":2510,"title":{},"body":{"license.html":{}}}],["svg",{"_index":989,"title":{},"body":{"components/HeaderComponent.html":{},"dependencies.html":{}}}],["switch",{"_index":376,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["switchmap",{"_index":260,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{}}}],["switchmap((newpassword",{"_index":1148,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["switchmap((task",{"_index":1212,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["switchmap((user",{"_index":1686,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["switchmap((verifyresults",{"_index":1128,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["switchmap(async",{"_index":298,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{}}}],["symbols",{"_index":665,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["sync",{"_index":2808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":2065,"title":{},"body":{"license.html":{}}}],["systematic",{"_index":1962,"title":{},"body":{"license.html":{}}}],["t",{"_index":825,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":1811,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1810,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":229,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["take",{"_index":301,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"license.html":{}}}],["tangible",{"_index":2252,"title":{},"body":{"license.html":{}}}],["tap",{"_index":1665,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["target",{"_index":991,"title":{},"body":{"components/HeaderComponent.html":{}}}],["task",{"_index":1300,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["technological",{"_index":2136,"title":{},"body":{"license.html":{}}}],["tell",{"_index":1704,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["tells",{"_index":2046,"title":{},"body":{"license.html":{}}}],["template",{"_index":40,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{}}}],["templates",{"_index":373,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["templateurl",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["term",{"_index":2103,"title":{},"body":{"license.html":{}}}],["terminal",{"_index":2541,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":2347,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":2367,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":2356,"title":{},"body":{"license.html":{}}}],["termination",{"_index":2344,"title":{},"body":{"license.html":{}}}],["terms",{"_index":192,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"license.html":{}}}],["termsandconditionscomponent",{"_index":191,"title":{"components/TermsAndConditionsComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["terraform",{"_index":1857,"title":{},"body":{"index.html":{}}}],["test",{"_index":95,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/TestComponent.html":{},"miscellaneous/variables.html":{}}}],["testbed.configuretestingmodule",{"_index":2663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testcomponent",{"_index":194,"title":{"components/TestComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["tested",{"_index":235,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["testing",{"_index":293,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["tests",{"_index":2693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text",{"_index":1374,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["therefore",{"_index":1925,"title":{},"body":{"license.html":{}}}],["things",{"_index":1919,"title":{},"body":{"license.html":{}}}],["think",{"_index":1142,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"components/PhotoUploadComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["third",{"_index":2160,"title":{},"body":{"license.html":{}}}],["this.$blockwindow.set(true",{"_index":1038,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.$currentpwcntrlerrors",{"_index":715,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.$currentpwcntrlinvalid",{"_index":716,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.$email1cntrlerrors",{"_index":605,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.$email1cntrlinvalid",{"_index":606,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.$email2cntrlerrors",{"_index":609,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.$email2cntrlinvalid",{"_index":610,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.$emailcntrlerrors",{"_index":946,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.$emailcntrlinvalid",{"_index":947,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.$errorcode",{"_index":620,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$errorcode.set",{"_index":641,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$errorcode.set(code",{"_index":651,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$filecount",{"_index":1336,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["this.$formemailsinvalid",{"_index":618,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.$formpasswordsinvalid",{"_index":728,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.$namecntrlerrors",{"_index":1670,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$namecntrlinvalid",{"_index":1672,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$password1cntrlerrors",{"_index":718,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.$password1cntrlinvalid",{"_index":719,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.$password2cntrlerrors",{"_index":722,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.$password2cntrlinvalid",{"_index":723,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.$passwordcntrlerrors",{"_index":612,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{}}}],["this.$passwordcntrlinvalid",{"_index":613,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{}}}],["this.$photourlcntrlerrors",{"_index":1676,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$photourlcntrlinvalid",{"_index":1678,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$showform",{"_index":730,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$showform.set(false",{"_index":734,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$showform.set(true",{"_index":736,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$showmenu",{"_index":995,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.$showmenu.set(!menushown",{"_index":996,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.$showmenu.set(false",{"_index":993,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.$showurlinput",{"_index":1682,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$showurlinput.set(false",{"_index":1690,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$showurlinput.update((showurl",{"_index":1702,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.$verificationstatus",{"_index":621,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["this.$verificationstatus.set('sending",{"_index":644,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["this.$verificationstatus.set('sent",{"_index":649,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["this.$verificationstatus.set('unsent",{"_index":652,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this._$actionstate",{"_index":51,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this._$confirmdialog",{"_index":892,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["this._$fileinput",{"_index":1338,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["this._auth",{"_index":945,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this._basetitle",{"_index":240,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["this._confirmpasswordreset(code",{"_index":1149,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["this._doactioncode(oobcode",{"_index":299,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["this._metaservice.addtag(robots_meta",{"_index":1084,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["this._metaservice.removetagelement(this._robotstag",{"_index":1073,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["this._modepaths",{"_index":57,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this._modepaths[state.mode",{"_index":93,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this._newpasswordsubject$.next(newpassword",{"_index":1116,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["this._newpasswordsubject$.pipe",{"_index":1147,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["this._refreshfilessubject",{"_index":1207,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["this._refreshfilessubject$.next",{"_index":1223,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["this._refreshfilessubject$.pipe",{"_index":1233,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["this._robotstag",{"_index":1072,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["this._router",{"_index":67,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/DeleteAccountComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["this._router.navigatebyurl",{"_index":118,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LogoutComponent.html":{}}}],["this._router.navigatebyurl(path",{"_index":99,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this._router.navigatebyurl(this.next",{"_index":1029,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._sendpasswordresetemail(result.restoredemail",{"_index":312,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["this._service",{"_index":1527,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["this._service.recoveremail$(oobcode",{"_index":1531,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["this._service.replacepassword(password1",{"_index":1554,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this._service.resetpassword$(oobcode",{"_index":1551,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this._service.verifyemail(oobcode",{"_index":1728,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this._tasksubject",{"_index":1209,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["this._tasksubject$.next(task",{"_index":1302,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["this._tasksubject$.pipe",{"_index":1211,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["this._title",{"_index":233,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["this._title.gettitle",{"_index":241,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["this._title.settitle(`${pagetitle",{"_index":246,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["this._title.settitle(this._basetitle",{"_index":245,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["this._userphotoservice",{"_index":1668,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this._userphotoservice.getprofilephotos(uid).pipe",{"_index":1687,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this._userphotoservice.uploadpercentage",{"_index":1335,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["this._verifycode(oobcode",{"_index":1127,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["this.buildtitle(snapshot",{"_index":243,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["this.changeemailform",{"_index":615,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.changeemailform.invalid",{"_index":636,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.changeemailform.value",{"_index":629,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.changepasswordform",{"_index":725,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.changepasswordform.invalid",{"_index":733,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.changepasswordform.value",{"_index":732,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.continueurl",{"_index":53,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this.currentpwcntrl",{"_index":717,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.deleteaccountform",{"_index":890,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["this.deleteaccountform.invalid",{"_index":900,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["this.deleteaccountform.value",{"_index":899,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["this.email1cntrl",{"_index":608,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.email2cntrl",{"_index":611,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["this.emailcntrl",{"_index":948,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.forgotform",{"_index":949,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.forgotform.invalid",{"_index":951,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.forgotform.value",{"_index":950,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.lang",{"_index":54,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this.loginform",{"_index":1025,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":1027,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":1026,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.mode",{"_index":55,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this.name",{"_index":855,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.namecntrl",{"_index":1669,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.oobcode",{"_index":56,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["this.password1cntrl",{"_index":720,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.password2cntrl",{"_index":724,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.passwordcntrl",{"_index":614,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{}}}],["this.photourlcntrl",{"_index":1674,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.profileform",{"_index":1680,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.profileform.invalid",{"_index":1693,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.profileform.patchvalue(user",{"_index":1685,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.profileform.value",{"_index":1692,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["this.resetpasswordform",{"_index":1549,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.resetpasswordform.invalid",{"_index":1553,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.resetpasswordform.value",{"_index":1552,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.uploadpercentage",{"_index":1210,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["this.user",{"_index":627,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["this.vm",{"_index":1530,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["those",{"_index":1247,"title":{},"body":{"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"license.html":{}}}],["though",{"_index":2301,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":1980,"title":{},"body":{"license.html":{}}}],["three",{"_index":2217,"title":{},"body":{"license.html":{}}}],["throttle",{"_index":2810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["through",{"_index":2036,"title":{},"body":{"license.html":{}}}],["throw",{"_index":341,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["throws",{"_index":324,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["thus",{"_index":2122,"title":{},"body":{"license.html":{}}}],["time",{"_index":302,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["timed",{"_index":488,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["timeout",{"_index":468,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["timer",{"_index":261,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["timer(result.restoredemail",{"_index":306,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["times",{"_index":2662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":209,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"coverage.html":{}}}],["titlestrategy",{"_index":212,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"miscellaneous/variables.html":{}}}],["tl;dr",{"_index":1594,"title":{},"body":{"components/TermsAndConditionsComponent.html":{}}}],["today",{"_index":922,"title":{},"body":{"components/FooterComponent.html":{}}}],["todo",{"_index":742,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["toggle",{"_index":1647,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["togglemenu",{"_index":961,"title":{},"body":{"components/HeaderComponent.html":{}}}],["togglephotourl",{"_index":1643,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["token",{"_index":491,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["tools",{"_index":2088,"title":{},"body":{"license.html":{}}}],["tosignal",{"_index":749,"title":{},"body":{"interfaces/CombinedObs.html":{},"interfaces/ControlProperties.html":{}}}],["tosignal(controlerrors",{"_index":789,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["tosignal(controlevents",{"_index":821,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["tosignal(formstatus",{"_index":2742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["total",{"_index":1183,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["touched",{"_index":800,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["touchedchangeevent",{"_index":802,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["track",{"_index":1192,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{}}}],["trade",{"_index":2325,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":2324,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":2326,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":2280,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1445,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["transferred",{"_index":1446,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["transferring",{"_index":2387,"title":{},"body":{"license.html":{}}}],["transmission",{"_index":1482,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["traverse",{"_index":1287,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["treated",{"_index":1460,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["treaty",{"_index":2142,"title":{},"body":{"license.html":{}}}],["tree",{"_index":123,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["trends",{"_index":1395,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["triggers",{"_index":1113,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["true",{"_index":101,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoUploadComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/variables.html":{}}}],["truthy",{"_index":351,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["try",{"_index":356,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{}}}],["ts",{"_index":2681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":1832,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":905,"title":{},"body":{"components/DeleteAccountComponent.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":17,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ControlProperties.html":{},"interfaces/ControlStruct.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2583,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeerror('control",{"_index":2723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeerror('expected",{"_index":2765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeerror('query",{"_index":2770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeerror(`invalid",{"_index":2786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeof",{"_index":2785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":334,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["typescript",{"_index":73,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["typescript/linters",{"_index":2776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typical",{"_index":2262,"title":{},"body":{"license.html":{}}}],["ui",{"_index":1198,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["uid",{"_index":1224,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["uid}/${photo_dir",{"_index":1232,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uid}/${photo_dir}/${prefix",{"_index":1297,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["unable",{"_index":476,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["unacceptable",{"_index":1968,"title":{},"body":{"license.html":{}}}],["unclear",{"_index":1280,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["undefined",{"_index":244,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"interfaces/ApplyResult.html":{},"interfaces/CombinedObs.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1495,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["undone",{"_index":904,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["unfortunately",{"_index":300,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["unicorn/no",{"_index":835,"title":{},"body":{"interfaces/ControlStruct.html":{},"components/PageNotFoundComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":1731,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["unknown",{"_index":314,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["unless",{"_index":1021,"title":{},"body":{"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["unlike",{"_index":1283,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["unlimited",{"_index":2109,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":2016,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":2131,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":2297,"title":{},"body":{"license.html":{}}}],["unreachable",{"_index":471,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["unsafe",{"_index":2685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unsent",{"_index":603,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"miscellaneous/typealiases.html":{}}}],["unsupported",{"_index":385,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["until",{"_index":2355,"title":{},"body":{"license.html":{}}}],["unusual",{"_index":497,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["unverified_test_user",{"_index":1840,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["up",{"_index":1117,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["update",{"_index":1469,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["updatepassword",{"_index":712,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["updatepassword(credentials.user",{"_index":735,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["updateprofile",{"_index":1664,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["updateprofile(user",{"_index":1701,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["updates",{"_index":976,"title":{},"body":{"components/HeaderComponent.html":{},"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["updatetitle",{"_index":216,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["updatetitle(snapshot",{"_index":218,"title":{},"body":{"injectables/AppTitleStrategyService.html":{}}}],["upload",{"_index":1213,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["upload'},{'name",{"_index":180,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["upload.component",{"_index":1666,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["upload.component.html",{"_index":1311,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.scss",{"_index":1312,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts",{"_index":1310,"title":{},"body":{"components/PhotoUploadComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["upload.component.ts:26",{"_index":1320,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts:27",{"_index":1331,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts:28",{"_index":1321,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts:29",{"_index":1332,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts:31",{"_index":1329,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts:32",{"_index":1319,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts:41",{"_index":1322,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload.component.ts:53",{"_index":1326,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["upload/photo",{"_index":1309,"title":{},"body":{"components/PhotoUploadComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["uploadbytesresumable",{"_index":1172,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uploadbytesresumable(storageref",{"_index":1301,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uploaded",{"_index":1185,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["uploadfile",{"_index":1318,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["uploading",{"_index":1199,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uploadpercentage",{"_index":1202,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uploadphoto",{"_index":1193,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uploadphoto(files",{"_index":1281,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uploads",{"_index":1271,"title":{},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uploadtask",{"_index":1175,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["uploadtasksnapshot",{"_index":1176,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["upper",{"_index":662,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["uri",{"_index":425,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{}}}],["url",{"_index":86,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["url(state.continueurl",{"_index":88,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["url.pathname}${url.search}${url.hash",{"_index":89,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["urltree",{"_index":2719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usage",{"_index":1359,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":292,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"interfaces/ControlStruct.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/TermsAndConditionsComponent.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":2655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":418,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/ControlStruct.html":{},"components/PrivacyPolicyComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"index.html":{},"license.html":{}}}],["useful",{"_index":2538,"title":{},"body":{"license.html":{}}}],["user",{"_index":196,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user$.pipe",{"_index":856,"title":{},"body":{"components/DashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":279,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"interfaces/Progress.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{}}}],["user(inject(auth",{"_index":2836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.email",{"_index":637,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{}}}],["userid",{"_index":1845,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userphotosservice",{"_index":1191,"title":{"injectables/UserPhotosService.html":{}},"body":{"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{}}}],["userprofilecomponent",{"_index":195,"title":{"components/UserProfileComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{}}}],["users",{"_index":407,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"license.html":{}}}],["usertrackingservice",{"_index":2621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uses",{"_index":1071,"title":{},"body":{"components/PageNotFoundComponent.html":{},"license.html":{}}}],["using",{"_index":463,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Progress.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["val",{"_index":806,"title":{},"body":{"interfaces/ControlProperties.html":{},"miscellaneous/variables.html":{}}}],["valid",{"_index":321,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["validate",{"_index":2805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatepassword",{"_index":2677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatepassword').and.callfake(resolvevalidatepassword",{"_index":2690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatepassword(auth",{"_index":2802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatepasswordisvalid",{"_index":1806,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validatepasswordresponse",{"_index":2709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validation",{"_index":766,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["validationerrors",{"_index":587,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/CombinedObs.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":2806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatorfn",{"_index":2721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators",{"_index":630,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ControlStruct.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["validators.email",{"_index":838,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["validators.maxlength(num",{"_index":2734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators.maxlength(passwords.maxlength",{"_index":847,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["validators.minlength(num",{"_index":2733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators.minlength(passwords.minlength",{"_index":846,"title":{},"body":{"interfaces/ControlStruct.html":{},"miscellaneous/variables.html":{}}}],["validators.pattern(/\\.(?:avif|gif|jpe?g|png|webp)(?:\\?.*)?$/u",{"_index":1675,"title":{},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["validators.required",{"_index":837,"title":{},"body":{"interfaces/ControlStruct.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"miscellaneous/variables.html":{}}}],["validators/confirm",{"_index":597,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators/passwords",{"_index":831,"title":{},"body":{"interfaces/ControlStruct.html":{}}}],["value",{"_index":575,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"injectables/RecoverEmailService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"injectables/VerifyEmailService.html":{},"interfaces/ViewModel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1243,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["var",{"_index":138,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["variable",{"_index":1741,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2594,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbatim",{"_index":1892,"title":{},"body":{"license.html":{}}}],["verification",{"_index":382,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{}}}],["verificationstatus",{"_index":549,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{}}}],["verificationstatus();@if",{"_index":674,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["verified",{"_index":408,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["verified.guard.ts",{"_index":1750,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["verifiedfailed",{"_index":1102,"title":{"interfaces/VerifiedFailed.html":{}},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["verifiedresult",{"_index":1110,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["verify",{"_index":65,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"components/VerifyEmailComponent.html":{}}}],["verifyandchangeemail",{"_index":64,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{}}}],["verifybeforeupdateemail",{"_index":584,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["verifybeforeupdateemail(credentials.user",{"_index":648,"title":{},"body":{"components/ChangeEmailComponent.html":{}}}],["verifyemail",{"_index":66,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"injectables/VerifyEmailService.html":{}}}],["verifyemail(oobcode",{"_index":1733,"title":{},"body":{"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{}}}],["verifyemailcomponent",{"_index":198,"title":{"components/VerifyEmailComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/AuthErrorMessagesComponent.html":{},"components/CentralLayoutComponent.html":{},"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DashboardComponent.html":{},"components/DeleteAccountComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhotoManagerComponent.html":{},"components/PhotoUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SpinnerComponent.html":{},"components/StandardLayoutComponent.html":{},"components/TermsAndConditionsComponent.html":{},"components/TestComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["verifyemailresult",{"_index":1726,"title":{"interfaces/VerifyEmailResult.html":{}},"body":{"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"coverage.html":{}}}],["verifyemailservice",{"_index":1725,"title":{"injectables/VerifyEmailService.html":{}},"body":{"components/VerifyEmailComponent.html":{},"interfaces/VerifyEmailResult.html":{},"injectables/VerifyEmailService.html":{},"coverage.html":{}}}],["verifypasswordresetcode",{"_index":1097,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["verifypasswordresetcode(this._auth",{"_index":1162,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["verifyresults",{"_index":1129,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["verifystatuses",{"_index":600,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ConfirmEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["version",{"_index":1511,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{},"properties.html":{}}}],["versions",{"_index":1905,"title":{},"body":{"license.html":{}}}],["vertexai",{"_index":2647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["very",{"_index":738,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["video",{"_index":1372,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["view",{"_index":1415,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["viewchild",{"_index":886,"title":{},"body":{"components/DeleteAccountComponent.html":{},"components/PhotoUploadComponent.html":{}}}],["viewchild.required('confirmdialog",{"_index":874,"title":{},"body":{"components/DeleteAccountComponent.html":{}}}],["viewchild.required('photoupload",{"_index":1328,"title":{},"body":{"components/PhotoUploadComponent.html":{}}}],["viewed",{"_index":1410,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["viewmodel",{"_index":1667,"title":{"interfaces/ViewModel.html":{}},"body":{"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{},"coverage.html":{}}}],["violates",{"_index":2292,"title":{},"body":{"license.html":{}}}],["violation",{"_index":2351,"title":{},"body":{"license.html":{}}}],["visible",{"_index":2044,"title":{},"body":{"license.html":{}}}],["visit",{"_index":1362,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["visiting",{"_index":1472,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vm",{"_index":1520,"title":{},"body":{"components/RecoverEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/VerifyEmailComponent.html":{},"interfaces/ViewModel.html":{}}}],["vm.email",{"_index":1556,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["vm.errorcode",{"_index":1557,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["vm.passwordresetsent",{"_index":1534,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["vm.profilephotos",{"_index":1717,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["vm.restoredemail",{"_index":1533,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["vm.showform",{"_index":1555,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["vm.successful",{"_index":1532,"title":{},"body":{"components/RecoverEmailComponent.html":{}}}],["vm.verified",{"_index":1729,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["voice",{"_index":1371,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["void",{"_index":224,"title":{},"body":{"injectables/AppTitleStrategyService.html":{},"components/DeleteAccountComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PasswordResetSuccess.html":{},"interfaces/Photo.html":{},"components/PhotoUploadComponent.html":{},"interfaces/Progress.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"injectables/UserPhotosService.html":{},"components/UserProfileComponent.html":{},"interfaces/VerifiedFailed.html":{},"interfaces/ViewModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":2197,"title":{},"body":{"license.html":{}}}],["vs",{"_index":336,"title":{},"body":{"interfaces/ApplyResult.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{}}}],["w",{"_index":2545,"title":{},"body":{"license.html":{}}}],["wait",{"_index":779,"title":{},"body":{"interfaces/CombinedObs.html":{},"miscellaneous/variables.html":{}}}],["waive",{"_index":2150,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":2521,"title":{},"body":{"license.html":{}}}],["want",{"_index":1917,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["warranties",{"_index":1590,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["warranty",{"_index":1614,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["way",{"_index":1909,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["ways",{"_index":2208,"title":{},"body":{"license.html":{}}}],["web",{"_index":1082,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["webp",{"_index":1713,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["website",{"_index":1363,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["welcome",{"_index":2546,"title":{},"body":{"license.html":{}}}],["well",{"_index":2029,"title":{},"body":{"license.html":{}}}],["whatever",{"_index":2391,"title":{},"body":{"license.html":{}}}],["whenever",{"_index":1361,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["whether",{"_index":1928,"title":{},"body":{"license.html":{}}}],["who's",{"_index":1160,"title":{},"body":{"interfaces/PasswordResetSuccess.html":{},"injectables/ResetPasswordService.html":{},"interfaces/ShowForm.html":{},"interfaces/VerifiedFailed.html":{}}}],["whole",{"_index":1609,"title":{},"body":{"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["whose",{"_index":2248,"title":{},"body":{"license.html":{}}}],["widely",{"_index":2063,"title":{},"body":{"license.html":{}}}],["window",{"_index":2078,"title":{},"body":{"license.html":{}}}],["wipo",{"_index":2141,"title":{},"body":{"license.html":{}}}],["wish",{"_index":908,"title":{},"body":{"components/DeleteAccountComponent.html":{},"license.html":{}}}],["withcomponentinputbinding",{"_index":2651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":1468,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"license.html":{}}}],["withinmemoryscrolling",{"_index":2652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":348,"title":{},"body":{"interfaces/ApplyResult.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/RecoverEmailResults.html":{},"injectables/RecoverEmailService.html":{},"components/TermsAndConditionsComponent.html":{},"license.html":{}}}],["work",{"_index":1234,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{},"index.html":{},"license.html":{}}}],["work's",{"_index":2087,"title":{},"body":{"license.html":{}}}],["worker",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["worker.js",{"_index":2638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["working",{"_index":2064,"title":{},"body":{"license.html":{}}}],["works",{"_index":77,"title":{},"body":{"interfaces/ActionCodeState.html":{},"components/ActionsComponent.html":{},"components/PhotoManagerComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["worldwide",{"_index":2422,"title":{},"body":{"license.html":{}}}],["writablesignal",{"_index":564,"title":{},"body":{"components/ChangeEmailComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/DeleteAccountComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/ViewModel.html":{}}}],["writing",{"_index":2488,"title":{},"body":{"license.html":{}}}],["written",{"_index":442,"title":{},"body":{"components/AuthErrorMessagesComponent.html":{},"license.html":{}}}],["wrong",{"_index":1279,"title":{},"body":{"interfaces/Photo.html":{},"interfaces/Progress.html":{},"injectables/UserPhotosService.html":{}}}],["years",{"_index":2218,"title":{},"body":{"license.html":{}}}],["yourself",{"_index":2435,"title":{},"body":{"license.html":{}}}],["yyyy",{"_index":927,"title":{},"body":{"components/FooterComponent.html":{}}}],["zone.js",{"_index":1834,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionCodeState.html":{"url":"interfaces/ActionCodeState.html","title":"interface - ActionCodeState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionCodeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/actions/actions.component.ts\n        \n\n\n            \n                Description\n            \n            \n                https://firebase.google.com/docs/reference/js/auth.actioncodeurl\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            continueUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lang\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            oobCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        continueUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        continueUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lang:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oobCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        oobCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  effect,\n  inject,\n  input,\n} from '@angular/core';\nimport type { InputSignal, Signal } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\n/**\n * https://firebase.google.com/docs/reference/js/auth.actioncodeurl\n */\nexport interface ActionCodeState {\n  continueUrl?: string;\n  lang?: string;\n  mode: string;\n  oobCode: string;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ SpinnerComponent ],\n  selector: 'app-actions',\n  template: '',\n})\nexport class ActionsComponent {\n  public readonly continueUrl: InputSignal = input();\n  public readonly lang: InputSignal = input();\n  public readonly mode: InputSignal = input();\n  public readonly oobCode: InputSignal = input();\n\n  private readonly _$actionState: Signal>;\n  private readonly _modePaths: Record;\n  private readonly _router: Router;\n\n  constructor() {\n    this._$actionState = computed((): Partial => ({\n      continueUrl: this.continueUrl(),\n      lang: this.lang(),\n      mode: this.mode(),\n      oobCode: this.oobCode(),\n    }));\n    this._modePaths = {\n      recoverEmail: '/recover-email',\n      resetPassword: '/reset-password',\n      verifyAndChangeEmail: '/verify-email',\n      verifyEmail: '/verify-email',\n    };\n    this._router = inject(Router);\n\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises -- This works, for now, but perhaps not in the future!\n    effect(async (): Promise => {\n      const state = this._$actionState();\n\n      if (state.continueUrl) {\n        const url = new URL(state.continueUrl);\n        state.continueUrl = `${url.pathname}${url.search}${url.hash}`;\n      }\n\n      if (state.mode && state.oobCode) {\n        const path = this._modePaths[state.mode];\n\n        if (path) {\n          // If this promise is not awaited then test cases fail :-(\n          await this._router.navigateByUrl(path, { replaceUrl: true, state });\n        } else {\n          console.error(`Unknown mode '${state.mode}'`);\n        }\n      } else {\n        if (!state.mode) {\n          console.error('Missing ActionCodeSettings#mode');\n        }\n        if (!state.oobCode) {\n          console.error('Missing ActionCodeSettings#oobCode');\n        }\n      }\n\n      // Something about this action is invalid.\n      // Navigate to root to allow default redirectTo Route to decide initial destination.\n      await this._router.navigateByUrl('/', { replaceUrl: true });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionsComponent.html":{"url":"components/ActionsComponent.html","title":"component - ActionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/actions/actions.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-actions\n            \n\n\n            \n                imports\n                \n                                SpinnerComponent\n                \n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _$actionState\n                            \n                            \n                                    Private\n                                    Readonly\n                                _modePaths\n                            \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Public\n                                    Readonly\n                                continueUrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                lang\n                            \n                            \n                                    Public\n                                    Readonly\n                                mode\n                            \n                            \n                                    Public\n                                    Readonly\n                                oobCode\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                continueUrl\n                            \n                            \n                                lang\n                            \n                            \n                                mode\n                            \n                            \n                                oobCode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/actions/actions.component.ts:42\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        continueUrl\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/identity/actions/actions.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lang\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/identity/actions/actions.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/identity/actions/actions.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        oobCode\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/identity/actions/actions.component.ts:38\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _$actionState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Signal>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/actions/actions.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _modePaths\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/actions/actions.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/actions/actions.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        continueUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/actions/actions.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/actions/actions.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/actions/actions.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        oobCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/actions/actions.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  effect,\n  inject,\n  input,\n} from '@angular/core';\nimport type { InputSignal, Signal } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\n/**\n * https://firebase.google.com/docs/reference/js/auth.actioncodeurl\n */\nexport interface ActionCodeState {\n  continueUrl?: string;\n  lang?: string;\n  mode: string;\n  oobCode: string;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ SpinnerComponent ],\n  selector: 'app-actions',\n  template: '',\n})\nexport class ActionsComponent {\n  public readonly continueUrl: InputSignal = input();\n  public readonly lang: InputSignal = input();\n  public readonly mode: InputSignal = input();\n  public readonly oobCode: InputSignal = input();\n\n  private readonly _$actionState: Signal>;\n  private readonly _modePaths: Record;\n  private readonly _router: Router;\n\n  constructor() {\n    this._$actionState = computed((): Partial => ({\n      continueUrl: this.continueUrl(),\n      lang: this.lang(),\n      mode: this.mode(),\n      oobCode: this.oobCode(),\n    }));\n    this._modePaths = {\n      recoverEmail: '/recover-email',\n      resetPassword: '/reset-password',\n      verifyAndChangeEmail: '/verify-email',\n      verifyEmail: '/verify-email',\n    };\n    this._router = inject(Router);\n\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises -- This works, for now, but perhaps not in the future!\n    effect(async (): Promise => {\n      const state = this._$actionState();\n\n      if (state.continueUrl) {\n        const url = new URL(state.continueUrl);\n        state.continueUrl = `${url.pathname}${url.search}${url.hash}`;\n      }\n\n      if (state.mode && state.oobCode) {\n        const path = this._modePaths[state.mode];\n\n        if (path) {\n          // If this promise is not awaited then test cases fail :-(\n          await this._router.navigateByUrl(path, { replaceUrl: true, state });\n        } else {\n          console.error(`Unknown mode '${state.mode}'`);\n        }\n      } else {\n        if (!state.mode) {\n          console.error('Missing ActionCodeSettings#mode');\n        }\n        if (!state.oobCode) {\n          console.error('Missing ActionCodeSettings#oobCode');\n        }\n      }\n\n      // Something about this action is invalid.\n      // Navigate to root to allow default redirectTo Route to decide initial destination.\n      await this._router.navigateByUrl('/', { replaceUrl: true });\n    });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ RouterOutlet ],\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppTitleStrategyService.html":{"url":"injectables/AppTitleStrategyService.html","title":"injectable - AppTitleStrategyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppTitleStrategyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/app-title-strategy.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TitleStrategy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _baseTitle\n                            \n                            \n                                    Private\n                                    Readonly\n                                _title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                updateTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/app-title-strategy.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateTitle\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTitle(snapshot: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/app-title-strategy.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                snapshot\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _baseTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/app-title-strategy.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Title\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/app-title-strategy.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { TitleStrategy } from '@angular/router';\nimport type { RouterStateSnapshot } from '@angular/router';\n\n@Injectable({ providedIn: 'root' })\nexport class AppTitleStrategyService extends TitleStrategy {\n  private readonly _baseTitle: string; // Title tag content from index.html\n  private readonly _title: Title;\n\n  constructor() {\n    super();\n    this._title = inject(Title);\n    // Tested in `ng serve` and `ng build` that this gets the  from index.html\n    this._baseTitle = this._title.getTitle();\n  }\n\n  public updateTitle(snapshot: RouterStateSnapshot): void {\n    const pageTitle = this.buildTitle(snapshot);\n    if (pageTitle == undefined) {\n      this._title.setTitle(this._baseTitle);\n    } else {\n      this._title.setTitle(`${pageTitle} | ${this._baseTitle}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplyResult.html":{"url":"interfaces/ApplyResult.html","title":"interface - ApplyResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApplyResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/recover-email/recover-email.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            restoredEmail\n                                        \n                                \n                                \n                                        \n                                            successful\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        restoredEmail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        restoredEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        successful\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        successful:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport {\n  applyActionCode,\n  Auth,\n  checkActionCode,\n  sendPasswordResetEmail,\n} from '@angular/fire/auth';\nimport {\n  catchError,\n  delayWhen,\n  of,\n  switchMap,\n  timer,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { getErrorCode } from '../error-code';\n\nexport interface RecoverEmailResults extends ApplyResult {\n  errorCode?: string;\n  passwordResetSent: boolean;\n}\n\ninterface ApplyResult {\n  restoredEmail?: string;\n  successful: boolean;\n}\n\nexport const SEND_EMAIL_DELAY = 500; // milliseconds\n\n@Injectable({ providedIn: 'root' })\nexport class RecoverEmailService {\n  private readonly _auth: Auth = inject(Auth);\n\n  /**\n   * Creates and Observable that when subscribed to will apply the action code to restore the user's\n   * original email address. And if present will automatically send a password reset email to the\n   * restored address in case of account compromise.\n   *\n   * @param delay - Not for production use! Only for use with testing.\n   */\n  public recoverEmail$(code: string | undefined, delay: number = SEND_EMAIL_DELAY): Observable {\n    return of(code).pipe(\n      switchMap(async (oobCode: string | undefined): Promise => this._doActionCode(oobCode)),\n      // Unfortunately it can take time for Firebase to recognize that the email has been restored\n      // so we can send the password reset email.\n      delayWhen((result: ApplyResult): Observable => timer(result.restoredEmail ? delay : 0)),\n      // Give the user the option to reset their password in case the account was compromised:\n      switchMap(async (result: ApplyResult): Promise => {\n        const passwordResetSent = await this._sendPasswordResetEmail(result.restoredEmail);\n        return { ...result, passwordResetSent };\n      }),\n      catchError((problem: unknown): Observable => {\n        console.error('RecoverEmailComponent', problem);\n\n        return of({\n          errorCode: getErrorCode(problem),\n          passwordResetSent: false,\n          successful: false,\n        });\n      }),\n    );\n  }\n\n  /**\n   * Check that the oobCode is still valid, and then apply it.\n   * @returns the restored email address and a success flag.\n   * @throws Error if the oobCode is falsy or the firebase methods fail.\n   */\n  private async _doActionCode(oobCode: string | undefined): Promise {\n    if (oobCode) {\n      const info = await checkActionCode(this._auth, oobCode);\n      const { email: restoredEmail } = info.data;\n\n      await applyActionCode(this._auth, oobCode);\n      // Account email reverted to restoredEmail\n\n      // Problem with being pedantic with all types except undefined vs null is that sometimes you\n      // need to get rid of null from the type.\n      return { restoredEmail: restoredEmail ?? undefined, successful: true };\n    }\n\n    throw new Error('oobCode not found');\n  }\n\n  /**\n   * Firebase types indicate that the email may not always be returned (Accounts without email addresses?)\n   * If the email isn't truthy then just skip the reset.\n   * If the send email fails for some reason, just return false.\n   */\n  private async _sendPasswordResetEmail(restoredEmail: string | undefined): Promise {\n    if (restoredEmail) {\n      try {\n        await sendPasswordResetEmail(this._auth, restoredEmail);\n        return true;\n      } catch (err: unknown) {\n        console.error('RecoverEmailComponent#_sendPasswordResetEmail', err);\n      }\n    }\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthErrorMessagesComponent.html":{"url":"components/AuthErrorMessagesComponent.html","title":"component - AuthErrorMessagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthErrorMessagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/auth-error-messages/auth-error-messages.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-error-messages\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./auth-error-messages.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                $code\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                $code\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        $code\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/identity/auth-error-messages/auth-error-messages.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $code\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/auth-error-messages/auth-error-messages.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, input } from '@angular/core';\nimport type { InputSignal } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-auth-error-messages',\n  templateUrl: './auth-error-messages.component.html',\n})\nexport class AuthErrorMessagesComponent {\n  // Linter doesn't like aliasing inputs, but also wants Signals called in templates to be prefixed with $\n  public readonly $code: InputSignal = input.required();\n}\n\n    \n\n    \n        @switch ($code()) {\n  @case ('auth/code-expired') {\n    \n      The SMS code has expired. Please re-send the verification code to try again.\n    \n  }\n\n  @case ('auth/cors-unsupported') {\n    \n      This browser is not supported.\n    \n  }\n\n  @case ('auth/credential-already-in-use') {\n    \n      This credential is already associated with a different user account.\n    \n  }\n\n  @case ('auth/requires-recent-login') {\n    \n      This operation is sensitive and requires recent authentication. Log in again before retrying this request.\n    \n  }\n\n  @case ('auth/email-change-needs-verification') {\n    \n      Multi-factor users must always have a verified email.\n    \n  }\n\n  @case ('auth/email-already-in-use') {\n    \n      The email address is already in use by another account.\n    \n  }\n\n  @case ('auth/expired-action-code') {\n    \n      The action code has expired.\n    \n  }\n\n  @case ('auth/cancelled-popup-request') {\n    \n      This operation has been cancelled due to another conflicting popup being opened.\n    \n  }\n\n  @case ('auth/invalid-verification-code') {\n    \n      The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure to\n      use the verification code provided by the user.\n    \n  }\n\n  @case ('auth/invalid-continue-uri') {\n    \n      The continue URL provided in the request is invalid.\n    \n  }\n\n  @case ('auth/invalid-email') {\n    \n      The email address is badly formatted.\n    \n  }\n\n  @case ('auth/invalid-credential') {\n    \n      The information supplied is incorrect. Please try again.\n    \n  }\n\n  @case ('auth/password-does-not-meet-requirements') {\n    \n      The password does not meet the requirements.\n    \n  }\n\n  @case ('auth/invalid-action-code') {\n    \n      The action code is invalid. This can happen if the code is malformed, expired, or has already been used.\n    \n  }\n\n  @case ('auth/wrong-password') {\n    \n      The password is invalid or the user does not have a password.\n    \n  }\n\n  @case ('auth/invalid-phone-number') {\n    \n      The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format.\n      E.164 phone numbers are written in the format [+][country code][subscriber number including area code].\n    \n  }\n\n  @case ('auth/invalid-recipient-email') {\n    \n      The email corresponding to this action failed to send as the provided recipient email address is invalid.\n    \n  }\n\n  @case ('auth/missing-phone-number') {\n    \n      To send verification codes, provide a phone number for the recipient.\n    \n  }\n  @case ('auth/multi-factor-auth-required') {\n    \n      Proof of ownership of a second factor is required to complete sign-in.\n    \n  }\n\n  @case ('auth/account-exists-with-different-credential') {\n    \n      An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this\n      email address.\n    \n  }\n\n  @case ('auth/network-request-failed') {\n    \n      A network error (such as timeout, interrupted connection or unreachable host) has occurred.\n    \n  }\n\n  @case ('auth/popup-blocked') {\n    \n      Unable to establish a connection with the popup. It may have been blocked by the browser.\n    \n  }\n\n  @case ('auth/popup-closed-by-user') {\n    \n      The popup has been closed by your before finalizing the operation.\n    \n  }\n\n  @case ('auth/quota-exceeded') {\n    \n      The project’s quota for this operation has been exceeded.\n    \n  }\n\n  @case ('auth/redirect-cancelled-by-user') {\n    \n      The redirect operation has been cancelled by you before finalizing.\n    \n  }\n\n  @case ('auth/redirect-operation-pending') {\n    \n      A redirect sign-in operation is already pending.\n    \n  }\n\n  @case ('auth/timeout') {\n    \n      The operation has timed out.\n    \n  }\n\n  @case ('auth/user-token-expired') {\n    \n      Your credentials is no longer valid. You must sign in again.\n    \n  }\n\n  @case ('auth/too-many-requests') {\n    \n      We have blocked all requests from this device due to unusual activity. Try again later.\n    \n  }\n\n  @case ('auth/unverified-email') {\n    \n      The operation requires a verified email.\n    \n  }\n\n  @case ('auth/user-cancelled') {\n    \n      You did not grant your application the permissions it requested.\n    \n  }\n\n  @case ('auth/user-not-found') {\n    \n      There is no user record corresponding to this identifier. The user may have been deleted.\n    \n  }\n\n  @case ('auth/user-disabled') {\n    \n      The user account has been disabled by an administrator.\n    \n  }\n\n  @case ('auth/user-mismatch') {\n    \n      The supplied credentials do not correspond to the previously signed in user.\n    \n  }\n\n  @case ('auth/weak-password') {\n    \n      The password must be 12 characters long or more.\n    \n  }\n\n  @case ('auth/web-storage-unsupported') {\n    \n      This browser is not supported or 3rd party cookies and data may be disabled.\n    \n  }\n\n  @default {\n    \n      A problem occurred. Please refresh and try again.\n    \n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@switch ($code()) {  @case (\\'auth/code-expired\\') {          The SMS code has expired. Please re-send the verification code to try again.      }  @case (\\'auth/cors-unsupported\\') {          This browser is not supported.      }  @case (\\'auth/credential-already-in-use\\') {          This credential is already associated with a different user account.      }  @case (\\'auth/requires-recent-login\\') {          This operation is sensitive and requires recent authentication. Log in again before retrying this request.      }  @case (\\'auth/email-change-needs-verification\\') {          Multi-factor users must always have a verified email.      }  @case (\\'auth/email-already-in-use\\') {          The email address is already in use by another account.      }  @case (\\'auth/expired-action-code\\') {          The action code has expired.      }  @case (\\'auth/cancelled-popup-request\\') {          This operation has been cancelled due to another conflicting popup being opened.      }  @case (\\'auth/invalid-verification-code\\') {          The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure to      use the verification code provided by the user.      }  @case (\\'auth/invalid-continue-uri\\') {          The continue URL provided in the request is invalid.      }  @case (\\'auth/invalid-email\\') {          The email address is badly formatted.      }  @case (\\'auth/invalid-credential\\') {          The information supplied is incorrect. Please try again.      }  @case (\\'auth/password-does-not-meet-requirements\\') {          The password does not meet the requirements.      }  @case (\\'auth/invalid-action-code\\') {          The action code is invalid. This can happen if the code is malformed, expired, or has already been used.      }  @case (\\'auth/wrong-password\\') {          The password is invalid or the user does not have a password.      }  @case (\\'auth/invalid-phone-number\\') {          The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format.      E.164 phone numbers are written in the format [+][country code][subscriber number including area code].      }  @case (\\'auth/invalid-recipient-email\\') {          The email corresponding to this action failed to send as the provided recipient email address is invalid.      }  @case (\\'auth/missing-phone-number\\') {          To send verification codes, provide a phone number for the recipient.      }  @case (\\'auth/multi-factor-auth-required\\') {          Proof of ownership of a second factor is required to complete sign-in.      }  @case (\\'auth/account-exists-with-different-credential\\') {          An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this      email address.      }  @case (\\'auth/network-request-failed\\') {          A network error (such as timeout, interrupted connection or unreachable host) has occurred.      }  @case (\\'auth/popup-blocked\\') {          Unable to establish a connection with the popup. It may have been blocked by the browser.      }  @case (\\'auth/popup-closed-by-user\\') {          The popup has been closed by your before finalizing the operation.      }  @case (\\'auth/quota-exceeded\\') {          The project’s quota for this operation has been exceeded.      }  @case (\\'auth/redirect-cancelled-by-user\\') {          The redirect operation has been cancelled by you before finalizing.      }  @case (\\'auth/redirect-operation-pending\\') {          A redirect sign-in operation is already pending.      }  @case (\\'auth/timeout\\') {          The operation has timed out.      }  @case (\\'auth/user-token-expired\\') {          Your credentials is no longer valid. You must sign in again.      }  @case (\\'auth/too-many-requests\\') {          We have blocked all requests from this device due to unusual activity. Try again later.      }  @case (\\'auth/unverified-email\\') {          The operation requires a verified email.      }  @case (\\'auth/user-cancelled\\') {          You did not grant your application the permissions it requested.      }  @case (\\'auth/user-not-found\\') {          There is no user record corresponding to this identifier. The user may have been deleted.      }  @case (\\'auth/user-disabled\\') {          The user account has been disabled by an administrator.      }  @case (\\'auth/user-mismatch\\') {          The supplied credentials do not correspond to the previously signed in user.      }  @case (\\'auth/weak-password\\') {          The password must be 12 characters long or more.      }  @case (\\'auth/web-storage-unsupported\\') {          This browser is not supported or 3rd party cookies and data may be disabled.      }  @default {          A problem occurred. Please refresh and try again.      }}'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthErrorMessagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CentralLayoutComponent.html":{"url":"components/CentralLayoutComponent.html","title":"component - CentralLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CentralLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/central/central.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-central-layout\n            \n\n\n            \n                imports\n                \n                                FooterComponent\n                            NgOptimizedImage\n                            RouterLink\n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./central.component.html\n            \n\n\n\n            \n                styleUrl\n                ./central.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { NgOptimizedImage } from '@angular/common';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterLink, RouterOutlet } from '@angular/router';\n\nimport { FooterComponent } from '../footer/footer.component';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    FooterComponent,\n    NgOptimizedImage,\n    RouterLink,\n    RouterOutlet,\n  ],\n  selector: 'app-central-layout',\n  styleUrl: './central.component.scss',\n  templateUrl: './central.component.html',\n})\nexport class CentralLayoutComponent {}\n\n    \n\n    \n        \n  \n    \n      \n      Brainfry Quiz\n    \n  \n  \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Brainfry Quiz              '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CentralLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeEmailComponent.html":{"url":"components/ChangeEmailComponent.html","title":"component - ChangeEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangeEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/change-email/change-email.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-email\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                            ReactiveFormsModule\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./change-email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                $email1CntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $email1CntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $email2CntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $email2CntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $errorCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                $formEmailsInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $passwordCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $passwordCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $verificationStatus\n                            \n                            \n                                    Public\n                                    Readonly\n                                changeEmailForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                email1Cntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                email2Cntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                maxPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                minPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                passwordCntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/change-email/change-email.component.ts:58\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/change-email/change-email.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $email1CntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $email1CntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $email2CntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $email2CntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $formEmailsInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $passwordCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $passwordCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $verificationStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        changeEmailForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChangeEmailFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email1Cntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email2Cntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        maxPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.maxLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        minPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.minLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        passwordCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MaybeUser$\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-email/change-email.component.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { Signal, WritableSignal } from '@angular/core';\nimport { EmailAuthProvider, reauthenticateWithCredential, verifyBeforeUpdateEmail } from '@angular/fire/auth';\nimport type { User } from '@angular/fire/auth';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport type { FormControl, ValidationErrors } from '@angular/forms';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser$ } from '@app/core/user.token';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\nimport { createEmailControl, createPasswordControl, PASSWORDS } from '../identity-forms';\nimport { confirmMatch, confirmMatchFormErrors } from '../validators/confirm-match';\n\ntype ChangeEmailFormGroup = FormGroup;\n  email2: FormControl;\n  password: FormControl;\n}>;\n\ntype VerifyStatuses = 'sending' | 'sent' | 'unsent';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    ReactiveFormsModule,\n    SpinnerComponent,\n  ],\n  selector: 'app-change-email',\n  templateUrl: './change-email.component.html',\n})\nexport class ChangeEmailComponent {\n  public readonly $email1CntrlErrors: Signal;\n  public readonly $email1CntrlInvalid: Signal;\n  public readonly $email2CntrlErrors: Signal;\n  public readonly $email2CntrlInvalid: Signal;\n  public readonly $errorCode: WritableSignal;\n  public readonly $formEmailsInvalid: Signal;\n  public readonly $passwordCntrlErrors: Signal;\n  public readonly $passwordCntrlInvalid: Signal;\n  public readonly $verificationStatus: WritableSignal;\n  public readonly changeEmailForm: ChangeEmailFormGroup;\n  public readonly email1Cntrl: FormControl;\n  public readonly email2Cntrl: FormControl;\n  public readonly maxPasswordLength: number = PASSWORDS.maxLength;\n  public readonly minPasswordLength: number = PASSWORDS.minLength;\n  public readonly passwordCntrl: FormControl;\n  public readonly user$: MaybeUser$;\n\n  constructor() {\n    ({ $errors: this.$email1CntrlErrors, $invalid: this.$email1CntrlInvalid, control: this.email1Cntrl } = createEmailControl());\n    ({ $errors: this.$email2CntrlErrors, $invalid: this.$email2CntrlInvalid, control: this.email2Cntrl } = createEmailControl());\n    ({ $errors: this.$passwordCntrlErrors, $invalid: this.$passwordCntrlInvalid, control: this.passwordCntrl } = createPasswordControl());\n\n    this.changeEmailForm = new FormGroup(\n      {\n        email1: this.email1Cntrl,\n        email2: this.email2Cntrl,\n        password: this.passwordCntrl,\n      },\n      confirmMatch('email1', 'email2'),\n    );\n\n    this.$formEmailsInvalid = confirmMatchFormErrors(this.changeEmailForm, this.email1Cntrl, this.email2Cntrl);\n\n    this.$errorCode = signal('');\n    this.$verificationStatus = signal('unsent');\n\n    // Not handling non-logged in users because the Route guards should.\n    this.user$ = inject(USER$);\n  }\n\n  public async onSubmit(user: User): Promise {\n    const { email1, password } = this.changeEmailForm.value;\n\n    // Validators prevent email1 or password being falsey, but TypeScript doesn't know that.\n    // Additionally, all users are expected to have an email address.\n    if (this.changeEmailForm.invalid || !email1 || !password || !user.email) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this.$errorCode.set(''); // Clear out any existing errors\n    this.$verificationStatus.set('sending');\n\n    try {\n      const emailCreds = EmailAuthProvider.credential(user.email, password);\n      const credentials = await reauthenticateWithCredential(user, emailCreds);\n      await verifyBeforeUpdateEmail(credentials.user, email1);\n      this.$verificationStatus.set('sent');\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n      this.$verificationStatus.set('unsent');\n    }\n  }\n}\n\n    \n\n    \n        @let status = $verificationStatus();\n@if (status !== 'sending') {\n  \n    Change your email\n    @if (status === 'unsent') {\n      @if (user$ | async; as user) {\n        \n          To confirm that your new email address is valid we will send an email to your new address with a verification link.\n        \n        \n          @if (user.email) {\n            \n              Current email:\n              \n            \n          }\n\n          \n            New email:\n            \n            \n              @if ($email1CntrlErrors(); as errors) {\n                \n                  @if (errors['required']) {\n                    \n                      Please enter your new email address.\n                    \n                  }\n                  @if (errors['email']) {\n                    \n                      Please enter a valid email address.\n                    \n                  }\n                \n              }\n            \n          \n\n          \n            Confirm email:\n            \n            \n              @if ($email2CntrlErrors(); as errors) {\n                \n                  @if (errors['required']) {\n                    \n                      Please re-enter your new email address.\n                    \n                  }\n                  @if (errors['email']) {\n                    \n                      Please enter a valid email address.\n                    \n                  }\n                \n              }\n            \n          \n\n          \n            @if ($formEmailsInvalid()) {\n              \n                Emails must match.\n              \n            }\n          \n\n          \n            Password:\n            \n            \n              @if ($passwordCntrlErrors(); as errors) {\n                \n                  @if (errors['required']) {\n                    \n                      Please enter your password.\n                    \n                  }\n                  @if (errors['minlength']) {\n                    \n                      Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase\n                      letters, numbers, and symbols.\n                    \n                  }\n                  @if (errors['maxlength']) {\n                    \n                      Your password may not be longer than {{ maxPasswordLength }} characters.\n                    \n                  }\n                \n              }\n            \n          \n\n          \n            @if ($formEmailsInvalid()) {\n              \n                Emails must match.\n              \n            }\n          \n\n          @if ($errorCode(); as errorCode) {\n            \n              \n            \n          }\n\n          \n            \n              Change email\n            \n          \n        \n      } @else {\n        \n      }\n    } @else {\n      \n        To complete your email address change click the link in the email sent to\n        {{ email1Cntrl.value }}.\n        Please check your email inbox and spam folder in a few minutes.\n      \n    }\n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let status = $verificationStatus();@if (status !== \\'sending\\') {      Change your email    @if (status === \\'unsent\\') {      @if (user$ | async; as user) {                  To confirm that your new email address is valid we will send an email to your new address with a verification link.                          @if (user.email) {                          Current email:                                    }                      New email:                                      @if ($email1CntrlErrors(); as errors) {                                  @if (errors[\\'required\\']) {                                          Please enter your new email address.                                      }                  @if (errors[\\'email\\']) {                                          Please enter a valid email address.                                      }                              }                                            Confirm email:                                      @if ($email2CntrlErrors(); as errors) {                                  @if (errors[\\'required\\']) {                                          Please re-enter your new email address.                                      }                  @if (errors[\\'email\\']) {                                          Please enter a valid email address.                                      }                              }                                            @if ($formEmailsInvalid()) {                              Emails must match.                          }                                Password:                                      @if ($passwordCntrlErrors(); as errors) {                                  @if (errors[\\'required\\']) {                                          Please enter your password.                                      }                  @if (errors[\\'minlength\\']) {                                          Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase                      letters, numbers, and symbols.                                      }                  @if (errors[\\'maxlength\\']) {                                          Your password may not be longer than {{ maxPasswordLength }} characters.                                      }                              }                                            @if ($formEmailsInvalid()) {                              Emails must match.                          }                    @if ($errorCode(); as errorCode) {                                                }                                    Change email                                    } @else {              }    } @else {              To complete your email address change click the link in the email sent to        {{ email1Cntrl.value }}.        Please check your email inbox and spam folder in a few minutes.          }  } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangeEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePasswordComponent.html":{"url":"components/ChangePasswordComponent.html","title":"component - ChangePasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangePasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/change-password/change-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-password\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                            ReactiveFormsModule\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./change-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                $currentPwCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $currentPwCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $errorCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                $formPasswordsInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password1CntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password1CntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password2CntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password2CntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $showForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                changePasswordForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                currentPwCntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                maxPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                minPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                password1Cntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                password2Cntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/change-password/change-password.component.ts:56\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/change-password/change-password.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $currentPwCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $currentPwCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $formPasswordsInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password1CntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password1CntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password2CntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password2CntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $showForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        changePasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChangePasswordFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        currentPwCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        maxPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.maxLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        minPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.minLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password1Cntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password2Cntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MaybeUser$\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/change-password/change-password.component.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { Signal, WritableSignal } from '@angular/core';\nimport { EmailAuthProvider, reauthenticateWithCredential, updatePassword } from '@angular/fire/auth';\nimport type { User } from '@angular/fire/auth';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport type { FormControl, ValidationErrors } from '@angular/forms';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser$ } from '@app/core/user.token';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\nimport { createPasswordControl, PASSWORDS } from '../identity-forms';\nimport { confirmMatch, confirmMatchFormErrors } from '../validators/confirm-match';\n\ntype ChangePasswordFormGroup = FormGroup;\n  password1: FormControl;\n  password2: FormControl;\n}>;\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    ReactiveFormsModule,\n    SpinnerComponent,\n  ],\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n})\nexport class ChangePasswordComponent {\n  public readonly $currentPwCntrlErrors: Signal;\n  public readonly $currentPwCntrlInvalid: Signal;\n  public readonly $errorCode: WritableSignal;\n  public readonly $formPasswordsInvalid: Signal;\n  public readonly $password1CntrlErrors: Signal;\n  public readonly $password1CntrlInvalid: Signal;\n  public readonly $password2CntrlErrors: Signal;\n  public readonly $password2CntrlInvalid: Signal;\n  public readonly $showForm: WritableSignal;\n  public readonly changePasswordForm: ChangePasswordFormGroup;\n  public readonly currentPwCntrl: FormControl;\n  public readonly maxPasswordLength: number = PASSWORDS.maxLength;\n  public readonly minPasswordLength: number = PASSWORDS.minLength;\n  public readonly password1Cntrl: FormControl;\n  public readonly password2Cntrl: FormControl;\n  public readonly user$: MaybeUser$;\n\n  constructor() {\n    ({\n      $errors: this.$currentPwCntrlErrors,\n      $invalid: this.$currentPwCntrlInvalid,\n      control: this.currentPwCntrl,\n    } = createPasswordControl());\n    ({\n      $errors: this.$password1CntrlErrors,\n      $invalid: this.$password1CntrlInvalid,\n      control: this.password1Cntrl,\n    } = createPasswordControl(true));\n    ({\n      $errors: this.$password2CntrlErrors,\n      $invalid: this.$password2CntrlInvalid,\n      control: this.password2Cntrl,\n    } = createPasswordControl());\n\n    this.changePasswordForm = new FormGroup(\n      {\n        currentPw: this.currentPwCntrl,\n        password1: this.password1Cntrl,\n        password2: this.password2Cntrl,\n      },\n      confirmMatch('password1', 'password2'),\n    );\n\n    this.$formPasswordsInvalid = confirmMatchFormErrors(this.changePasswordForm, this.password1Cntrl, this.password2Cntrl);\n\n    this.$errorCode = signal('');\n    this.$showForm = signal(true);\n\n    // Not handling non-logged in users because the Route guards should.\n    this.user$ = inject(USER$);\n  }\n\n  public async onSubmit(user: User): Promise {\n    const { currentPw, password1 } = this.changePasswordForm.value;\n\n    // Validators prevent email1 or password being falsey, but TypeScript doesn't know that.\n    // Additionally, all users are expected to have an email address.\n    if (this.changePasswordForm.invalid || !currentPw || !password1 || !user.email) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this.$showForm.set(false);\n    this.$errorCode.set(''); // Clear out any existing errors\n\n    try {\n      const emailCreds = EmailAuthProvider.credential(user.email, currentPw);\n      const credentials = await reauthenticateWithCredential(user, emailCreds);\n      await updatePassword(credentials.user, password1);\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n    }\n\n    this.$showForm.set(true);\n  }\n}\n\n    \n\n    \n        @if ($showForm()) {\n  \n    Change your password\n    @if (user$ | async; as user) {\n      \n        \n          \n            Current password:\n          \n          \n          \n            @if ($currentPwCntrlErrors(); as errors) {\n              \n                @if (errors['required']) {\n                  \n                    Please enter your current password.\n                  \n                }\n                @if (errors['minlength']) {\n                  \n                    Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase\n                    letters, numbers, and symbols.\n                  \n                }\n                @if (errors['maxlength']) {\n                  \n                    Your password may not be longer than {{ maxPasswordLength }} characters.\n                  \n                }\n              \n            }\n          \n        \n\n        \n          New password:\n          \n          \n            @if ($password1CntrlErrors(); as errors) {\n              \n                @if (errors['required']) {\n                  \n                    Please enter a new password.\n                  \n                }\n                @if (errors['minlength']) {\n                  \n                    Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase\n                    letters, numbers, and symbols.\n                  \n                }\n                @if (errors['maxlength']) {\n                  \n                    Your password may not be longer than {{ maxPasswordLength }} characters.\n                  \n                }\n                @if (errors['passwordstrength']) {\n                  \n                    Your password is not very strong. Include a combination of upper and lowercase letters, numbers, and symbols.\n                  \n                }\n                @if (errors['firebasevalidator']) {\n                  \n                    Your password needs to include: TODO\n                  \n                }\n              \n            }\n          \n        \n\n        \n          \n            Confirm password:\n          \n          \n          \n            @if ($password2CntrlErrors(); as errors) {\n              \n                @if (errors['required']) {\n                  \n                    Please re-enter your password.\n                  \n                }\n                @if (errors['minlength']) {\n                  \n                    Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase\n                    letters, numbers, and symbols.\n                  \n                }\n                @if (errors['maxlength']) {\n                  \n                    Your password may not be longer than {{ maxPasswordLength }} characters.\n                  \n                }\n              \n            }\n          \n        \n\n        \n          @if ($formPasswordsInvalid()) {\n            \n              Passwords must match.\n            \n          }\n        \n\n        @if ($errorCode(); as errorCode) {\n          \n            \n          \n        }\n\n        \n          \n            Change password\n          \n        \n      \n    }\n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if ($showForm()) {      Change your password    @if (user$ | async; as user) {                                    Current password:                                          @if ($currentPwCntrlErrors(); as errors) {                              @if (errors[\\'required\\']) {                                      Please enter your current password.                                  }                @if (errors[\\'minlength\\']) {                                      Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase                    letters, numbers, and symbols.                                  }                @if (errors[\\'maxlength\\']) {                                      Your password may not be longer than {{ maxPasswordLength }} characters.                                  }                          }                                    New password:                                @if ($password1CntrlErrors(); as errors) {                              @if (errors[\\'required\\']) {                                      Please enter a new password.                                  }                @if (errors[\\'minlength\\']) {                                      Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase                    letters, numbers, and symbols.                                  }                @if (errors[\\'maxlength\\']) {                                      Your password may not be longer than {{ maxPasswordLength }} characters.                                  }                @if (errors[\\'passwordstrength\\']) {                                      Your password is not very strong. Include a combination of upper and lowercase letters, numbers, and symbols.                                  }                @if (errors[\\'firebasevalidator\\']) {                                      Your password needs to include: TODO                                  }                          }                                                Confirm password:                                          @if ($password2CntrlErrors(); as errors) {                              @if (errors[\\'required\\']) {                                      Please re-enter your password.                                  }                @if (errors[\\'minlength\\']) {                                      Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase                    letters, numbers, and symbols.                                  }                @if (errors[\\'maxlength\\']) {                                      Your password may not be longer than {{ maxPasswordLength }} characters.                                  }                          }                                    @if ($formPasswordsInvalid()) {                          Passwords must match.                      }                @if ($errorCode(); as errorCode) {                                        }                              Change password                            }  } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangePasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CombinedObs.html":{"url":"interfaces/CombinedObs.html","title":"interface - CombinedObs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CombinedObs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/control-errors-signal.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dirty\n                                        \n                                \n                                \n                                        \n                                            errors\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dirty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dirty:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     ValidationErrors | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ValidationErrors | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Signal } from '@angular/core';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { PristineChangeEvent } from '@angular/forms';\nimport type {\n  AbstractControl,\n  ControlEvent,\n  FormControlStatus,\n  ValidationErrors,\n} from '@angular/forms';\nimport {\n  combineLatest,\n  debounceTime,\n  filter,\n  map,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { FORMS } from './constants';\n\ninterface CombinedObs {\n  dirty: boolean;\n  errors: ValidationErrors | undefined;\n}\n\nexport const controlErrorsSignal = (control: AbstractControl): Signal => {\n  // Only care about dirty controls for purposes of displaying validation error messages.\n  const controlDirty$: Observable = control.events.pipe(\n    filter((event: ControlEvent): event is PristineChangeEvent => event instanceof PristineChangeEvent),\n    map((event: PristineChangeEvent): boolean => !event.pristine),\n  );\n\n  // When status is INVALID emit control.errors, otherwise undefined\n  const controlStatus$: Observable = control.statusChanges.pipe(\n    // Wait for input to stop before displaying error messages\n    debounceTime(FORMS.inputDebounce),\n    map((status: FormControlStatus): ValidationErrors | undefined => {\n      const { errors } = control;\n      if (status === 'INVALID' && errors) {\n        return errors;\n      }\n      return undefined;\n    }),\n  );\n\n  // Combine the Observables so that ValidationErrors are emitted only when the control is dirty.\n  const controlErrors$: Observable = combineLatest({\n    /* eslint-disable rxjs/finnish */\n    dirty: controlDirty$,\n    errors: controlStatus$,\n  }).pipe(\n    map(({ dirty, errors }: CombinedObs): ValidationErrors | undefined => {\n      if (dirty) {\n        return errors;\n      }\n\n      return undefined;\n    }),\n  );\n\n  return toSignal(controlErrors$);\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmEmailComponent.html":{"url":"components/ConfirmEmailComponent.html","title":"component - ConfirmEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/confirm-email/confirm-email.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-email\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./confirm-email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                $errorCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                $verificationStatus\n                            \n                            \n                                    Public\n                                    Readonly\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                sendConfirmEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/confirm-email/confirm-email.component.ts:33\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendConfirmEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendConfirmEmail(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/confirm-email/confirm-email.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/confirm-email/confirm-email.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $verificationStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/confirm-email/confirm-email.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MaybeUser$\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/confirm-email/confirm-email.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { WritableSignal } from '@angular/core';\nimport { sendEmailVerification } from '@angular/fire/auth';\nimport type { User } from '@angular/fire/auth';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser$ } from '@app/core/user.token';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\n\ntype VerifyStatuses = 'sending' | 'sent' | 'unsent';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ AsyncPipe, AuthErrorMessagesComponent, SpinnerComponent ],\n  selector: 'app-confirm-email',\n  templateUrl: './confirm-email.component.html',\n})\nexport class ConfirmEmailComponent {\n  public readonly $errorCode: WritableSignal;\n  public readonly $verificationStatus: WritableSignal;\n  public readonly user$: MaybeUser$;\n\n  constructor() {\n    this.$errorCode = signal('');\n    this.$verificationStatus = signal('unsent');\n\n    // Not handling non-logged in users because the Route guards should.\n    this.user$ = inject(USER$);\n  }\n\n  public async sendConfirmEmail(user: User): Promise {\n    this.$errorCode.set(''); // Clear out any existing errors\n    this.$verificationStatus.set('sending');\n\n    try {\n      await sendEmailVerification(user);\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n    }\n\n    this.$verificationStatus.set('sent');\n  }\n}\n\n    \n\n    \n        @if (user$ | async; as user) {\n  \n    Confirm email address\n    \n      To confirm that your email address is valid we need to send an email to\n      {{ user.email }}\n      with a verification link.\n    \n    @let status = $verificationStatus();\n    @if (status === 'sent') {\n      @if ($errorCode(); as errorCode) {\n        \n          \n        \n      } @else {\n        \n          A verification email has been sent to\n          {{ user.email }}.\n          Please check your email inbox and spam folder in a few minutes.\n        \n      }\n    }\n    \n      \n        @if (status === 'sent') {\n          \n            Resend verification email\n          \n        } @else {\n          \n            Send verification email\n          \n        }\n      \n    \n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (user$ | async; as user) {      Confirm email address          To confirm that your email address is valid we need to send an email to      {{ user.email }}      with a verification link.        @let status = $verificationStatus();    @if (status === \\'sent\\') {      @if ($errorCode(); as errorCode) {                                } @else {                  A verification email has been sent to          {{ user.email }}.          Please check your email inbox and spam folder in a few minutes.              }    }                  @if (status === \\'sent\\') {                      Resend verification email                  } @else {                      Send verification email                  }            } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ControlProperties.html":{"url":"interfaces/ControlProperties.html","title":"interface - ControlProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ControlProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/control-invalid-signal.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dirty\n                                        \n                                \n                                \n                                        \n                                            invalid\n                                        \n                                \n                                \n                                        \n                                            touched\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dirty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dirty:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invalid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invalid:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touched\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        touched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Signal } from '@angular/core';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { PristineChangeEvent, StatusChangeEvent, TouchedChangeEvent } from '@angular/forms';\nimport type { AbstractControl, ControlEvent } from '@angular/forms';\nimport { distinctUntilChanged, map, scan } from 'rxjs';\nimport type { Observable } from 'rxjs';\n\ninterface ControlProperties {\n  dirty: boolean;\n  invalid: boolean;\n  touched: boolean;\n}\n\nconst isInvalid = (properties: ControlProperties): boolean => {\n  let invalid = true;\n\n  for (const val of Object.values(properties)) {\n    invalid &&= Boolean(val);\n  }\n\n  return invalid;\n};\n\nexport const controlInvalidSignal = (control: AbstractControl): Signal => {\n  const defaultProperties: ControlProperties = {\n    dirty: control.dirty,\n    invalid: control.invalid,\n    touched: control.touched,\n  };\n  const initialValue = isInvalid(defaultProperties);\n\n  const controlEvents$: Observable = control.events.pipe(\n    scan(\n      (current: ControlProperties, event: ControlEvent): ControlProperties => {\n        if (event instanceof PristineChangeEvent) {\n          return { ...current, dirty: !event.pristine };\n        }\n\n        if (event instanceof TouchedChangeEvent) {\n          return { ...current, touched: event.touched };\n        }\n\n        if (event instanceof StatusChangeEvent) {\n          return { ...current, invalid: event.status === 'INVALID' };\n        }\n\n        return current;\n      },\n      defaultProperties,\n    ),\n    map((properties: ControlProperties): boolean => isInvalid(properties)),\n    distinctUntilChanged(),\n  );\n\n  return toSignal(controlEvents$, { initialValue });\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ControlStruct.html":{"url":"interfaces/ControlStruct.html","title":"interface - ControlStruct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ControlStruct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/identity-forms.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            $errors\n                                        \n                                \n                                \n                                        \n                                            $invalid\n                                        \n                                \n                                \n                                        \n                                            control\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $errors:     Signal\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Signal\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $invalid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $invalid:     Signal\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Signal\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        control\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        control:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Signal } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport type { AbstractControl, ValidationErrors } from '@angular/forms';\n\nimport { PASSWORDS } from '@app/shared/constants';\nimport { controlErrorsSignal } from '@app/shared/control-errors-signal.util';\nimport { controlInvalidSignal } from '@app/shared/control-invalid-signal.util';\n\nimport { passwordFirebaseValidator, passwordStrengthValidator } from './validators/passwords';\n\nconst getControlStructure = (control: T): ControlStruct => {\n  const $invalid = controlInvalidSignal(control);\n  const $errors = controlErrorsSignal(control);\n\n  return { $errors, $invalid, control };\n};\n\nexport { PASSWORDS };\n\nexport interface ControlStruct {\n  $errors: Signal;\n  $invalid: Signal;\n  control: T;\n}\n\nexport const createEmailControl = (): ControlStruct => {\n  // eslint-disable-next-line unicorn/no-null -- DOM forms use null\n  const control = new FormControl(null, [ Validators.required, Validators.email ]);\n  return getControlStructure(control);\n};\n\n/**\n * @param isNewPassword - Adds extra validators to control when being used to create a new password.\n *                      Note: this should only be used on the first password field, not the confirm\n *                      field.\n */\nexport const createPasswordControl = (isNewPassword: boolean = false): ControlStruct => {\n  const control = new FormControl(\n    null, // eslint-disable-line unicorn/no-null -- DOM forms use null\n    [\n      Validators.required,\n      Validators.minLength(PASSWORDS.minLength),\n      Validators.maxLength(PASSWORDS.maxLength),\n    ],\n  );\n\n  if (isNewPassword) {\n    control.addValidators(passwordStrengthValidator);\n    control.addAsyncValidators(passwordFirebaseValidator());\n  }\n\n  return getControlStructure(control);\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dashboard.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                name$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard.component.ts:18\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { map } from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser } from '@app/core/user.token';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ AsyncPipe, SpinnerComponent ],\n  selector: 'app-dashboard',\n  styleUrl: './dashboard.component.scss',\n  templateUrl: './dashboard.component.html',\n})\nexport class DashboardComponent {\n  public readonly name$: Observable;\n\n  constructor() {\n    const user$ = inject(USER$);\n\n    this.name$ = user$.pipe(\n      map((maybeUser: MaybeUser): string => maybeUser?.displayName ?? 'You'),\n    );\n  }\n}\n\n    \n\n    \n        @if (name$ | async; as name) {\n  Hello {{ name }}!\n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (name$ | async; as name) {  Hello {{ name }}!} @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeleteAccountComponent.html":{"url":"components/DeleteAccountComponent.html","title":"component - DeleteAccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeleteAccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/delete-account/delete-account.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-delete-account\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                            ReactiveFormsModule\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./delete-account.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _$confirmDialog\n                            \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Public\n                                    Readonly\n                                $errorCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                $passwordCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $passwordCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $showForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                deleteAccountForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                maxPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                minPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                passwordCntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeDialog\n                            \n                            \n                                    Public\n                                    Async\n                                deleteAcount\n                            \n                            \n                                    Public\n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:53\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        closeDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/delete-account/delete-account.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteAcount\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAcount(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/delete-account/delete-account.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    openDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/delete-account/delete-account.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _$confirmDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Signal\n\n                    \n                \n                \n                    \n                        Default value : viewChild.required('confirmDialog')\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $passwordCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $passwordCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $showForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        deleteAccountForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeleteAccountFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        maxPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.maxLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        minPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.minLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        passwordCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MaybeUser$\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/delete-account/delete-account.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n  viewChild,\n} from '@angular/core';\nimport type { ElementRef, Signal, WritableSignal } from '@angular/core';\nimport { deleteUser, EmailAuthProvider, reauthenticateWithCredential } from '@angular/fire/auth';\nimport type { User } from '@angular/fire/auth';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport type { FormControl, ValidationErrors } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser$ } from '@app/core/user.token';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\nimport { createPasswordControl, PASSWORDS } from '../identity-forms';\n\ntype DeleteAccountFormGroup = FormGroup;\n}>;\n\ntype DialogRef = ElementRef;\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    ReactiveFormsModule,\n    SpinnerComponent,\n  ],\n  selector: 'app-delete-account',\n  templateUrl: './delete-account.component.html',\n})\nexport class DeleteAccountComponent {\n  public readonly $errorCode: WritableSignal;\n  public readonly $passwordCntrlErrors: Signal;\n  public readonly $passwordCntrlInvalid: Signal;\n  public readonly $showForm: WritableSignal;\n  public readonly deleteAccountForm: DeleteAccountFormGroup;\n  public readonly maxPasswordLength: number = PASSWORDS.maxLength;\n  public readonly minPasswordLength: number = PASSWORDS.minLength;\n  public readonly passwordCntrl: FormControl;\n  public readonly user$: MaybeUser$;\n\n  private readonly _$confirmDialog: Signal = viewChild.required('confirmDialog');\n  private readonly _router: Router;\n\n  constructor() {\n    this._router = inject(Router);\n\n    ({\n      $errors: this.$passwordCntrlErrors,\n      $invalid: this.$passwordCntrlInvalid,\n      control: this.passwordCntrl,\n    } = createPasswordControl());\n\n    this.deleteAccountForm = new FormGroup({\n      password: this.passwordCntrl,\n    });\n\n    this.$errorCode = signal('');\n    this.$showForm = signal(true);\n\n    // Not handling non-logged in users because the Route guards should.\n    this.user$ = inject(USER$);\n  }\n\n  public closeDialog(): void {\n    const dialogEl = this._$confirmDialog();\n    dialogEl.nativeElement.close();\n  }\n\n  public async deleteAcount(user: User): Promise {\n    // The dialog automatically closes on submit. event.preventDefault() and event.stopPropagation() do not prevent that.\n    const { password } = this.deleteAccountForm.value;\n\n    // Validators prevent email1 or password being falsey, but TypeScript doesn't know that.\n    // Additionally, all users are expected to have an email address.\n    if (this.deleteAccountForm.invalid || !password || !user.email) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this.$showForm.set(false);\n    this.$errorCode.set(''); // Clear out any existing errors\n\n    try {\n      const emailCreds = EmailAuthProvider.credential(user.email, password);\n      const credentials = await reauthenticateWithCredential(user, emailCreds);\n      await deleteUser(credentials.user);\n      await this._router.navigateByUrl('/');\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n    }\n\n    this.$showForm.set(true);\n  }\n\n  public openDialog(): void {\n    const dialogEl = this._$confirmDialog();\n    this.$errorCode.set(''); // Clear out any existing errors\n    dialogEl.nativeElement.showModal();\n  }\n}\n\n    \n\n    \n        @if ($showForm()) {\n  \n    Delete your account\n    \n      Deleting your account cannot be undone. This is a two step process. Are you sure you wish to proceed?\n    \n    @if ($errorCode(); as errorCode) {\n      \n        \n      \n    }\n    \n      \n        Begin account deletion\n      \n    \n  \n  \n    \n      Enter your password to proceed. Clicking the complete button will immediately and irrecoverably delete your account.\n    \n    @if (user$ | async; as user) {\n      \n        \n          Password:\n          \n          \n            @if ($passwordCntrlErrors(); as errors) {\n              \n                @if (errors['required']) {\n                  \n                    Please enter your password.\n                  \n                }\n                @if (errors['minlength']) {\n                  \n                    Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and\n                    lowercase letters, numbers, and symbols.\n                  \n                }\n                @if (errors['maxlength']) {\n                  \n                    Your password may not be longer than {{ maxPasswordLength }} characters.\n                  \n                }\n              \n            }\n          \n        \n\n        \n          \n            Complete account deletion\n          \n          \n            Cancel\n          \n        \n      \n    }\n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if ($showForm()) {      Delete your account          Deleting your account cannot be undone. This is a two step process. Are you sure you wish to proceed?        @if ($errorCode(); as errorCode) {                        }                  Begin account deletion                        Enter your password to proceed. Clicking the complete button will immediately and irrecoverably delete your account.        @if (user$ | async; as user) {                        Password:                                @if ($passwordCntrlErrors(); as errors) {                              @if (errors[\\'required\\']) {                                      Please enter your password.                                  }                @if (errors[\\'minlength\\']) {                                      Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and                    lowercase letters, numbers, and symbols.                                  }                @if (errors[\\'maxlength\\']) {                                      Your password may not be longer than {{ maxPasswordLength }} characters.                                  }                          }                                                Complete account deletion                                Cancel                            }  } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeleteAccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n            \n                imports\n                \n                            DatePipe\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                today\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/footer/footer.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { DatePipe } from '@angular/common';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ DatePipe, RouterLink ],\n  selector: 'app-footer',\n  styleUrl: './footer.component.scss',\n  templateUrl: './footer.component.html',\n})\nexport class FooterComponent {\n  public readonly today: Date = new Date();\n}\n\n    \n\n    \n        \n  \n    &copy; Copyright\n    {{ today | date: 'yyyy' }}\n    Privacy Policy\n    Terms &amp; Conditions\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      © Copyright    {{ today | date: \\'yyyy\\' }}    Privacy Policy    Terms & Conditions  '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/forgot-password/forgot-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n\n            \n                imports\n                \n                                AuthErrorMessagesComponent\n                            ReactiveFormsModule\n                            RouterLink\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _auth\n                            \n                            \n                                    Public\n                                    Readonly\n                                $emailCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $emailCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $errorCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                $showForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                emailCntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                forgotForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:40\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/forgot-password/forgot-password.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Auth\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $emailCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $emailCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $showForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        emailCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        forgotForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ForgotFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/forgot-password/forgot-password.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { Signal, WritableSignal } from '@angular/core';\nimport { Auth, sendPasswordResetEmail } from '@angular/fire/auth';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport type { FormControl, ValidationErrors } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\nimport { createEmailControl } from '../identity-forms';\n\ntype ForgotFormGroup = FormGroup }>;\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AuthErrorMessagesComponent,\n    ReactiveFormsModule,\n    RouterLink,\n    SpinnerComponent,\n  ],\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n})\nexport class ForgotPasswordComponent {\n  public readonly $emailCntrlErrors: Signal;\n  public readonly $emailCntrlInvalid: Signal;\n  public readonly $errorCode: WritableSignal;\n  public readonly $showForm: WritableSignal;\n  public readonly emailCntrl: FormControl;\n  public readonly forgotForm: ForgotFormGroup;\n\n  private readonly _auth: Auth;\n\n  constructor() {\n    this._auth = inject(Auth);\n\n    ({ $errors: this.$emailCntrlErrors, $invalid: this.$emailCntrlInvalid, control: this.emailCntrl } = createEmailControl());\n\n    this.forgotForm = new FormGroup({ email: this.emailCntrl });\n\n    this.$errorCode = signal('');\n    this.$showForm = signal(true);\n  }\n\n  public async onSubmit(): Promise {\n    const { email } = this.forgotForm.value;\n\n    // Validators prevent email being falsey, but TypeScript doesn't know that.\n    if (this.forgotForm.invalid || !email) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this.$showForm.set(false);\n    this.$errorCode.set(''); // Clear out any existing errors\n\n    try {\n      await sendPasswordResetEmail(this._auth, email);\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n    }\n\n    this.$showForm.set(true);\n  }\n}\n\n    \n\n    \n        @if ($showForm()) {\n  \n    Recover your password\n    \n      \n        Email:\n        \n        \n          @if ($emailCntrlErrors(); as errors) {\n            \n              @if (errors['required']) {\n                \n                  Please enter your email address.\n                \n              }\n              @if (errors['email']) {\n                \n                  Please enter a valid email address.\n                \n              }\n            \n          }\n        \n      \n\n      @if ($errorCode(); as errorCode) {\n        \n          \n        \n      }\n\n      \n        \n          Send password reset email\n        \n      \n    \n    \n      Return to login\n    \n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if ($showForm()) {      Recover your password                  Email:                          @if ($emailCntrlErrors(); as errors) {                          @if (errors[\\'required\\']) {                                  Please enter your email address.                              }              @if (errors[\\'email\\']) {                                  Please enter a valid email address.                              }                      }                    @if ($errorCode(); as errorCode) {                                }                        Send password reset email                            Return to login      } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n            \n                imports\n                \n                            FaIconComponent\n                            NgOptimizedImage\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                $showMenu\n                            \n                            \n                                    Public\n                                    Readonly\n                                faBars\n                            \n                            \n                                    Public\n                                    Readonly\n                                faX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nclick(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/header/header.component.ts:30\n                        \n                    \n\n\n            \n                \n                        Close the menu if the user clicks on a link.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onClick(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/layouts/header/header.component.ts:30\n                        \n                    \n\n\n            \n                \n                        Close the menu if the user clicks on a link.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/header/header.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Sets the expanded class on the .menu list, and updates aria-expanded and the icon.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $showMenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/header/header.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        faBars\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IconDefinition\n\n                    \n                \n                \n                    \n                        Default value : faBars\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/header/header.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        faX\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IconDefinition\n\n                    \n                \n                \n                    \n                        Default value : faX\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/header/header.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { NgOptimizedImage } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  HostListener,\n  signal,\n} from '@angular/core';\nimport type { WritableSignal } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\nimport type { IconDefinition } from '@fortawesome/angular-fontawesome';\nimport { faBars, faX } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ FaIconComponent, NgOptimizedImage, RouterLink ],\n  selector: 'app-header',\n  styleUrl: './header.component.scss',\n  templateUrl: './header.component.html',\n})\nexport class HeaderComponent {\n  public readonly $showMenu: WritableSignal = signal(false);\n  public readonly faBars: IconDefinition = faBars;\n  public readonly faX: IconDefinition = faX;\n\n  /**\n   * Close the menu if the user clicks on a link.\n   */\n  @HostListener('click', [ '$event' ])\n  public onClick(event: Event): void {\n    const { target } = event;\n\n    if (target instanceof HTMLAnchorElement) {\n      this.$showMenu.set(false);\n    }\n  }\n\n  /**\n   * Sets the expanded class on the .menu list, and updates aria-expanded and the icon.\n   */\n  public toggleMenu(): void {\n    const menuShown = this.$showMenu();\n    this.$showMenu.set(!menuShown);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    Brainfry Quiz\n  \n\n\n\n  \n    \n    Your account\n  \n\n  \n    Your profile\n    Manage your photos\n    Change email\n    Change password\n    Delete account\n    Logout\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Brainfry Quiz            Your account        Your profile    Manage your photos    Change email    Change password    Delete account    Logout  '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n            \n                imports\n                \n                                AuthErrorMessagesComponent\n                            ReactiveFormsModule\n                            RouterLink\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _auth\n                            \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Public\n                                    Readonly\n                                $emailCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $emailCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $errorCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                $passwordCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $passwordCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $showForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                emailCntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                loginForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                maxPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                minPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                next\n                            \n                            \n                                    Public\n                                    Readonly\n                                passwordCntrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/login/login.component.ts:52\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/login/login.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Auth\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $emailCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $emailCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $passwordCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $passwordCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $showForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        emailCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoginFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        maxPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.maxLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        minPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.minLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        next\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Default value : input('/')\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        passwordCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/login/login.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  input,\n  signal,\n} from '@angular/core';\nimport type { InputSignal, Signal, WritableSignal } from '@angular/core';\nimport { Auth, signInWithEmailAndPassword } from '@angular/fire/auth';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport type { FormControl, ValidationErrors } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\nimport { createEmailControl, createPasswordControl, PASSWORDS } from '../identity-forms';\n\ntype LoginFormGroup = FormGroup;\n  password: FormControl;\n}>;\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AuthErrorMessagesComponent,\n    ReactiveFormsModule,\n    RouterLink,\n    SpinnerComponent,\n  ],\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent {\n  public readonly $emailCntrlErrors: Signal;\n  public readonly $emailCntrlInvalid: Signal;\n  public readonly $errorCode: WritableSignal;\n  public readonly $passwordCntrlErrors: Signal;\n  public readonly $passwordCntrlInvalid: Signal;\n  public readonly $showForm: WritableSignal;\n  public readonly emailCntrl: FormControl;\n  public readonly loginForm: LoginFormGroup;\n  public readonly maxPasswordLength: number = PASSWORDS.maxLength;\n  public readonly minPasswordLength: number = PASSWORDS.minLength;\n  // Navigate to root to allow default redirectTo Route to decide initial destination unless the `next` query parameter is set.\n  public readonly next: InputSignal = input('/');\n  public readonly passwordCntrl: FormControl;\n\n  private readonly _auth: Auth;\n  private readonly _router: Router = inject(Router);\n\n  constructor() {\n    this._auth = inject(Auth);\n\n    ({ $errors: this.$emailCntrlErrors, $invalid: this.$emailCntrlInvalid, control: this.emailCntrl } = createEmailControl());\n    ({ $errors: this.$passwordCntrlErrors, $invalid: this.$passwordCntrlInvalid, control: this.passwordCntrl } = createPasswordControl());\n    this.$showForm = signal(true);\n\n    this.loginForm = new FormGroup({\n      email: this.emailCntrl,\n      password: this.passwordCntrl,\n    });\n\n    this.$errorCode = signal('');\n  }\n\n  public async onSubmit(): Promise {\n    const { email, password } = this.loginForm.value;\n\n    // Validators prevent email or password being falsey, but TypeScript doesn't know that.\n    if (this.loginForm.invalid || !email || !password) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this.$errorCode.set(''); // Clear out any existing errors\n    this.$showForm.set(false);\n\n    try {\n      await signInWithEmailAndPassword(this._auth, email, password);\n      await this._router.navigateByUrl(this.next());\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n      this.$showForm.set(true);\n    }\n  }\n}\n\n    \n\n    \n        @if ($showForm()) {\n  \n    Login\n    \n      \n        Email:\n        \n        \n          @if ($emailCntrlErrors(); as errors) {\n            \n              @if (errors['required']) {\n                \n                  Please enter your email address.\n                \n              }\n              @if (errors['email']) {\n                \n                  Please enter a valid email address.\n                \n              }\n            \n          }\n        \n      \n\n      \n        Password:\n        \n        \n          @if ($passwordCntrlErrors(); as errors) {\n            \n              @if (errors['required']) {\n                \n                  Please enter your password.\n                \n              }\n              @if (errors['minlength']) {\n                \n                  Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase\n                  letters, numbers, and symbols.\n                \n              }\n              @if (errors['maxlength']) {\n                \n                  Your password may not be longer than {{ maxPasswordLength }} characters.\n                \n              }\n            \n          }\n        \n      \n\n      @if ($errorCode(); as errorCode) {\n        \n          \n        \n      }\n\n      \n        \n          Login\n        \n      \n    \n    \n      \n        Forgot your password?\n      \n    \n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if ($showForm()) {      Login                  Email:                          @if ($emailCntrlErrors(); as errors) {                          @if (errors[\\'required\\']) {                                  Please enter your email address.                              }              @if (errors[\\'email\\']) {                                  Please enter a valid email address.                              }                      }                            Password:                          @if ($passwordCntrlErrors(); as errors) {                          @if (errors[\\'required\\']) {                                  Please enter your password.                              }              @if (errors[\\'minlength\\']) {                                  Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and lowercase                  letters, numbers, and symbols.                              }              @if (errors[\\'maxlength\\']) {                                  Your password may not be longer than {{ maxPasswordLength }} characters.                              }                      }                    @if ($errorCode(); as errorCode) {                                }                        Login                                    Forgot your password?            } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutComponent.html":{"url":"components/LogoutComponent.html","title":"component - LogoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/logout/logout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./logout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _auth\n                            \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Public\n                                    Readonly\n                                $blockWindow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/logout/logout.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Auth\n\n                    \n                \n                \n                    \n                        Default value : inject(Auth)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/logout/logout.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/logout/logout.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $blockWindow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/logout/logout.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { WritableSignal } from '@angular/core';\nimport { Auth, signOut } from '@angular/fire/auth';\nimport { Router, RouterLink } from '@angular/router';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ RouterLink, SpinnerComponent ],\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n})\nexport class LogoutComponent {\n  public readonly $blockWindow: WritableSignal = signal(false);\n\n  private readonly _auth: Auth = inject(Auth);\n  private readonly _router: Router = inject(Router);\n\n  public async logout(): Promise {\n    this.$blockWindow.set(true);\n    await signOut(this._auth);\n    await this._router.navigateByUrl('/'); // Navigate to root to allow Guards to handle final redirecting.\n  }\n}\n\n    \n\n    \n        \n  Logout\n  Click here to logout:\n  \n    \n      Complete logout\n    \n  \n  Go back to dashboard\n\n@if ($blockWindow()) {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Logout  Click here to logout:            Complete logout        Go back to dashboard@if ($blockWindow()) {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/page-not-found/page-not-found.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n            \n                imports\n                \n                            NgOptimizedImage\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./page-not-found.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _metaService\n                            \n                            \n                                    Private\n                                _robotsTag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/page-not-found/page-not-found.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/page-not-found/page-not-found.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _metaService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Meta\n\n                    \n                \n                \n                    \n                        Default value : inject(Meta)\n                    \n                \n                    \n                        \n                                Defined in src/app/page-not-found/page-not-found.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _robotsTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLMetaElement | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/page-not-found/page-not-found.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { NgOptimizedImage } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport type { OnDestroy, OnInit } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport type { MetaDefinition } from '@angular/platform-browser';\nimport { RouterLink } from '@angular/router';\n\nexport const ROBOTS_META: MetaDefinition = {\n  content: 'noindex, nofollow',\n  name: 'robots',\n};\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ NgOptimizedImage, RouterLink ],\n  selector: 'app-page-not-found',\n  styleUrl: './page-not-found.component.scss',\n  templateUrl: './page-not-found.component.html',\n})\nexport class PageNotFoundComponent implements OnDestroy, OnInit {\n  private readonly _metaService: Meta = inject(Meta);\n  private _robotsTag: HTMLMetaElement | null = null; // eslint-disable-line unicorn/no-null -- DOM uses null\n\n  public ngOnDestroy(): void {\n    if (this._robotsTag) {\n      this._metaService.removeTagElement(this._robotsTag);\n    }\n  }\n\n  public ngOnInit(): void {\n    // Prevent robots from indexing this soft 404 page. Note that this probably is only necessary\n    // with SSR or JavaScript executing web crawlers.\n    this._robotsTag = this._metaService.addTag(ROBOTS_META);\n  }\n}\n\n    \n\n    \n        Game Over\n\n  Oops, we lost (this page)!\n  \n    How did you get here anyway?\n    Contact Support\n  \n  Go back to dashboard\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Game Over  Oops, we lost (this page)!      How did you get here anyway?    Contact Support    Go back to dashboard  '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PasswordResetSuccess.html":{"url":"interfaces/PasswordResetSuccess.html","title":"interface - PasswordResetSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PasswordResetSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/reset-password/reset-password.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                        \n                                            showForm\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:     undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showForm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showForm:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Auth, confirmPasswordReset, verifyPasswordResetCode } from '@angular/fire/auth';\nimport {\n  from,\n  merge,\n  of,\n  startWith,\n  Subject,\n  switchMap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { getErrorCode } from '../error-code';\n\nexport type ResetPasswordResults = PasswordResetSuccess | ShowForm | VerifiedFailed | undefined;\n\ntype ConfirmResult = PasswordResetSuccess | ShowForm;\n\n// Final state after resetting password\ninterface PasswordResetSuccess {\n  errorCode: undefined; // This makes the template type checker happier\n  showForm: false;\n}\n\n// Verified Success & Password Reset Failure\ninterface ShowForm {\n  email: string;\n  errorCode?: string;\n  showForm: true;\n}\n\n// Code Verification Failed\ninterface VerifiedFailed {\n  email: undefined; // This makes the type checker happier in the destructuring\n  errorCode: string;\n  showForm: false;\n}\n\ntype VerifiedResult = ShowForm | VerifiedFailed;\n\n@Injectable({ providedIn: 'root' })\nexport class ResetPasswordService {\n  private readonly _auth: Auth = inject(Auth);\n  private readonly _newPasswordSubject$: Subject = new Subject();\n\n  /**\n   * Triggers the confirmPasswordReset promise to apply the action code and replace the user's password.\n   */\n  public replacePassword(newPassword: string): void {\n    this._newPasswordSubject$.next(newPassword);\n  }\n\n  /**\n   * Sets up an Observable that will first verify the oobCode is valid for password resetting, and\n   * then show the password reset form and the user's email address.\n   * This is followed by setting up a subject to emit a new password that will then be confirmed as\n   * the new password for the user. While that action is pending it emits `undefined` to show the\n   * spinner again. In the event of an error it shows the form again with an error message.\n   */\n  public resetPassword$(code: string | undefined): Observable {\n    return of(code).pipe(\n      switchMap(async (oobCode: string | undefined): Promise => this._verifyCode(oobCode)),\n      switchMap((verifyResults: VerifiedResult): Observable => {\n        const verifyResults$ = of(verifyResults);\n        const { email } = verifyResults;\n\n        // Verified succeeded\n        if (email) {\n          // This design with an inner `merge` after `_verifyCode` settles is to accomodate passing\n          // the email to _confirmPasswordReset in case the new password is rejected.\n          // However, it does make testing this path more complicated I think. Would it be better to\n          // move the merge to the return of resetPassword$ and store the email as a private property?\n          const confirmPasswordReset$ = this._newPasswordSubject$.pipe(\n            switchMap((newPassword: string): Observable => {\n              const promise = this._confirmPasswordReset(code, email, newPassword);\n              return from(promise)\n                // Show the spinner while applying the action code.\n                .pipe(startWith(undefined));\n            }),\n          );\n\n          return merge(\n            // This will emit first after code verification.\n            verifyResults$,\n            // This will emit after form submission.\n            confirmPasswordReset$,\n          );\n        }\n\n        // Verified failed\n        return verifyResults$;\n      }),\n    );\n  }\n\n  /**\n   * Applies the new password to the user's account using the oobCode.\n   * @param email - Is necessary only in the case that `confirmPasswordReset` fails, and we need to\n   *              redisplay the form.\n   * @throws If the oobCode is falsy\n   */\n  private async _confirmPasswordReset(code: string | undefined, email: string, newPassword: string): Promise {\n    if (code) {\n      try {\n        await confirmPasswordReset(this._auth, code, newPassword);\n        return { errorCode: undefined, showForm: false };\n      } catch (err: unknown) {\n        return { email, errorCode: getErrorCode(err), showForm: true };\n      }\n    }\n    throw new Error('oobCode not found');\n  }\n\n  /**\n   * This identifies the email for the User who's password would be reset by the oobCode.\n   */\n  private async _verifyCode(code: string | undefined): Promise {\n    if (code) {\n      try {\n        const email = await verifyPasswordResetCode(this._auth, code);\n        return { email, showForm: true };\n      } catch (err: unknown) {\n        return { email: undefined, errorCode: getErrorCode(err), showForm: false };\n      }\n    }\n\n    return { email: undefined, errorCode: 'oobCode not found', showForm: false };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Photo.html":{"url":"interfaces/Photo.html","title":"interface - Photo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Photo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/user-photos/user-photos.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:     FullMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FullMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport {\n  getDownloadURL,\n  getMetadata,\n  listAll,\n  percentage,\n  ref,\n  Storage,\n  uploadBytesResumable,\n} from '@angular/fire/storage';\nimport type {\n  FullMetadata,\n  ListResult,\n  UploadTask,\n  UploadTaskSnapshot,\n} from '@angular/fire/storage';\nimport {\n  BehaviorSubject,\n  endWith,\n  finalize,\n  Subject,\n  switchMap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nexport interface Photo {\n  metadata: FullMetadata;\n  url: string;\n}\n\nexport interface Progress {\n  progress: number;\n  snapshot: UploadTaskSnapshot;\n}\n\nexport const MAXIMUM_PHOTOS = 6; // Total allowed uploaded profile photos.\nconst PHOTO_DIR = 'profile-photos';\nconst RADIX = 36; // letters and numbers\nconst SKIP_WHOLE_NUM = 2;\n\n@Injectable({ providedIn: 'root' })\nexport class UserPhotosService {\n  /**\n   * Track the percentage uploaded of `uploadPhoto`.\n   * Idea here is that while falsey (before first emit, when emitting undefined) then the template\n   * will show an `@else` branch for file picker UI. But while uploading it will emit progress for\n   * use in a progress meter.\n   * To automatically refresh the uploaded profile photos from `getProfilePhotos` this must be\n   * subscribed to.\n   */\n  public readonly uploadPercentage$: Observable;\n\n  private readonly _refreshFilesSubject$: BehaviorSubject;\n  private readonly _storage: Storage = inject(Storage);\n  private readonly _taskSubject$: Subject;\n\n  constructor() {\n    this._refreshFilesSubject$ = new BehaviorSubject(undefined);\n    this._taskSubject$ = new Subject();\n\n    this.uploadPercentage$ = this._taskSubject$.pipe(\n      switchMap((task: UploadTask): Observable =>\n        // First emit the upload progress as a percentage.\n        // https://github.com/FirebaseExtended/rxfire/blob/b91f358e2c13c6bf33fb4a540e3963c3902a62b1/storage/index.ts#L115\n        percentage(task).pipe(\n          // Then when complete (100% progress), emit undefined to reset the Observable to falsey.\n          endWith(undefined),\n          // Inform `getProfilePhotos` that there are new files to fetch since storage doesn't stream StorageReferences.\n          finalize((): void => { this._refreshFilesSubject$.next(); }),\n        )),\n    );\n  }\n\n  /**\n   * Gets a list of profile photos from Firebase Storage for the UID. Sorted by most recently uploaded.\n   * So long as something is subscribed to `uploadPercentage$` then this will be refreshed on each upload.\n   */\n  public getProfilePhotos(uid: string): Observable {\n    const profilePhotosRef = ref(this._storage, `${uid}/${PHOTO_DIR}`);\n\n    return this._refreshFilesSubject$.pipe(\n      // Using an inner Observable here to allow us to refresh the files list after each upload.\n      // But this will only work if someone is subscribed to `uploadPercentage$`!\n      switchMap(async (): Promise => {\n        const profilePhotos: Photo[] = [];\n        const profilePhotosList: ListResult = await listAll(profilePhotosRef);\n        const promises: Array, PromiseSettledResult]>> = [];\n\n        // Need the metadata for sorting and the download URL for displaying & form values.\n        // Note this does not handle nested folders, but we aren't using those.\n        for (const item of profilePhotosList.items) {\n          const promise = Promise.allSettled([ getDownloadURL(item), getMetadata(item) ]);\n          promises.push(promise);\n        }\n\n        // Build the data structure for the Photos.\n        for (const result of await Promise.all(promises)) {\n          const [ settledUrl, settledMetadata ] = result;\n          if (settledUrl.status === 'rejected') {\n            console.error(settledUrl.reason);\n          } else if (settledMetadata.status === 'rejected') {\n            console.error(settledMetadata.reason);\n          } else {\n            profilePhotos.push({\n              metadata: settledMetadata.value,\n              url: settledUrl.value,\n            });\n          }\n        }\n\n        // Organize the photos by most recently uploaded.\n        profilePhotos.sort((a: Photo, b: Photo): number => Number(new Date(b.metadata.updated)) - Number(new Date(a.metadata.updated)));\n\n        return profilePhotos;\n      }),\n    );\n  }\n\n  /**\n   * Uploads files to the user's profile photos directory. `uploadPercentage$` will track progress.\n   *\n   * Note that `files` is expected to be a list of one File. However the code is nominally designed\n   * to handle multiple uploads. In that case the `uploadPercentage$` will only be for the final file\n   * uploaded, which if the previous files are still going might be wrong. Unclear how to handle that\n   * case at this time.\n   */\n  public uploadPhoto(files: FileList, uid: string): void {\n    for (const file of files) {\n      // Unlike AWS S3, Firebase storage knows what folders are, and requires you to traverse into them.\n      // So for more straightforward access prefix the filename with a random value to avoid collisions\n      // instead of using a folder.\n      const prefix = Math.random().toString(RADIX).slice(SKIP_WHOLE_NUM);\n      const path = `${uid}/${PHOTO_DIR}/${prefix}-${file.name}`;\n      const storageRef = ref(this._storage, path);\n      const task = uploadBytesResumable(storageRef, file);\n      this._taskSubject$.next(task);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhotoManagerComponent.html":{"url":"components/PhotoManagerComponent.html","title":"component - PhotoManagerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhotoManagerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/user-photos/photo-manager/photo-manager.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-photo-manager\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./photo-manager.component.html\n            \n\n\n\n            \n                styleUrl\n                ./photo-manager.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [],\n  selector: 'app-photo-manager',\n  styleUrl: './photo-manager.component.scss',\n  templateUrl: './photo-manager.component.html',\n})\nexport class PhotoManagerComponent {\n\n}\n\n    \n\n    \n        photo-manager works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'photo-manager works!'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhotoManagerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhotoUploadComponent.html":{"url":"components/PhotoUploadComponent.html","title":"component - PhotoUploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhotoUploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/user-photos/photo-upload/photo-upload.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-photo-upload\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./photo-upload.component.html\n            \n\n\n\n            \n                styleUrl\n                ./photo-upload.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _$fileInput\n                            \n                            \n                                    Private\n                                    Readonly\n                                _userPhotoService\n                            \n                            \n                                    Public\n                                    Readonly\n                                $fileCount\n                            \n                            \n                                    Public\n                                    Readonly\n                                maximumFiles\n                            \n                            \n                                    Public\n                                    Readonly\n                                uid\n                            \n                            \n                                    Public\n                                    Readonly\n                                uploadPercentage$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                openFilePicker\n                            \n                            \n                                    Public\n                                uploadFile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                $fileCount\n                            \n                            \n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:32\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        $fileCount\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uid\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openFilePicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFilePicker()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Open the browser file picker UI if we think there are fewer than maximum uploads.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Upload the file(s) from the file picker automatically on success\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _$fileInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Signal\n\n                    \n                \n                \n                    \n                        Default value : viewChild.required('photoUpload')\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _userPhotoService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserPhotosService\n\n                    \n                \n                \n                    \n                        Default value : inject(UserPhotosService)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $fileCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        maximumFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : MAXIMUM_PHOTOS\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        uploadPercentage$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/photo-upload/photo-upload.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  input,\n  viewChild,\n} from '@angular/core';\nimport type { ElementRef, InputSignal, Signal } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport type { Observable } from 'rxjs';\n\nimport { MAXIMUM_PHOTOS, UserPhotosService } from '../user-photos.service';\nimport type { Progress } from '../user-photos.service';\n\ntype FileInputRef = ElementRef;\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ AsyncPipe, RouterLink ],\n  selector: 'app-photo-upload',\n  styleUrl: './photo-upload.component.scss',\n  templateUrl: './photo-upload.component.html',\n})\nexport class PhotoUploadComponent {\n  public readonly $fileCount: InputSignal = input.required();\n  public readonly maximumFiles: number = MAXIMUM_PHOTOS;\n  public readonly uid: InputSignal = input.required();\n  public readonly uploadPercentage$: Observable;\n\n  private readonly _$fileInput: Signal = viewChild.required('photoUpload');\n  private readonly _userPhotoService: UserPhotosService = inject(UserPhotosService);\n\n  constructor() {\n    this.uploadPercentage$ = this._userPhotoService.uploadPercentage$;\n  }\n\n  /**\n   * Open the browser file picker UI if we think there are fewer than maximum uploads.\n   */\n  public openFilePicker(): void {\n    const fileCount = this.$fileCount();\n    const fileInpt = this._$fileInput();\n\n    if (fileCount \n    \n\n    \n        \n@if (uploadPercentage$ | async; as percentage) {\n  {{ percentage.progress }}%\n} @else if ($fileCount() >= maximumFiles) {\n  Manage your photos\n} @else {\n  \n    Upload a photo\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (uploadPercentage$ | async; as percentage) {  {{ percentage.progress }}%} @else if ($fileCount() >= maximumFiles) {  Manage your photos} @else {      Upload a photo  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhotoUploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrivacyPolicyComponent.html":{"url":"components/PrivacyPolicyComponent.html","title":"component - PrivacyPolicyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PrivacyPolicyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/legal/privacy-policy/privacy-policy.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-privacy-policy\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./privacy-policy.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ RouterLink ],\n  selector: 'app-privacy-policy',\n  templateUrl: './privacy-policy.component.html',\n})\nexport class PrivacyPolicyComponent {}\n\n    \n\n    \n        \n  Privacy Policy\n\n  \n    Types of data we collect\n    \n      \n        We use your personal data to provide the Brainfry service. By using Brainfry, you agree to the collection and use of information in\n        accordance with this Privacy Policy.\n      \n      \n        While using Brainfry, we may ask you to provide us with certain personally identifiable information that can be used to contact or\n        identify you. Personally identifiable information may include, but is not limited to:\n      \n      \n        Email address\n        Your name\n        Links to your social media accounts\n        Usage Data\n      \n      We may also collect information that your browser sends whenever you visit this website.\n    \n  \n\n  \n    Use of your personal data\n    \n      Brainfry may use personal data for the following purposes:\n      \n        To provide and maintain our application, including to monitor the usage of our application.\n        \n          To manage your Account: to manage your registration as a user of Brainfry. The personal data you provide can give\n          you access to different functionalities that are available to you as a registered user.\n        \n        \n          To contact you: To contact you by email, voice or video calls, text communication, or other equivalent forms of\n          electronic communication, such as a mobile application’s push notifications regarding updates or informative communications\n          related to the functionalities, products or contracted services, including the security updates, when necessary or reasonable for\n          their implementation.\n        \n        To manage your requests: To attend and manage your requests.\n        \n          For other purposes: We may use your information for other purposes, such as data analysis, identifying usage\n          trends, determining the effectiveness of our promotional campaigns and to evaluate and improve Brainfry, products, services,\n          marketing and your experience.\n        \n      \n      We may share your personal information in the following situations:\n      \n        \n          With service providers: We may share your personal information with service providers to monitor and analyze the\n          use of Brainfry.\n        \n        \n          With other users: when you share personal information or otherwise interact in the public areas with other users,\n          such information may be viewed by all users and may be publicly distributed outside. Similarly, other users will be able to view\n          descriptions of your activity, communicate with you and view your profile.\n        \n        With your consent: We may disclose your personal information for any other purpose with your consent.\n      \n    \n  \n\n  \n    \n      Retention of your personal data\n    \n    \n      \n        Brainfry will retain your personal data only for as long as is necessary for the purposes set out in this Privacy Policy. We will\n        retain and use your personal data to the extent necessary to comply with our legal obligations (for example, if we are required to\n        retain your data to comply with applicable laws), resolve disputes, and enforce our legal agreements and policies.\n      \n      \n        Brainfry will also retain usage data for internal analysis purposes. Usage data is generally retained for a shorter period of time,\n        except when this data is used to strengthen the security or to improve the functionality, or we are legally obligated to retain this\n        data for longer time periods.\n      \n    \n  \n\n  \n    Transfer of your personal data\n    \n      \n        Your information, including personal data, may be transferred to — and maintained on — computers located outside of your state,\n        province, country or other governmental jurisdiction where the data protection laws may differ than those from your jurisdiction.\n      \n      Your consent to this Privacy Policy followed by your submission of such information represents your agreement to that transfer.\n      \n        Brainfry will take all steps reasonably necessary to ensure that your data is treated securely and in accordance with this Privacy\n        Policy and no transfer of your personal data will take place to an organization or a country unless there are adequate controls in\n        place including the security of your data and other personal information.\n      \n    \n  \n\n  \n    Delete your personal data\n    \n      You have the right to delete the personal data that you have provided.\n      \n        Brainfry gives you the ability to delete certain information about you from within the\n        application.\n      \n      \n        You may update, amend, or delete your information at any time by signing in to your account, if you have one, and visiting the\n        account settings section that allows you to manage your personal information.\n      \n      Please note, however, that we may need to retain certain information when we have a legal obligation or lawful basis to do so.\n    \n  \n\n  \n    Security of your personal data\n    \n      \n        The security of your personal data is important to us, but remember that no method of transmission over the Internet, or method of\n        electronic storage is 100% secure. While we strive to use commercially acceptable means to protect your personal data, we cannot\n        guarantee its absolute security.\n      \n    \n  \n\n  \n    Children’s privacy\n    \n      \n        Brainfry does not permit access for anyone under the age of 13. We do not knowingly collect personally identifiable information from\n        anyone under the age of 13. If you are a parent or guardian and you are aware that your child has provided us with personal data,\n        take the actions indicated in the Delete your personal data section to remove that data. If we become\n        aware that we have collected personal data from anyone under the age of 13 without verification of parental consent, we may take\n        steps to remove that information from our servers.\n      \n    \n  \n\n  \n    Changes to this privacy policy\n    \n      \n        We may update our privacy policy from time to time. All changes to this policy are publicly recorded in the version controlled\n        source code repository for this application.\n      \n      \n        You are advised to review this Privacy Policy periodically for any changes. Changes to this Privacy Policy are effective when they\n        are posted on this page.\n      \n    \n  \n\n  Return to Brainfry\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Privacy Policy      Types of data we collect                  We use your personal data to provide the Brainfry service. By using Brainfry, you agree to the collection and use of information in        accordance with this Privacy Policy.                    While using Brainfry, we may ask you to provide us with certain personally identifiable information that can be used to contact or        identify you. Personally identifiable information may include, but is not limited to:                    Email address        Your name        Links to your social media accounts        Usage Data            We may also collect information that your browser sends whenever you visit this website.            Use of your personal data          Brainfry may use personal data for the following purposes:              To provide and maintain our application, including to monitor the usage of our application.                  To manage your Account: to manage your registration as a user of Brainfry. The personal data you provide can give          you access to different functionalities that are available to you as a registered user.                          To contact you: To contact you by email, voice or video calls, text communication, or other equivalent forms of          electronic communication, such as a mobile application’s push notifications regarding updates or informative communications          related to the functionalities, products or contracted services, including the security updates, when necessary or reasonable for          their implementation.                To manage your requests: To attend and manage your requests.                  For other purposes: We may use your information for other purposes, such as data analysis, identifying usage          trends, determining the effectiveness of our promotional campaigns and to evaluate and improve Brainfry, products, services,          marketing and your experience.                    We may share your personal information in the following situations:                        With service providers: We may share your personal information with service providers to monitor and analyze the          use of Brainfry.                          With other users: when you share personal information or otherwise interact in the public areas with other users,          such information may be viewed by all users and may be publicly distributed outside. Similarly, other users will be able to view          descriptions of your activity, communicate with you and view your profile.                With your consent: We may disclose your personal information for any other purpose with your consent.                        Retention of your personal data                      Brainfry will retain your personal data only for as long as is necessary for the purposes set out in this Privacy Policy. We will        retain and use your personal data to the extent necessary to comply with our legal obligations (for example, if we are required to        retain your data to comply with applicable laws), resolve disputes, and enforce our legal agreements and policies.                    Brainfry will also retain usage data for internal analysis purposes. Usage data is generally retained for a shorter period of time,        except when this data is used to strengthen the security or to improve the functionality, or we are legally obligated to retain this        data for longer time periods.                  Transfer of your personal data                  Your information, including personal data, may be transferred to — and maintained on — computers located outside of your state,        province, country or other governmental jurisdiction where the data protection laws may differ than those from your jurisdiction.            Your consent to this Privacy Policy followed by your submission of such information represents your agreement to that transfer.              Brainfry will take all steps reasonably necessary to ensure that your data is treated securely and in accordance with this Privacy        Policy and no transfer of your personal data will take place to an organization or a country unless there are adequate controls in        place including the security of your data and other personal information.                  Delete your personal data          You have the right to delete the personal data that you have provided.              Brainfry gives you the ability to delete certain information about you from within the        application.                    You may update, amend, or delete your information at any time by signing in to your account, if you have one, and visiting the        account settings section that allows you to manage your personal information.            Please note, however, that we may need to retain certain information when we have a legal obligation or lawful basis to do so.            Security of your personal data                  The security of your personal data is important to us, but remember that no method of transmission over the Internet, or method of        electronic storage is 100% secure. While we strive to use commercially acceptable means to protect your personal data, we cannot        guarantee its absolute security.                  Children’s privacy                  Brainfry does not permit access for anyone under the age of 13. We do not knowingly collect personally identifiable information from        anyone under the age of 13. If you are a parent or guardian and you are aware that your child has provided us with personal data,        take the actions indicated in the Delete your personal data section to remove that data. If we become        aware that we have collected personal data from anyone under the age of 13 without verification of parental consent, we may take        steps to remove that information from our servers.                  Changes to this privacy policy                  We may update our privacy policy from time to time. All changes to this policy are publicly recorded in the version controlled        source code repository for this application.                    You are advised to review this Privacy Policy periodically for any changes. Changes to this Privacy Policy are effective when they        are posted on this page.              Return to Brainfry'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrivacyPolicyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Progress.html":{"url":"interfaces/Progress.html","title":"interface - Progress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Progress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/user-photos/user-photos.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            progress\n                                        \n                                \n                                \n                                        \n                                            snapshot\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        progress:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        snapshot\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        snapshot:     UploadTaskSnapshot\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UploadTaskSnapshot\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport {\n  getDownloadURL,\n  getMetadata,\n  listAll,\n  percentage,\n  ref,\n  Storage,\n  uploadBytesResumable,\n} from '@angular/fire/storage';\nimport type {\n  FullMetadata,\n  ListResult,\n  UploadTask,\n  UploadTaskSnapshot,\n} from '@angular/fire/storage';\nimport {\n  BehaviorSubject,\n  endWith,\n  finalize,\n  Subject,\n  switchMap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nexport interface Photo {\n  metadata: FullMetadata;\n  url: string;\n}\n\nexport interface Progress {\n  progress: number;\n  snapshot: UploadTaskSnapshot;\n}\n\nexport const MAXIMUM_PHOTOS = 6; // Total allowed uploaded profile photos.\nconst PHOTO_DIR = 'profile-photos';\nconst RADIX = 36; // letters and numbers\nconst SKIP_WHOLE_NUM = 2;\n\n@Injectable({ providedIn: 'root' })\nexport class UserPhotosService {\n  /**\n   * Track the percentage uploaded of `uploadPhoto`.\n   * Idea here is that while falsey (before first emit, when emitting undefined) then the template\n   * will show an `@else` branch for file picker UI. But while uploading it will emit progress for\n   * use in a progress meter.\n   * To automatically refresh the uploaded profile photos from `getProfilePhotos` this must be\n   * subscribed to.\n   */\n  public readonly uploadPercentage$: Observable;\n\n  private readonly _refreshFilesSubject$: BehaviorSubject;\n  private readonly _storage: Storage = inject(Storage);\n  private readonly _taskSubject$: Subject;\n\n  constructor() {\n    this._refreshFilesSubject$ = new BehaviorSubject(undefined);\n    this._taskSubject$ = new Subject();\n\n    this.uploadPercentage$ = this._taskSubject$.pipe(\n      switchMap((task: UploadTask): Observable =>\n        // First emit the upload progress as a percentage.\n        // https://github.com/FirebaseExtended/rxfire/blob/b91f358e2c13c6bf33fb4a540e3963c3902a62b1/storage/index.ts#L115\n        percentage(task).pipe(\n          // Then when complete (100% progress), emit undefined to reset the Observable to falsey.\n          endWith(undefined),\n          // Inform `getProfilePhotos` that there are new files to fetch since storage doesn't stream StorageReferences.\n          finalize((): void => { this._refreshFilesSubject$.next(); }),\n        )),\n    );\n  }\n\n  /**\n   * Gets a list of profile photos from Firebase Storage for the UID. Sorted by most recently uploaded.\n   * So long as something is subscribed to `uploadPercentage$` then this will be refreshed on each upload.\n   */\n  public getProfilePhotos(uid: string): Observable {\n    const profilePhotosRef = ref(this._storage, `${uid}/${PHOTO_DIR}`);\n\n    return this._refreshFilesSubject$.pipe(\n      // Using an inner Observable here to allow us to refresh the files list after each upload.\n      // But this will only work if someone is subscribed to `uploadPercentage$`!\n      switchMap(async (): Promise => {\n        const profilePhotos: Photo[] = [];\n        const profilePhotosList: ListResult = await listAll(profilePhotosRef);\n        const promises: Array, PromiseSettledResult]>> = [];\n\n        // Need the metadata for sorting and the download URL for displaying & form values.\n        // Note this does not handle nested folders, but we aren't using those.\n        for (const item of profilePhotosList.items) {\n          const promise = Promise.allSettled([ getDownloadURL(item), getMetadata(item) ]);\n          promises.push(promise);\n        }\n\n        // Build the data structure for the Photos.\n        for (const result of await Promise.all(promises)) {\n          const [ settledUrl, settledMetadata ] = result;\n          if (settledUrl.status === 'rejected') {\n            console.error(settledUrl.reason);\n          } else if (settledMetadata.status === 'rejected') {\n            console.error(settledMetadata.reason);\n          } else {\n            profilePhotos.push({\n              metadata: settledMetadata.value,\n              url: settledUrl.value,\n            });\n          }\n        }\n\n        // Organize the photos by most recently uploaded.\n        profilePhotos.sort((a: Photo, b: Photo): number => Number(new Date(b.metadata.updated)) - Number(new Date(a.metadata.updated)));\n\n        return profilePhotos;\n      }),\n    );\n  }\n\n  /**\n   * Uploads files to the user's profile photos directory. `uploadPercentage$` will track progress.\n   *\n   * Note that `files` is expected to be a list of one File. However the code is nominally designed\n   * to handle multiple uploads. In that case the `uploadPercentage$` will only be for the final file\n   * uploaded, which if the previous files are still going might be wrong. Unclear how to handle that\n   * case at this time.\n   */\n  public uploadPhoto(files: FileList, uid: string): void {\n    for (const file of files) {\n      // Unlike AWS S3, Firebase storage knows what folders are, and requires you to traverse into them.\n      // So for more straightforward access prefix the filename with a random value to avoid collisions\n      // instead of using a folder.\n      const prefix = Math.random().toString(RADIX).slice(SKIP_WHOLE_NUM);\n      const path = `${uid}/${PHOTO_DIR}/${prefix}-${file.name}`;\n      const storageRef = ref(this._storage, path);\n      const task = uploadBytesResumable(storageRef, file);\n      this._taskSubject$.next(task);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecoverEmailComponent.html":{"url":"components/RecoverEmailComponent.html","title":"component - RecoverEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RecoverEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/recover-email/recover-email.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recover-email\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                            RouterLink\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./recover-email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Private\n                                    Readonly\n                                _service\n                            \n                            \n                                    Public\n                                    Readonly\n                                vm$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/recover-email/recover-email.component.ts:28\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/recover-email/recover-email.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RecoverEmailService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/recover-email/recover-email.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        vm$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/recover-email/recover-email.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { Router, RouterLink } from '@angular/router';\nimport type { Observable } from 'rxjs';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { getState } from '../actions/get-state';\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { RecoverEmailService } from './recover-email.service';\nimport type { RecoverEmailResults } from './recover-email.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    RouterLink,\n    SpinnerComponent,\n  ],\n  selector: 'app-recover-email',\n  templateUrl: './recover-email.component.html',\n})\nexport class RecoverEmailComponent {\n  public readonly vm$: Observable;\n\n  private readonly _router: Router;\n  private readonly _service: RecoverEmailService;\n\n  constructor() {\n    this._router = inject(Router);\n    this._service = inject(RecoverEmailService);\n\n    const { oobCode } = getState(this._router.getCurrentNavigation());\n    this.vm$ = this._service.recoverEmail$(oobCode);\n  }\n}\n\n    \n\n    \n        @if (vm$ | async; as vm) {\n  \n    @if (vm.successful) {\n      \n        Your email has been restored!\n      \n      @if (vm.restoredEmail) {\n        \n          Your email has been restored to {{ vm.restoredEmail }}.\n        \n      }\n      @if (vm.passwordResetSent) {\n        \n          Additionally we have sent you a link to reset your password in the event your account was compromised.\n        \n      } @else {\n        \n          In the event your account was compromised, please\n          reset your password.\n        \n      }\n      \n        Continue\n      \n    } @else {\n      \n        There was a problem with your restoration link\n      \n      \n        \n      \n      \n        Please\n        contact support\n        for assistance.\n      \n    }\n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (vm$ | async; as vm) {      @if (vm.successful) {              Your email has been restored!            @if (vm.restoredEmail) {                  Your email has been restored to {{ vm.restoredEmail }}.              }      @if (vm.passwordResetSent) {                  Additionally we have sent you a link to reset your password in the event your account was compromised.              } @else {                  In the event your account was compromised, please          reset your password.              }              Continue          } @else {              There was a problem with your restoration link                                        Please        contact support        for assistance.          }  } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecoverEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RecoverEmailResults.html":{"url":"interfaces/RecoverEmailResults.html","title":"interface - RecoverEmailResults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RecoverEmailResults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/recover-email/recover-email.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ApplyResult\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                        \n                                            passwordResetSent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passwordResetSent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passwordResetSent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport {\n  applyActionCode,\n  Auth,\n  checkActionCode,\n  sendPasswordResetEmail,\n} from '@angular/fire/auth';\nimport {\n  catchError,\n  delayWhen,\n  of,\n  switchMap,\n  timer,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { getErrorCode } from '../error-code';\n\nexport interface RecoverEmailResults extends ApplyResult {\n  errorCode?: string;\n  passwordResetSent: boolean;\n}\n\ninterface ApplyResult {\n  restoredEmail?: string;\n  successful: boolean;\n}\n\nexport const SEND_EMAIL_DELAY = 500; // milliseconds\n\n@Injectable({ providedIn: 'root' })\nexport class RecoverEmailService {\n  private readonly _auth: Auth = inject(Auth);\n\n  /**\n   * Creates and Observable that when subscribed to will apply the action code to restore the user's\n   * original email address. And if present will automatically send a password reset email to the\n   * restored address in case of account compromise.\n   *\n   * @param delay - Not for production use! Only for use with testing.\n   */\n  public recoverEmail$(code: string | undefined, delay: number = SEND_EMAIL_DELAY): Observable {\n    return of(code).pipe(\n      switchMap(async (oobCode: string | undefined): Promise => this._doActionCode(oobCode)),\n      // Unfortunately it can take time for Firebase to recognize that the email has been restored\n      // so we can send the password reset email.\n      delayWhen((result: ApplyResult): Observable => timer(result.restoredEmail ? delay : 0)),\n      // Give the user the option to reset their password in case the account was compromised:\n      switchMap(async (result: ApplyResult): Promise => {\n        const passwordResetSent = await this._sendPasswordResetEmail(result.restoredEmail);\n        return { ...result, passwordResetSent };\n      }),\n      catchError((problem: unknown): Observable => {\n        console.error('RecoverEmailComponent', problem);\n\n        return of({\n          errorCode: getErrorCode(problem),\n          passwordResetSent: false,\n          successful: false,\n        });\n      }),\n    );\n  }\n\n  /**\n   * Check that the oobCode is still valid, and then apply it.\n   * @returns the restored email address and a success flag.\n   * @throws Error if the oobCode is falsy or the firebase methods fail.\n   */\n  private async _doActionCode(oobCode: string | undefined): Promise {\n    if (oobCode) {\n      const info = await checkActionCode(this._auth, oobCode);\n      const { email: restoredEmail } = info.data;\n\n      await applyActionCode(this._auth, oobCode);\n      // Account email reverted to restoredEmail\n\n      // Problem with being pedantic with all types except undefined vs null is that sometimes you\n      // need to get rid of null from the type.\n      return { restoredEmail: restoredEmail ?? undefined, successful: true };\n    }\n\n    throw new Error('oobCode not found');\n  }\n\n  /**\n   * Firebase types indicate that the email may not always be returned (Accounts without email addresses?)\n   * If the email isn't truthy then just skip the reset.\n   * If the send email fails for some reason, just return false.\n   */\n  private async _sendPasswordResetEmail(restoredEmail: string | undefined): Promise {\n    if (restoredEmail) {\n      try {\n        await sendPasswordResetEmail(this._auth, restoredEmail);\n        return true;\n      } catch (err: unknown) {\n        console.error('RecoverEmailComponent#_sendPasswordResetEmail', err);\n      }\n    }\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RecoverEmailService.html":{"url":"injectables/RecoverEmailService.html","title":"injectable - RecoverEmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RecoverEmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/recover-email/recover-email.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _auth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                _doActionCode\n                            \n                            \n                                    Private\n                                    Async\n                                _sendPasswordResetEmail\n                            \n                            \n                                    Public\n                                recoverEmail$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _doActionCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    _doActionCode(oobCode: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/recover-email/recover-email.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Check that the oobCode is still valid, and then apply it.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oobCode\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                the restored email address and a success flag.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _sendPasswordResetEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    _sendPasswordResetEmail(restoredEmail: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/recover-email/recover-email.service.ts:91\n                        \n                    \n\n\n            \n                \n                        Firebase types indicate that the email may not always be returned (Accounts without email addresses?)\nIf the email isn't truthy then just skip the reset.\nIf the send email fails for some reason, just return false.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                restoredEmail\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        recoverEmail$\n                        \n                    \n                \n            \n            \n                \n                        \n                    recoverEmail$(code: string | undefined, delay: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/recover-email/recover-email.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Creates and Observable that when subscribed to will apply the action code to restore the user's\noriginal email address. And if present will automatically send a password reset email to the\nrestored address in case of account compromise.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                delay\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    SEND_EMAIL_DELAY\n                                            \n\n                                            \n                                                    \nNot for production use! Only for use with testing.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Auth\n\n                    \n                \n                \n                    \n                        Default value : inject(Auth)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/recover-email/recover-email.service.ts:33\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport {\n  applyActionCode,\n  Auth,\n  checkActionCode,\n  sendPasswordResetEmail,\n} from '@angular/fire/auth';\nimport {\n  catchError,\n  delayWhen,\n  of,\n  switchMap,\n  timer,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { getErrorCode } from '../error-code';\n\nexport interface RecoverEmailResults extends ApplyResult {\n  errorCode?: string;\n  passwordResetSent: boolean;\n}\n\ninterface ApplyResult {\n  restoredEmail?: string;\n  successful: boolean;\n}\n\nexport const SEND_EMAIL_DELAY = 500; // milliseconds\n\n@Injectable({ providedIn: 'root' })\nexport class RecoverEmailService {\n  private readonly _auth: Auth = inject(Auth);\n\n  /**\n   * Creates and Observable that when subscribed to will apply the action code to restore the user's\n   * original email address. And if present will automatically send a password reset email to the\n   * restored address in case of account compromise.\n   *\n   * @param delay - Not for production use! Only for use with testing.\n   */\n  public recoverEmail$(code: string | undefined, delay: number = SEND_EMAIL_DELAY): Observable {\n    return of(code).pipe(\n      switchMap(async (oobCode: string | undefined): Promise => this._doActionCode(oobCode)),\n      // Unfortunately it can take time for Firebase to recognize that the email has been restored\n      // so we can send the password reset email.\n      delayWhen((result: ApplyResult): Observable => timer(result.restoredEmail ? delay : 0)),\n      // Give the user the option to reset their password in case the account was compromised:\n      switchMap(async (result: ApplyResult): Promise => {\n        const passwordResetSent = await this._sendPasswordResetEmail(result.restoredEmail);\n        return { ...result, passwordResetSent };\n      }),\n      catchError((problem: unknown): Observable => {\n        console.error('RecoverEmailComponent', problem);\n\n        return of({\n          errorCode: getErrorCode(problem),\n          passwordResetSent: false,\n          successful: false,\n        });\n      }),\n    );\n  }\n\n  /**\n   * Check that the oobCode is still valid, and then apply it.\n   * @returns the restored email address and a success flag.\n   * @throws Error if the oobCode is falsy or the firebase methods fail.\n   */\n  private async _doActionCode(oobCode: string | undefined): Promise {\n    if (oobCode) {\n      const info = await checkActionCode(this._auth, oobCode);\n      const { email: restoredEmail } = info.data;\n\n      await applyActionCode(this._auth, oobCode);\n      // Account email reverted to restoredEmail\n\n      // Problem with being pedantic with all types except undefined vs null is that sometimes you\n      // need to get rid of null from the type.\n      return { restoredEmail: restoredEmail ?? undefined, successful: true };\n    }\n\n    throw new Error('oobCode not found');\n  }\n\n  /**\n   * Firebase types indicate that the email may not always be returned (Accounts without email addresses?)\n   * If the email isn't truthy then just skip the reset.\n   * If the send email fails for some reason, just return false.\n   */\n  private async _sendPasswordResetEmail(restoredEmail: string | undefined): Promise {\n    if (restoredEmail) {\n      try {\n        await sendPasswordResetEmail(this._auth, restoredEmail);\n        return true;\n      } catch (err: unknown) {\n        console.error('RecoverEmailComponent#_sendPasswordResetEmail', err);\n      }\n    }\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/reset-password/reset-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                            ReactiveFormsModule\n                            RouterLink\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Private\n                                    Readonly\n                                _service\n                            \n                            \n                                    Public\n                                    Readonly\n                                $formPasswordsInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password1CntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password1CntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password2CntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $password2CntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                maxPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                minPasswordLength\n                            \n                            \n                                    Public\n                                    Readonly\n                                password1Cntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                password2Cntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                resetPasswordForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                vm$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:50\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/reset-password/reset-password.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResetPasswordService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $formPasswordsInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password1CntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password1CntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password2CntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $password2CntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        maxPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.maxLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        minPasswordLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : PASSWORDS.minLength\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password1Cntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password2Cntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        resetPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResetPasswordFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        vm$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport type { Signal } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport type { FormControl, ValidationErrors } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport type { Observable } from 'rxjs';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { getState } from '../actions/get-state';\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { createPasswordControl, PASSWORDS } from '../identity-forms';\nimport { confirmMatch, confirmMatchFormErrors } from '../validators/confirm-match';\nimport { ResetPasswordService } from './reset-password.service';\nimport type { ResetPasswordResults } from './reset-password.service';\n\ntype ResetPasswordFormGroup = FormGroup;\n  password2: FormControl;\n}>;\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    ReactiveFormsModule,\n    RouterLink,\n    SpinnerComponent,\n  ],\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n})\nexport class ResetPasswordComponent {\n  public readonly $formPasswordsInvalid: Signal;\n  public readonly $password1CntrlErrors: Signal;\n  public readonly $password1CntrlInvalid: Signal;\n  public readonly $password2CntrlErrors: Signal;\n  public readonly $password2CntrlInvalid: Signal;\n  public readonly maxPasswordLength: number = PASSWORDS.maxLength;\n  public readonly minPasswordLength: number = PASSWORDS.minLength;\n  public readonly password1Cntrl: FormControl;\n  public readonly password2Cntrl: FormControl;\n  public readonly resetPasswordForm: ResetPasswordFormGroup;\n  public readonly vm$: Observable;\n\n  private readonly _router: Router;\n  private readonly _service: ResetPasswordService;\n\n  constructor() {\n    this._router = inject(Router);\n    this._service = inject(ResetPasswordService);\n\n    ({\n      $errors: this.$password1CntrlErrors,\n      $invalid: this.$password1CntrlInvalid,\n      control: this.password1Cntrl,\n    } = createPasswordControl(true));\n    ({\n      $errors: this.$password2CntrlErrors,\n      $invalid: this.$password2CntrlInvalid,\n      control: this.password2Cntrl,\n    } = createPasswordControl());\n\n    this.resetPasswordForm = new FormGroup(\n      {\n        password1: this.password1Cntrl,\n        password2: this.password2Cntrl,\n      },\n      confirmMatch('password1', 'password2'),\n    );\n\n    this.$formPasswordsInvalid = confirmMatchFormErrors(this.resetPasswordForm, this.password1Cntrl, this.password2Cntrl);\n\n    const { oobCode } = getState(this._router.getCurrentNavigation());\n    this.vm$ = this._service.resetPassword$(oobCode);\n  }\n\n  public onSubmit(): void {\n    const { password1 } = this.resetPasswordForm.value;\n\n    if (this.resetPasswordForm.invalid || !password1) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this._service.replacePassword(password1);\n  }\n}\n\n    \n\n    \n        @if (vm$ | async; as vm) {\n  \n    @if (vm.showForm) {\n      \n        \n          Replace the password for {{ vm.email }} account.\n        \n\n        \n          New password:\n          \n          \n            @if ($password1CntrlErrors(); as errors) {\n              \n                @if (errors['required']) {\n                  \n                    Please enter a new password.\n                  \n                }\n                @if (errors['minlength']) {\n                  \n                    Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and\n                    lowercase letters, numbers, and symbols.\n                  \n                }\n                @if (errors['maxlength']) {\n                  \n                    Your password may not be longer than {{ maxPasswordLength }} characters.\n                  \n                }\n                @if (errors['passwordstrength']) {\n                  \n                    Your password is not very strong. Include a combination of upper and lowercase letters, numbers, and symbols.\n                  \n                }\n                @if (errors['firebasevalidator']) {\n                  \n                    Your password needs to include: TODO\n                  \n                }\n              \n            }\n          \n        \n\n        \n          \n            Confirm password:\n          \n          \n          \n            @if ($password2CntrlErrors(); as errors) {\n              \n                @if (errors['required']) {\n                  \n                    Please re-enter your password.\n                  \n                }\n                @if (errors['minlength']) {\n                  \n                    Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and\n                    lowercase letters, numbers, and symbols.\n                  \n                }\n                @if (errors['maxlength']) {\n                  \n                    Your password may not be longer than {{ maxPasswordLength }} characters.\n                  \n                }\n              \n            }\n          \n        \n\n        \n          @if ($formPasswordsInvalid()) {\n            \n              Passwords must match.\n            \n          }\n        \n\n        @if (vm.errorCode) {\n          \n            \n          \n        }\n\n        \n          \n            Replace password\n          \n        \n      \n    } @else if (vm.errorCode) {\n      There was a problem with your reset link\n      \n        \n      \n      \n        Please\n        contact support\n        for assistance.\n      \n    } @else {\n      Your password has been replaced!\n      \n        Return to login\n      \n    }\n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (vm$ | async; as vm) {      @if (vm.showForm) {                        Replace the password for {{ vm.email }} account.                          New password:                                @if ($password1CntrlErrors(); as errors) {                              @if (errors[\\'required\\']) {                                      Please enter a new password.                                  }                @if (errors[\\'minlength\\']) {                                      Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and                    lowercase letters, numbers, and symbols.                                  }                @if (errors[\\'maxlength\\']) {                                      Your password may not be longer than {{ maxPasswordLength }} characters.                                  }                @if (errors[\\'passwordstrength\\']) {                                      Your password is not very strong. Include a combination of upper and lowercase letters, numbers, and symbols.                                  }                @if (errors[\\'firebasevalidator\\']) {                                      Your password needs to include: TODO                                  }                          }                                                Confirm password:                                          @if ($password2CntrlErrors(); as errors) {                              @if (errors[\\'required\\']) {                                      Please re-enter your password.                                  }                @if (errors[\\'minlength\\']) {                                      Please enter a password that contains at least {{ minPasswordLength }} characters and a combination of upper and                    lowercase letters, numbers, and symbols.                                  }                @if (errors[\\'maxlength\\']) {                                      Your password may not be longer than {{ maxPasswordLength }} characters.                                  }                          }                                    @if ($formPasswordsInvalid()) {                          Passwords must match.                      }                @if (vm.errorCode) {                                        }                              Replace password                            } @else if (vm.errorCode) {      There was a problem with your reset link                                  Please        contact support        for assistance.          } @else {      Your password has been replaced!              Return to login          }  } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResetPasswordService.html":{"url":"injectables/ResetPasswordService.html","title":"injectable - ResetPasswordService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResetPasswordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/reset-password/reset-password.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _auth\n                            \n                            \n                                    Private\n                                    Readonly\n                                _newPasswordSubject$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                _confirmPasswordReset\n                            \n                            \n                                    Private\n                                    Async\n                                _verifyCode\n                            \n                            \n                                    Public\n                                replacePassword\n                            \n                            \n                                    Public\n                                resetPassword$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _confirmPasswordReset\n                        \n                    \n                \n            \n            \n                \n                        \n                    _confirmPasswordReset(code: string | undefined, email: string, newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/reset-password/reset-password.service.ts:102\n                        \n                    \n\n\n            \n                \n                        Applies the new password to the user's account using the oobCode.\n             redisplay the form.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nIs necessary only in the case that confirmPasswordReset fails, and we need to\nredisplay the form.\n\n\n                                            \n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _verifyCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    _verifyCode(code: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/reset-password/reset-password.service.ts:117\n                        \n                    \n\n\n            \n                \n                        This identifies the email for the User who's password would be reset by the oobCode.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        replacePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    replacePassword(newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/reset-password/reset-password.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Triggers the confirmPasswordReset promise to apply the action code and replace the user's password.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resetPassword$\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetPassword$(code: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/reset-password/reset-password.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Sets up an Observable that will first verify the oobCode is valid for password resetting, and\nthen show the password reset form and the user's email address.\nThis is followed by setting up a subject to emit a new password that will then be confirmed as\nthe new password for the user. While that action is pending it emits undefined to show the\nspinner again. In the event of an error it shows the form again with an error message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Auth\n\n                    \n                \n                \n                    \n                        Default value : inject(Auth)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.service.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _newPasswordSubject$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/reset-password/reset-password.service.ts:44\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Auth, confirmPasswordReset, verifyPasswordResetCode } from '@angular/fire/auth';\nimport {\n  from,\n  merge,\n  of,\n  startWith,\n  Subject,\n  switchMap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { getErrorCode } from '../error-code';\n\nexport type ResetPasswordResults = PasswordResetSuccess | ShowForm | VerifiedFailed | undefined;\n\ntype ConfirmResult = PasswordResetSuccess | ShowForm;\n\n// Final state after resetting password\ninterface PasswordResetSuccess {\n  errorCode: undefined; // This makes the template type checker happier\n  showForm: false;\n}\n\n// Verified Success & Password Reset Failure\ninterface ShowForm {\n  email: string;\n  errorCode?: string;\n  showForm: true;\n}\n\n// Code Verification Failed\ninterface VerifiedFailed {\n  email: undefined; // This makes the type checker happier in the destructuring\n  errorCode: string;\n  showForm: false;\n}\n\ntype VerifiedResult = ShowForm | VerifiedFailed;\n\n@Injectable({ providedIn: 'root' })\nexport class ResetPasswordService {\n  private readonly _auth: Auth = inject(Auth);\n  private readonly _newPasswordSubject$: Subject = new Subject();\n\n  /**\n   * Triggers the confirmPasswordReset promise to apply the action code and replace the user's password.\n   */\n  public replacePassword(newPassword: string): void {\n    this._newPasswordSubject$.next(newPassword);\n  }\n\n  /**\n   * Sets up an Observable that will first verify the oobCode is valid for password resetting, and\n   * then show the password reset form and the user's email address.\n   * This is followed by setting up a subject to emit a new password that will then be confirmed as\n   * the new password for the user. While that action is pending it emits `undefined` to show the\n   * spinner again. In the event of an error it shows the form again with an error message.\n   */\n  public resetPassword$(code: string | undefined): Observable {\n    return of(code).pipe(\n      switchMap(async (oobCode: string | undefined): Promise => this._verifyCode(oobCode)),\n      switchMap((verifyResults: VerifiedResult): Observable => {\n        const verifyResults$ = of(verifyResults);\n        const { email } = verifyResults;\n\n        // Verified succeeded\n        if (email) {\n          // This design with an inner `merge` after `_verifyCode` settles is to accomodate passing\n          // the email to _confirmPasswordReset in case the new password is rejected.\n          // However, it does make testing this path more complicated I think. Would it be better to\n          // move the merge to the return of resetPassword$ and store the email as a private property?\n          const confirmPasswordReset$ = this._newPasswordSubject$.pipe(\n            switchMap((newPassword: string): Observable => {\n              const promise = this._confirmPasswordReset(code, email, newPassword);\n              return from(promise)\n                // Show the spinner while applying the action code.\n                .pipe(startWith(undefined));\n            }),\n          );\n\n          return merge(\n            // This will emit first after code verification.\n            verifyResults$,\n            // This will emit after form submission.\n            confirmPasswordReset$,\n          );\n        }\n\n        // Verified failed\n        return verifyResults$;\n      }),\n    );\n  }\n\n  /**\n   * Applies the new password to the user's account using the oobCode.\n   * @param email - Is necessary only in the case that `confirmPasswordReset` fails, and we need to\n   *              redisplay the form.\n   * @throws If the oobCode is falsy\n   */\n  private async _confirmPasswordReset(code: string | undefined, email: string, newPassword: string): Promise {\n    if (code) {\n      try {\n        await confirmPasswordReset(this._auth, code, newPassword);\n        return { errorCode: undefined, showForm: false };\n      } catch (err: unknown) {\n        return { email, errorCode: getErrorCode(err), showForm: true };\n      }\n    }\n    throw new Error('oobCode not found');\n  }\n\n  /**\n   * This identifies the email for the User who's password would be reset by the oobCode.\n   */\n  private async _verifyCode(code: string | undefined): Promise {\n    if (code) {\n      try {\n        const email = await verifyPasswordResetCode(this._auth, code);\n        return { email, showForm: true };\n      } catch (err: unknown) {\n        return { email: undefined, errorCode: getErrorCode(err), showForm: false };\n      }\n    }\n\n    return { email: undefined, errorCode: 'oobCode not found', showForm: false };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShowForm.html":{"url":"interfaces/ShowForm.html","title":"interface - ShowForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShowForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/reset-password/reset-password.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                        \n                                            showForm\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showForm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showForm:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Auth, confirmPasswordReset, verifyPasswordResetCode } from '@angular/fire/auth';\nimport {\n  from,\n  merge,\n  of,\n  startWith,\n  Subject,\n  switchMap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { getErrorCode } from '../error-code';\n\nexport type ResetPasswordResults = PasswordResetSuccess | ShowForm | VerifiedFailed | undefined;\n\ntype ConfirmResult = PasswordResetSuccess | ShowForm;\n\n// Final state after resetting password\ninterface PasswordResetSuccess {\n  errorCode: undefined; // This makes the template type checker happier\n  showForm: false;\n}\n\n// Verified Success & Password Reset Failure\ninterface ShowForm {\n  email: string;\n  errorCode?: string;\n  showForm: true;\n}\n\n// Code Verification Failed\ninterface VerifiedFailed {\n  email: undefined; // This makes the type checker happier in the destructuring\n  errorCode: string;\n  showForm: false;\n}\n\ntype VerifiedResult = ShowForm | VerifiedFailed;\n\n@Injectable({ providedIn: 'root' })\nexport class ResetPasswordService {\n  private readonly _auth: Auth = inject(Auth);\n  private readonly _newPasswordSubject$: Subject = new Subject();\n\n  /**\n   * Triggers the confirmPasswordReset promise to apply the action code and replace the user's password.\n   */\n  public replacePassword(newPassword: string): void {\n    this._newPasswordSubject$.next(newPassword);\n  }\n\n  /**\n   * Sets up an Observable that will first verify the oobCode is valid for password resetting, and\n   * then show the password reset form and the user's email address.\n   * This is followed by setting up a subject to emit a new password that will then be confirmed as\n   * the new password for the user. While that action is pending it emits `undefined` to show the\n   * spinner again. In the event of an error it shows the form again with an error message.\n   */\n  public resetPassword$(code: string | undefined): Observable {\n    return of(code).pipe(\n      switchMap(async (oobCode: string | undefined): Promise => this._verifyCode(oobCode)),\n      switchMap((verifyResults: VerifiedResult): Observable => {\n        const verifyResults$ = of(verifyResults);\n        const { email } = verifyResults;\n\n        // Verified succeeded\n        if (email) {\n          // This design with an inner `merge` after `_verifyCode` settles is to accomodate passing\n          // the email to _confirmPasswordReset in case the new password is rejected.\n          // However, it does make testing this path more complicated I think. Would it be better to\n          // move the merge to the return of resetPassword$ and store the email as a private property?\n          const confirmPasswordReset$ = this._newPasswordSubject$.pipe(\n            switchMap((newPassword: string): Observable => {\n              const promise = this._confirmPasswordReset(code, email, newPassword);\n              return from(promise)\n                // Show the spinner while applying the action code.\n                .pipe(startWith(undefined));\n            }),\n          );\n\n          return merge(\n            // This will emit first after code verification.\n            verifyResults$,\n            // This will emit after form submission.\n            confirmPasswordReset$,\n          );\n        }\n\n        // Verified failed\n        return verifyResults$;\n      }),\n    );\n  }\n\n  /**\n   * Applies the new password to the user's account using the oobCode.\n   * @param email - Is necessary only in the case that `confirmPasswordReset` fails, and we need to\n   *              redisplay the form.\n   * @throws If the oobCode is falsy\n   */\n  private async _confirmPasswordReset(code: string | undefined, email: string, newPassword: string): Promise {\n    if (code) {\n      try {\n        await confirmPasswordReset(this._auth, code, newPassword);\n        return { errorCode: undefined, showForm: false };\n      } catch (err: unknown) {\n        return { email, errorCode: getErrorCode(err), showForm: true };\n      }\n    }\n    throw new Error('oobCode not found');\n  }\n\n  /**\n   * This identifies the email for the User who's password would be reset by the oobCode.\n   */\n  private async _verifyCode(code: string | undefined): Promise {\n    if (code) {\n      try {\n        const email = await verifyPasswordResetCode(this._auth, code);\n        return { email, showForm: true };\n      } catch (err: unknown) {\n        return { email: undefined, errorCode: getErrorCode(err), showForm: false };\n      }\n    }\n\n    return { email: undefined, errorCode: 'oobCode not found', showForm: false };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/sidebar/sidebar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sidebar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [],\n  selector: 'app-sidebar',\n  styleUrl: './sidebar.component.scss',\n  templateUrl: './sidebar.component.html',\n})\nexport class SidebarComponent {\n\n}\n\n    \n\n    \n        \n  sidebar works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  sidebar works!'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/spinner/spinner.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spinner\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./spinner.component.svg\n            \n\n\n\n            \n                styleUrl\n                ./spinner.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [],\n  selector: 'app-spinner',\n  styleUrl: './spinner.component.scss',\n  templateUrl: './spinner.component.svg',\n})\nexport class SpinnerComponent {}\n\n    \n\n    \n        \n  Loading…\n  \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Loading…      '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StandardLayoutComponent.html":{"url":"components/StandardLayoutComponent.html","title":"component - StandardLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StandardLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/standard/standard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-standard-layout\n            \n\n\n            \n                imports\n                \n                                FooterComponent\n                                HeaderComponent\n                            RouterOutlet\n                                SidebarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./standard.component.html\n            \n\n\n\n            \n                styleUrl\n                ./standard.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\nimport { FooterComponent } from '../footer/footer.component';\nimport { HeaderComponent } from '../header/header.component';\nimport { SidebarComponent } from '../sidebar/sidebar.component';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    FooterComponent,\n    HeaderComponent,\n    RouterOutlet,\n    SidebarComponent,\n  ],\n  selector: 'app-standard-layout',\n  styleUrl: './standard.component.scss',\n  templateUrl: './standard.component.html',\n})\nexport class StandardLayoutComponent {}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StandardLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TermsAndConditionsComponent.html":{"url":"components/TermsAndConditionsComponent.html","title":"component - TermsAndConditionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TermsAndConditionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/legal/terms-and-conditions/terms-and-conditions.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-terms-and-conditions\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./terms-and-conditions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ RouterLink ],\n  selector: 'app-terms-and-conditions',\n  templateUrl: './terms-and-conditions.component.html',\n})\nexport class TermsAndConditionsComponent {}\n\n    \n\n    \n        \n  Terms &amp; Conditions\n  \n    The application\n    \n      This application is presented for demonstration purposes only. Access may be granted and revoked by the author or designated\n      representatives at any time. There are no warranties express or implied. Use at your own risk.\n    \n  \n  \n    The code\n    \n      TL;DR\n      Here’s what the license entails:\n    \n    \n      \n        Anyone can copy, modify and distribute this software.\n      \n      \n        You have to include the license and copyright notice with each and every distribution.\n      \n      \n        You can use this software privately.\n      \n      \n        You can use this software for commercial purposes.\n      \n      \n        If you dare build your business solely from this code, you risk open-sourcing the whole code base.\n      \n      \n        If you modify it, you have to indicate changes made to the code.\n      \n      \n        Any modifications of this code base MUST be distributed with the same license, GPLv3.\n      \n      \n        This software is provided without warranty.\n      \n      \n        The software author or license can not be held liable for any damages inflicted by the software.\n      \n    \n    \n      \n        Summary provided by kn9ts.\n      \n    \n    See full license for details.\n    Return to Brainfry\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Terms & Conditions      The application          This application is presented for demonstration purposes only. Access may be granted and revoked by the author or designated      representatives at any time. There are no warranties express or implied. Use at your own risk.            The code          TL;DR      Here’s what the license entails:                      Anyone can copy, modify and distribute this software.                    You have to include the license and copyright notice with each and every distribution.                    You can use this software privately.                    You can use this software for commercial purposes.                    If you dare build your business solely from this code, you risk open-sourcing the whole code base.                    If you modify it, you have to indicate changes made to the code.                    Any modifications of this code base MUST be distributed with the same license, GPLv3.                    This software is provided without warranty.                    The software author or license can not be held liable for any damages inflicted by the software.                            Summary provided by kn9ts.              See full license for details.    Return to Brainfry  '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TermsAndConditionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TestComponent.html":{"url":"components/TestComponent.html","title":"component - TestComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TestComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/testing/test.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                template\n                test-component\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({ template: 'test-component' })\nexport class TestComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'test-component'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TestComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserPhotosService.html":{"url":"injectables/UserPhotosService.html","title":"injectable - UserPhotosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserPhotosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/user-photos/user-photos.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _refreshFilesSubject$\n                            \n                            \n                                    Private\n                                    Readonly\n                                _storage\n                            \n                            \n                                    Private\n                                    Readonly\n                                _taskSubject$\n                            \n                            \n                                    Public\n                                    Readonly\n                                uploadPercentage$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getProfilePhotos\n                            \n                            \n                                    Public\n                                uploadPhoto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/user-photos/user-photos.service.ts:55\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getProfilePhotos\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfilePhotos(uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/user-photos/user-photos.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Gets a list of profile photos from Firebase Storage for the UID. Sorted by most recently uploaded.\nSo long as something is subscribed to uploadPercentage$ then this will be refreshed on each upload.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        uploadPhoto\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadPhoto(files: FileList, uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/user-photos/user-photos.service.ts:127\n                        \n                    \n\n\n            \n                \n                        Uploads files to the user's profile photos directory. uploadPercentage$ will track progress.\nNote that files is expected to be a list of one File. However the code is nominally designed\nto handle multiple uploads. In that case the uploadPercentage$ will only be for the final file\nuploaded, which if the previous files are still going might be wrong. Unclear how to handle that\ncase at this time.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        FileList\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _refreshFilesSubject$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/user-photos.service.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                \n                    \n                        Default value : inject(Storage)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/user-photos.service.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _taskSubject$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/user-photos.service.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        uploadPercentage$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-photos/user-photos.service.ts:51\n                        \n                    \n\n            \n                \n                    Track the percentage uploaded of uploadPhoto.\nIdea here is that while falsey (before first emit, when emitting undefined) then the template\nwill show an @else branch for file picker UI. But while uploading it will emit progress for\nuse in a progress meter.\nTo automatically refresh the uploaded profile photos from getProfilePhotos this must be\nsubscribed to.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport {\n  getDownloadURL,\n  getMetadata,\n  listAll,\n  percentage,\n  ref,\n  Storage,\n  uploadBytesResumable,\n} from '@angular/fire/storage';\nimport type {\n  FullMetadata,\n  ListResult,\n  UploadTask,\n  UploadTaskSnapshot,\n} from '@angular/fire/storage';\nimport {\n  BehaviorSubject,\n  endWith,\n  finalize,\n  Subject,\n  switchMap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nexport interface Photo {\n  metadata: FullMetadata;\n  url: string;\n}\n\nexport interface Progress {\n  progress: number;\n  snapshot: UploadTaskSnapshot;\n}\n\nexport const MAXIMUM_PHOTOS = 6; // Total allowed uploaded profile photos.\nconst PHOTO_DIR = 'profile-photos';\nconst RADIX = 36; // letters and numbers\nconst SKIP_WHOLE_NUM = 2;\n\n@Injectable({ providedIn: 'root' })\nexport class UserPhotosService {\n  /**\n   * Track the percentage uploaded of `uploadPhoto`.\n   * Idea here is that while falsey (before first emit, when emitting undefined) then the template\n   * will show an `@else` branch for file picker UI. But while uploading it will emit progress for\n   * use in a progress meter.\n   * To automatically refresh the uploaded profile photos from `getProfilePhotos` this must be\n   * subscribed to.\n   */\n  public readonly uploadPercentage$: Observable;\n\n  private readonly _refreshFilesSubject$: BehaviorSubject;\n  private readonly _storage: Storage = inject(Storage);\n  private readonly _taskSubject$: Subject;\n\n  constructor() {\n    this._refreshFilesSubject$ = new BehaviorSubject(undefined);\n    this._taskSubject$ = new Subject();\n\n    this.uploadPercentage$ = this._taskSubject$.pipe(\n      switchMap((task: UploadTask): Observable =>\n        // First emit the upload progress as a percentage.\n        // https://github.com/FirebaseExtended/rxfire/blob/b91f358e2c13c6bf33fb4a540e3963c3902a62b1/storage/index.ts#L115\n        percentage(task).pipe(\n          // Then when complete (100% progress), emit undefined to reset the Observable to falsey.\n          endWith(undefined),\n          // Inform `getProfilePhotos` that there are new files to fetch since storage doesn't stream StorageReferences.\n          finalize((): void => { this._refreshFilesSubject$.next(); }),\n        )),\n    );\n  }\n\n  /**\n   * Gets a list of profile photos from Firebase Storage for the UID. Sorted by most recently uploaded.\n   * So long as something is subscribed to `uploadPercentage$` then this will be refreshed on each upload.\n   */\n  public getProfilePhotos(uid: string): Observable {\n    const profilePhotosRef = ref(this._storage, `${uid}/${PHOTO_DIR}`);\n\n    return this._refreshFilesSubject$.pipe(\n      // Using an inner Observable here to allow us to refresh the files list after each upload.\n      // But this will only work if someone is subscribed to `uploadPercentage$`!\n      switchMap(async (): Promise => {\n        const profilePhotos: Photo[] = [];\n        const profilePhotosList: ListResult = await listAll(profilePhotosRef);\n        const promises: Array, PromiseSettledResult]>> = [];\n\n        // Need the metadata for sorting and the download URL for displaying & form values.\n        // Note this does not handle nested folders, but we aren't using those.\n        for (const item of profilePhotosList.items) {\n          const promise = Promise.allSettled([ getDownloadURL(item), getMetadata(item) ]);\n          promises.push(promise);\n        }\n\n        // Build the data structure for the Photos.\n        for (const result of await Promise.all(promises)) {\n          const [ settledUrl, settledMetadata ] = result;\n          if (settledUrl.status === 'rejected') {\n            console.error(settledUrl.reason);\n          } else if (settledMetadata.status === 'rejected') {\n            console.error(settledMetadata.reason);\n          } else {\n            profilePhotos.push({\n              metadata: settledMetadata.value,\n              url: settledUrl.value,\n            });\n          }\n        }\n\n        // Organize the photos by most recently uploaded.\n        profilePhotos.sort((a: Photo, b: Photo): number => Number(new Date(b.metadata.updated)) - Number(new Date(a.metadata.updated)));\n\n        return profilePhotos;\n      }),\n    );\n  }\n\n  /**\n   * Uploads files to the user's profile photos directory. `uploadPercentage$` will track progress.\n   *\n   * Note that `files` is expected to be a list of one File. However the code is nominally designed\n   * to handle multiple uploads. In that case the `uploadPercentage$` will only be for the final file\n   * uploaded, which if the previous files are still going might be wrong. Unclear how to handle that\n   * case at this time.\n   */\n  public uploadPhoto(files: FileList, uid: string): void {\n    for (const file of files) {\n      // Unlike AWS S3, Firebase storage knows what folders are, and requires you to traverse into them.\n      // So for more straightforward access prefix the filename with a random value to avoid collisions\n      // instead of using a folder.\n      const prefix = Math.random().toString(RADIX).slice(SKIP_WHOLE_NUM);\n      const path = `${uid}/${PHOTO_DIR}/${prefix}-${file.name}`;\n      const storageRef = ref(this._storage, path);\n      const task = uploadBytesResumable(storageRef, file);\n      this._taskSubject$.next(task);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/user-profile/user-profile.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                            NgOptimizedImage\n                                PhotoUploadComponent\n                            ReactiveFormsModule\n                                SpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-profile.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _userPhotoService\n                            \n                            \n                                    Public\n                                    Readonly\n                                $errorCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                $nameCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $nameCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $photoUrlCntrlErrors\n                            \n                            \n                                    Public\n                                    Readonly\n                                $photoUrlCntrlInvalid\n                            \n                            \n                                    Public\n                                    Readonly\n                                $showForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                $showUrlInput\n                            \n                            \n                                    Public\n                                    Readonly\n                                nameCntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                photoUrlCntrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileForm\n                            \n                            \n                                    Public\n                                    Readonly\n                                vm$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onSubmit\n                            \n                            \n                                    Public\n                                togglePhotoUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:82\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/user-profile/user-profile.component.ts:137\n                        \n                    \n\n\n            \n                \n                        Update the Firebase User profile data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        togglePhotoUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    togglePhotoUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/user-profile/user-profile.component.ts:166\n                        \n                    \n\n\n            \n                \n                        Toggle the UI to set the photoURL manually to a remote URL or to picking from a list of uploaded\nprofile photos in Firebase Storage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _userPhotoService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserPhotosService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $nameCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $nameCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $photoUrlCntrlErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $photoUrlCntrlInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $showForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        $showUrlInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        nameCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        photoUrlCntrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        vm$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/user-profile/user-profile.component.ts:80\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe, NgOptimizedImage } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { Signal, WritableSignal } from '@angular/core';\nimport { updateProfile } from '@angular/fire/auth';\nimport type { User } from '@angular/fire/auth';\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport type { ValidationErrors } from '@angular/forms';\nimport {\n  filter,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser } from '@app/core/user.token';\nimport { controlErrorsSignal } from '@app/shared/control-errors-signal.util';\nimport { controlInvalidSignal } from '@app/shared/control-invalid-signal.util';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\nimport { PhotoUploadComponent } from '../user-photos/photo-upload/photo-upload.component';\nimport { UserPhotosService } from '../user-photos/user-photos.service';\nimport type { Photo } from '../user-photos/user-photos.service';\n\ntype ProfileFormGroup = FormGroup;\n  photoURL: FormControl;\n}>;\n\ninterface ViewModel {\n  profilePhotos: Photo[];\n  user: User;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    NgOptimizedImage,\n    PhotoUploadComponent,\n    ReactiveFormsModule,\n    SpinnerComponent,\n  ],\n  selector: 'app-user-profile',\n  styleUrl: './user-profile.component.scss',\n  templateUrl: './user-profile.component.html',\n})\nexport class UserProfileComponent {\n  public readonly $errorCode: WritableSignal;\n  public readonly $nameCntrlErrors: Signal;\n  public readonly $nameCntrlInvalid: Signal;\n  public readonly $photoUrlCntrlErrors: Signal;\n  public readonly $photoUrlCntrlInvalid: Signal;\n  public readonly $showForm: WritableSignal;\n  public readonly $showUrlInput: WritableSignal;\n  public readonly nameCntrl: FormControl;\n  public readonly photoUrlCntrl: FormControl;\n  public readonly profileForm: ProfileFormGroup;\n  public readonly vm$: Observable;\n\n  private readonly _userPhotoService: UserPhotosService;\n\n  constructor() {\n    this._userPhotoService = inject(UserPhotosService);\n\n    this.nameCntrl = new FormControl(null, Validators.required); // eslint-disable-line unicorn/no-null -- Forms use null\n    this.$nameCntrlErrors = controlErrorsSignal(this.nameCntrl);\n    this.$nameCntrlInvalid = controlInvalidSignal(this.nameCntrl);\n\n    // eslint-disable-next-line unicorn/no-null -- Forms use null\n    this.photoUrlCntrl = new FormControl(null, Validators.pattern(/\\.(?:avif|gif|jpe?g|png|webp)(?:\\?.*)?$/u));\n    this.$photoUrlCntrlErrors = controlErrorsSignal(this.photoUrlCntrl);\n    this.$photoUrlCntrlInvalid = controlInvalidSignal(this.photoUrlCntrl);\n\n    this.profileForm = new FormGroup({\n      displayName: this.nameCntrl,\n      photoURL: this.photoUrlCntrl,\n    });\n\n    this.$errorCode = signal('');\n    this.$showForm = signal(false);\n    this.$showUrlInput = signal(true);\n\n    // Not handling non-logged in users because the Route guards should.\n    this.vm$ = inject(USER$).pipe(\n      filter((user: MaybeUser): user is User => user != undefined),\n      tap({\n        next: (user: User): void => {\n          this.profileForm.patchValue(user);\n          this.$showForm.set(true);\n        },\n      }),\n      switchMap((user: User): Observable => {\n        const { photoURL, uid } = user;\n\n        return this._userPhotoService.getProfilePhotos(uid).pipe(\n          map((profilePhotos: Photo[]): ViewModel => {\n            for (const photo of profilePhotos) {\n              if (photo.url === photoURL) {\n                // Show the upload photo UI instead since that is what was used.\n                this.$showUrlInput.set(false);\n                break;\n              }\n            }\n\n            return { profilePhotos, user };\n          }),\n        );\n      }),\n    );\n  }\n\n  /**\n   * Update the Firebase User profile data.\n   */\n  public async onSubmit(user: User): Promise {\n    const { displayName, photoURL } = this.profileForm.value;\n\n    // Validators prevent email1 or password being falsey, but TypeScript doesn't know that.\n    if (this.profileForm.invalid || !displayName) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this.$showForm.set(false);\n    this.$errorCode.set(''); // Clear out any existing errors\n\n    try {\n      // It appears that the types for photoURL are incorrect and you must use an empty string\n      // instead of null to clear the value. https://stackoverflow.com/questions/71047275/setting-a-firebase-user-photourl-value-to-null\n      // auth/invalid-json-payload-received.-/photourl-must-be-string\n      const safePhotoURL = photoURL ?? '';\n      await updateProfile(user, { displayName, photoURL: safePhotoURL });\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n    }\n\n    this.$showForm.set(true);\n  }\n\n  /**\n   * Toggle the UI to set the photoURL manually to a remote URL or to picking from a list of uploaded\n   * profile photos in Firebase Storage.\n   */\n  public togglePhotoUrl(): void {\n    this.$showUrlInput.update((showUrl: boolean): boolean => !showUrl);\n  }\n}\n\n    \n\n    \n        @if (vm$ | async; as vm) {\n  \n    Your Profile\n    @if ($showForm()) {\n      \n        \n          Your name:\n          \n          \n            @if ($nameCntrlErrors(); as errors) {\n              \n                @if (errors['required']) {\n                  \n                    Tell use how you would like to be addressed.\n                  \n                }\n              \n            }\n          \n        \n\n        \n          Your photo:\n\n          @if ($showUrlInput()) {\n            \n              Link to your photo:\n              \n              \n                @if ($photoUrlCntrlErrors(); as errors) {\n                  \n                    @if (errors['pattern']) {\n                      \n                        Photo URL must link to a file with an image file extension like jpeg, jpg, png, avif, webp, or gif.\n                      \n                    }\n                  \n                }\n              \n            \n\n            @if (photoUrlCntrl.value && photoUrlCntrl.valid) {\n              \n                \n              \n            }\n\n            \n              Upload a photo\n            \n          } @else {\n            \n              @for (item of vm.profilePhotos; track item.url; let indx = $index) {\n                \n                \n                  \n                \n              }\n\n              \n\n              \n                Use a link to a photo\n              \n            \n          }\n        \n\n        @if ($errorCode(); as errorCode) {\n          \n            \n          \n        }\n\n        \n          \n            Update profile\n          \n        \n      \n    } @else {\n      \n    }\n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (vm$ | async; as vm) {      Your Profile    @if ($showForm()) {                        Your name:                                @if ($nameCntrlErrors(); as errors) {                              @if (errors[\\'required\\']) {                                      Tell use how you would like to be addressed.                                  }                          }                                    Your photo:          @if ($showUrlInput()) {                          Link to your photo:                                            @if ($photoUrlCntrlErrors(); as errors) {                                      @if (errors[\\'pattern\\']) {                                              Photo URL must link to a file with an image file extension like jpeg, jpg, png, avif, webp, or gif.                                          }                                  }                                      @if (photoUrlCntrl.value && photoUrlCntrl.valid) {                                                        }                          Upload a photo                      } @else {                          @for (item of vm.profilePhotos; track item.url; let indx = $index) {                                                                                }                                            Use a link to a photo                                    }                @if ($errorCode(); as errorCode) {                                        }                              Update profile                            } @else {          }  } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VerifiedFailed.html":{"url":"interfaces/VerifiedFailed.html","title":"interface - VerifiedFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VerifiedFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/reset-password/reset-password.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                        \n                                            showForm\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showForm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showForm:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Auth, confirmPasswordReset, verifyPasswordResetCode } from '@angular/fire/auth';\nimport {\n  from,\n  merge,\n  of,\n  startWith,\n  Subject,\n  switchMap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { getErrorCode } from '../error-code';\n\nexport type ResetPasswordResults = PasswordResetSuccess | ShowForm | VerifiedFailed | undefined;\n\ntype ConfirmResult = PasswordResetSuccess | ShowForm;\n\n// Final state after resetting password\ninterface PasswordResetSuccess {\n  errorCode: undefined; // This makes the template type checker happier\n  showForm: false;\n}\n\n// Verified Success & Password Reset Failure\ninterface ShowForm {\n  email: string;\n  errorCode?: string;\n  showForm: true;\n}\n\n// Code Verification Failed\ninterface VerifiedFailed {\n  email: undefined; // This makes the type checker happier in the destructuring\n  errorCode: string;\n  showForm: false;\n}\n\ntype VerifiedResult = ShowForm | VerifiedFailed;\n\n@Injectable({ providedIn: 'root' })\nexport class ResetPasswordService {\n  private readonly _auth: Auth = inject(Auth);\n  private readonly _newPasswordSubject$: Subject = new Subject();\n\n  /**\n   * Triggers the confirmPasswordReset promise to apply the action code and replace the user's password.\n   */\n  public replacePassword(newPassword: string): void {\n    this._newPasswordSubject$.next(newPassword);\n  }\n\n  /**\n   * Sets up an Observable that will first verify the oobCode is valid for password resetting, and\n   * then show the password reset form and the user's email address.\n   * This is followed by setting up a subject to emit a new password that will then be confirmed as\n   * the new password for the user. While that action is pending it emits `undefined` to show the\n   * spinner again. In the event of an error it shows the form again with an error message.\n   */\n  public resetPassword$(code: string | undefined): Observable {\n    return of(code).pipe(\n      switchMap(async (oobCode: string | undefined): Promise => this._verifyCode(oobCode)),\n      switchMap((verifyResults: VerifiedResult): Observable => {\n        const verifyResults$ = of(verifyResults);\n        const { email } = verifyResults;\n\n        // Verified succeeded\n        if (email) {\n          // This design with an inner `merge` after `_verifyCode` settles is to accomodate passing\n          // the email to _confirmPasswordReset in case the new password is rejected.\n          // However, it does make testing this path more complicated I think. Would it be better to\n          // move the merge to the return of resetPassword$ and store the email as a private property?\n          const confirmPasswordReset$ = this._newPasswordSubject$.pipe(\n            switchMap((newPassword: string): Observable => {\n              const promise = this._confirmPasswordReset(code, email, newPassword);\n              return from(promise)\n                // Show the spinner while applying the action code.\n                .pipe(startWith(undefined));\n            }),\n          );\n\n          return merge(\n            // This will emit first after code verification.\n            verifyResults$,\n            // This will emit after form submission.\n            confirmPasswordReset$,\n          );\n        }\n\n        // Verified failed\n        return verifyResults$;\n      }),\n    );\n  }\n\n  /**\n   * Applies the new password to the user's account using the oobCode.\n   * @param email - Is necessary only in the case that `confirmPasswordReset` fails, and we need to\n   *              redisplay the form.\n   * @throws If the oobCode is falsy\n   */\n  private async _confirmPasswordReset(code: string | undefined, email: string, newPassword: string): Promise {\n    if (code) {\n      try {\n        await confirmPasswordReset(this._auth, code, newPassword);\n        return { errorCode: undefined, showForm: false };\n      } catch (err: unknown) {\n        return { email, errorCode: getErrorCode(err), showForm: true };\n      }\n    }\n    throw new Error('oobCode not found');\n  }\n\n  /**\n   * This identifies the email for the User who's password would be reset by the oobCode.\n   */\n  private async _verifyCode(code: string | undefined): Promise {\n    if (code) {\n      try {\n        const email = await verifyPasswordResetCode(this._auth, code);\n        return { email, showForm: true };\n      } catch (err: unknown) {\n        return { email: undefined, errorCode: getErrorCode(err), showForm: false };\n      }\n    }\n\n    return { email: undefined, errorCode: 'oobCode not found', showForm: false };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VerifyEmailComponent.html":{"url":"components/VerifyEmailComponent.html","title":"component - VerifyEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VerifyEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/verify-email/verify-email.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-verify-email\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                                AuthErrorMessagesComponent\n                                SpinnerComponent\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./verify-email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Private\n                                    Readonly\n                                _service\n                            \n                            \n                                    Public\n                                    Readonly\n                                vm\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/verify-email/verify-email.component.ts:30\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/verify-email/verify-email.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerifyEmailService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/verify-email/verify-email.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        vm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Promise\n\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/verify-email/verify-email.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { Router, RouterLink } from '@angular/router';\n\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { getState } from '../actions/get-state';\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { VerifyEmailService } from './verify-email.service';\nimport type { VerifyEmailResult } from './verify-email.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    SpinnerComponent,\n    RouterLink,\n  ],\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n})\nexport class VerifyEmailComponent {\n  public readonly vm: Promise;\n\n  private readonly _router: Router;\n  private readonly _service: VerifyEmailService;\n\n  constructor() {\n    this._router = inject(Router);\n    this._service = inject(VerifyEmailService);\n\n    const { continueUrl, oobCode } = getState(this._router.getCurrentNavigation());\n    this.vm = this._service.verifyEmail(oobCode, continueUrl);\n  }\n}\n\n    \n\n    \n        @if (vm | async; as vm) {\n  \n    @if (vm.verified) {\n      \n        Your email has been verified!\n      \n      \n        Continue\n      \n    } @else {\n      \n        There was a problem with your verification link\n      \n      \n        \n      \n      \n        Please\n        contact support\n        for assistance.\n      \n    }\n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (vm | async; as vm) {      @if (vm.verified) {              Your email has been verified!                    Continue          } @else {              There was a problem with your verification link                                        Please        contact support        for assistance.          }  } @else {  }'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'app-actions'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthErrorMessagesComponent', 'selector': 'app-auth-error-messages'},{'name': 'CentralLayoutComponent', 'selector': 'app-central-layout'},{'name': 'ChangeEmailComponent', 'selector': 'app-change-email'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeleteAccountComponent', 'selector': 'app-delete-account'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PhotoManagerComponent', 'selector': 'app-photo-manager'},{'name': 'PhotoUploadComponent', 'selector': 'app-photo-upload'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RecoverEmailComponent', 'selector': 'app-recover-email'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'StandardLayoutComponent', 'selector': 'app-standard-layout'},{'name': 'TermsAndConditionsComponent', 'selector': 'app-terms-and-conditions'},{'name': 'TestComponent', 'selector': ''},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VerifyEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VerifyEmailResult.html":{"url":"interfaces/VerifyEmailResult.html","title":"interface - VerifyEmailResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VerifyEmailResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/verify-email/verify-email.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            continueUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                        \n                                            verified\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        continueUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        continueUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        verified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { applyActionCode, Auth } from '@angular/fire/auth';\n\nimport { getErrorCode } from '../error-code';\n\nexport interface VerifyEmailResult {\n  continueUrl: string;\n  errorCode?: string;\n  verified: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class VerifyEmailService {\n  private readonly _auth: Auth = inject(Auth);\n\n  /**\n   * This is mostly just to make unit testing easier.\n   */\n  public async verifyEmail(oobCode: string | undefined, continueUrl: string = '/'): Promise {\n    if (oobCode) {\n      try {\n        await applyActionCode(this._auth, oobCode);\n        return { continueUrl, verified: true };\n      } catch (err: unknown) {\n        const errorCode = getErrorCode(err);\n        return { continueUrl, errorCode, verified: false };\n      }\n    }\n\n    return { continueUrl, errorCode: 'oobCode not found', verified: false };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VerifyEmailService.html":{"url":"injectables/VerifyEmailService.html","title":"injectable - VerifyEmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VerifyEmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/verify-email/verify-email.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _auth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyEmail(oobCode: string | undefined, continueUrl: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/identity/verify-email/verify-email.service.ts:19\n                        \n                    \n\n\n            \n                \n                        This is mostly just to make unit testing easier.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                oobCode\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                continueUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '/'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Auth\n\n                    \n                \n                \n                    \n                        Default value : inject(Auth)\n                    \n                \n                    \n                        \n                                Defined in src/app/identity/verify-email/verify-email.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { applyActionCode, Auth } from '@angular/fire/auth';\n\nimport { getErrorCode } from '../error-code';\n\nexport interface VerifyEmailResult {\n  continueUrl: string;\n  errorCode?: string;\n  verified: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class VerifyEmailService {\n  private readonly _auth: Auth = inject(Auth);\n\n  /**\n   * This is mostly just to make unit testing easier.\n   */\n  public async verifyEmail(oobCode: string | undefined, continueUrl: string = '/'): Promise {\n    if (oobCode) {\n      try {\n        await applyActionCode(this._auth, oobCode);\n        return { continueUrl, verified: true };\n      } catch (err: unknown) {\n        const errorCode = getErrorCode(err);\n        return { continueUrl, errorCode, verified: false };\n      }\n    }\n\n    return { continueUrl, errorCode: 'oobCode not found', verified: false };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ViewModel.html":{"url":"interfaces/ViewModel.html","title":"interface - ViewModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ViewModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/identity/user-profile/user-profile.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            profilePhotos\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        profilePhotos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profilePhotos:         Photo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Photo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AsyncPipe, NgOptimizedImage } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport type { Signal, WritableSignal } from '@angular/core';\nimport { updateProfile } from '@angular/fire/auth';\nimport type { User } from '@angular/fire/auth';\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport type { ValidationErrors } from '@angular/forms';\nimport {\n  filter,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\nimport { USER$ } from '@app/core/user.token';\nimport type { MaybeUser } from '@app/core/user.token';\nimport { controlErrorsSignal } from '@app/shared/control-errors-signal.util';\nimport { controlInvalidSignal } from '@app/shared/control-invalid-signal.util';\nimport { SpinnerComponent } from '@app/shared/spinner/spinner.component';\n\nimport { AuthErrorMessagesComponent } from '../auth-error-messages/auth-error-messages.component';\nimport { getErrorCode } from '../error-code';\nimport { PhotoUploadComponent } from '../user-photos/photo-upload/photo-upload.component';\nimport { UserPhotosService } from '../user-photos/user-photos.service';\nimport type { Photo } from '../user-photos/user-photos.service';\n\ntype ProfileFormGroup = FormGroup;\n  photoURL: FormControl;\n}>;\n\ninterface ViewModel {\n  profilePhotos: Photo[];\n  user: User;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AsyncPipe,\n    AuthErrorMessagesComponent,\n    NgOptimizedImage,\n    PhotoUploadComponent,\n    ReactiveFormsModule,\n    SpinnerComponent,\n  ],\n  selector: 'app-user-profile',\n  styleUrl: './user-profile.component.scss',\n  templateUrl: './user-profile.component.html',\n})\nexport class UserProfileComponent {\n  public readonly $errorCode: WritableSignal;\n  public readonly $nameCntrlErrors: Signal;\n  public readonly $nameCntrlInvalid: Signal;\n  public readonly $photoUrlCntrlErrors: Signal;\n  public readonly $photoUrlCntrlInvalid: Signal;\n  public readonly $showForm: WritableSignal;\n  public readonly $showUrlInput: WritableSignal;\n  public readonly nameCntrl: FormControl;\n  public readonly photoUrlCntrl: FormControl;\n  public readonly profileForm: ProfileFormGroup;\n  public readonly vm$: Observable;\n\n  private readonly _userPhotoService: UserPhotosService;\n\n  constructor() {\n    this._userPhotoService = inject(UserPhotosService);\n\n    this.nameCntrl = new FormControl(null, Validators.required); // eslint-disable-line unicorn/no-null -- Forms use null\n    this.$nameCntrlErrors = controlErrorsSignal(this.nameCntrl);\n    this.$nameCntrlInvalid = controlInvalidSignal(this.nameCntrl);\n\n    // eslint-disable-next-line unicorn/no-null -- Forms use null\n    this.photoUrlCntrl = new FormControl(null, Validators.pattern(/\\.(?:avif|gif|jpe?g|png|webp)(?:\\?.*)?$/u));\n    this.$photoUrlCntrlErrors = controlErrorsSignal(this.photoUrlCntrl);\n    this.$photoUrlCntrlInvalid = controlInvalidSignal(this.photoUrlCntrl);\n\n    this.profileForm = new FormGroup({\n      displayName: this.nameCntrl,\n      photoURL: this.photoUrlCntrl,\n    });\n\n    this.$errorCode = signal('');\n    this.$showForm = signal(false);\n    this.$showUrlInput = signal(true);\n\n    // Not handling non-logged in users because the Route guards should.\n    this.vm$ = inject(USER$).pipe(\n      filter((user: MaybeUser): user is User => user != undefined),\n      tap({\n        next: (user: User): void => {\n          this.profileForm.patchValue(user);\n          this.$showForm.set(true);\n        },\n      }),\n      switchMap((user: User): Observable => {\n        const { photoURL, uid } = user;\n\n        return this._userPhotoService.getProfilePhotos(uid).pipe(\n          map((profilePhotos: Photo[]): ViewModel => {\n            for (const photo of profilePhotos) {\n              if (photo.url === photoURL) {\n                // Show the upload photo UI instead since that is what was used.\n                this.$showUrlInput.set(false);\n                break;\n              }\n            }\n\n            return { profilePhotos, user };\n          }),\n        );\n      }),\n    );\n  }\n\n  /**\n   * Update the Firebase User profile data.\n   */\n  public async onSubmit(user: User): Promise {\n    const { displayName, photoURL } = this.profileForm.value;\n\n    // Validators prevent email1 or password being falsey, but TypeScript doesn't know that.\n    if (this.profileForm.invalid || !displayName) {\n      throw new Error('Invalid form submitted');\n    }\n\n    this.$showForm.set(false);\n    this.$errorCode.set(''); // Clear out any existing errors\n\n    try {\n      // It appears that the types for photoURL are incorrect and you must use an empty string\n      // instead of null to clear the value. https://stackoverflow.com/questions/71047275/setting-a-firebase-user-photourl-value-to-null\n      // auth/invalid-json-payload-received.-/photourl-must-be-string\n      const safePhotoURL = photoURL ?? '';\n      await updateProfile(user, { displayName, photoURL: safePhotoURL });\n    } catch (err: unknown) {\n      const code = getErrorCode(err);\n      this.$errorCode.set(code);\n    }\n\n    this.$showForm.set(true);\n  }\n\n  /**\n   * Toggle the UI to set the photoURL manually to a remote URL or to picking from a list of uploaded\n   * profile photos in Firebase Storage.\n   */\n  public togglePhotoUrl(): void {\n    this.$showUrlInput.update((showUrl: boolean): boolean => !showUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/app-title-strategy.service.ts\n            \n            injectable\n            AppTitleStrategyService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/core/firebase-app.provider.ts\n            \n            variable\n            provideOurFirebaseApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/email-verified.guard.ts\n            \n            variable\n            emailVerifiedGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/no-auth.guard.ts\n            \n            variable\n            noAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/user.token.ts\n            \n            variable\n            USER$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/user.token.ts\n            \n            type alias\n            MaybeUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/user.token.ts\n            \n            type alias\n            MaybeUser$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/identity/actions/actions.component.ts\n            \n            component\n            ActionsComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/identity/actions/actions.component.ts\n            \n            interface\n            ActionCodeState\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                        src/app/identity/actions/get-state.ts\n            \n            variable\n            getState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/identity/auth-error-messages/auth-error-messages.component.ts\n            \n            component\n            AuthErrorMessagesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/identity/change-email/change-email.component.ts\n            \n            component\n            ChangeEmailComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                        src/app/identity/change-email/change-email.component.ts\n            \n            type alias\n            ChangeEmailFormGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/identity/change-email/change-email.component.ts\n            \n            type alias\n            VerifyStatuses\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/change-password/change-password.component.ts\n            \n            component\n            ChangePasswordComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                        src/app/identity/change-password/change-password.component.ts\n            \n            type alias\n            ChangePasswordFormGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/confirm-email/confirm-email.component.ts\n            \n            component\n            ConfirmEmailComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/identity/confirm-email/confirm-email.component.ts\n            \n            type alias\n            VerifyStatuses\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/delete-account/delete-account.component.ts\n            \n            component\n            DeleteAccountComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                        src/app/identity/delete-account/delete-account.component.ts\n            \n            type alias\n            DeleteAccountFormGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/identity/delete-account/delete-account.component.ts\n            \n            type alias\n            DialogRef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/identity/error-code.ts\n            \n            variable\n            getErrorCode\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/identity/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        src/app/identity/forgot-password/forgot-password.component.ts\n            \n            type alias\n            ForgotFormGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/identity-forms.ts\n            \n            interface\n            ControlStruct\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/identity/identity-forms.ts\n            \n            variable\n            createEmailControl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/identity/identity-forms.ts\n            \n            variable\n            createPasswordControl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/identity/identity-forms.ts\n            \n            variable\n            getControlStructure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                        src/app/identity/login/login.component.ts\n            \n            type alias\n            LoginFormGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/logout/logout.component.ts\n            \n            component\n            LogoutComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/identity/recover-email/recover-email.component.ts\n            \n            component\n            RecoverEmailComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/identity/recover-email/recover-email.service.ts\n            \n            injectable\n            RecoverEmailService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/identity/recover-email/recover-email.service.ts\n            \n            interface\n            ApplyResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/identity/recover-email/recover-email.service.ts\n            \n            interface\n            RecoverEmailResults\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/identity/recover-email/recover-email.service.ts\n            \n            variable\n            SEND_EMAIL_DELAY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                        src/app/identity/reset-password/reset-password.component.ts\n            \n            type alias\n            ResetPasswordFormGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/reset-password/reset-password.service.ts\n            \n            injectable\n            ResetPasswordService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/identity/reset-password/reset-password.service.ts\n            \n            interface\n            PasswordResetSuccess\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/identity/reset-password/reset-password.service.ts\n            \n            interface\n            ShowForm\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/identity/reset-password/reset-password.service.ts\n            \n            interface\n            VerifiedFailed\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/identity/reset-password/reset-password.service.ts\n            \n            type alias\n            ConfirmResult\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/identity/reset-password/reset-password.service.ts\n            \n            type alias\n            ResetPasswordResults\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/identity/reset-password/reset-password.service.ts\n            \n            type alias\n            VerifiedResult\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/user-photos/photo-manager/photo-manager.component.ts\n            \n            component\n            PhotoManagerComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/user-photos/photo-upload/photo-upload.component.ts\n            \n            component\n            PhotoUploadComponent\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                        src/app/identity/user-photos/photo-upload/photo-upload.component.ts\n            \n            type alias\n            FileInputRef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/user-photos/user-photos.service.ts\n            \n            injectable\n            UserPhotosService\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/identity/user-photos/user-photos.service.ts\n            \n            interface\n            Photo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/identity/user-photos/user-photos.service.ts\n            \n            interface\n            Progress\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/identity/user-photos/user-photos.service.ts\n            \n            variable\n            MAXIMUM_PHOTOS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/identity/user-photos/user-photos.service.ts\n            \n            variable\n            PHOTO_DIR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/identity/user-photos/user-photos.service.ts\n            \n            variable\n            RADIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/identity/user-photos/user-photos.service.ts\n            \n            variable\n            SKIP_WHOLE_NUM\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                12 %\n                (2/16)\n            \n        \n        \n            \n                \n                src/app/identity/user-profile/user-profile.component.ts\n            \n            interface\n            ViewModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/identity/user-profile/user-profile.component.ts\n            \n            type alias\n            ProfileFormGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/identity/validators/confirm-match/confirm-match.validator.ts\n            \n            variable\n            confirmMatch\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/validators/confirm-match/confirm-match.validator.ts\n            \n            variable\n            ERROR_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/identity/validators/confirm-match/match-error.signal.ts\n            \n            variable\n            confirmMatchFormErrors\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/validators/passwords/firebase.validator.ts\n            \n            variable\n            passwordFirebaseValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/identity/validators/passwords/strength.validator.ts\n            \n            variable\n            passwordStrengthValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/identity/validators/passwords/util.ts\n            \n            variable\n            getPasswordControlValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/verify-email/verify-email.component.ts\n            \n            component\n            VerifyEmailComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/identity/verify-email/verify-email.service.ts\n            \n            injectable\n            VerifyEmailService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/identity/verify-email/verify-email.service.ts\n            \n            interface\n            VerifyEmailResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/layouts/central/central.component.ts\n            \n            component\n            CentralLayoutComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layouts/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/layouts/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/layouts/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layouts/standard/standard.component.ts\n            \n            component\n            StandardLayoutComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/legal/privacy-policy/privacy-policy.component.ts\n            \n            component\n            PrivacyPolicyComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/legal/terms-and-conditions/terms-and-conditions.component.ts\n            \n            component\n            TermsAndConditionsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/page-not-found/page-not-found.component.ts\n            \n            variable\n            ROBOTS_META\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/shared/constants.ts\n            \n            variable\n            FORMS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/shared/constants.ts\n            \n            variable\n            PASSWORDS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/control-errors-signal.util.ts\n            \n            interface\n            CombinedObs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/shared/control-errors-signal.util.ts\n            \n            variable\n            controlErrorsSignal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/control-invalid-signal.util.ts\n            \n            interface\n            ControlProperties\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/shared/control-invalid-signal.util.ts\n            \n            variable\n            controlInvalidSignal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/shared/control-invalid-signal.util.ts\n            \n            variable\n            isInvalid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/spinner/spinner.component.ts\n            \n            component\n            SpinnerComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/testing/test.component.ts\n            \n            component\n            TestComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/testing/utilities/dom.ts\n            \n            variable\n            getCompiled\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/testing/utilities/dom.ts\n            \n            variable\n            safeQuerySelector\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/testing/utilities/emulator-auth.ts\n            \n            variable\n            authEmulatorConnected\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/testing/utilities/emulator-auth.ts\n            \n            variable\n            provideEmulatedAuth\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/testing/utilities/emulator-auth.ts\n            \n            variable\n            resolveValidatePassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/testing/utilities/emulator-auth.ts\n            \n            variable\n            setValidatePassword\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/testing/utilities/emulator-auth.ts\n            \n            variable\n            validatePasswordIsValid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/testing/utilities/emulator-storage.ts\n            \n            variable\n            provideEmulatedStorage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/testing/utilities/emulator-storage.ts\n            \n            variable\n            storageEmulatorConnected\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^19.1.5\n        \n            @angular/common : ^19.1.5\n        \n            @angular/compiler : ^19.1.5\n        \n            @angular/core : ^19.1.5\n        \n            @angular/fire : ^19.0.0\n        \n            @angular/forms : ^19.1.5\n        \n            @angular/platform-browser : ^19.1.5\n        \n            @angular/platform-browser-dynamic : ^19.1.5\n        \n            @angular/router : ^19.1.5\n        \n            @angular/service-worker : ^19.1.5\n        \n            @fortawesome/angular-fontawesome : ^1.0.0\n        \n            @fortawesome/free-brands-svg-icons : ^6.7.1\n        \n            @fortawesome/free-regular-svg-icons : ^6.7.1\n        \n            @fortawesome/free-solid-svg-icons : ^6.7.1\n        \n            check-password-strength : ^3.0.0\n        \n            modern-normalize : ^3.0.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_TEST_USER   (src/.../constants.ts)\n                        \n                        \n                            UNVERIFIED_TEST_USER   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/testing/constants.ts\n    \n        \n            \n                \n                    \n                        \n                        DEFAULT_TEST_USER\n                    \n                \n                        \n                            \n                                 email\n                            \n                        \n                        \n                            \n                                Value : 556e@411e.89a6\n                            \n                        \n                        \n                            \n                                 password\n                            \n                        \n                        \n                            \n                                Value : b567CCe6-86f(8b36#26b\n                            \n                        \n                        \n                            \n                                 userId\n                            \n                        \n                        \n                            \n                                Value : Sl45PFWdkVGpgfySJutci0ZrcL5v\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        UNVERIFIED_TEST_USER\n                    \n                \n                        \n                            \n                                 email\n                            \n                        \n                        \n                            \n                                Value : 908a@40c2.b893\n                            \n                        \n                        \n                            \n                                 password\n                            \n                        \n                        \n                            \n                                Value : 2bdAAfa&-8Dafcd9)6*e3\n                            \n                        \n                        \n                            \n                                 userId\n                            \n                        \n                        \n                            \n                                Value : icZzOwJNDPA6euJL8RLt5wN0rEnH\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBrainFry Pub Quiz App\n\nDeveloper Setup\nThere are two primary areas of this code:\n\nTerraform Infrastructure as Code used to create the GCP Firebase project.\nAngular Single Page Application\n\nInstall general dependencies:\nExample :brew install dprint git git-absorb git-machete\nnpm --global install markdownlint-cli prettier-plugin-multiline-arrays prettierTo manage the application infrastructure see Developer Setup Terraform Doc\nTo work on the Angular application see Developer Setup Angular Doc\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\nExample :                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\nExample :                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\nExample :a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\nExample :a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\nExample :a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\nExample :                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\nExample :\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\nExample :  Copyright (C)   \nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' and show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttps://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttps://www.gnu.org/licenses/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    27 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n        \n            Description : Angular application for creating and presenting pub quizzes.\n        \n            Homepage : https://brainfry-app.web.app/\n        \n            Bugs : https://github.com/rgant/brainfry/issues/new\n        \n            License : AGPL-3.0-or-later\n        \n            Repository : git+https://github.com/rgant/brainfry.git\n        \n            Author : J Rob Gant\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ChangeEmailFormGroup   (src/.../change-email.component.ts)\n                        \n                        \n                            ChangePasswordFormGroup   (src/.../change-password.component.ts)\n                        \n                        \n                            ConfirmResult   (src/.../reset-password.service.ts)\n                        \n                        \n                            DeleteAccountFormGroup   (src/.../delete-account.component.ts)\n                        \n                        \n                            DialogRef   (src/.../delete-account.component.ts)\n                        \n                        \n                            FileInputRef   (src/.../photo-upload.component.ts)\n                        \n                        \n                            ForgotFormGroup   (src/.../forgot-password.component.ts)\n                        \n                        \n                            LoginFormGroup   (src/.../login.component.ts)\n                        \n                        \n                            MaybeUser   (src/.../user.token.ts)\n                        \n                        \n                            MaybeUser$   (src/.../user.token.ts)\n                        \n                        \n                            ProfileFormGroup   (src/.../user-profile.component.ts)\n                        \n                        \n                            ResetPasswordFormGroup   (src/.../reset-password.component.ts)\n                        \n                        \n                            ResetPasswordResults   (src/.../reset-password.service.ts)\n                        \n                        \n                            VerifiedResult   (src/.../reset-password.service.ts)\n                        \n                        \n                            VerifyStatuses   (src/.../change-email.component.ts)\n                        \n                        \n                            VerifyStatuses   (src/.../confirm-email.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/identity/change-email/change-email.component.ts\n    \n    \n        \n            \n                \n                    \n                    ChangeEmailFormGroup\n                \n            \n            \n                \n                        FormGroup\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VerifyStatuses\n                \n            \n            \n                \n                        \"sending\" | \"sent\" | \"unsent\"\n\n                \n            \n        \n    \n    src/app/identity/change-password/change-password.component.ts\n    \n    \n        \n            \n                \n                    \n                    ChangePasswordFormGroup\n                \n            \n            \n                \n                        FormGroup\n\n                \n            \n        \n    \n    src/app/identity/reset-password/reset-password.service.ts\n    \n    \n        \n            \n                \n                    \n                    ConfirmResult\n                \n            \n            \n                \n                        PasswordResetSuccess | ShowForm\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResetPasswordResults\n                \n            \n            \n                \n                        PasswordResetSuccess | ShowForm | VerifiedFailed | undefined\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VerifiedResult\n                \n            \n            \n                \n                        ShowForm | VerifiedFailed\n\n                \n            \n        \n    \n    src/app/identity/delete-account/delete-account.component.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteAccountFormGroup\n                \n            \n            \n                \n                        FormGroup\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DialogRef\n                \n            \n            \n                \n                        ElementRef\n\n                \n            \n        \n    \n    src/app/identity/user-photos/photo-upload/photo-upload.component.ts\n    \n    \n        \n            \n                \n                    \n                    FileInputRef\n                \n            \n            \n                \n                        ElementRef\n\n                \n            \n        \n    \n    src/app/identity/forgot-password/forgot-password.component.ts\n    \n    \n        \n            \n                \n                    \n                    ForgotFormGroup\n                \n            \n            \n                \n                        FormGroup\n\n                \n            \n        \n    \n    src/app/identity/login/login.component.ts\n    \n    \n        \n            \n                \n                    \n                    LoginFormGroup\n                \n            \n            \n                \n                        FormGroup\n\n                \n            \n        \n    \n    src/app/core/user.token.ts\n    \n    \n        \n            \n                \n                    \n                    MaybeUser\n                \n            \n            \n                \n                        User | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MaybeUser$\n                \n            \n            \n                \n                            Observable\n\n                \n            \n        \n    \n    src/app/identity/user-profile/user-profile.component.ts\n    \n    \n        \n            \n                \n                    \n                    ProfileFormGroup\n                \n            \n            \n                \n                        FormGroup\n\n                \n            \n        \n    \n    src/app/identity/reset-password/reset-password.component.ts\n    \n    \n        \n            \n                \n                    \n                    ResetPasswordFormGroup\n                \n            \n            \n                \n                        FormGroup\n\n                \n            \n        \n    \n    src/app/identity/confirm-email/confirm-email.component.ts\n    \n    \n        \n            \n                \n                    \n                    VerifyStatuses\n                \n            \n            \n                \n                        \"sending\" | \"sent\" | \"unsent\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authEmulatorConnected   (src/.../emulator-auth.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            confirmMatch   (src/.../confirm-match.validator.ts)\n                        \n                        \n                            confirmMatchFormErrors   (src/.../match-error.signal.ts)\n                        \n                        \n                            controlErrorsSignal   (src/.../control-errors-signal.util.ts)\n                        \n                        \n                            controlInvalidSignal   (src/.../control-invalid-signal.util.ts)\n                        \n                        \n                            createEmailControl   (src/.../identity-forms.ts)\n                        \n                        \n                            createPasswordControl   (src/.../identity-forms.ts)\n                        \n                        \n                            emailVerifiedGuard   (src/.../email-verified.guard.ts)\n                        \n                        \n                            ERROR_NAME   (src/.../confirm-match.validator.ts)\n                        \n                        \n                            FORMS   (src/.../constants.ts)\n                        \n                        \n                            getCompiled   (src/.../dom.ts)\n                        \n                        \n                            getControlStructure   (src/.../identity-forms.ts)\n                        \n                        \n                            getErrorCode   (src/.../error-code.ts)\n                        \n                        \n                            getPasswordControlValue   (src/.../util.ts)\n                        \n                        \n                            getState   (src/.../get-state.ts)\n                        \n                        \n                            isInvalid   (src/.../control-invalid-signal.util.ts)\n                        \n                        \n                            MAXIMUM_PHOTOS   (src/.../user-photos.service.ts)\n                        \n                        \n                            noAuthGuard   (src/.../no-auth.guard.ts)\n                        \n                        \n                            passwordFirebaseValidator   (src/.../firebase.validator.ts)\n                        \n                        \n                            PASSWORDS   (src/.../constants.ts)\n                        \n                        \n                            passwordStrengthValidator   (src/.../strength.validator.ts)\n                        \n                        \n                            PHOTO_DIR   (src/.../user-photos.service.ts)\n                        \n                        \n                            provideEmulatedAuth   (src/.../emulator-auth.ts)\n                        \n                        \n                            provideEmulatedStorage   (src/.../emulator-storage.ts)\n                        \n                        \n                            provideOurFirebaseApp   (src/.../firebase-app.provider.ts)\n                        \n                        \n                            RADIX   (src/.../user-photos.service.ts)\n                        \n                        \n                            resolveValidatePassword   (src/.../emulator-auth.ts)\n                        \n                        \n                            ROBOTS_META   (src/.../page-not-found.component.ts)\n                        \n                        \n                            safeQuerySelector   (src/.../dom.ts)\n                        \n                        \n                            SEND_EMAIL_DELAY   (src/.../recover-email.service.ts)\n                        \n                        \n                            setValidatePassword   (src/.../emulator-auth.ts)\n                        \n                        \n                            SKIP_WHOLE_NUM   (src/.../user-photos.service.ts)\n                        \n                        \n                            storageEmulatorConnected   (src/.../emulator-storage.ts)\n                        \n                        \n                            USER$   (src/.../user.token.ts)\n                        \n                        \n                            validatePasswordIsValid   (src/.../emulator-auth.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideOurFirebaseApp(),\n    provideAuth((): Auth => getAuth()),\n    // provideAnalytics((): Analytics => getAnalytics()),\n    // ScreenTrackingService,\n    // UserTrackingService,\n    // provideAppCheck((): AppCheck => {\n    //   const provider = new ReCaptchaEnterpriseProvider('6LfG3rEqAAAAAK18S9UyMuK8wd3JSWjVnmDzmlrT');\n    //   return initializeAppCheck(undefined, { isTokenAutoRefreshEnabled: true, provider });\n    // }),\n    provideFirestore((): Firestore => getFirestore()),\n    // provideFunctions((): Functions => getFunctions()),\n    providePerformance((): FirebasePerformance => getPerformance()),\n    provideServiceWorker(\n      'ngsw-worker.js',\n      {\n        enabled: !isDevMode(),\n        registrationStrategy: 'registerWhenStable:30000',\n      },\n    ),\n    provideStorage((): FirebaseStorage => getStorage()),\n    // provideVertexAI((): VertexAI => getVertexAI()),\n    provideRouter(\n      routes,\n      withComponentInputBinding(),\n      withInMemoryScrolling({ anchorScrolling: 'enabled', scrollPositionRestoration: 'enabled' }),\n    ),\n    { provide: TitleStrategy, useClass: AppTitleStrategyService },\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/testing/utilities/emulator-auth.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authEmulatorConnected\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideEmulatedAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): EnvironmentProviders =>\n  provideAuth((): Auth => {\n    const auth = getAuth();\n\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises -- just for testing.\n    setPersistence(auth, inMemoryPersistence);\n\n    // Connecting to the emulator multiple times for each TestBed.configureTestingModule call causes\n    // errors: auth/emulator-config-failed\n    // But only connecting once, hopefully fixes that.\n    // https://np.reddit.com/r/Firebase/comments/18s6wzp/comment/kf6w7hk/\n    if (!authEmulatorConnected) {\n      const { port } = firebaseSettings.emulators.auth;\n      connectAuthEmulator(auth, `http://localhost:${port}`, { disableWarnings: true });\n      authEmulatorConnected = true;\n    }\n\n    // Auth Emulator does not support testing `validatePassword`\n    // FirebaseError: Firebase: Error (auth/identitytoolkit.getpasswordpolicy-is-not-implemented-in-the-auth-emulator.)\n    // @ts-expect-error Spying on private method for testing.\n    // eslint-disable-next-line jasmine/no-unsafe-spy -- This is a jasmine helper\n    spyOn(auth, 'validatePassword').and.callFake(resolveValidatePassword);\n    setValidatePassword(true); // This global would pollute tests if not reset for every test. It is also not safe for parallel execution.\n\n    return auth;\n  })\n                    \n                \n\n            \n                \n                    Provide Firebase Auth, and if not already connected to emulator then do so only the first time\nthis method is called.\nSince the emulator does not support the calls needed to implement validatePassword, that also\nis mocked in this setup. The mock response is partly configurable using setValidatePassword.\nNote: both the singlton call to connectAuthEmulator and the hacky mocking of the private\nvalidatePassword method are not ideal. But what would be better designs?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveValidatePassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (): Promise =>\n  // validatePasswordResponse was generated against the actual API by not spying on the\n  // `validatePassword` method and using the real Auth.\n  ({ ...validatePasswordResponse, isValid: validatePasswordIsValid })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValidatePassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (isValid: boolean): void => {\n  validatePasswordIsValid = isValid;\n}\n                    \n                \n\n            \n                \n                    Sets the isValid field in the mocked validatePassword response to value desired by tests.\nNote: this is a hack, and shows why all code needs review. But how to make a better design?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validatePasswordIsValid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateChildFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  _childRoute: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n): Observable => {\n  const router = inject(Router);\n  const user$ = inject(USER$);\n  const { url } = state;\n\n  return user$.pipe(\n    map((maybeUser: User | null): UrlTree | true => {\n      if (!maybeUser) {\n        return router.parseUrl(`/login?next=${url}`);\n      }\n\n      return true;\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/app/identity/validators/confirm-match/confirm-match.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        confirmMatch\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (password1: string, password2: string): ValidatorFn =>\n  // control: AbstractControl is required by the type ValidatorFn, but the actual expected type is FormGroup.\n  (formGrp: AbstractControl): ValidationErrors | null => {\n    if (!(formGrp instanceof FormGroup)) {\n      throw new TypeError('Control must be an instance of FormGroup.');\n    }\n\n    const control1 = formGrp.get(password1);\n    const control2 = formGrp.get(password2);\n\n    if (!control1) {\n      throw new Error(`Cannot find FormControl named '${password1}'.`);\n    }\n    if (!control2) {\n      throw new Error(`Cannot find FormControl named '${password2}'.`);\n    }\n\n    // eslint-disable-next-line unicorn/no-null -- ValidatorFn returns null\n    return control1.value === control2.value ? null : { [ERROR_NAME]: true };\n  }\n                    \n                \n\n            \n                \n                    Usage:\nExample :  new FormGroup(\n   {\n     password1: new FormControl(null, [ Validators.required, Validators.minLength(num), Validators.maxLength(num) ]),\n     password2: new FormControl(null, [ Validators.required, Validators.minLength(num), Validators.maxLength(num) ]),\n   },\n   { validators: confirmMatch('password1', 'password2') },\n );\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ERROR_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'confirmmatch'\n                    \n                \n\n\n        \n    \n\n    src/app/identity/validators/confirm-match/match-error.signal.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        confirmMatchFormErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (form: FormGroup, control1: FormControl, control2: FormControl): Signal => {\n  const initialValue: boolean = form.invalid && control1.valid && control2.valid && form.errors?.[ERROR_NAME] != undefined;\n\n  const formStatus$: Observable = form.statusChanges.pipe(\n    // Wait for input to stop before displaying error messages\n    debounceTime(FORMS.inputDebounce),\n    map((status: FormControlStatus): boolean => {\n      const { errors } = form;\n      if (status === 'INVALID' && control1.valid && control2.valid && errors) {\n        return errors[ERROR_NAME] != undefined;\n      }\n      return false;\n    }),\n  );\n\n  return toSignal(formStatus$, { initialValue });\n}\n                    \n                \n\n            \n                \n                    Only display the confirmmatch error if the two controls are valid, and the form has the error.\n\n                \n            \n\n        \n    \n\n    src/app/shared/control-errors-signal.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        controlErrorsSignal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (control: AbstractControl): Signal => {\n  // Only care about dirty controls for purposes of displaying validation error messages.\n  const controlDirty$: Observable = control.events.pipe(\n    filter((event: ControlEvent): event is PristineChangeEvent => event instanceof PristineChangeEvent),\n    map((event: PristineChangeEvent): boolean => !event.pristine),\n  );\n\n  // When status is INVALID emit control.errors, otherwise undefined\n  const controlStatus$: Observable = control.statusChanges.pipe(\n    // Wait for input to stop before displaying error messages\n    debounceTime(FORMS.inputDebounce),\n    map((status: FormControlStatus): ValidationErrors | undefined => {\n      const { errors } = control;\n      if (status === 'INVALID' && errors) {\n        return errors;\n      }\n      return undefined;\n    }),\n  );\n\n  // Combine the Observables so that ValidationErrors are emitted only when the control is dirty.\n  const controlErrors$: Observable = combineLatest({\n    /* eslint-disable rxjs/finnish */\n    dirty: controlDirty$,\n    errors: controlStatus$,\n  }).pipe(\n    map(({ dirty, errors }: CombinedObs): ValidationErrors | undefined => {\n      if (dirty) {\n        return errors;\n      }\n\n      return undefined;\n    }),\n  );\n\n  return toSignal(controlErrors$);\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/control-invalid-signal.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        controlInvalidSignal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (control: AbstractControl): Signal => {\n  const defaultProperties: ControlProperties = {\n    dirty: control.dirty,\n    invalid: control.invalid,\n    touched: control.touched,\n  };\n  const initialValue = isInvalid(defaultProperties);\n\n  const controlEvents$: Observable = control.events.pipe(\n    scan(\n      (current: ControlProperties, event: ControlEvent): ControlProperties => {\n        if (event instanceof PristineChangeEvent) {\n          return { ...current, dirty: !event.pristine };\n        }\n\n        if (event instanceof TouchedChangeEvent) {\n          return { ...current, touched: event.touched };\n        }\n\n        if (event instanceof StatusChangeEvent) {\n          return { ...current, invalid: event.status === 'INVALID' };\n        }\n\n        return current;\n      },\n      defaultProperties,\n    ),\n    map((properties: ControlProperties): boolean => isInvalid(properties)),\n    distinctUntilChanged(),\n  );\n\n  return toSignal(controlEvents$, { initialValue });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInvalid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (properties: ControlProperties): boolean => {\n  let invalid = true;\n\n  for (const val of Object.values(properties)) {\n    invalid &&= Boolean(val);\n  }\n\n  return invalid;\n}\n                    \n                \n\n\n        \n    \n\n    src/app/identity/identity-forms.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createEmailControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): ControlStruct => {\n  // eslint-disable-next-line unicorn/no-null -- DOM forms use null\n  const control = new FormControl(null, [ Validators.required, Validators.email ]);\n  return getControlStructure(control);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createPasswordControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (isNewPassword: boolean = false): ControlStruct => {\n  const control = new FormControl(\n    null, // eslint-disable-line unicorn/no-null -- DOM forms use null\n    [\n      Validators.required,\n      Validators.minLength(PASSWORDS.minLength),\n      Validators.maxLength(PASSWORDS.maxLength),\n    ],\n  );\n\n  if (isNewPassword) {\n    control.addValidators(passwordStrengthValidator);\n    control.addAsyncValidators(passwordFirebaseValidator());\n  }\n\n  return getControlStructure(control);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getControlStructure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (control: T): ControlStruct => {\n  const $invalid = controlInvalidSignal(control);\n  const $errors = controlErrorsSignal(control);\n\n  return { $errors, $invalid, control };\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/email-verified.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emailVerifiedGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateChildFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  _childRoute: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n): Observable => {\n  const router = inject(Router);\n  const user$ = inject(USER$);\n  const { url } = state;\n\n  return user$.pipe(\n    map((maybeUser: User | null): UrlTree | boolean => {\n      if (!maybeUser) {\n        return false;\n      }\n\n      if (!maybeUser.emailVerified) {\n        return router.parseUrl(`/confirm-email?next=${url}`);\n      }\n\n      return true;\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FORMS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  /**\n   * Input event delay for form fields to prevent an event on every keystroke. Milliseconds\n   */\n  inputDebounce: 1000,\n} as const\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PASSWORDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  /**\n   * Glyphs, Firebase default maximum\n   */\n  maxLength: 4096,\n\n  /**\n   * Glyphs, nominally secure length\n   */\n  minLength: 12,\n\n  /**\n   * Password strength as computed by check-password-strength library.\n   * https://github.com/deanilvincent/check-password-strength?tab=readme-ov-file#result\n   */\n  minStrength: 2,\n} as const\n                    \n                \n\n            \n                \n                    This should match Password Policy\n\n                \n            \n\n        \n    \n\n    src/testing/utilities/dom.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCompiled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (fixture: ComponentFixture): HTMLElement => {\n  const compiled: unknown = fixture.nativeElement;\n\n  if (!(compiled instanceof HTMLElement)) {\n    throw new TypeError('Expected fixture.nativeElement to be instance of HTMLElement');\n  }\n\n  return compiled;\n}\n                    \n                \n\n            \n                \n                    Handle type safety to get fixture native element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        safeQuerySelector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (parentElement: HTMLElement, query: string): T => {\n  const element: T | null = parentElement.querySelector(query);\n\n  if (element === null) {\n    throw new TypeError('Query returned null');\n  }\n\n  return element;\n}\n                    \n                \n\n            \n                \n                    Safely query the DOM handling nulls.\n\n                \n            \n\n        \n    \n\n    src/app/identity/error-code.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getErrorCode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (err: unknown): string => {\n  if (err instanceof FirebaseError) {\n    return err.code;\n  }\n  if (err instanceof Error) {\n    return err.message;\n  }\n\n  console.error('Unknown Error', err);\n  return 'unknown';\n}\n                    \n                \n\n            \n                \n                    TypeScript/linters want caught errors to be of type unknown. So this function handles checking\nfor FirebaseError and extracting the code, or the message from plain Errors.\n\n                \n            \n\n        \n    \n\n    src/app/identity/validators/passwords/util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getPasswordControlValue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (control: AbstractControl): string | null => {\n  const { value } = control;\n\n  // Like Validators.email, rely on Validators.required to check for blank passwords.\n  if (value == undefined || value === '') {\n    return null; // eslint-disable-line unicorn/no-null -- ValidatorFn returns null\n  }\n\n  if (typeof value !== 'string') {\n    throw new TypeError(`Invalid Control Value Type: '${typeof value}'`);\n  }\n\n  return value;\n}\n                    \n                \n\n\n        \n    \n\n    src/app/identity/actions/get-state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (maybeNavigation: Navigation | null): Partial =>\n  maybeNavigation?.extras.state ?? {}\n                    \n                \n\n            \n                \n                    Get the ActionCodeState from the Navigation extras state, if we can.\n\n                \n            \n\n        \n    \n\n    src/app/identity/user-photos/user-photos.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MAXIMUM_PHOTOS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PHOTO_DIR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile-photos'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RADIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 36\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SKIP_WHOLE_NUM\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/no-auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        noAuthGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateChildFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  childRoute: ActivatedRouteSnapshot,\n  _state: RouterStateSnapshot,\n): Observable => {\n  const router = inject(Router);\n  /** Navigate to the `next` query parameter if set, else to the root and allow default redirectTo Route to decide initial destination. */\n  const nextUrl = childRoute.queryParamMap.get('next') ?? '/';\n  const user$ = inject(USER$);\n\n  return user$.pipe(\n    map((maybeUser: User | null): UrlTree | true => {\n      if (maybeUser) {\n        return router.parseUrl(nextUrl);\n      }\n\n      return true;\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/app/identity/validators/passwords/firebase.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordFirebaseValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): AsyncValidatorFn => {\n  const auth: Auth = inject(Auth);\n\n  return async (control: AbstractControl): Promise => {\n    const value = getPasswordControlValue(control);\n\n    // Like Validators.email, rely on Validators.required to check for blank passwords.\n    if (value == undefined) {\n      return null; // eslint-disable-line unicorn/no-null -- ValidatorFn returns null\n    }\n\n    // Opened an issue about this being necessary: https://github.com/angular/angularfire/issues/3614\n    const { passwordPolicy: _, ...status } = await validatePassword(auth, value);\n\n    return status.isValid ? null : { firebasevalidator: status }; // eslint-disable-line unicorn/no-null -- ValidatorFn returns null\n  };\n}\n                    \n                \n\n            \n                \n                    Validate against the Firebase Project Authentication Password Policy.\nNote: This validator will be called on every InputEvent/Control.valueChange event after the sync\nvalidators pass. But Firebase Auth caches the password policy fetch request so the first time is\nthe only remote request and so it is safe to not throttle this validator. Not that there is a\nclean way to throttle AsyncValidatorFns :-(\nNote: at this time there is no actual need for this because the policy only enforces length and\nother Validators already check for that. However it is nice to know how to do this.\n\n                \n            \n\n        \n    \n\n    src/app/identity/validators/passwords/strength.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordStrengthValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : (control: AbstractControl): ValidationErrors | null => {\n  const value = getPasswordControlValue(control);\n\n  // Like Validators.email, rely on Validators.required to check for blank passwords.\n  if (value == undefined) {\n    return null; // eslint-disable-line unicorn/no-null -- ValidatorFn returns null\n  }\n\n  const strength = passwordStrength(value);\n  return strength.id \n                    \n                \n\n\n        \n    \n\n    src/testing/utilities/emulator-storage.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        provideEmulatedStorage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): EnvironmentProviders =>\n  provideStorage((): FirebaseStorage => {\n    const storage = getStorage();\n\n    // Connecting to the emulator multiple times for each TestBed.configureTestingModule call causes\n    // errors, but only connecting once, hopefully fixes that.\n    // https://np.reddit.com/r/Firebase/comments/18s6wzp/comment/kf6w7hk/\n    if (!storageEmulatorConnected) {\n      const { port } = firebaseSettings.emulators.storage;\n      connectStorageEmulator(storage, 'localhost', port);\n      storageEmulatorConnected = true;\n    }\n\n    return storage;\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storageEmulatorConnected\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n\n    src/app/core/firebase-app.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        provideOurFirebaseApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): EnvironmentProviders =>\n  provideFirebaseApp(\n    (): FirebaseApp =>\n      initializeApp({\n        apiKey: 'AIzaSyB75fqz0szrfVCLvpil9_t9UPQlLYplNcI',\n        appId: '1:207926801743:web:e1402f665312fb7ab0813a',\n        authDomain: 'brainfry-app.firebaseapp.com',\n        messagingSenderId: '207926801743',\n        projectId: 'brainfry-app',\n        storageBucket: 'brainfry-app.appspot.com',\n      }),\n  )\n                    \n                \n\n\n        \n    \n\n    src/app/page-not-found/page-not-found.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROBOTS_META\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MetaDefinition\n\n                    \n                \n                \n                    \n                        Default value : {\n  content: 'noindex, nofollow',\n  name: 'robots',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/identity/recover-email/recover-email.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SEND_EMAIL_DELAY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n\n\n        \n    \n\n    src/app/core/user.token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'USER$',\n  { factory: (): MaybeUser$ => user(inject(Auth)) },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
